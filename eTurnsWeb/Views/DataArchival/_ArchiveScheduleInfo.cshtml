@model eTurns.DTO.ArchiveScheduleDTO
<script type='text/javascript' src="@Url.Content("~/Scripts/jquery-ui-timepicker-addon.js")"></script>
@{
    List<SelectListItem> lstItems = new List<SelectListItem>();

    SelectListItem objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResSchedulerReportList.First;
    objSelectListItem.Value = "1";
    lstItems.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResSchedulerReportList.Second;
    objSelectListItem.Value = "2";
    lstItems.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResSchedulerReportList.Third;
    objSelectListItem.Value = "3";
    lstItems.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResSchedulerReportList.Fourth;
    objSelectListItem.Value = "4";
    lstItems.Add(objSelectListItem);

    SelectList lstScheduledays = new SelectList(lstItems, "Value", "Text");
    lstItems = new List<SelectListItem>();

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResSchedulerReportList.Monday;
    objSelectListItem.Value = "2";
    lstItems.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResSchedulerReportList.Tuesday;
    objSelectListItem.Value = "3";
    lstItems.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResSchedulerReportList.Wednesday;
    objSelectListItem.Value = "4";
    lstItems.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResSchedulerReportList.Thursday;
    objSelectListItem.Value = "5";
    lstItems.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResSchedulerReportList.Friday;
    objSelectListItem.Value = "6";
    lstItems.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResSchedulerReportList.Saturday;
    objSelectListItem.Value = "7";
    lstItems.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResSchedulerReportList.Sunday;
    objSelectListItem.Value = "1";
    lstItems.Add(objSelectListItem);

    SelectList lstWeekdays = new SelectList(lstItems, "Value", "Text");

    lstItems = new List<SelectListItem>();
    for (int i = 0; i < 60; i++)
    {
        objSelectListItem = new SelectListItem();
        objSelectListItem.Text = i.ToString();
        objSelectListItem.Value = i.ToString();
        lstItems.Add(objSelectListItem);
    }
    SelectList lstMinuts = new SelectList(lstItems, "Value", "Text");

    var autoSettingMsg = string.Format(ResSchedulerReportList.AutoSettings, Model.ModuleNameResource);
}
<h4>
    @(Model.ModuleNameResource + " " + ResSchedulerReportList.ScheduleDetails)
</h4>

<div id="dvSchedulePara">
    <ul>
        <li>
            <div class="editor-label">
                <text>@autoSettingMsg</text>
            </div>
            <div class="editor-field">
                @Html.HiddenFor(model => model.SupplierId)
                @Html.HiddenFor(model => model.RoomId)
                @*@Html.HiddenFor(model => model.ScheduleID)*@
                @Html.RadioButtonFor(model => model.ScheduleMode, 1, new { @id = "rdoScheduleModeDaily" })
                @Html.Label(ResSchedulerReportList.Daily, new { @for = "rdoScheduleModeDaily" })
                &nbsp;&nbsp;
                @Html.RadioButtonFor(model => model.ScheduleMode, 2, new { @id = "rdoScheduleModeWeekly" })
                @Html.Label(ResSchedulerReportList.Weekly, new { @for = "rdoScheduleModeWeekly" })
                &nbsp;&nbsp;
                @Html.RadioButtonFor(model => model.ScheduleMode, 3, new { @id = "rdoScheduleModeMonthly" })
                @Html.Label(ResSchedulerReportList.Monthly, new { @for = "rdoScheduleModeMonthly" })
                &nbsp;&nbsp;
                @Html.ValidationMessageFor(model => model.ScheduleMode)
            </div>
        </li>
        <li>
            <div class="editor-label">
                &nbsp;
            </div>
            <div class="editor-field">
                <div style="padding-left: 20px; display: block;" class="editor-field" id="HourlyDIV">
                    <table>
                        <tbody>
                            <tr>
                                <td>
                                    @Html.Label(ResSchedulerReportList.Every)
                                    &nbsp;
                                    @Html.TextBoxFor(model => model.HourlyRecurringHours, new { @maxlength = "2", @class = "Smalltext-box" })
                                    @Html.Label(ResSchedulerReportList.HoursAtEvery)
                                    @Html.DropDownListFor(model => model.HourlyAtWhatMinute, lstMinuts, new { @class = "selectBox", @id = "ddlHourlyAtWhatMinute" })
                                    @ResSchedulerReportList.Minutes
                                    <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.HourlyRecurringHours)</span>
                                    ,<span class="ErrorMessage">@Html.ValidationMessageFor(model => model.HourlyAtWhatMinute)</span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div style="padding-left: 20px; display: block;" class="editor-field" id="DailyDIV">
                    <table>
                        <tbody>
                            <tr>
                                <td>
                                    @Html.RadioButtonFor(model => model.DailyRecurringType, 1, new { @class = "checkbox", @id = "rbtnDailyRecurringTypeOne" })
                                    @Html.Label(ResSchedulerReportList.Every, new { @for = "rbtnDailyRecurringTypeOne" })
                                    &nbsp;
                                    @Html.TextBoxFor(model => model.DailyRecurringDays, new { @maxlength = "1", @class = "Smalltext-box" })
                                    @Html.Label(ResSchedulerReportList.Days, new { @for = "DailyRecurringDays" })
                                    <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.DailyRecurringDays)</span>
                                    <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.DailyRecurringType)</span>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.RadioButtonFor(model => model.DailyRecurringType, 2, new { @class = "checkbox", @id = "rbtnDailyRecurringTypeTwo" })
                                    @Html.Label(ResSchedulerReportList.EveryWeekDays, new { @for = "rbtnDailyRecurringTypeTwo" })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div style="padding-left: 20px; display: block;" class="editor-field" id="WeeklyDIV">
                    <table>
                        <tbody>
                            <tr>
                                <td>
                                    @Html.Label(ResSchedulerReportList.Recurevery, new { @for = "WeeklyRecurringWeeks" })
                                    &nbsp;
                                    @Html.TextBoxFor(model => model.WeeklyRecurringWeeks, new { @class = "Smalltext-box", @maxlength = "1" })
                                    @Html.Label(ResSchedulerReportList.WeeksOn)
                                    <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.WeeklyRecurringWeeks)</span>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.CheckBoxFor(model => model.WeeklyOnMonday, new { @class = "checkbox", @id = "chkWeeklyOnMonday" })
                                    @Html.Label(ResSchedulerReportList.Monday, new { @for = "chkWeeklyOnMonday" }) &nbsp;
                                    @Html.CheckBoxFor(model => model.WeeklyOnTuesday, new { @class = "checkbox", @id = "chkWeeklyOnTuesday" })
                                    @Html.Label(ResSchedulerReportList.Tuesday, new { @for = "chkWeeklyOnTuesday" })
                                    &nbsp;
                                    @Html.CheckBoxFor(model => model.WeeklyOnWednesday, new { @class = "checkbox", @id = "chkWeeklyOnWednesday" })
                                    @Html.Label(ResSchedulerReportList.Wednesday, new { @for = "chkWeeklyOnWednesday" })
                                    &nbsp;
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.CheckBoxFor(model => model.WeeklyOnThursday, new { @class = "checkbox", @id = "chkWeeklyOnThursday" })
                                    @Html.Label(ResSchedulerReportList.Thursday, new { @for = "chkWeeklyOnThursday" })
                                    &nbsp;
                                    @Html.CheckBoxFor(model => model.WeeklyOnFriday, new { @class = "checkbox", @id = "chkWeeklyOnFriday" })
                                    @Html.Label(ResSchedulerReportList.Friday, new { @for = "chkWeeklyOnFriday" }) &nbsp;
                                    @Html.CheckBoxFor(model => model.WeeklyOnSaturday, new { @class = "checkbox", @id = "chkWeeklyOnSaturday" })
                                    @Html.Label(ResSchedulerReportList.Saturday, new { @for = "chkWeeklyOnSaturday" })
                                    &nbsp;
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.CheckBoxFor(model => model.WeeklyOnSunday, new { @class = "checkbox", @id = "chkWeeklyOnSunday" })
                                    @Html.Label(ResSchedulerReportList.Sunday, new { @for = "chkWeeklyOnSunday" }) &nbsp;
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div style="padding-left: 20px; display: block;" class="editor-field" id="MonthlyDIV">
                    <table>
                        <tbody>
                            <tr>
                                <td>
                                    @Html.RadioButtonFor(model => model.MonthlyRecurringType, 1, new { @class = "checkbox", @id = "rbtnMonthlyRecurringTypeOne" })
                                    @Html.Label(ResSchedulerReportList.Days, new { @for = "rbtnMonthlyRecurringTypeOne" })
                                    &nbsp;
                                    @Html.TextBoxFor(model => model.MonthlyDateOfMonth, new { @maxlength = "2", @class = "Smalltext-box", @id = "txtMonthlyDateOfMonth" })
                                    @Html.Label(ResSchedulerReportList.OfEvery, new { @for = "MonthlyDateOfMonth" })
                                    &nbsp;
                                    @Html.TextBoxFor(model => model.MonthlyRecurringMonths, new { @maxlength = "2", @class = "Smalltext-box", @id = "txtMonthlyRecurringMonthsOne" })
                                    @Html.Label(ResSchedulerReportList.Months, new { @for = "txtMonthlyRecurringMonthsOne" })
                                    <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.MonthlyRecurringType)</span>
                                    <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.MonthlyDateOfMonth)</span>
                                    <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.MonthlyRecurringMonths)</span>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.RadioButtonFor(model => model.MonthlyRecurringType, 2, new { @class = "checkbox", @id = "rbtnMonthlyRecurringTypeTwo" })
                                    @Html.Label(ResSchedulerReportList.The, new { @for = "rbtnMonthlyRecurringTypeTwo" })
                                    @Html.DropDownListFor(model => model.MonthlyDateOfMonth, lstScheduledays, new { @class = "selectBox", @id = "ddlMonthlyDateOfMonth" })
                                    @Html.DropDownListFor(model => model.MonthlyDayOfMonth, lstWeekdays, new { @class = "selectBox" })
                                    @Html.Label(ResSchedulerReportList.OfEvery) &nbsp;
                                    @Html.TextBoxFor(model => model.MonthlyRecurringMonths, new { @maxlength = "2", @class = "Smalltext-box", @id = "txtMonthlyRecurringMonthsTwo" })
                                    @Html.Label(ResSchedulerReportList.Months, new { @for = "txtMonthlyRecurringMonthsTwo" })
                                    <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.MonthlyDayOfMonth)</span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </li>
        <li>
            <div class="editor-label">
                &nbsp;
            </div>
            <div class="editor-field">
                &nbsp;
            </div>
        </li>

        <li id="lisubmissionTime">
            <div class="editor-label">
                @Html.LabelFor(model => model.ScheduleRunTime)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.ScheduleRunTime, new { @class = "text-box", maxlength = 128, onkeypress = "javascript:return false;" })
                @Html.ValidationMessageFor(model => model.ScheduleRunTime)
            </div>
        </li>

        <li id="liIsScheduleActive">
            <div class="editor-label">
                &nbsp;
            </div>
            <div class="editor-field">
                @Html.CheckBoxFor(model => model.IsScheduleActive, new { @class = "check-box" })
                @Html.LabelFor(model => model.IsScheduleActive)
            </div>
        </li>

        <li id="liNextExecDate">
            <div class="editor-label">
                @Html.LabelFor(model => model.NextRunDate)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => model.NextRunDateTime)
                @Html.HiddenFor(model => model.IsScheduleChanged)
                @Html.HiddenFor(model => model.LoadSheduleFor)
            </div>
        </li>

    </ul>
</div>
<script type="text/javascript">

    $(document).ready(function () {
        setTimeout(function () {
            $("div#dvSchedulePara").on("change", "input,select,textarea", function () {
                $("#IsScheduleChanged").val("1");
            });
            $('#ScheduleRunTime').timepicker(
                {
                    timeFormat: 'HH:mm'
                });
            SetScheduleMode('@Model.ScheduleMode', '@Model.DailyRecurringType', '@Model.MonthlyRecurringType');

            //$("#liNextExecDate").show();

            $("input[type='radio'][name='ScheduleMode']").change(function () {
                SetScheduleMode($(this).val(), 0, 0);
            });

            $("input[type='radio'][name='DailyRecurringType']").change(function () {
                SetDailyModeControls($(this).val());
            });

            $("input[type='radio'][name='MonthlyRecurringType']").change(function () {
                SetMonthlyModeControls($(this).val());
            });
            ShowHideNextRunDate("IsScheduleActive", "liNextExecDate");
        }, 1000);
    });

    function SetScheduleMode(selectedMode, dailyRecurringType, monthlyRecurringType) {
        var Type = 0;
        if ($('select[name="drpNotificationName"]').val() != null) {

            var Type = parseInt($('select[name="drpNotificationName"]').val().split('_')[1]);
        }
        switch (selectedMode) {
            case "0":
                $("#liImmediateActions").hide();
                $("#DailyDIV").hide();
                $("#WeeklyDIV").hide();
                $("#MonthlyDIV").hide();
                $("div#HourlyDIV").hide();
                $("#lisubmissionMethod,#lisubmissionTime,#liIsScheduleActive").hide();
                break;
            case "1":
                $("#liImmediateActions").hide();
                $("div#DailyDIV").show();
                $("div#WeeklyDIV").hide();
                $("div#MonthlyDIV").hide();
                $("div#HourlyDIV").hide();
                $("#lisubmissionMethod,#lisubmissionTime,#liIsScheduleActive").show();
                SetDailyModeControls(dailyRecurringType);
                break;
            case "2":
                $("#liImmediateActions").hide();
                $("div#DailyDIV").hide();
                $("div#WeeklyDIV").show();
                $("div#MonthlyDIV").hide();
                $("div#HourlyDIV").hide();
                $("#lisubmissionMethod,#lisubmissionTime,#liIsScheduleActive").show();
                break;
            case "3":
                $("#liImmediateActions").hide();
                $("div#DailyDIV").hide();
                $("div#WeeklyDIV").hide();
                $("div#MonthlyDIV").show();
                $("div#HourlyDIV").hide();
                $("#lisubmissionMethod,#lisubmissionTime,#liIsScheduleActive").show();
                SetMonthlyModeControls(monthlyRecurringType);
                break;
            case "4":
                $("#liImmediateActions").hide();
                $("div#DailyDIV").hide();
                $("div#WeeklyDIV").hide();
                $("div#MonthlyDIV").hide();
                $("div#HourlyDIV").show();
                $("#lisubmissionMethod,#lisubmissionTime,#liIsScheduleActive").show();
                SetHourlyModeControls(monthlyRecurringType);
                break;
            case "5":
                $("div#DailyDIV").hide();
                $("div#WeeklyDIV").hide();
                $("div#MonthlyDIV").hide();
                $("div#HourlyDIV").hide();
                $("#lisubmissionTime").hide();
                $("#lisubmissionMethod,#liIsScheduleActive").show();
                //SetHourlyModeControls(monthlyRecurringType);
                $("#liImmediateActions").show();
                break;
            default:
                $("#liImmediateActions").hide();
                $("div#DailyDIV").hide();
                $("div#WeeklyDIV").hide();
                $("div#MonthlyDIV").hide();
                $("div#HourlyDIV").hide();
                $("#lisubmissionMethod,#lisubmissionTime,#liIsScheduleActive").hide();
                break;
        }
    }
    function SetDailyModeControls(dailyRecurringType) {
        if (dailyRecurringType == "1") {
            $("#DailyRecurringDays").removeProp("disabled").removeClass("disableBack").focus();
        }
        else if (dailyRecurringType == "2") {
            $("#DailyRecurringDays").prop("disabled", "disabled").addClass("disableBack").val("");
            //$("#DailyRecurringDays").removeClass('error-highlighted');
        }
        //        else {
        //            $("#DailyRecurringDays").prop("disabled", "disabled").addClass("disableBack").val("");
        //        }
    }
    function SetWeeklyModeControls() {
        $("#WeeklyRecurringWeeks").removeProp("disabled").removeClass("disableBack").focus();
    }
    function SetHourlyModeControls() {
        $("#lisubmissionTime").hide();
    }
    function SetMonthlyModeControls(monthlyRecurringType) {

        if (monthlyRecurringType == "1") {
            $("#txtMonthlyDateOfMonth").removeProp("disabled").removeClass("disableBack").focus();
            $("#txtMonthlyRecurringMonthsOne").removeProp("disabled").removeClass("disableBack");
            $("#ddlMonthlyDateOfMonth").prop("disabled", "disabled").addClass("disableBack");
            $("#MonthlyDayOfMonth").prop("disabled", "disabled").addClass("disableBack");
            $("#txtMonthlyRecurringMonthsTwo").val("").prop("disabled", "disabled").addClass("disableBack");
        }
        else if (monthlyRecurringType == "2") {
            $("#txtMonthlyDateOfMonth").val("").prop("disabled", "disabled").addClass("disableBack");
            $("#txtMonthlyRecurringMonthsOne").val("").prop("disabled", "disabled").addClass("disableBack");
            $("#ddlMonthlyDateOfMonth").removeProp("disabled").removeClass("disableBack").focus();
            $("#MonthlyDayOfMonth").removeProp("disabled").removeClass("disableBack");
            $("#txtMonthlyRecurringMonthsTwo").removeProp("disabled").removeClass("disableBack");
        }
        else {
            $("#txtMonthlyDateOfMonth").val("").prop("disabled", "disabled").addClass("disableBack");
            $("#txtMonthlyRecurringMonthsOne").val("").prop("disabled", "disabled").addClass("disableBack");
            $("#ddlMonthlyDateOfMonth").prop("disabled", "disabled").addClass("disableBack");
            $("#txtMonthlyRecurringMonthsTwo").val("").prop("disabled", "disabled").addClass("disableBack");
        }
    }



</script>
