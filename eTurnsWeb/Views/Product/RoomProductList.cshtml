@using Newtonsoft.Json;
@model eTurns.DTO.ABProductByASINDTO
@{

    ViewBag.Title = eTurns.DTO.ResABProducts.PageTitleListPage;
    int TotalPages = 0, CurrentPage = 1;
    bool SearchResultAvailable = false;
    int MatchingProductCount = 0;
    if (Model != null && Model.products != null && Model.products.Count > 0)
    {
        TotalPages = Model.numberOfPages;
        SearchResultAvailable = true;
    }
    if (Model != null && Model.matchingProductCount > 0)
    {
        MatchingProductCount = Model.matchingProductCount;
    }
    if (Request.QueryString["page"] != null)
    {
        bool tryParsedPage = int.TryParse(Request.QueryString["page"], out CurrentPage);
        if (!tryParsedPage || (tryParsedPage && CurrentPage < 1))
        {
            CurrentPage = 1;
        }

    }
    string SearchK = Request.QueryString["k"];
    string GridViewURL = Url.Action("RoomProductGrid", "Product");
    bool IsAllowToInsertCart = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Cart, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    List<SelectListItem> lstpagesize = new List<SelectListItem>();
    lstpagesize.Add(new SelectListItem() { Text = ResABProducts.SelectPageSize, Value = "" });
    for (int i = 1; i < 25; i++)
    {
        if (i % 4 == 0)
        {
            lstpagesize.Add(new SelectListItem() { Text = i.ToString(), Value = i.ToString() });
        }
    }
    System.Collections.Specialized.NameValueCollection qscoll = HttpUtility.ParseQueryString(HttpContext.Current.Request.Url.Query);
    qscoll["asin"] = "";
    qscoll["PageName"] = "RoomProductList";

    RouteValueDictionary rQuery = new RouteValueDictionary();
    foreach (string s in qscoll.AllKeys)
    {
        rQuery.Add(s, qscoll[s]);
    }
}

<script src="@Url.Content("~/Scripts/jquery.twbsPagination.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/URI.min.js")" type="text/javascript"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css" rel="stylesheet" />
<script src="~/Scripts/ABProduct.js"></script>
<div class="userListingWrapper main-wrap">
    <div class="userListBlock">
        <div id="Ctab" class="tabContener" style="width:99.5%; padding:0;">
            <div class="page-wrapper">
                <main id="maincontent">
                    <div class="search-blk">
                        <div class="search-container d-flex align-items-center justify-content-between">
                            @using (Html.BeginForm("ProductList", "Product", FormMethod.Get, new { @id = "frmSearchAmazonProducts" }))
                            {
                                <input type="text" value="@SearchK" placeholder="@ResCommon.Search" name="k">
                                <button type="submit" class="searchIcon">@ResCommon.Search</button>
                                @Html.DropDownList("pageSize", new SelectList(lstpagesize, "Value", "Text"), new { @class = "selectBox", @style = "margin-left: 10px;min-width:130px;", @onchange = "PageChanged();" })
                            }
                            <div class="pageSwitch">
                                <a href="return:javascript:void(0);" class="listView">@ResABProducts.List</a>
                                <a href="@GridViewURL" class="gridView">@ResABProducts.Grid</a>
                            </div>
                        </div>
                        
                    </div>
                    <div class="syncBtn">
                        <a id="aItemSync">@ResABProducts.ItemSync</a>
                    </div>
                    <!--<div class="supplie-selection d-flex align-items-start justify-content-between">-->
                        @*<span>@ViewBag.StartingRecord - @ViewBag.EndingRecord of over @MatchingProductCount results for <strong>"@ViewBag.CurrentFilter"</strong> supplied by <strong>amazon business</strong></span>*@
                        <!--<div class="select-product">-->
                            @*<div class="pageSwitch">
                                <a href="return:javascript:void(0);" class="listView">@ResABProducts.List</a>
                                <a href="@GridViewURL" class="gridView">@ResABProducts.Grid</a>
                            </div>*@
                        <!--</div>
                    </div>-->
                    <div class="product-listing">
                        @*<div id="sidebar">
                            <div class="filter-content">                               
                            </div>
                        </div>*@

                        @if (SearchResultAvailable)
                        {
                            <div id="products" class="row list-group">
                                <div class="results">@ResABProducts.Results</div>
                                <div class="item list-group-item" id="tbldata">
                                    @foreach (var item in Model.products)
                                    {
                                        rQuery["asin"] = item.asin;
                                        string Imagesrc = string.Empty;
                                        string ImgAlt = string.Empty;
                                        double ListPrice = 0;
                                        double OfferPrice = 0;
                                        double DiscountPrice = 0;
                                        decimal RatePercentage = 0;
                                        string meanFeedbackRating = "";
                                        string starRating = "";
                                        if (item.includedDataTypes != null)
                                        {
                                            if (item.includedDataTypes.IMAGES != null && item.includedDataTypes.IMAGES.Count > 0)
                                            {
                                                Imagesrc = item.includedDataTypes.IMAGES.First().medium.url;
                                                ImgAlt = item.includedDataTypes.IMAGES.First().altText;
                                            }
                                            if (item.includedDataTypes.OFFERS != null && item.includedDataTypes.OFFERS.Count > 0)
                                            {
                                                OFFER FirstOFFER = new OFFER();
                                                FirstOFFER = item.includedDataTypes.OFFERS.FirstOrDefault();
                                                if (FirstOFFER.listPrice != null && FirstOFFER.listPrice.value != null)
                                                {
                                                    ListPrice = FirstOFFER.listPrice.value.amount;
                                                }
                                                if (FirstOFFER.price != null && FirstOFFER.price.value != null)
                                                {
                                                    OfferPrice = FirstOFFER.price.value.amount;
                                                }
                                                if (ListPrice > OfferPrice)
                                                {
                                                    DiscountPrice = Convert.ToDouble(String.Format("{0:0.00}", (ListPrice - OfferPrice)));
                                                }
                                                if (FirstOFFER.merchant.meanFeedbackRating != null
                                                    && Convert.ToDecimal(FirstOFFER.merchant.meanFeedbackRating) > 0)
                                                {
                                                    RatePercentage = ((Convert.ToDecimal(FirstOFFER.merchant.meanFeedbackRating) / 5) * 100);
                                                    meanFeedbackRating = Convert.ToString(String.Format("{0:0.0}", FirstOFFER.merchant.meanFeedbackRating));
                                                }
                                                if (FirstOFFER.merchant.totalFeedbackCount != null
                                                   && Convert.ToInt64(FirstOFFER.merchant.totalFeedbackCount) > 0)
                                                {
                                                    starRating = Convert.ToString(FirstOFFER.merchant.totalFeedbackCount);
                                                }
                                            }

                                        }

                                        <div class="product-main">
                                            <div class="product-item">
                                                <div class="product-wishlist">
                                                    <div class="best-selling" style="display:none"><span>Best Seller</span></div>
                                                    @*<a class="product-item-photo" href="@Url.Action("ProductEdit", "Product", new { @asin= item.asin, @QueryString = HttpContext.Current.Request.Url.Query, @PageName = "List"})" title="@ImgAlt">*@

                                                    <a class="product-item-photo" href="@Url.Action("ProductEdit", "Product", rQuery)" title="@ImgAlt">
                                                        <img class="" src="@Imagesrc" alt="@ImgAlt">
                                                    </a>
                                                </div>
                                                <div class="product-item-details">
                                                    <div class="sponsored-product d-flex align-items-center" style="display:none">
                                                        <a href="#" title="" style="display:none">
                                                            <span>Sponsored</span><img src="/Content/images/sponsor-icon.png">
                                                        </a>
                                                    </div>
                                                    <div class="product-name">
                                                        <a href="@Url.Action("ProductEdit", "Product", rQuery)" title="">@item.title</a>
                                                    </div>
                                                    @if (RatePercentage > 0)
                                                    {
                                                        <div class="rating-result d-flex flex-row">
                                                            <div class="rating-box">
                                                                <div class="rating ratingShow" style="width:@(RatePercentage)%"></div>
                                                            </div>
                                                            <span class="ratingLink">@starRating</span>
                                                            <div class="ratingShowBlock">
                                                                <div class="rating-box">
                                                                    <div class="rating" style="width:@(RatePercentage)%"></div>
                                                                </div>
                                                                <div class="ratingView">@meanFeedbackRating @ResABProducts.ratingsoutFive</div>
                                                                <div class="ratingStatus">@starRating @ResABProducts.globalratings</div>
                                                            </div>
                                                            @*<a href="#" title=""><img src="../Content/images/rating.png" alt="rating"></a> <a href="#" class="ratingLink">1,953 ratings | 2 answered questions</a>*@
                                                        </div>
                                                    }
                                                    <div class="sg-row">
                                                        <div class="short-description">
                                                            <div class="price-box inner-price">
                                                                @if (DiscountPrice > 0)
                                                                {
                                                                    @*<div class="discount-price">
                            <sup class="price-symbol">@Model.RegionCurrencySymbol</sup><span>@DiscountPrice</span>
                        </div>*@
                                                                }

                                                                @if (OfferPrice > 0)
                                                                {
                                                                    double OfferPriceMain = Math.Truncate(OfferPrice);
                                                                    Int64 OfferPriceDecimal = (Int64)(((decimal)OfferPrice % 1) * 100);
                                                                    <div class="original-price">
                                                                        <sup class="price-symbol">@Model.RegionCurrencySymbol</sup><span class="main-price">@OfferPriceMain</span><sup class="price-fraction">@(String.Format("{0:00}",OfferPriceDecimal))</sup>
                                                                    </div>
                                                                }
                                                                @if (ListPrice <= 0 && OfferPrice <= 0)
                                                                {
                                                                    <span class="unAvailable">@ResABProducts.CurrentlyUnavailable</span>
                                                                }

                                                                @if (ListPrice > 0)
                                                                {
                                                                    <div class="price-list">
                                                                        @*<p>@ResABProducts.ListPrice</p>*@<div class="price-symbol">@Model.RegionCurrencySymbol</div><sup class="price-fraction">@(String.Format("{0:0.00}",ListPrice))</sup>
                                                                    </div>
                                                                }
                                                            </div>
                                                            @if (item.includedDataTypes.OFFERS != null && item.includedDataTypes.OFFERS.Count > 0)
                                                            {
                                                                if (!string.IsNullOrWhiteSpace(item.includedDataTypes.OFFERS[0].deliveryInformation))
                                                                {
                                                                    <div class="prime-details">
                                                                        <span class="s-prime" style="display:none"><img src="/Content/images/prime.png"></span>
                                                                        @*<span>Get it as soon as</span>*@
                                                                        <strong>@item.includedDataTypes.OFFERS[0].deliveryInformation</strong>
                                                                    </div>
                                                                }
                                                            }
                                                            <div class="coupon-code" style="display:none">
                                                                <span class="highlight-code">Save $130.00</span>
                                                                <span class="color-base"> with coupon</span>
                                                                <div class="limited-deal"><span class="highlight-code">Limited time deal</span></div>
                                                            </div>

                                                            <div class="shipping-country d-flex">
                                                                <span class="a-size-small a-color-base" style="display:none">FREE Shipping by Amazon</span>
                                                                <span class="size-base color-price" style="display:none">Only 1 left in stock - order soon.</span>
                                                                <a class="moreChoice" onclick="ShowProductOffer('@item.asin')">@ResABProducts.MoreBuyingChoices</a>
                                                                <span class="size-base color-base" style="display:none">$385.99 <a href="#" title="" class="link-text">(18 used &amp; new offers)</a></span>
                                                            </div>

                                                            <div class="mini-device" style="display:none">
                                                                <p class="different-price">Price may vary by color</p>
                                                                <div class="device-color">
                                                                    <img src="/Content/images/image1.jpg" alt="">
                                                                    <img src="/Content/images/image2.jpg" alt="">
                                                                </div>
                                                            </div>


                                                        </div>

                                                        <div class="product-smalldesc">
                                                            @foreach (var keyValuePair in item.productOverview.Take(4))
                                                            {
                                                                <div class="col-inner">
                                                                    <span>@keyValuePair.Key</span>
                                                                    <br class="row-separator">
                                                                    <strong>@keyValuePair.Value</strong>
                                                                </div>
                                                            }
                                                            @*<div class="col-inner">
                    <span>Disk Size</span>
                    <br class="row-separator">
                    <strong>1 TB</strong>
                </div>
                <div class="col-inner">
                    <span>RAM</span>
                    <br class="row-separator">
                    <strong>20 GB</strong>
                </div>
                <div class="col-inner">
                    <span>Operating System</span>
                    <br class="row-separator">
                    <strong>Windows 11 Home</strong>
                </div>*@
                                                        </div>
                                                    </div>
                                                    <div class="add-cart">
                                                        @if (IsAllowToInsertCart)
                                                        {
                                                            <a href="#" title="@ResABProducts.addtocart" onclick="AddtoRoom('@item.asin', '@ProductToItemCallFor.AddToCart',true)" class="addCart">@ResABProducts.addtocart</a>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                    @if (SearchResultAvailable)
                    {
                        <div class="pagination" id="dvpager"></div>
                    }

                </main>
            </div>
        </div>
    </div>
</div>

<div id="AddToItemOrCartQtyPopUp"></div>
<div id="divProductOffer">
</div>
<script type="text/javascript">
    var totalPages = parseInt('@TotalPages');
    var currentPage = parseInt('@CurrentPage');
    var GridViewURL = '@GridViewURL' + window.location.search;
    var LblProductQuantityPopUpTitle = "@ResABProducts.ProductQuantityPopUpTitle";

    function PageChanged() {
        /*$("#frmSearchAmazonProducts").submit();*/
        var url = new URI(window.location.href);
        var pgSize = $("#pageSize").val();

        if (typeof (pgSize) == "undefined" || pgSize == null || pgSize == "" || pgSize.trim().length < 1) {
            if (url.hasQuery("pageSize") === true) {
                url.removeSearch("pageSize");
            }
        }
        else {
            url.setSearch("pageSize", pgSize);
        }

        url.setSearch("page", "1");
        window.location.href = url;
    }

    $(document).ready(function () {

        if (totalPages > 0) {
        $('#dvpager').twbsPagination({
            totalPages: totalPages,
            visiblePages: 5,
            startPage: currentPage,
            initiateStartPageClick: false,
            onPageClick: function (event, page) {
                var url = new URI(window.location.href);
                url.setSearch("page", page);
                window.location.href = url;
            }
        });
        }
        $("#aItemSync").off('click');
        $("#aItemSync").on('click', function () {
            $('#DivLoading').show();
            setTimeout(function () {
                $.ajax({
                url: '@Url.Action("ItemSyncToRoom", "Product")',
                type: "POST",
                async: false,
                //cache: false,
                //headers: { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                dataType: "json",
                //beforeSend: function () { $('#DivLoading').show(); },
                success: function (response) {
                    $('#DivLoading').hide();

                    if (response.Status == "fail") {
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $('div#target').css("z-index", 100000);
                            $("#spanGlobalMessage").html(response.Message);
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        }
                        else {
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $('div#target').css("z-index", 100000);
                            $("#spanGlobalMessage").html(response.Message);
                            window.location.reload();
                        }
                    }
                });
            },500);

        });

        $("div#products .rating-result").each(function (index, obj) {
            $(obj).find(".ratingShow").mouseenter(function (e) {
                $(obj).find(".ratingShowBlock").show();
            }).mouseleave(function (e) {
                setTimeout(function () {
                    $(obj).find(".ratingShowBlock").hide();
                }, 5000);
                $(obj).find(".ratingShowBlock").mouseenter(function (e) {
                    $(obj).find(".ratingShowBlock").show();
                    return false;
                });
            });

            $(obj).find(".ratingShowBlock").mouseleave(function (e) {
                $(obj).find(".ratingShowBlock").hide();
            });
        });
    });

</script>
