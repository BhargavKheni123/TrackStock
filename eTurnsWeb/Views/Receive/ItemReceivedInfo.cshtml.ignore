@model eTurns.DTO.OrderDetailsDTO
<div class="innerGrid" style="background: none repeat scroll 0 0 #F8F8F8; padding: 0 0 0 5px">
    <table style="width: auto;">
        <tr>
            <td>
                <div class="mainForm">
                    <div class="editorForm">
                        <ul>
                            <li>@*  @Html.Hidden("hdnOrderDetailID", model => model.ID)*@
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.OrderID)
                                </div>
                                <div class="editor-field">
                                    @*@Html.EditorFor(model => model.OrderID, new { @readonly = "readonly" })*@ <span>@Model.OrderID</span>
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.RequestedQuantity)
                                </div>
                                <div class="editor-field">
                                    <span>@Model.RequestedQuantity</span>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="editorForm padRightNone">
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.RequiredDate)
                                </div>
                                <div class="editor-field">
                                    <span>@Model.RequiredDate</span>
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ReceivedQuantity)
                                </div>
                                <div class="editor-field">
                                    <span>@Model.ReceivedQuantity</span>
                                </div>
                            </li>
                        </ul>
                    </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="mainForm">
                    <div class="editorForm">
                        <h4>
                            Receive</h4>
                        <ul>
                            <li>
                                <table width="100%">
                                    <tr>
                                        <td>
                                            Receive Date
                                        </td>
                                        <td>
                                            @Html.TextBox("txtReceiveDate", DateTime.Now.ToString("MM/dd/yyyy"), new { id = "txtReceiveDate", @class = "smalltext-box" })
                                        </td>
                                        <td style="width: 5px">
                                        </td>
                                        <td>
                                            Receive Location
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(model => model.Bin, new SelectList(ViewBag.LocationList, "ID", "Location", Model.Bin), new { @class = "selectBox" })
                                        </td>
                                        <td style="width: 5px">
                                        </td>
                                        <td>
                                            Receive Quentity
                                        </td>
                                        <td>
                                            @Html.TextBox("txtReceiveQuentityVal", "", new { id = "txtReceiveQuentityVal", @class = "smalltext-box" })
                                        </td>
                                        <td style="width: 5px">
                                        </td>
                                        <td>
                                            <input type="button" value="@eTurns.DTO.Resources.ResCommon.Save" id="btnRODSave" class="CreateBtn"/>
                                        </td>
                                        <td>
                                            <input type="button" value="@eTurns.DTO.Resources.ResCommon.Cancel" id="btnCancel" class="CreateBtn" />
                                        </td>
                                    </tr>
                                </table>
                            </li>
                        </ul>
                    </div>
            </td>
        </tr>
        <tr>
            <td colspan="2" style="padding-top: 14px; padding-bottom: 5px; border: 1px solid #F8F8F8;">
                <div class="userContentInnerGrid">
                    <table id="InnerReceiveItemsTable@(Model.ID)" class="display">
                        <thead>
                            <tr>
                                <th>
                                </th>
                                <th>
                                </th>
                                <th>
                                    ID
                                </th>
                                <th>
                                    Received Quentity
                                </th>
                                <th>
                                    Received Date
                                </th>
                                <th>
                                    Receive Bin
                                </th>
                                <th>
                                    Updated By
                                </th>
                                <th>
                                    Updated on
                                </th>
                                <th>
                                    Created By
                                </th>
                                <th>
                                    Created On
                                </th>
                                <th>
                                    Room Name
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </td>
        </tr>
    </table>
</div>
<script type="text/javascript">
    var UniqueID = '@Model.ID';
    var oInnerGridRecieveTable;
    var innerColumnObject = new Array();
    $(document).ready(function () {
        $('#txtReceiveDate').blur(function () {
        }).datepicker({ dateFormat: 'm/d/yy' });
    });

    $('#btnRODSave').live('click', function () {
        // alert('in');
        var qty = $('#txtReceiveQuentityVal').val();
        var recDate = $('#txtReceiveDate').val();
        var recBinID = $('#Bin').val();
        var OrderDetailId = $('#hdnOrderDetailID').val();

        var ErrMSG = '';
        //        alert($('#txtReceiveQuentity'));
        // alert($('#txtReceiveQuentityVal').val());

        if (qty == null || qty == undefined || qty == '') {
            ErrMSG = "Receive Quantity is missing";
        }
        else if (recDate == null || recDate == undefined || recDate == '') {
            ErrMSG = "Receive date is missing";
        }
        else if (recBinID == null || recBinID == undefined || recBinID == '') {
            ErrMSG = "Receive location is missing";
        }
        alert('ErrMSG : ' + ErrMSG);
        if (ErrMSG != '') {
            showNotificationDialog();
            $("#spanGlobalMessage").text(ErrMSG);
            $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
            return false;

        }

        var obj = { ReceiveBin: recBinID, ReceiveDate: recDate, ReceiveQuantity: qty, ID: OrderDetailId };
        var arrItems = new Array();
        arrItems.push(obj);
        alert('qty:' + qty + ' ,recDate:' + recDate + ' ,recBinID' + recBinID + ' ,OrderDetailId' + OrderDetailId);
        $.ajax({
            url: '@Url.Content("~/Order/SaveReceiveLineItem")'
                        , type: 'POST'
                        , data: { 'Params': JSON.stringify(arrItems), 'OrdMasterParams': '', 'IsSaveAll': false }
                        , success: function (response) {
                            showNotificationDialog();
                            if (response.Status == 'ok') {
                                $("#spanGlobalMessage").text(response.Message);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');

                                $('#ReceiveOrderLineItem' + ItemUniqueID).dataTable().fnDraw();
                                txtRecQty.val('0');
                            }
                            else {
                                $("#spanGlobalMessage").text(response.Message);
                            }
                        }
                        , error: function (xhr) {
                            showNotificationDialog();
                            $("#spanGlobalMessage").text("Error");
                        }
        });


    });
    $(function (event) {

        innerColumnObject.push({ sClass: "read_only", bSortable: false, sDefaultContent: "",
            fnRender: function (obj, val) {
                return "<input id='btnDeleteReceive" + obj.aData.ItemID + "' onclick='return DeleteReceivedLineItem(this)' type='button'   value='Delete' class='GridBtnStyle inLineBtn'/>"
            }
        });

        innerColumnObject.push({ sClass: "read_only", bSortable: false, sDefaultContent: "",
            fnRender: function (obj, val) {
                return "<input id='btnEditReceive" + obj.aData.ItemID + "' onclick='return UpdateReceivedLineItem(this)' type='button'   value='Save' class='GridBtnStyle inLineBtn'/>"
            }
        });
        innerColumnObject.push({ mDataProp: "ID", sClass: "read_only", fnRender: function (obj, val) {
            return '<span id="spnRecOrdDetId">' + val + '</span>'
        }
        });

        innerColumnObject.push({ mDataProp: "ReceiveQuantity", sClass: "read_only"
                                , fnRender: function (obj, val) {
                                    return "<input id='txtReceivedQty' onkeydown='return OnlyNumeric(event,this);' style='width:50px' type='text' value='" + val + "'/>" + "<span style='display:none' id='spnPreviousQty'>" + val + "</span>";
                                }
        });
        innerColumnObject.push({ mDataProp: "ReceiveDate", sClass: "read_only", fnRender: function (obj, val) {
            return "<input type='text' class='myDatePicker' style='width:100px' value='" + GetDateMMDDYYYYFormat(val) + "' id='ReceivedDatePicker" + obj.aData.ID + "' />";
        }
        });

        innerColumnObject.push({ mDataProp: "ReceiveBin", bSortable: false, sClass: "read_only", fnRender: function (obj, val) {
            $.ajax({
                "url": '@Url.Content("~/Master/GetDropDownList")',
                data: { ID: obj.aData.ID, PageName: 'OrderItemBinList', SelectedID: obj.aData.ReceiveBin },
                "async": false,
                cache: false,
                "dataType": "text",
                "success": function (json) {
                    sOut = json;
                },
                error: function (response) {
                    //debugger;
                }
            });
            return sOut;
        }
        });
        innerColumnObject.push({ "mDataProp": "UpdatedByName", "sClass": "read_only" });
        innerColumnObject.push({ "mDataProp": "LastUpdated", "sClass": "read_only", "fnRender": function (obj, val) { return GetDateInFullFormat(val); } });
        innerColumnObject.push({ "mDataProp": "CreatedByName", "sClass": "read_only" });
        innerColumnObject.push({ "mDataProp": "Created", "sClass": "read_only", "fnRender": function (obj, val) { return GetDateInFullFormat(val); } });
        innerColumnObject.push({ "mDataProp": "RoomName", "sClass": "read_only" });


        var ObjectTable = 'InnerReceiveItemsTable' + UniqueID;
        oInnerGridRecieveTable = $('#' + ObjectTable).dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "sScrollX": "200px",
            "sDom": 'rti',
            "bInfo": false,
            "aaSorting": [[0, "asc"]],
            "bAutoWidth": false,
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "bServerSide": true,
            "fnStateSaveParams": function (oSettings, oData) {
                $.ajax({
                    "url": "/Master/SaveGridState",
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: 'ReceiveInnerGrid' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        o = json;
                    }
                });
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": "/Master/LoadGridState",
                    "type": "POST",
                    data: { ListName: 'ReceiveInnerGrid' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            },
            "sAjaxSource": '@Url.Content("~/Order/GetReceivedLineItems")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                aoData.push({ "name": "DetailId", "value": UniqueID });

                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;
                for (var i = 0; i <= objCols.length - 1; i++) {
                    arrCols.push(objCols[i].mDataProp);
                }
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }
                if (oSettings.aaSorting.length != 0)
                    aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                else
                    aoData.push({ "name": "SortingField", "value": "0" });

                aoData.push({ "name": "IsArchived", "value": false });
                aoData.push({ "name": "IsDeleted", "value": false });

                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    cache: false,
                    "data": aoData,
                    "success": fnCallback,
                    beforeSend: function () {
                        $('.dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    complete: function () {
                        $('.dataTables_scroll').css({ "opacity": 1 });
                    }
                })
            },
            "aoColumns": innerColumnObject
        }).makeEditable();

    });




    $(function () {

        $('#InnerReceiveItemsTable' + UniqueID).delegate(".myDatePicker", "focusin", function () {
            $(this).datepicker({ dateFormat: 'm/d/yy' });
        });

        $('#DivLoading').hide();
    });


    function DeleteReceivedLineItem(obj) {
        var tr = $(obj).parent().parent();
        var qty = $(tr).find('#txtReceivedQty').val();
        var RecDate = $(tr).find('.myDatePicker').val();
        var RecBin = $(tr).find('#BinID').val();
        var PrevRecQty = $(tr).find('#spnPreviousQty').text();

        if (parseInt(RecBin) > 0 && qty > 0) {
            var RecDate = tr.find('.myDatePicker').val();
            if (Date.parse(RecDate) >= Date.parse('@Model.Created') && new Date(RecDate) <= new Date()) {

                var ReceiveOrderDetailId = tr.find('#spnRecOrdDetId').text();
                var obj = { ReceiveBin: RecBin, ReceiveDate: RecDate, ReceiveQuantity: qty, ID: ReceiveOrderDetailId, OrderDetailID: '@Model.ID' };
                var ordDtlObj = { ID: '@Model.ID', Room: '@Model.Room', CompanyId: '@Model.CompanyID' }
                $.ajax({
                    url: '@Url.Content("~/Order/DeleteReceivedOrderDetailLineItem")'
                        , type: 'POST'
                        , data: { 'Params': JSON.stringify(obj), 'orderDetailParam': JSON.stringify(ordDtlObj), "previouseRecQty": PrevRecQty }
                        , success: function (response) {
                            showNotificationDialog();
                            if (response.Status == 'ok') {
                                $("#spanGlobalMessage").text(response.Message);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                                oInnerGridRecieveTable.fnDraw();
                                $('#ReceiveOrderLineItem' + '@Model.ID').dataTable().fnDraw();

                            }
                            else {
                                $("#spanGlobalMessage").text(response.Message);
                            }
                        }
                        , error: function (xhr) {
                            showNotificationDialog();
                            $("#spanGlobalMessage").text("Error");
                        }
                });

            }
        }

    }

    function UpdateReceivedLineItem(obj) {
        var tr = $(obj).parent().parent();
        var qty = $(tr).find('#txtReceivedQty').val();
        var RecDate = $(tr).find('.myDatePicker').val();
        var RecBin = $(tr).find('#BinID').val();
        var PrevRecQty = $(tr).find('#spnPreviousQty').text();
        var RecDate = tr.find('.myDatePicker').val();
        var ReceiveOrderDetailId = tr.find('#spnRecOrdDetId').text();
        var obj = { ReceiveBin: RecBin, ReceiveDate: RecDate, ReceiveQuantity: qty, ID: ReceiveOrderDetailId, OrderDetailID: '@Model.ID' };
        var ordDtlObj = { ID: '@Model.ID', Room: '@Model.Room', CompanyId: '@Model.CompanyID' }
        $.ajax({
            url: '@Url.Content("~/Order/SaveReceivedOrderDetailLineItem")'
                        , type: 'POST'
                        , data: { 'Params': JSON.stringify(obj), 'orderDetailParam': JSON.stringify(ordDtlObj), "previouseRecQty": PrevRecQty }
                        , success: function (response) {
                            showNotificationDialog();
                            if (response.Status == 'ok') {
                                $("#spanGlobalMessage").text(response.Message);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                                oInnerGridRecieveTable.fnDraw();
                                $('#ReceiveOrderLineItem' + '@Model.ID').dataTable().fnDraw();
                                txtRecQty.val('0');
                            }
                            else {
                                $("#spanGlobalMessage").text(response.Message);
                            }
                        }
                        , error: function (xhr) {
                            showNotificationDialog();
                            $("#spanGlobalMessage").text("Error");
                        }
        });


    }

    
</script>
