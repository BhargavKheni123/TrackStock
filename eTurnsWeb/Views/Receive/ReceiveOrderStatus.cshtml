@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplayDeleteButton = false, ShowSelectAll = false, DisplaySettings = false, DisplayContextMenu = false, DisplayColumnSetupButton = true, DisplayPrintBlock = false, ColumnSetupFor = "ReceiveOrderStatusGrid" };
}

<div class="innerHeadSec">
    <div class="viewBlock" style="width: 23%; float: left; padding-left: 10px;padding-top:5px;">
        Order:
        @Html.DropDownList("ddlOrders", new SelectList(ViewBag.OrderStatus, "Value", "Text"), new { id = "ddlOrders", @class = "selectBox" })
    </div>
</div>
<div class="searchWrapper">
    <div class="searchBlock">
        <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
        <div class="searchinputB">
            <input type="text" class="searchinput" id="global_filter_ReceiveStatus" />
            <a href="javascript:void(0);" class="xclose">
                <img src="~/Content/images/x.png" alt="X" id="clear_global_filter_ReceiveStatus" /></a>
        </div>
    </div>
</div>
@Html.GridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.Receive)
<div class="userContent" style="margin: 0 0.4% 1%; width: 99%;">
    <table id="myDataOrderTable" class="display">
        <thead>
            <tr>
                <th>
                    @eTurns.DTO.Resources.ResCommon.ID
                </th>
                <th>
                    @eTurns.DTO.ResOrder.OrderNumber
                </th>
                <th>
                    @eTurns.DTO.ResOrder.ReleaseNumber
                </th>
                <th>
                    @eTurns.DTO.ResOrder.ShipVia
                </th>
                <th>
                    @eTurns.DTO.ResOrder.Supplier
                </th>
                <th>
                    @eTurns.DTO.ResOrder.StagingName
                </th>
                <th>
                    @eTurns.DTO.ResOrder.Comment
                </th>
                <th>
                    @eTurns.DTO.ResOrder.RequiredDate
                </th>
                <th>
                    @eTurns.DTO.ResOrder.OrderStatus
                </th>
                <th>
                    @eTurns.DTO.ResOrder.Customer
                </th>
                <th>
                    @eTurns.DTO.ResOrder.PackSlipNumber
                </th>
                <th>
                    @eTurns.DTO.ResOrder.ShippingTrackNumber
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.CreatedOn
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.CreatedBy
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.UpdatedOn
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.UpdatedBy
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.RoomName
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.AddedFrom
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.EditedFrom
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.ReceivedOnDate
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate
                </th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
                
<div id="LocationDetails">
</div>
<script type="text/javascript">

    var ColumnObjectInnerGrid = new Array();

    //    $(function (event) {
    //        $("#ddlOrders").val('1');
    //        FillInnerGrid($("#ddlOrders").val());
    //    });

    //    function HandleDropdownList(obj) {
    //        var SelectedOrderID = $(obj).val();
    //        FillInnerGrid(SelectedOrderID);
    //    }



    //function FillInnerGrid(OrderStatus) {

    $(document).ready(function () {
        $("#ddlOrders").val('1');

        var myDataOrderTable;
        //alert('in');
        ColumnObjectInnerGrid.push({ mDataProp: "ID", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "OrderNumber", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "ReleaseNumber", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "ShipViaName", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "SupplierName", sClass: "read_only" });

        ColumnObjectInnerGrid.push({ mDataProp: "StagingName", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "Comment", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "RequiredDate", sClass: "read_only", fnRender: function (obj, val) { return GetDateInFullFormat(val); } });
        ColumnObjectInnerGrid.push({ mDataProp: "OrderStatusText", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "CustomerName", sClass: "read_only" });

        ColumnObjectInnerGrid.push({ mDataProp: "PackSlipNumber", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "ShippingTrackNumber", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "Created", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.CreatedDate; } });
        ColumnObjectInnerGrid.push({ mDataProp: "CreatedByName", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "LastUpdated", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.UpdatedDate; } });
        ColumnObjectInnerGrid.push({ mDataProp: "UpdatedByName", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "RoomName", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "AddedFrom", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "EditedFrom", sClass: "read_only" });
        ColumnObjectInnerGrid.push({ mDataProp: "ReceivedOn", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.ReceivedOnDate; } });
        ColumnObjectInnerGrid.push({ mDataProp: "ReceivedOnWeb", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.ReceivedOnDateWeb; } });
//        ColumnObjectInnerGrid.push({ mDataProp: "ReceivedOnDate", sClass: "read_only" });
//        ColumnObjectInnerGrid.push({ mDataProp: "ReceivedOnDateWeb", sClass: "read_only" });

        myDataOrderTable = $("#myDataOrderTable").dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "sScrollX": "2000px",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "aaSorting": [[1, "asc"]],
            "oColReorder": {},
            "bAutoWidth": false,
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "bServerSide": true,
            "fnStateSaveParams": function (oSettings, oData) {
                $.ajax({
                    "url": "/Master/SaveGridState",
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: 'ReceiveOrderStatusGrid' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        o = json;
                    }
                });
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": "/Master/LoadGridState",
                    "type": "POST",
                    data: { ListName: 'ReceiveOrderStatusGrid' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            },
            "fnInitComplete": function () {
                $('.ColVis').detach().appendTo(".setting-arrow");
            },
            "sAjaxSource": '@Url.Content("~/Receive/ItemwiseOrderedMasterListAjax")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                //aoData.push({ "name": "OrderStatus", "value": OrderStatus });
                aoData.push({ "name": "ItemGUID", "value": '@ViewBag.ItemGUID' });
                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;
                for (var i = 0; i <= objCols.length - 1; i++) {
                    arrCols.push(objCols[i].mDataProp);
                }
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }
                aoData.push({ "name": "SortingField", "value": "0" });

                aoData.push({ "name": "OrderStatus", "value": $('#ddlOrders').val() });


                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    cache: false,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback,
                    beforeSend: function () {
                        $('.dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    complete: function () {
                        $('.dataTables_scroll').css({ "opacity": 1 });
                        if ($("#global_filter_ReceiveStatus").val() != '') {
                            $('#myDataOrderTable td').highlight($("#global_filter_ReceiveStatus").val());
                        }
                    }
                })
            },
            "aoColumns": ColumnObjectInnerGrid
        }).makeEditable();

        $('#ddlOrders').change(function () {
            FilterGrid();
        });

        //HIDE PRINT CONTAINER
        $('.DTTT_container').css('z-index', '-1');

    });

    function FilterGrid() {
        $('#myDataOrderTable').dataTable().fnFilter('');
    }


    function fnFilterGlobalIM() {
        //set filter only if more than 2 characters are pressed
        if (typeof $("#global_filter_ReceiveStatus") != 'undefined' && ($("#global_filter_ReceiveStatus").val().length > 2 || $("#global_filter_ReceiveStatus").val().length == 0)) {
            var searchtext = $("#global_filter_ReceiveStatus").val().replace(/'/g, "''");
            $('#myDataOrderTable').dataTable().fnFilter(
                            searchtext,
                            null,
                            null,
                            null
                        );
        }
        else {
            $('#myDataOrderTable td').removeHighlight();
            $('#myDataOrderTable td').highlight($("#ItemModel_filter").val());
        }
    }


    $("#global_filter_ReceiveStatus").keyup(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
        }
        else {
            fnFilterGlobalIM();
        }
    });


    $("#global_filter_ReceiveStatus").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var searchtext = $("#global_filter_ReceiveStatus").val().replace(/'/g, "''");
            $('#myDataOrderTable').dataTable().fnFilter(
                            searchtext,
                            null,
                            null,
                            null
                        );
            return false;
        }
    });

    $("#clear_global_filter_ReceiveStatus").click(funClearFilterIM);

    function funClearFilterIM() {
        //Check length first        
        if ($("#global_filter_ReceiveStatus").val().length > 0) {
            $("#global_filter_ReceiveStatus").val('');
            $('#myDataOrderTable').dataTable().fnFilter(
                            $("#global_filter_ReceiveStatus").val(),
                            null,
                            null,
                            null
                        );
        }
        $("#global_filter_ReceiveStatus").focus();
        return false;
    }
    _Common.setGloblaSearch('global_filter_ReceiveStatus', 'myDataOrderTable');

</script>
<script type="text/javascript">
    var objColumns = {
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.ID)': 0,
        '@MvcHtmlString.Create(eTurns.DTO.ResOrder.OrderNumber)': 1,
        '@MvcHtmlString.Create(eTurns.DTO.ResOrder.ReleaseNumber)': 2,
        '@MvcHtmlString.Create(eTurns.DTO.ResOrder.ShipVia)': 3,
        '@MvcHtmlString.Create(eTurns.DTO.ResOrder.Supplier)': 4,
        '@MvcHtmlString.Create(eTurns.DTO.ResOrder.StagingName)': 5,
        '@MvcHtmlString.Create(eTurns.DTO.ResOrder.Comment)': 6,
        '@MvcHtmlString.Create(eTurns.DTO.ResOrder.RequiredDate)': 7,
        '@MvcHtmlString.Create(eTurns.DTO.ResOrder.OrderStatus)': 8,
        '@MvcHtmlString.Create(eTurns.DTO.ResOrder.Customer)': 9,
        '@MvcHtmlString.Create(eTurns.DTO.ResOrder.PackSlipNumber)': 10,
        '@MvcHtmlString.Create(eTurns.DTO.ResOrder.ShippingTrackNumber)': 11,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.CreatedOn)': 12,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.CreatedBy)': 13,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.UpdatedOn)': 14,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.UpdatedBy)': 15,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.RoomName)': 16,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.AddedFrom)': 17,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.EditedFrom)': 18,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.ReceivedOnDate)': 19,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate)': 20,
        
    };
</script>
