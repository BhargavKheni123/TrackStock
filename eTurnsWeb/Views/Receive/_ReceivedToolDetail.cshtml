@model IEnumerable<eTurns.DTO.ReceivedToolAssetOrderTransferDetailDTO>
@{
    var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, ShowSelectAll = true, DisplaySettings = false, DisplayPrintBlock = false, ColumnSetupFor = "tblReceivedDetail", DisplayDeleteButton = true };
}
<script type="text/javascript" src="@Url.Content("~/Scripts/DynemicDataTable.js?v=" + eTurnsWeb.Helper.CommonUtility.GetReleaseNumber())"></script>
<div class="innerGrid" style="background: none repeat scroll 0 0 #F8F8F8; padding: 10px 0 0 0px;overflow-x:auto;overflow-y:hidden; height: 500px;width: 1060px;">
    <table style="width: 99%">
        <tr>
            <td style="padding-top: 1px; padding-bottom: 15px; border: 1px solid #F8F8F8;">
                <input type="hidden" id="hdnDataGuid" value="@ViewBag.dataGuid" />
                <input type="hidden" id="hdnDataURL" value="@ViewBag.dataUrl" />

                <div class="tabContener" style="min-height: 50px;width:1050px;">
                    <div class="searchWrapper">
                        <div class="searchBlock">
                            <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
                            <div class="searchinputB">
                                <input type="text" class="searchinput" id="txtRDFilter" />
                                <a href="javascript:void(0);" class="xclose">
                                    <img src="~/Content/images/x.png" alt="X" id="imgClearOrderFilter" />
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div style="width:900px;float:left">
                    @*@Html.GridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.Orders)*@
                    <div class="userHead">
                        <div class="paginationBlock">
                            <span class="label">Go To Page:</span>
                            <input id="txtRDPageNumber" class="inputNum" type="text">
                            <input id="btnRDGo" class="go" value="Go" type="button">
                        </div>
                        <div class="BtnBlock">
                            <a title="Select all" href="javascript:void(null);" id="btnRDActionSelectAll" class="btnRDClsactionSelectAll" style="">
                                <img src="/content/images/selectall.png" alt="Select all">
                            </a>
                            <a title="Select all" style="display: none;" href="javascript:void(null);" id="btnRDActionDeSelectAll" class="btnRDClsactionDeSelectAll">
                                <img src="/content/images/UnSelectAll.png" alt="Select all">
                            </a><a title="delete" href="javascript:void(null);" id="btnRDDeleteRows">
                                <img src="/content/images/delete.png" alt="">
                            </a>
                        </div>
                    </div>
                </div>

                <div class="userContentInnerGrid">
                    <table id="tblReceivedDetail" class="display">
                        <thead>
                            <tr>
                                <th>
                                    Order#
                                </th>
                                <th>
                                    Release#
                                </th>
                                <th>
                                    Tool#
                                </th>
                                <th>
                                    Serial#
                                </th>
                               
                                <th>
                                    Received On
                                </th>
                                <th>
                                    Quantity
                                </th>
                                
                                <th>
                                    Packslip #
                                </th>

                                <th>
                                    Received Cost
                                </th>
                                <th>
                                    Created On
                                </th>
                                <th>
                                    Updated On
                                </th>
                                <th>
                                    Created By
                                </th>
                                <th>
                                    Last Updated By
                                </th>
                                <th>
                                    EDI Sent
                                </th>
                                <th>
                                    Last EDI On
                                </th>
                                <th>
                                    Added From
                                </th>
                                <th>
                                    Edited From
                                </th>
                                @Html.RenderColumnsHeader("ReceivedOrderTransferDetail", typeof(eTurns.DTO.ResReceiveOrderDetails), "")
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @item.ToolAssetOrderNumber
                                    </td>
                                    <td>
                                        @item.ReleaseNumber
                                    </td>
                                    <td>
                                        @item.ToolName
                                        @Html.Hidden("hdnGuid", item.GUID)
                                        @Html.Hidden("hdnOrderGuid", item.ToolAssetOrderGuid)
                                        @Html.Hidden("hdnOrderDetailGuid", item.OrderDetailGUID)
                                        @Html.Hidden("hdnItemGuid", item.ToolGUID)
                                    </td>
                                    <td>
                                        @item.Serial
                                    </td>
                                     
                                     
                                    <td>
                                        @item.ReceivedDate.GetValueOrDefault(DateTime.MinValue).ToString(eTurnsWeb.Helper.SessionHelper.RoomDateFormat)
                                    </td>
                                    <td>
                                        @item.Quantity.GetValueOrDefault(0).ToString("N" + eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits)
                                    </td>
                                    
                                    <td>
                                        @item.PackSlipNumber
                                    </td>
                                    <td>
                                        @item.Cost.GetValueOrDefault(0).ToString("N" + eTurnsWeb.Helper.SessionHelper.CurrencyDecimalDigits)
                                    </td>
                                    <td>
                                        @item.CreatedDate
                                    </td>
                                    <td>
                                        @item.UpdatedDate
                                    </td>
                                    <td>
                                        @item.CreatedByName
                                    </td>
                                    <td>
                                        @item.UpdatedByName
                                    </td>
                                    <td>
                                        @item.IsEDISent
                                    </td>
                                    <td>

                                        @if (@item.LastEDIDate.HasValue)
                                        {
                                            @item.LastEDIDate.GetValueOrDefault(DateTime.MinValue).ToString(eTurnsWeb.Helper.SessionHelper.RoomDateFormat)
                                        }
                                        else
                                        {
                                            @Html.Label("")
                                        }
                                    </td>
                                    <td>
                                        @item.AddedFrom
                                    </td>
                                    <td>
                                        @item.EditedFrom
                                    </td>
                                    @Html.RenderColumnsArrayForDOM("ReceivedOrderTransferDetail", item)
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </td>
        </tr>
    </table>
</div>
<div class="dialog" id="divRDDeleteConfirm" style="display: none;z-index:1999">
    <div class="inner">
        <p class="text">
            @eTurns.DTO.Resources.ResMessage.DeleteConfirm
        </p>
        <a href="JavaScript:void{}" id="btnRDDCYes" class="yes">
            <img src="~/Content/images/yes.png" alt="Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="javascript:void(0);" class="no" onclick="closeRDDCModal()">
            <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div>

<script type="text/javascript">
    var oTableReceived;

    $('#txtRDFilter').bind('textchange', function () {
        clearTimeout(timeoutsc1);
        var self = this;
        timeoutsc1 = setTimeout(function () {
            fnFilterRDList($("#txtRDFilter").val().replace(/'/g, "''"));
            return false;
        }, 500);

    });

    $("#txtOrderFilter").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            fnFilterRDList($("#txtRDFilter").val().replace(/'/g, "''"));
            return false;
        }
    });

    function fnFilterRDList(searchtext) {
        bIsFilter = true;

        $('#tblReceivedDetail').dataTable().fnFilter(searchtext, null, null, null);
        $('#tblReceivedDetail' + ' td').removeHighlight();
        if (searchtext.length > 0)
            $('#tblReceivedDetail' + ' td').highlight(searchtext);
    }

    $('#txtRDPageNumber').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#btnRDGo").click();
            return false;
        }
    });

    $("#btnRDGo").click(function () {
        var pval = $('#txtRDPageNumber').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }
        if (pval == 0)
            return;

        oTableReceived.fnPageChange(Number(pval - 1));
        $('#txtRDPageNumber').val('');
    });

    $("#btnRDDCYes").click(function () {
        $('#DivLoading').show();
        var anSelectedLocation = fnGetSelected(oTableReceived);

        var arrROTD = new Array();
        for (var i = 0; i < anSelectedLocation.length; i++) {
            var obj = {};
            obj.ItemGUID = $(anSelectedLocation[i]).find("input[type='hidden'][id='hdnItemGuid']").val();
            obj.OrderDetailGUID = $(anSelectedLocation[i]).find("input[type='hidden'][id='hdnOrderDetailGuid']").val();
            obj.OrderGuid = $(anSelectedLocation[i]).find("input[type='hidden'][id='hdnOrderGuid']").val();
            obj.GUID = $(anSelectedLocation[i]).find("input[type='hidden'][id='hdnGuid']").val();

            arrROTD.push(obj);
        }

        if (arrROTD.length > 0) {
            var requestURl = '@Url.Content("~/Receive/DeleteReceivedItems")';

            if (gblActionName == "ReturnOrderList")
                requestURl = '@Url.Content("~/Receive/DeleteReturnedItems")';

            $.ajax({
                'url': requestURl,
                'type': 'POST',
                'data': JSON.stringify({ 'ROTDGuids': arrROTD }),
                'async': false,
                'cache': false,
                'dataType': 'json',
                'contentType': 'application/json',
                'success': function (response) {
                    $.modal.impl.close();
                    if (response.Status) {
                        $('#DivLoading').show();
                        $("#divReceivedItem").dialog("close");
                        var dataGuid = $('#hdnDataGuid').val();
                        var dataUrl = $('#hdnDataURL').val();
                        $("#divReceivedItem").data({ 'Guid': dataGuid, 'Url': dataUrl }).dialog("open");
                        $('#DivLoading').hide();
                        return false;
                    }
                    else {
                        alert(response.Message)
                        $('#DivLoading').hide();
                        return false;
                    }

                },
                'error': function (err) {
                    $.modal.impl.close();
                    $('#DivLoading').hide();
                }
            });
        }
        else {
            alert('Please select rows to delete.')
            $('#DivLoading').hide();
        }
    });

    function closeRDDCModal() {
        $.modal.impl.close();
    }

    $('#divReceivedItem').on('click', 'a#btnRDDeleteRows', function () {

        var anSelected = fnGetSelected(oTableReceived);
        var stringIDs = "";
        for (var i = 0; i <= anSelected.length - 1; i++) {
            var aPos = oTableReceived.fnGetPosition($(anSelected[i])[0]);
            var aData = oTableReceived.fnGetData(aPos);
            stringIDs = stringIDs + aData.GUID + ",";
        }

        if (stringIDs.length > 0) {
            $('#divRDDeleteConfirm').modal();
            IsDeletePopupOpen = true;
        }
        else {
            return false;
        }
    })

    $('div#divReceivedItem').on('click', "a.btnRDClsactionSelectAll", function () {
        $("#tblReceivedDetail").find("tbody tr").removeClass("row_selected").addClass("row_selected");
        $('div#divReceivedItem').find("a.btnRDClsactionDeSelectAll").css('display', '');
        $(this).css('display', 'none');

    });

    $('div#divReceivedItem').on('click', "a.btnRDClsactionDeSelectAll", function () {
        $("#tblReceivedDetail").find("tbody tr").removeClass("row_selected");
        $('div#divReceivedItem').find("a.btnRDClsactionSelectAll").css('display', '');
        $(this).css('display', 'none');

    });

    $(document).ready(function () {

        $("#tblReceivedDetail tbody tr").off('tap click');
        $("#tblReceivedDetail tbody tr").on('tap click', function (e) {
            if (e.target.type == "checkbox" || e.target.type == "radio" || e.target.type == "text") {
                e.stopPropagation();
            } else {
                $(this).toggleClass('row_selected');
            }
        });

        oTableReceived = $('#tblReceivedDetail').dataTable({
            "bJQueryUI": true,
            "bRetrieve": true,
            "bDestroy": true,
            "bScrollCollapse": true,
            "sScrollX": "100%",
            "sDom": 'R<"top"lp<"clear">>rt<"bottom"i<"clear">>',
            "oColVis": {},
            "aaSorting": [[1, "desc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
                $.ajax({
                    "url": '@Url.Content("~/Master/SaveGridState")',
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: 'tblToolAssetReceivedDetail' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = json;
                    }
                });
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'tblToolAssetReceivedDetail' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            }
        });

        $('#divReceivedItem').find('div.userHead').css('width:', '300px');
    });

</script>
