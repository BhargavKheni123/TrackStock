@model eTurns.DTO.PullMasterViewDTO
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
}
<div class="userHead">
    @using (Ajax.BeginForm("PullSave", "Pull", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmPullMaster", enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(true)
        <div class="mainForm">
            <div class="editorForm">
                <h4>
                    Pull Details</h4>
                <ul>
                <li>
                        <div class="editor-label">
                            
                        </div>
                        <div class="editor-field">
                                @Html.CheckBox("Credit")                            
                        </div>
                    </li>

                    <li>
                        <div class="editor-label">
                            <em>* </em>@Html.LabelFor(model => model.ItemMasterView.ItemNumber)
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("ItemID", new SelectList((IEnumerable<eTurns.DTO.ItemMasterDTO>)ViewBag.ItemMaster, "ID", "ItemNumber", Model.ItemID), String.Empty)
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.ItemMasterView.ItemNumber)</span>
                            @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                            @Html.HiddenFor(model => model.GUID)
                            @Html.HiddenFor(model => model.Created)
                            @Html.HiddenFor(model => model.Updated)
                            @Html.HiddenFor(model => model.CreatedBy)
                            @Html.HiddenFor(model => model.Room)
                            @Html.HiddenFor(model => model.RoomName)
                            @Html.HiddenFor(model => model.CompanyID)
                            @Html.HiddenFor(model => model.CreatedByName)
                            @Html.HiddenFor(model => model.UpdatedByName)
                            @Html.HiddenFor(model => model.IsDeleted)
                            @Html.HiddenFor(model => model.IsArchived)
                            @Html.HiddenFor(model => model.ItemID)
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.BinID)
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("BinID", new SelectList((IEnumerable<eTurns.DTO.BinMasterDTO>)ViewBag.BinMaster, "ID", "BinNumber", Model.BinID), String.Empty)
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.PoolQuantity)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.PoolQuantity)
                            @Html.ValidationMessageFor(model => model.PoolQuantity)
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ProjectID)
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("ProjectID", new SelectList((IEnumerable<eTurns.DTO.ProjectMasterDTO>)ViewBag.ProjectSpent, "ID", "ProjectName", Model.BinID), String.Empty)
                        </div>
                    </li>
                    @*<li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.SerialNumber)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.SerialNumber)
                            @Html.ValidationMessageFor(model => model.SerialNumber)
                        </div>
                    </li>*@ @* <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.LotNumber)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.LotNumber)
                            @Html.ValidationMessageFor(model => model.LotNumber)
                        </div>
                    </li>*@ @*<li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.DateCode)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.DateCode)
                            @Html.ValidationMessageFor(model => model.DateCode)
                        </div>
                    </li>*@
                </ul>
                <h4>
                    UDF(s)</h4>
                <ul>
                    <li>
                        @Html.Partial("UDFLayout")
                    </li>
                </ul>
                <ul>
                    <li>
                        <div class="editor-label">
                            &nbsp;
                        </div>
                        <div class="BtnBlockform">
                            <input type="button" value="Cancel" id="btnCancel" class="CreateBtn" />
                            <input type="submit" value="Save" id="btnSave" class="CreateBtn" />
                        </div>
                    </li>
                </ul>
            </div>
            <div class="editorForm padRightNone">
                <h4>
                    Item Details</h4>
                <ul>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.ManufacturerNumber)
                        </div>
                        <div class="editor-field">
                            <label id="lblManufacturerNumber">@Model.ItemMasterView.ManufacturerNumber</label>
                        </div>
                    </li>
                    @*<li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.SupplierID)
                        </div>
                        <div class="editor-field">
                            <label id="lblSupplierID">@Model.SupplierID</label>
                        </div>
                    </li>*@
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.SupplierPartNo)
                        </div>
                        <div class="editor-field">
                            <label id="lblSupplierPartNo">@Model.ItemMasterView.SupplierPartNo</label>
                        </div>
                    </li>
                    @*<li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.UPC)
                        </div>
                        <div class="editor-field">
                            <label id="lblUPC">@Model.UPC</label>
                        </div>
                    </li>*@ @*<li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.UNSPSC)
                        </div>
                        <div class="editor-field">
                            <label id="lblUNSPSC">@Model.UNSPSC</label>
                        </div>
                    </li>*@ @* <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Description)
                        </div>
                        <div class="editor-field">
                            <label id="lblDescription">@Model.Description</label>
                        </div>
                    </li>*@
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.LongDescription)
                        </div>
                        <div class="editor-field">
                            <label id="lblLongDescription">@Model.ItemMasterView.LongDescription</label>
                        </div>
                    </li>
                    @*<li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CategoryID)
                        </div>
                        <div class="editor-field">                            
                            <label id="lblCategoryID">@Model.CategoryID</label>
                        </div>
                    </li>*@
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.CategoryID)
                        </div>
                        <div class="editor-field">
                            <label id="lblCategoryID">@Model.ItemMasterView.CategoryID</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.GLAccountID)
                        </div>
                        <div class="editor-field">
                            <label id="lblGLAccountID">@Model.ItemMasterView.GLAccountID</label>
                        </div>
                    </li>
                    @*<li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.UOMID)
                        </div>
                        <div class="editor-field">
                            <label id="lblUOMID">@Model.UOMID</label>
                        </div>
                    </li>*@
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.PricePerTerm)
                        </div>
                        <div class="editor-field">
                            <label id="lblPricePerTerm">@Model.ItemMasterView.PricePerTerm</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.DefaultReorderQuantity)
                        </div>
                        <div class="editor-field">
                            <label id="lblDefaultReorderQuantity">@Model.ItemMasterView.DefaultReorderQuantity</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.DefaultPullQuantity)
                        </div>
                        <div class="editor-field">
                            <label id="lblDefaultPullQuantity">@Model.ItemMasterView.DefaultPullQuantity</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.Cost)
                        </div>
                        <div class="editor-field">
                            <label id="lblCost">@Model.ItemMasterView.Cost</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.Markup)
                        </div>
                        <div class="editor-field">
                            <label id="lblMarkup">@Model.ItemMasterView.Markup</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.SellPrice)
                        </div>
                        <div class="editor-field">
                            <label id="lblSellPrice">@Model.ItemMasterView.SellPrice</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.ExtendedCost)
                        </div>
                        <div class="editor-field">
                            <label id="lblExtendedCost">@Model.ItemMasterView.ExtendedCost</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.LeadTimeInDays)
                        </div>
                        <div class="editor-field">
                            <label id="lblLeadTimeInDays">@Model.ItemMasterView.LeadTimeInDays</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.StagedQuantity)
                        </div>
                        <div class="editor-field">
                            <label id="lblStagedQuantity">@Model.ItemMasterView.StagedQuantity</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.InTransitquantity)
                        </div>
                        <div class="editor-field">
                            <label id="lblIn_Transitquantity">@Model.ItemMasterView.InTransitquantity</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.OnOrderQuantity)
                        </div>
                        <div class="editor-field">
                            <label id="lblOnOrderQuantity">@Model.ItemMasterView.OnOrderQuantity</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.OnTransferQuantity)
                        </div>
                        <div class="editor-field">
                            <label id="lblOnTransferQuantity">@Model.ItemMasterView.OnTransferQuantity</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.SuggestedOrderQuantity)
                        </div>
                        <div class="editor-field">
                            <label id="lblSuggestedOrderQuantity">@Model.ItemMasterView.SuggestedOrderQuantity</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.RequisitionedQuantity)
                        </div>
                        <div class="editor-field">
                            <label id="lblRequisitionedQuantity">@Model.ItemMasterView.RequisitionedQuantity</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.AverageUsage)
                        </div>
                        <div class="editor-field">
                            <label id="lblAverageUsage">@Model.ItemMasterView.AverageUsage</label>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ItemMasterView.Turns)
                        </div>
                        <div class="editor-field">
                            <label id="lblTurns">@Model.ItemMasterView.Turns</label>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
        if (Model.ID != 0)
        {
        <div class="rightside">
            <ul>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.RoomName)
                    </div>
                    <div class="colDiv">
                        :</div>
                    <div class="editor-field">
                        <span>@(Model.RoomName)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Created)
                    </div>
                    <div class="colDiv">
                        :</div>
                    <div class="editor-field">
                        <span>@(Model.Created)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.CreatedByName)
                    </div>
                    <div class="colDiv">
                        :</div>
                    <div class="editor-field">
                        <span>@(Model.CreatedByName)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Updated)
                    </div>
                    <div class="colDiv">
                        :</div>
                    <div class="editor-field">
                        <span>@(Model.Updated)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.UpdatedByName)
                    </div>
                    <div class="colDiv">
                        :</div>
                    <div class="editor-field">
                        <span>@(Model.UpdatedByName)</span>
                    </div>
                </li>
            </ul>
        </div>
        }
    }
</div>
<script type="text/javascript">

    $("form").submit(function (e) {
        $.validator.unobtrusive.parse("#frmPullMaster");
        if ($(this).valid()) {
        }
        e.preventDefault();
    });

    $(function () {

        $('#btnCancel').click(function (e) {
            SwitchTab(0, 'PullCreate', 'frmPullMaster');
        });

        //FillDataByItemID(1003);
        $("#ItemID").change(function () {
            $('label[id*="lbl"]').text('');
            FillDataByItemID(this.value);
        });
    });

    function FillDataByItemID(ItemID) {
        $.ajax({
            "url": '@Url.Content("~/Pull/GetDataByItemID")',
            data: { ItemIDKey: ItemID },
            "dataType": "json",
            cache: false,
            "async": false,
            "success": function (json) {
                if (json.ResultData != undefined) {
                    $('#lblManufacturerNumber').text(json.ResultData.ManufacturerNumber);
                    $('#lblSupplierPartNo').text(json.ResultData.SupplierPartNo);
                    $('#lblLongDescription').text(json.ResultData.LongDescription);
                    $('#lblCategoryID').text(json.ResultData.CategoryID);
                    $('#lblGLAccountID').text(json.ResultData.GLAccountID);
                    $('#lblPricePerTerm').text(json.ResultData.PricePerTerm);
                    $('#lblDefaultReorderQuantity').text(json.ResultData.DefaultReorderQuantity);
                    $('#lblDefaultPullQuantity').text(json.ResultData.DefaultPullQuantity);
                    $('#lblCost').text(json.ResultData.Cost);
                    $('#lblMarkup').text(json.ResultData.Markup);
                    $('#lblSellPrice').text(json.ResultData.SellPrice);
                    $('#lblExtendedCost').text(json.ResultData.ExtendedCost);
                    $('#lblLeadTimeInDays').text(json.ResultData.LeadTimeInDays);
                    $('#lblStagedQuantity').text(json.ResultData.StagedQuantity);
                    $('#lblIn_Transitquantity').text(json.ResultData.InTransitquantity);
                    $('#lblOnOrderQuantity').text(json.ResultData.OnOrderQuantity);
                    $('#lblOnTransferQuantity').text(json.ResultData.OnTransferQuantity);
                    $('#lblSuggestedOrderQuantity').text(json.ResultData.SuggestedOrderQuantity);
                    $('#lblRequisitionedQuantity').text(json.ResultData.RequisitionedQuantity);
                    $('#lblAverageUsage').text(json.ResultData.AverageUsage);
                    $('#lblTurns').text(json.ResultData.Turns);
                }
                if (json.ResultLocationData != undefined) {
                    var mySelect = $("#BinMaster");
                    mySelect.empty();
                    for (var i = 0; i <= json.ResultLocationData.length - 1; i++) {
                        mySelect.append($('<option></option>').val(json.ResultLocationData[i].ID).html(json.ResultLocationData[i].BinNumber));
                    }
                    if (json.ResultLocationData.length == 0)
                        mySelect.append($('<option></option>').val("0").html("No Location"));
                }
            },
            "error": function (json) {
                debugger;
            }
        });
    }

    function onSuccess(response) {
        IsRefreshGrid = true;
        $('div#target').fadeToggle();
        $("div#target").delay(2000).fadeOut(200);
        $("#spanGlobalMessage").text(response.Message);
        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
        var idValue = $("#hiddenID").val();

        if (response.Status == "fail") {
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');            
        }
        else if (idValue == 0) {            
            clearControls('frmPullMaster');
            if (response.Status == "duplicate")
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
            else
                clearControls('frmPullMaster');
        }
        else if (idValue > 0) {
            if (response.Status == "duplicate") {
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');                
            }
            else {
                clearControls('frmPullMaster');
                SwitchTab(0, 'PullCreate', 'frmPullMaster');
            }
        }
    }
    function onFailure(message) {
        $("#spanGlobalMessage").text(message.statusText);
        $('div#target').fadeToggle();
        $("div#target").delay(2000).fadeOut(200);        
    }
</script>
