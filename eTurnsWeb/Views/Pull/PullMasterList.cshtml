@{
    ViewBag.Title = eTurns.DTO.ResPullMaster.PageTitle;
    var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplayUDFButton = true, ShowSelectAll = true, UDFSetupFor = "PullMaster&UDFHeader=" + @eTurns.DTO.ResPullMaster.PullMasterHeader, DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "PullMaster", DisplayArchiveButton = true };
    //var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplayUDFButton = true, ShowSelectAll = true, UDFSetupFor = "PullMaster&UDFHeader=" + @eTurns.DTO.ResPullMaster.PullMasterHeader, DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "PullMaster" };
    var version = eTurnsWeb.Helper.CommonUtility.GetReleaseNumber();
    var modelCommon = new eTurns.DTO.CommonDTO { PageName = "PullMaster" };

    bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.PullMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.PullMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    bool isCost = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.HideCostMarkUpSellPrice);
    //string str = Convert.ToString(Html.RenderColumnsArrayEditableObject("PullMaster", IsObjectRender: false)) ?? string.Empty;
    string str = Convert.ToString(Html.RenderColumnsArrayEditableObject_PullMasterList("PullMaster", IsObjectRender: false)) ?? string.Empty;
    string newStrinVal = "";
    string PullsPDFURL = string.Format("{0}?t={1}", "/Uploads/HelpDoc/Pulls.pdf", DateTime.Now.Ticks);
    string[] arr = new string[] { };
    if (!string.IsNullOrWhiteSpace(str))
    {
        arr = str.Split(new string[] { ",{" }, StringSplitOptions.RemoveEmptyEntries);
    }
    if (arr != null && arr.Length > 0)
    {
        foreach (var item in arr)
        {
            string ActralUDF = string.Empty;
            if (item.ToString().ToLower().IndexOf("udf1") >= 0)
            {
                ActralUDF = "UDF1";
            }
            if (item.ToString().ToLower().IndexOf("udf2") >= 0)
            {
                ActralUDF = "UDF2";
            }
            if (item.ToString().ToLower().IndexOf("udf3") >= 0)
            {
                ActralUDF = "UDF3";
            }
            if (item.ToString().ToLower().IndexOf("udf4") >= 0)
            {
                ActralUDF = "UDF4";
            }
            if (item.ToString().ToLower().IndexOf("udf5") >= 0)
            {
                ActralUDF = "UDF5";
            }
            newStrinVal = newStrinVal + ",{" + item.Replace("return \"<", "return \"<input type='hidden' id='hdn" + ActralUDF + "' value='\"+obj.aData." + ActralUDF + "+\"' /><");

        }

    }
    MvcHtmlString strtoPutarra = new MvcHtmlString(newStrinVal);

    //System.Xml.Linq.XElement Settinfile = System.Xml.Linq.XElement.Load(HttpContext.Current.Server.MapPath("/SiteSettings.xml"));
    string AllowedPullQtyEdit = eTurns.DTO.SiteSettingHelper.AllowedPullQtyEdit; // Settinfile.Element("AllowedPullQtyEdit").Value;

    Int64 EnterpriseId = eTurnsWeb.Helper.SessionHelper.EnterPriceID;
    Int64 CompanyID = eTurnsWeb.Helper.SessionHelper.CompanyID;
    Int64 RoomID = eTurnsWeb.Helper.SessionHelper.RoomID;

    string UNCPathRootImage = eTurns.DTO.SiteSettingHelper.InventoryPhoto;
    UNCPathRootImage = UNCPathRootImage.Replace("~", string.Empty);
    string LogoPathItemImage = (UNCPathRootImage + EnterpriseId + "/" + CompanyID + "/" + RoomID);
    List<HelpDocumentDetailDTO> objHelpDocDtlDTO = eTurnsWeb.Helper.SessionHelper.GetHelpDocumentDetail("Pulls", (int)HelpDocType.Module);

}
@if (SiteSettingHelper.IsBorderStateURL == "1" && SiteSettingHelper.EnableOktaLoginForSpecialUrls.Contains(eTurnsWeb.Helper.SessionHelper.CurrentDomainURL)){<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyleBS.css")" />}else{ <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyle.css")" />}
@*@if (false)
        {
    <script src="~/Scripts/jquery.dataTables.js"></script>
        }*@
@section head{

}

<style type="text/css">
    /*TODO: Comment below line due to issue: WI-2723*/
    /*.dataTable thead tr th {white-space: nowrap !important;}*/

    .IteamBlock li {
        width: 90% !important;
    }

    #simplemodal-container .simplemodal-container {
        z-index: 10000 !important;
    }

    .improvement {
        position: relative !important;
    }

    .editudf {
        position: absolute;
        display: block;
        height: 15px;
        width: 15px;
        top: 0;
        right: 0;
    }

        .editudf img {
            cursor: pointer;
        }
    .editpullOrder {
        position: absolute;
        display: block;
        height: 15px;
        width: 15px;
        top: 0;
        right: 0;
    }

    .editpullOrder img {
        cursor: pointer;
    }
    .editPullQty {
        position: relative;
        display: block;
        height: 15px;
        width: 15px;
        top: 0;
        right: 0;
    }

        .editPullQty img {
            cursor: pointer;
        }
        .paginationBlock 
         {
            float: left;
            position: absolute;
            right: 253px;
            top: -4px;
        }
</style>

<div class="userListingWrapper">
    <h2>
        @eTurns.DTO.ResPullMaster.PullMasterHeader
    </h2>
    <div class="Infoclass" style="width:70px !important">
        @if (objHelpDocDtlDTO != null && objHelpDocDtlDTO.Count > 0 && objHelpDocDtlDTO.FirstOrDefault().IsVideoShow == true)
        {
            var VideoCount = objHelpDocDtlDTO.Where(x => x.IsVideo == true).Count();
            if (VideoCount > 1)
            {
                <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">
                    <a href="#" style="z-index:205 !important">
                        <img src="~/Content/images/InfoVideo.png" alt="Help" />
                    </a>
                    <div class="refreshBlock" style="z-index:200 !important; top: 20px;">
                        <ul class="sub_subMenu">
                            @foreach (var item in objHelpDocDtlDTO)
                            {
                                if (item.IsVideo == true && !string.IsNullOrWhiteSpace(item.ModuleVideoName) && !string.IsNullOrWhiteSpace(item.ModuleVideoPath))
                                {
                                    <li class="help_docvideo" onclick="return OpenHelpDocVideo('@item.ModuleVideoPath.Replace("../Uploads/HelpDoc/", "")', '@item.ModuleVideoNoExt');">@item.ModuleVideoNoExt</li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            }
            else
            {
                HelpDocumentDetailDTO helpDetails = new HelpDocumentDetailDTO();
                helpDetails = objHelpDocDtlDTO.Where(x => x.IsVideo == true).FirstOrDefault();

                if (helpDetails != null && helpDetails.IsVideo == true && !string.IsNullOrWhiteSpace(helpDetails.ModuleVideoName) && !string.IsNullOrWhiteSpace(helpDetails.ModuleVideoPath))
                {
                    <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">
                        <img class="help_docvideo" src="~/Content/images/InfoVideo.png" alt="@helpDetails.ModuleVideoNoExt" onclick="return OpenHelpDocVideo('@helpDetails.ModuleVideoPath.Replace("../Uploads/HelpDoc/", "")', '@helpDetails.ModuleVideoNoExt');" />
                    </div>
                }
            }
        }
        @if (objHelpDocDtlDTO != null && objHelpDocDtlDTO.Count > 0 && objHelpDocDtlDTO.FirstOrDefault().IsDocShow == true)
        {
            var DocCount = objHelpDocDtlDTO.Where(x => x.IsDoc == true).Count();
            if (DocCount > 1)
            {
                <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">
                    <a href="#" style="z-index:205 !important">
                        <img src="~/Content/images/Info.png" alt="Help" />
                    </a>
                    <div class="refreshBlock" style="z-index:200 !important; top: 20px;">
                        <ul class="sub_subMenu">
                            @foreach (var item in objHelpDocDtlDTO)
                            {
                                if (item.IsDoc == true && !string.IsNullOrWhiteSpace(item.ModuleDocName) && !string.IsNullOrWhiteSpace(item.ModuleDocPath))
                                {
                                    <li class="help_docvideo" onclick="return window.open('@item.ModuleDocPath', '_blank')">@item.ModuleDocNoExt</li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            }
            else
            {
                HelpDocumentDetailDTO helpDetails = new HelpDocumentDetailDTO();
                helpDetails = objHelpDocDtlDTO.Where(x => x.IsDoc == true).FirstOrDefault();

                if (helpDetails != null && helpDetails.IsDoc == true && !string.IsNullOrWhiteSpace(helpDetails.ModuleDocName) && !string.IsNullOrWhiteSpace(helpDetails.ModuleDocPath))
                {
                    <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">
                        <img class="help_docvideo" src="~/Content/images/Info.png" alt="@helpDetails.ModuleDocNoExt" onclick="return window.open('@helpDetails.ModuleDocPath', '_blank')" />
                    </div>
                }
            }
        }
    </div>
    <div class="userListBlock">
        @Html.Hidden("hdnInsertRights", isInsert)
        @Html.Hidden("hdnUpdateRights", isUpdate)
        <input type="hidden" id="hdnModuleName" name="hdnModuleName" value="Pull" />
        <input type="hidden" id="hdnAllowedPullQtyEdit" name="hdnAllowedPullQtyEdit" value="@AllowedPullQtyEdit" />
        <ul class='tabs'></ul>
        <div id="CtabNew" class="tabContener">
        </div>
        <div id="Ctab" class="tabContener">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="global_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_global_filter" />
                        </a>
                    </div>
                </div>
            </div>
            @Html.GridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.PullMaster)
            @Html.Partial("NarrowSearchLayout", modelCommon)
            <div class="userContent ">
                <table id="myDataTable" class="display">
                    <thead>
                        <tr>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.RowNo
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Expand
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.SetBillingAction
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Billing
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.PullOrderNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.PullCredit
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.PulledQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.PulledCost
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.PullLocation
                            </th>
                            <th>
                                @eTurns.DTO.ResProjectMaster.ProjectSpendName
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ID
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ItemNumber
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.CreatedOn
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.UpdatedOn
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.CreatedBy
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.UpdatedBy
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ItemType
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.AddedFrom
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.EditedFrom
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ReceivedOnDate
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Markup
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.SellPrice
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Cost
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Description
                            </th>
                            <th>
                                @eTurns.DTO.ResUnitMaster.Unit
                            </th>
                            <th>
                                @eTurns.DTO.ResCategoryMaster.Category
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.DefaultPullQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ManufacturerName
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ManufacturerNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Supplier
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.SupplierPartNo
                            </th>
                            <th>
                                @eTurns.DTO.ResGLAccount.GLAccount
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OnHandQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.ResultingItemOnHandQty
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.ResultingItemLocOnHandQty
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.CriticalQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.MinimumQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.MaximumQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Taxable
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.AverageUsage
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Turns
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OnOrderQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OnTransferQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.InTransitquantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.LongDescription
                            </th>
                            <th>
                                @eTurns.DTO.ResRequisitionMaster.RequisitionNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResRequisitionMaster.WorkorderName
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.CostUOMName
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.PulledPrice
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.ItemBlanketPO
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.SupplierAccountNumber
                            </th>
                            <th>@eTurns.DTO.ResPullMaster.PulledItemCost</th>
                            <th>@eTurns.DTO.ResPullMaster.PullMasterItemCost</th>
                            <th>@eTurns.DTO.ResPullMaster.PullMasterItemSellPrice</th>
                            <th>@eTurns.DTO.ResPullMaster.PullMasterItemMarkup</th>
                            <th>@eTurns.DTO.ResPullMaster.PullMasterItemCostUOMValue</th>
                            <th>@eTurns.DTO.ResPullMaster.PullMasterItemAverageCost</th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.Image
                            </th>
                            <th>@eTurns.DTO.ResPullMaster.IsCustomerEDISent</th>
                            @Html.RenderColumnsHeader("PullMaster", typeof(eTurns.DTO.ResPullMaster))
                            @Html.RenderColumnsHeader("RequisitionMaster", typeof(eTurns.DTO.ResRequisitionMaster), "Requisition")
                            @Html.RenderColumnsHeader("WorkOrder", typeof(eTurns.DTO.ResWorkOrder), "WorkOrder")
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
                <button id="btnAddNewCompany" value="Ok" style="display: none">
                    @ResCommon.AddNew
                </button>
                <button id="btnDeleteCompany" value="cancel" style="display: none">
                    Delete Selected
                </button>
                <div id="processing_message" style="display: none" title="Processing">
                    @eTurns.DTO.Resources.ResMessage.RequestProcessMessage
                </div>
                <div id="divQTYLegends" style="clear: both; width: 90%; margin-top: 20px; display: block;
                    float: left">
                    <div>
                        <span class="SpanMinimumLegend" style="background-color: @eTurnsWeb.Helper.SessionHelper.ConsignmentItemPulled">
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>&nbsp;@eTurns.DTO.ResPullMaster.ConsignmentItemPulledColorDescription
                    </div>
                    <div style="clear: both; margin-top: 5px;">
                        <span class="SpanMinimumLegend" style="background-color: @eTurnsWeb.Helper.SessionHelper.ConsingmentItemEDISent">
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>&nbsp;@eTurns.DTO.ResPullMaster.ConsignmentItemEDISentColorDescription
                    </div>
                    <div style="clear: both; margin-top: 5px;">
                        <span class="SpanCriticalLegend" style="background-color: @eTurnsWeb.Helper.SessionHelper.ConsingmentItemBilled">
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        </span>&nbsp;@eTurns.DTO.ResPullMaster.ConsignmentItemBillColorDescription
                    </div>
                </div>
            </div>
        </div>
        <div id='CtabCL' class="tabContener">
        </div>
    </div>
</div>
<div id="DivPullSelectionEdit">
</div>
<div id="LocationDetails">
</div>
<div id="divPreCreditInforSerialLotEdit">
</div>
<div id="divPreCreditInfoEdit"></div>
<div id="PopupSetBilling">
</div>
<div class="dialog" id="BillInfoDialog" style="display: none; width: 470px;z-index:100000;">
    <div class="inner" style="width: 470px;">
        <p class="text" id="BillMSG" style="text-align: left; padding-left: 10px;">
        </p>
        <p class="text btnA" style="text-align: center; padding-left: 10px;">
            <a href="javascript:void(0)" class="no" onclick="closeFromOk()">
                <img src="~/Content/images/yes.png" alt="@ResCommon.Ok" />@ResCommon.Ok
            </a>
        </p>
    </div>
</div>

@*<script language="javascript" type="text/javascript" src="@Url.Content("~/Scripts/Authorization.js?v=" + version)"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/DynemicDataTable.js?v=" + version)"></script>
<script type='text/javascript' src="@Url.Content("~/Scripts/TabCommon.js?v=" + version)"></script>
<script type='text/javascript' src="@Url.Content("~/Scripts/PageScripts/PullMasterList.js?v=" + version)"></script>*@

@Scripts.Render("~/bundles/pullMasterList?v=" + version)

<script language="javascript" type="text/javascript">
        var oTable;
        var IsRefreshGrid = false;
        var deleteURL = "/Pull/DeletePullMasterRecords";
        var sImageUrl = "/Content/images/";
        var anOpen = [];
        var IsDeletePopupOpen = false;
        var AllowDeletePopup = true;
        var SelectedHistoryRecordID = 0;
        var HistorySelected;
        var GlobalPullQuantity;
        var GlobalIsCreditPull;
        var GlobalTempPulledQTY;
        var IsSaveRequired = false;
        var BoolTrueString = '@Boolean.TrueString';
        var logoPathItemImage = '@LogoPathItemImage';
        var objColumns = {};
        var PullMasterGridColumns;
        PullMasterGridColumns=GetGridHeaderColumnsObject('myDataTable');
        var TabsArry = [new TabClass('tab1', '@eTurns.DTO.Resources.ResCommon.New', 'callbacknew();', true, true),
        new TabClass('tab5', '@eTurns.DTO.Resources.ResCommon.History', 'callbackhistory();', true, true)
       // new TabClass('tab6', '@eTurns.DTO.Resources.ResCommon.ChangeLog', 'callbackCL();', false, true)
    ];


    var PullPoMasterArray = @Html.RenderColumnsArrayForPullPO_PullMaster("PullPoMaster", FixedName: "txtPullOrderNumber", PrependComma: false),
        PullMasterArray = [@Html.RenderColumnsArrayEditableObject_PullMasterListNew("PullMaster", IsObjectRender: false, PrependComma: false)],
        RequisitionMasterArray = [@Html.RenderColumnsArray("RequisitionMaster", false, "Requisition")],
        WorkOrderArray = [@Html.RenderColumnsArray("WorkOrder", false, "WorkOrder")];

    var sLengthMenu = '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
        sEmptyTable = '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
        sInfo = '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
        sInfoEmpty = '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries';

    var msgSelectForViewHistory = '@ResCommon.msgSelectForViewHistory';
    var MsgBillingDoneDeleteValidation = '@ResPullMaster.MsgBillingDoneDeleteValidation';
    var MsgSelectLocationPullCreditValidation = '@ResPullMaster.MsgSelectLocationPullCreditValidation';
    var msgSelectForViewHistory = '@ResCommon.msgSelectForViewHistory';
    var MsgQuantityBlankZeroValidation = '@ResPullMaster.MsgQuantityBlankZeroValidation';
    var MsgNewOldQuantitySameValidation = '@ResPullMaster.MsgNewOldQuantitySameValidation';
    var MsgUpdatePullQuantityValidation = '@ResPullMaster.MsgUpdatePullQuantityValidation';
    var MsgUpdateCreditQuantityValidation = '@ResPullMaster.MsgUpdateCreditQuantityValidation';
    var MsgUpdatePullQuantityConfirmation = '@ResPullMaster.MsgUpdatePullQuantityConfirmation';
    var AllPulldon = '@ResPullMaster.AllPulldon';
    var MsgSaveCreditAjaxError = '@ResPullMaster.MsgSaveCreditAjaxError';
    var MsgPullCreditQuantity = '@ResToolMaster.MsgPullCreditQuantity';
    var MsgRowShouldExists = '@ResToolMaster.MsgRowShouldExists';
    var MsgSelectRowToDelete = '@ResPullMaster.MsgSelectRowToDelete';
    var MsgDuplicateLotNumberExpirationDate = '@ResPullMaster.MsgDuplicateLotNumberExpirationDate';
    var MsgDuplicateExpirationDate = '@ResPullMaster.MsgDuplicateExpirationDate';
    var MsgLotNumberExpDateValidation = '@ResPullMaster.MsgLotNumberExpDateValidation';
    var MsgDuplicateSerialNumberValidation = '@ResReceiveOrderDetails.MsgDuplicateSerialNumberValidation';
    var MsgDuplicateLotNumber = '@ResToolMaster.MsgDuplicateLotNumber';
    var MsgCreditTransactionForSerialNumber = '@ResPullMaster.MsgCreditTransactionForSerialNumber';
    var MsgEnterLotNumber = '@ResReceiveOrderDetails.MsgEnterLotNumber';
    var MsgSerialNumberValidation = '@ResReceiveOrderDetails.MsgSerialNumberValidation';
    var MsgEnterExpirationDate = '@ResPullMaster.MsgEnterExpirationDate';
    var MsgAvailableQtyText = '@ResPullMaster.MsgAvailableQtyText';
    var MsgPullQuantitySelectedLocation = '@ResPullMaster.MsgPullQuantitySelectedLocation';
    var MsgNoLocationToAdd = '@ResPullMaster.MsgNoLocationToAdd';
    var MsgPullMoreQuantityValidation = '@ResToolMaster.MsgPullMoreQuantityValidation';
    var MsgEnteredPullQuantityValidation = '@ResToolMaster.MsgEnteredPullQuantityValidation';
    var SomeItemNotPulled = '@ResPullMaster.SomeItemNotPulled';
    var MsgPullDoneSuccess = '@ResToolMaster.MsgPullDoneSuccess';
    var MsgErrorInProcess = '@ResCommon.ErrorInProcess';
    var MsgCreditMoreAvailableQTY = '@ResPullMaster.MsgCreditMoreAvailableQTY';
    var MsgCreditMoreAvailablePullQTY = '@ResPullMaster.MsgCreditMoreAvailablePullQTY';
    var DuplicateNumber = '@ResMessage.DuplicateNumber';
    var MsgEnterPullOrderNumber = '@ResPullMaster.MsgEnterPullOrderNumber';
    var MsgPullMaster = '@ResPullMaster.PullMaster';
    var BtnSendPull = '@ResCommon.BtnSendPull';

    var oLanguage = {
        "sLengthMenu": sLengthMenu,
        "sEmptyTable": sEmptyTable,
        "sInfo": sInfo,
        "sInfoEmpty": sInfoEmpty
    };

    var isCost = '@(isCost)';
    var arrow_down_black = '@Url.Content("~/Content/images/arrow_down_black.png")'

    _PullMasterList.init();
    _PullMasterList.initUrls('@Url.Content("~/Master/SaveGridState")', '@Url.Content("~/Master/LoadGridState")'
        , '@Url.Content("~/Pull/PullMasterListAjax")', '@Url.Content("~/Pull/GetUDFOptionByID")'
        , '@Url.Content("~/Pull/GetQTYFromLocationAndItem")', '@Url.Content("~/Pull/PullDetails")'
        , '@Url.Content("~/Pull/NewPull")', '@Url.Action("PullMasterList", "Pull")'
        , '@Url.Content("~/Pull/SetBillingForPullMaster")', '@Url.Content("~/Pull/UpdateUDFInPullHistory")'
        , '@Url.Content("~/Pull/UpdatePullOrderNumberInPullHistory")'
        , '@Url.Content("~/Pull/UpdatePullQtyInPullHistory")'
        , '@Url.Content("~/Pull/PullItemQuantityEdit")'
        , '@Url.Content("~/Pull/PullLotSrSelectionDetailsEdit")'
        , '@Url.Content("~/Pull/ValidateSerialLotNumberForEdit")'
        , '@Url.Content("~/Pull/ValidateLotDateCodeForCredit")'
        , '@Url.Content("~/Pull/ValidateSerialNumberForCredit")'
        , '@Url.Content("~/Pull/GetLotOrSerailNumberListForEdit")'
        , '@Url.Content("~/Pull/PullSerialsAndLotsNewEdit")'
        , '@Url.Content("~/Pull/PullLotSrSelectionForCreditEditPopup")'
        , '@Url.Content("~/Pull/SavePullCreditEdit")'
        , '@Url.Content("~/Pull/GetPullOrderNumberForNewPullGrid")'
    );
    var GetColumnIndex = function (ColumnName) {
        if (typeof (PullMasterGridColumns) != "undefined") {
            return PullMasterGridColumns[ColumnName];
        }
    };
</script>
<script type="text/javascript">
            

</script>
