@model eTurnsWeb.Models.ItemModelPerameter
@using System.Linq;
@{
    var settings = new GridHeaderSettings() { DisplayContextMenu = true, DisplayPrintBlock = false, DisplayDeleteButton = false, dataViewType = DataViewType.None, DisplayUDFButton = false, UDFSetupFor = "", DisplaySettings = true, DisplayColumnSetupButton = true, ShowSelectAll = true, ColumnSetupFor = "ItemMasterModelList", ModuleName = "NewPull" };
    var version = eTurnsWeb.Helper.CommonUtility.GetReleaseNumber();
    ToolsMaintenanceDTO objToolsMaintenanceDTO = new ToolsMaintenanceDTO();
    var modelCommon = new eTurns.DTO.CommonDTO { PageName = "ItemMaster", ListName = "_NewPull", ItemModelCallFromPageName = "NewPULL" };
    bool isCalledFromWorkOrder = false;
    if (Model.CallingFromPageName.ToLower() == "workorder")
    {
        isCalledFromWorkOrder = true;
    }
    if (Model.ModelHeader.ToLower().Contains("add items to order"))
    {
        modelCommon.Text = "Order";
    }
    else if (Model.ModelHeader.ToLower().Contains("add kit component to kit"))
    {
        modelCommon.Text = "Kit";
    }
    else
    {
        modelCommon.Text = "eTurns";
    }
    string ViewNewPullbuttons = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["ViewNewPullbuttons"]);
    if (string.IsNullOrWhiteSpace(ViewNewPullbuttons))
    {
        ViewNewPullbuttons = "no";
    }
    Guid MaintenaceGUID = Guid.Empty;
    string firsttimepop = string.Empty;
    if (ViewBag.mntsGUID != null)
    {
        Guid.TryParse(Convert.ToString(ViewBag.mntsGUID), out MaintenaceGUID);
        //if (Guid.TryParse(Convert.ToString(ViewBag.mntsGUID), out MaintenaceGUID))
        //{
        //    objToolsMaintenanceDTO = new eTurns.DAL.ToolsMaintenanceDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetRecord(MaintenaceGUID, eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID, false, false);
        //}
    }
    if (ViewBag.FirstTimePopup != null)
    {
        firsttimepop = Convert.ToString(ViewBag.FirstTimePopup);
    }
    if (MaintenaceGUID != Guid.Empty)
    {
        settings.PullForPage = "mpull";
    }

    bool ProjectSpendAvailable = false;
    eTurns.DAL.ProjectMasterDAL objProjDAL = new eTurns.DAL.ProjectMasterDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName);
    ProjectSpendAvailable = objProjDAL.GetTotalProjectCountByRoom(eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID, false, false) > 0;
    bool ProjectSpendVisible = false;
    eTurns.DAL.RoomDAL objRoomDAL = new eTurns.DAL.RoomDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName);
    ProjectSpendVisible = objRoomDAL.checkProjectSpendMandatorybyId(eTurnsWeb.Helper.SessionHelper.RoomID);
    objProjDAL = null;

    bool HasOnTheFlyEntryRight = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.OnTheFlyEntry);
    bool isPullUDF = new eTurns.DAL.UDFDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetNonDeletedUDFCountByUDFTableName("PullMaster", eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID) > 0;

    bool AllowEditItemSellPriceonWorkOrderPull = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.AllowEditItemSellPriceonWorkOrderPull);

    bool IsIgnoreCreditRule = false;
    IsIgnoreCreditRule = objRoomDAL.checkCreditRuleApplybyId(eTurnsWeb.Helper.SessionHelper.RoomID);


    string UDF1Text = eTurnsWeb.Helper.ResourceUtils.GetResource("ResPullMaster", "UDF1", true);
    string UDF2Text = eTurnsWeb.Helper.ResourceUtils.GetResource("ResPullMaster", "UDF2", true);
    string UDF3Text = eTurnsWeb.Helper.ResourceUtils.GetResource("ResPullMaster", "UDF3", true);
    string UDF4Text = eTurnsWeb.Helper.ResourceUtils.GetResource("ResPullMaster", "UDF4", true);
    string UDF5Text = eTurnsWeb.Helper.ResourceUtils.GetResource("ResPullMaster", "UDF5", true);

    bool UDF1IsRequired = Html.GetUdfIsRequiredStatus("PullMaster", "UDF1");
    bool UDF2IsRequired = Html.GetUdfIsRequiredStatus("PullMaster", "UDF2");
    bool UDF3IsRequired = Html.GetUdfIsRequiredStatus("PullMaster", "UDF3");
    bool UDF4IsRequired = Html.GetUdfIsRequiredStatus("PullMaster", "UDF4");
    bool UDF5IsRequired = Html.GetUdfIsRequiredStatus("PullMaster", "UDF5");
    Int64 UDFSetUpCount = Html.GetUFDSetupCountTableWise("PullMaster");



    eTurns.DAL.ProjectMasterDAL objDAL = null;
    ProjectMasterDTO lstDTO = null;
    Int64 EnterpriseId = eTurnsWeb.Helper.SessionHelper.EnterPriceID;
    Int64 RoomID = eTurnsWeb.Helper.SessionHelper.RoomID;
    Int64 CompanyID = eTurnsWeb.Helper.SessionHelper.CompanyID;
    objDAL = new eTurns.DAL.ProjectMasterDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName);
    lstDTO = objDAL.GetDefaultProjectSpendRecord(RoomID, CompanyID, false, false);
    string ProjectSpendName = string.Empty;
    Guid? ProjectSpendGuid = null;
    if (lstDTO != null)
    {
        ProjectSpendName = lstDTO.ProjectSpendName;
        ProjectSpendGuid = lstDTO.GUID;
    }
    else
    {
        ProjectSpendName = string.Empty;
        ProjectSpendGuid = null;
    }

    //System.Xml.Linq.XElement Settinfile = System.Xml.Linq.XElement.Load(HttpContext.Current.Server.MapPath("/SiteSettings.xml"));
    string UNCPathRootImage = eTurns.DTO.SiteSettingHelper.InventoryPhoto; // Settinfile.Element("InventoryPhoto").Value;
    UNCPathRootImage = UNCPathRootImage.Replace("~", string.Empty);
    string LogoPathItemImage = (UNCPathRootImage + EnterpriseId + "/" + CompanyID + "/" + RoomID);

    bool IsProjectSpendInsertAllow = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.ProjectMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);

}

@*@if (isPullUDF)
    {*@
<style type="text/css">
    .pull-credit-popup .dataTables_length {
        top: -89px;
    }

    .pull-credit-popup .dataTables_paginate {
        top: -79px;
    }

    .pull-credit-popup .td-udfs {
        padding: 3px;
    }

    #tblPullCommonUDF .selectBox {
        width: 90% !important;
    }

    #tblPullCommonUDF .text-boxinner {
        width: 90% !important;
    }

    .tblPullCommonUDFthead {
        padding-right: 5px;
        padding-left: 5px;
    }
</style>
@*}*@
<div class="searchWrapper">
    @*<div class="searchBlock">
            <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
            <div class="searchinputB">
                <input type="text" class="searchinput" id="ItemModel_filter" />
                <a href="javascript:void(0);" class="xclose">
                    <img src="~/Content/images/x.png" alt="X" id="clear_QLItemModel_filter" /></a>
            </div>
        </div>*@
    <input id="hdnMoreLocations" type="hidden" value="@eTurns.DTO.ResBin.MoreLocations" />
    <div class="searchBlock" style="margin: -1px auto; width: 500px;">
        <span class="label" style="color: #FFFFFF; float: left; font-size: 14px; font-weight: bold;
            line-height: 22px; padding: 2px 5px 0 0;">
            @eTurns.DTO.Resources.ResCommon.Search
        </span>
        <div class="searchinputB" style="float: left; position: relative; width: 415px;">
            <input type="text" class="searchinput" id="ItemModel_filter" />
            <a href="javascript:void(0);" class="xclose">
                <img src="~/Content/images/x.png" alt="X" id="clear_QLItemModel_filter" />
            </a>
        </div>
    </div>
</div>
@Html.ItemModelGridTopHeaderWithContextMenu(settings)
<script src="@Url.Content("~/Scripts/PageScripts/NarrowSearchForItemModel.js?v=" + version)" type="text/javascript"></script>
@Html.Partial("NarrowSearchForItemModel", modelCommon)
<div class="userContent pull-credit-popup">
    @*@if (isPullUDF)
        {*@
    <table style="margin-bottom:1px;margin-top:1px;" id="tblPullCommonUDF">
        <thead>
            <tr>
                <th></th>
                <th id="THPullOrderNumber">@eTurns.DTO.ResPullMaster.PullOrderNumber</th>
                <th id="THProjectSpendName">@eTurns.DTO.ResProjectMaster.ProjectSpendName</th>
                @if (IsIgnoreCreditRule == true)
                {
                    <th id="THStagingHeader">@eTurns.DTO.ResItemMaster.StagingHeader</th>
                }
                @Html.RenderColumnsHeaderByName("PullMaster", typeof(eTurns.DTO.ResPullMaster))
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><b style="font-size:13px;">&nbsp;&nbsp;&nbsp;@ResCommon.Usethis</b> <input type="checkbox" id="chkUsePullCommonUDF" /></td>
                <td class="td-udfs" id="TDPullOrderNumber">
                    <span style="position:relative">
                        <input type="text" id="txtPullOrderNumberCommon" class="text-boxinner AutoPullOrderNumber" style="width:120px;" />
                        <a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsOrderNumber"><img src="/Content/images/arrow_down_black.png" alt="select" /></a>
                    </span>
                </td>
                <td class="td-udfs" id="TDProjectSpendName">
                    <span style="position:relative">
                     
                        @if (string.IsNullOrWhiteSpace(ProjectSpendName))
                        {
                            <input type="text" id="txtProjectSpentCommon" class="text-boxinner AutoPullProjectSpents" style="width:120px;" value="" />
                            <input type="hidden" id="ProjectIDCommon" value="" />
                            <a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptions"><img src="/Content/images/arrow_down_black.png" alt="select" /></a>
                        }
                        else
                        {
                            <input type="text" id="txtProjectSpentCommon" class="text-boxinner" disabled="disabled" readonly="readonly" style="width:120px;" value="@ProjectSpendName" />
                            <input type="hidden" id="ProjectIDCommon" value="@ProjectSpendGuid" />
                        }
                     
                    </span>
                </td>
                @if (IsIgnoreCreditRule == true)
                {
                    <td id="TDStagingHeader" style="display:none">
                        <input type="hidden" id="MSPullStagingHeaderValue" />
                        <span style="position:relative">
                            <input type="text" id="txtMSPullStagingHeader" name="txtMSPullStagingHeader" class="text-boxinner AutoMSCreditStagingHeader" maxlength="128" style="width:93%;" autocomplete="off" />
                            <a id="ShowAllOptionsStagingHeader" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsStagingHeader">
                                <img src="/Content/images/arrow_down_black.png" alt="select" />
                            </a>
                        </span>
                    </td>
                }
                @Html.RenderColumnsArrayEditableObjectForDOMByName("PullMaster", controlIDPostfix: "PullCommon")
            </tr>
        </tbody>
    </table>
    @*}*@
    <table id="ItemModeDataTable" class="display">
        <thead>
            <tr>
                <th class="NotSortable NotHide NotMovable">
                    @eTurns.DTO.ResPullMaster.Action
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.ID
                </th>
                @*<th>@eTurns.DTO.ResPullMaster.PullCredit
                    </th>*@
                <th class="NotSortable NotHide" id="colQtyToPull" style="padding-right: 2px;">
                    @eTurns.DTO.ResRequisitionDetails.QtytoPull
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.Image
                </th>
                <th class="NotHide">
                    @eTurns.DTO.ResItemMaster.ItemNumber
                </th>
                <th class="NotHide">
                    @eTurns.DTO.Resources.ResCommon.Location
                </th>
                <th class="NotHide">
                    @eTurns.DTO.ResPullImport.PullOrderNumber
                </th>
                <th class="NotSortable NotHide">
                    @eTurns.DTO.ResProjectMaster.ProjectSpendName
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.ManufacturerNumber
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.ManufacturerName
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.SupplierPartNo
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.Supplier
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.UPC
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.UNSPSC
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.Description
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.LongDescription
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.CostUOMName
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.DefaultReorderQuantity
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.DefaultPullQuantity
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.Cost
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.Markup
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.SellPrice
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.ExtendedCost
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.LeadTimeInDays
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.Trend
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.Taxable
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.Consignment
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.StagedQuantity
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.InTransitquantity
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.OnOrderQuantity
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.OnTransferQuantity
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.SuggestedOrderQuantity
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.RequisitionedQuantity
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.AverageUsage
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.Turns
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.OnHandQuantity
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.CriticalQuantity
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.MinimumQuantity
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.MaximumQuantity
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.WeightPerPiece
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.ItemUniqueNumber
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.IsTransfer
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.IsPurchase
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.InventoryClassification
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.SerialNumberTracking
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.LotNumberTracking
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.DateCodeTracking
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.ItemType
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.IsLotSerialExpiryCost
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.RoomName
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.CreatedOn
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.UpdatedOn
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.UpdatedBy
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.CreatedBy
                </th>
                <th>
                    @eTurns.DTO.ResCategoryMaster.Category
                </th>
                <th>
                    @eTurns.DTO.ResUnitMaster.Unit
                </th>
                <th>
                    @eTurns.DTO.ResGLAccount.GLAccount
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.QuanityPulled
                </th>
                @if (IsIgnoreCreditRule == true)
                {
                    <th class="NotSortable Hide">
                        @eTurns.DTO.ResItemMaster.StagingHeader
                    </th>
                }
                <th class="NotSortable NotHide">
                    @eTurns.DTO.ResPullMaster.SupplierAccountNumber
                </th>
                @Html.RenderColumnsHeader("PullMaster", typeof(eTurns.DTO.ResPullMaster))
                @Html.RenderColumnsHeader("ItemMaster", typeof(eTurns.DTO.ResItemMaster), "Item")
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <div style="clear: both; width: 90%; margin-top: 10px;">
        @if (ViewNewPullbuttons == "no")
        {
            <input type="button" value="@ResPullMaster.BtnPullAll" data-val="Pull ALL" id="btnPullAll" class="CreateBtn" style="float: left;" />
        }
        else
        {
            <input type="button" value="@eTurns.DTO.ResPullMaster.PullAllButton" data-val="Pull ALL" id="btnPullAllNewFlow" class="CreateBtn"
                   style="float: left;" />

        }
        <input type="button" value="@eTurns.DTO.ResPullMaster.PullQL" data-val="Pull QL" id="btnPullAllQL" class="CreateBtn" style="float: left;
            display: none;" />
        <input type="button" value="@eTurns.DTO.ResPullMaster.CreditAll" id="btnCreditAll" class="CreateBtn" style="float: left;
                        display: none" />
        <input type="button" value="@eTurns.DTO.ResPullMaster.MSCreditAll" id="btnMSCreditAll" class="CreateBtn" style="float: left;
                        display: none" />
        <input type="button" value="@ResCommon.Close" id="btnModelPullCancle" class="CreateBtn" style="float: left;
               " />
    </div>
    <div id="processing_message" style="display: none" title="Processing">@eTurns.DTO.Resources.ResMessage.RequestProcessMessage</div>
    @*START : QTY Legends*@
    @Html.Partial("_QTYLegends")
    @*END : QTY Legends*@
</div>
<div id="divPreCreditInfo"></div>
<div id="LocationDetails">
</div>
<div id="DivPullSelection">
</div>
<div id="divPreMSCreditInfo">
</div>
<div id="divPreCreditInforSerialLot">
</div>
<div id="divPreMSCreditInforSerialLot">
</div>
<div class="dialog" id="dlgNoSelectErrorMsg" style="display: none; width: 500px;">
    <div class="inner" style="width: 500px;">
        <p class="text" id="NoSelectErrMessage" style="text-align: left; padding-left: 10px;">
            <b>First select items</b><br />
            <br />
        </p>
        <p id="NsOkbtn" class="text" style="text-align: center; padding-left: 10px;">
            <a href="#" class="no" onclick="closeModalNoSelectModel()">
                <img src="~/Content/images/yes.png" alt="@eTurns.DTO.Resources.ResMessage.InformOk" />@eTurns.DTO.Resources.ResMessage.InformOk
            </a>
        </p>
    </div>
</div>
<div class="dialog" id="dlgExpiredItemErrorMsg" style="display: none; width: 600px;">
    <div class="inner" style="width: 600px; max-height: 300px; overflow: scroll;">
        <p class="text" id="pErrMessage" style="text-align: left; padding-left: 10px;">
        </p>
        <input type="hidden" id="btnPullExItemGuid" />
        <input type="hidden" id="btnPullExReqGuid" />
        <p id="pYesForExpiredItem" class="text" style="text-align: center; padding-left: 10px; display: none;">
            <a href="JavaScript:void{}" id="btnYesForExpiredItem" class="yes">
                <img src="~/Content/images/yes.png" alt="Yes" />
                @eTurns.DTO.Resources.ResMessage.ConfirmYes
            </a><a href="#" class="no" onclick="closeModalPSLimit()">
                <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
            </a>
        </p>
    </div>
</div>
<div class="dialog" id="dlgCommonErrorMsg" style="display: none; width: 600px;">
    <div class="inner" style="width: 600px; max-height: 300px; overflow: scroll;">
        <p class="text" id="pErrMessage" style="text-align: left; padding-left: 10px;">
        </p>
        <p id="pOkbtn" class="text" style="text-align: center; padding-left: 10px; display: none;">
            <a href="#" class="no" onclick="closeModalPSLimit()">
                <img src="~/Content/images/yes.png" alt="@ResCommon.Ok" />@ResCommon.Ok
            </a>
        </p>
        <p id="pYesNobtn" class="text" style="text-align: center; padding-left: 10px; display: none;">
            <a href="JavaScript:void{}" id="btnYesForPS" class="yes">
                <img src="~/Content/images/yes.png" alt="Yes" />
                @eTurns.DTO.Resources.ResMessage.ConfirmYes
            </a><a href="#" class="no" onclick="closeModalPSLimit()">
                <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
            </a>
        </p>
    </div>
</div>
<div class="dialog" id="project-spend-limit-basic-modal-content" style="display: none;
    width: 600px;">
    <div class="inner" style="width: 600px;">
        <p class="text" id="PSPlimit" style="text-align: left; padding-left: 10px;">
            <b>@ResPullMaster.SomeItemNotPulled</b><br />
            <b style="color: Olive;">1) @ResPullMaster.reqQtyToPull</b>
            <br />
            <b style="color: Olive;">2) @ResPullMaster.InventoryLocationMandatory</b>
            <br />
            <b style="color: Olive;">3) @ResPullMaster.MsgLabourItemRequiredHours</b>
            <br />
            <b style="color: Olive;">4) @ResPullMaster.QtyNotAvailableforItemLocation</b>
            <br />
            <b style="color: Yellow;">
                5) @ResPullMaster.msgProjectSpendLimitReached
                <br />
                @ResPullMaster.msgProjectSpendLimitConfirmation
            </b>
            <br />
            <b style="color: Red;">6) @ResCommon.msgServerError</b><br />
            <b style="color: Green;">7) @ResPullMaster.MsgPullDoneSuccess</b><br />
            <b style="color: Olive;">8) @ResPullMaster.MsgProjectSpendMandatoryatRoom</b>
        </p>
        <a href="JavaScript:void{}" id="btnModelYesPSLimit" class="yes">
            <img src="~/Content/images/yes.png" alt="Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="#" class="no" onclick="closeModalPSLimit()">
            <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div>
<div class="dialog" id="GlobalModalProcessing" style="display: none;">
    <div class="inner">
        <p class="text" id="GloablMSGWait" style="text-align: left; padding-left: 10px;">
            <b style="color: Red;">
                @*Kindly wait, pull transaction is going on.....*@
                @eTurns.DTO.Resources.ResMessage.PleaseWaitTransGoingOn
            </b>
        </p>
    </div>
</div>
<div class="dialog" id="divCreditProcessing" style="display: none;">
    <div class="inner">
        <p class="text" id="pCreditWait" style="text-align: left; padding-left: 10px;">
            <b style="color: Red;">@ResPullMaster.CreditTransactionProgress</b>
        </p>
        <p class="text" id="pCreditWaitImg" style="text-align: center; padding-left: 10px;">
            <img src="@Url.Content("~/Content/images/ajax.gif")" alt="loding" />
        </p>
    </div>
</div>
<div class="dialog" id="divMSCreditProcessing" style="display: none;">
    <div class="inner">
        <p class="text" id="pCreditWait" style="text-align: left; padding-left: 10px;">
            <b style="color: Red;">@ResPullMaster.MSCreditTransactionProgress</b>
        </p>
        <p class="text" id="pCreditWaitImg" style="text-align: center; padding-left: 10px;">
            <img src="@Url.Content("~/Content/images/ajax.gif")" alt="loding" />
        </p>
    </div>
</div>
<div class="dialog" id="noramal-global-msg-no-Pull-Rights" style="display: none;">
    <div class="inner">
        <p class="text" id="GloablMSG" style="text-align: left; padding-left: 10px;">
            <b>@ResPullMaster.NoPullRightsInPull</b>
        </p>
        <p class="text" style="text-align: center; padding-left: 10px;">
            <a href="#" class="no" onclick="GoToRequisition();">
                <img src="~/Content/images/yes.png" alt="@eTurns.DTO.Resources.ResMessage.InformOk" />@eTurns.DTO.Resources.ResMessage.InformOk
            </a>
        </p>
    </div>
</div>

<script language="javascript" type="text/javascript">
    var oTableItemModel;
    var NoofUDFCount = '@UDFSetUpCount';
    var QuickListPULLQty = 0;
    var sImageUrl = "/Content/images/";
    var anOpen = [];
    var AllowDeletePopup = false;
    var AllowDeletePopupPSInPull = true;
    var IsQLLoaded = false;
    var IsStagingLocationOnly = false;
    //var objColumns = {};
    var objColumnsMI = {};
    var isDeleteSrLotRow = false;
    var PullItemQuantityUrl = '@Url.Action("PullItemQuantity", "Pull")';
    var BoolTrueString = '@Boolean.TrueString';
    var PullLotSrSelectionUrl = '@Url.Content("~/Pull/PullLotSrSelection")';
    var ValidateSerialLotNumberUrl = '@Url.Action("ValidateSerialLotNumber", "Pull")';
    var PullSerialsAndLotsUrl = '@Url.Action("PullSerialsAndLots", "Pull")';
    var PullSerialsAndLotsNewUrl = '@Url.Action("PullSerialsAndLotsNew", "Pull")';
    var vWorkOrderDetailGUID = '@(TempData["WorkOrderGUID"])';
    var isCalledFromWorkOrder = '@isCalledFromWorkOrder';
    var AllowEditItemSellPriceonWorkOrderPull = '@AllowEditItemSellPriceonWorkOrderPull';
    var ValidateSerialNumberForCreditUrl = '@Url.Action("ValidateSerialNumberForCredit", "Pull")';
    var ValidateLotDateCodeForCreditUrl = '@Url.Action("ValidateLotDateCodeForCredit", "Pull")';
    var PullLotSrSelectionForCreditPopupUrl = '@Url.Action("PullLotSrSelectionForCreditPopup", "Pull")';
    var PullLotSrSelectionForCreditEditPopupUrl = '@Url.Action("PullLotSrSelectionForCreditEditPopup", "Pull")';
    var SaveMaterialStagingUrl = '@Url.Action("SaveMaterialStagingFromCredit", "Pull")';
    var UDF1Index = '';
    var UDF2Index = '';
    var UDF3Index = '';
    var UDF4Index = '';
    var UDF5Index = '';
    var ProjectSpendNameSCR = '';
    var ProjectSpendGuidSCR = '';
    var hasOnTheFlyEntryRight = '@HasOnTheFlyEntryRight';
    var AllowPullBeyondAvailableQty = '@Model.AllowPullBeyondAvailableQty';
    var isProjectSpendInsertAllow = '@IsProjectSpendInsertAllow';
    var noProjectspendOntheFlyRight = '@eTurns.DTO.ResPullMaster.NoProjectspendOntheFlyRight';
    var MsgSaveCreditAjaxError = '@eTurns.DTO.ResPullMaster.MsgSaveCreditAjaxError';
    var MsgPreCreditInfoAjaxError = '@eTurns.DTO.ResPullMaster.MsgPreCreditInfoAjaxError';
    var MsgQuantityToCreditValid = '@eTurns.DTO.ResPullMaster.MsgQuantityToCreditValid';
    var MsgSelectAtleastOneRow = '@ResCommon.SelectRow';
     var MsgDuplicateLotNumberExpirationDate = '@ResPullMaster.MsgDuplicateLotNumberExpirationDate';
    var MsgDuplicateExpirationDate = '@ResPullMaster.MsgDuplicateExpirationDate';
    var MsgCreditTransactionDone = '@ResPullMaster.MsgCreditTransactionDone';
    var MsgCreditTransactionForSerialNumber = '@ResPullMaster.MsgCreditTransactionForSerialNumber';
    var EnterLotNumber = '@ResKitMaster.EnterLotNumber';
    var MsgSerialNumberValidation = '@ResReceiveOrderDetails.MsgSerialNumberValidation';
    var MsgEnterExpirationDate = '@ResPullMaster.MsgEnterExpirationDate';
    var MsgPullCreditQuantity = '@ResToolMaster.MsgPullCreditQuantity';
    var MsgStagingHeaderAvailable = '@ResToolMaster.MsgStagingHeaderAvailable';
    var MsgSelectStagingHeader = '@ResToolMaster.MsgSelectStagingHeader';
    var MsgSelectRowToDelete = '@ResPullMaster.MsgSelectRowToDelete';
    var MsgRowShouldExists = '@ResToolMaster.MsgRowShouldExists';
    var MsgErrorInProcess = '@ResCommon.ErrorInProcess';
    var MsgPullMoreQuantityValidation = '@ResToolMaster.MsgPullMoreQuantityValidation';
    var MsgEnteredPullQuantityValidation = '@ResToolMaster.MsgEnteredPullQuantityValidation';
    var MsgPullExpiredItemList = '@ResPullMaster.MsgPullExpiredItemList';
    var MsgCommonConfirmation = '@ResCommon.MsgCommonConfirmation';
    var SomeItemNotPulled = '@ResInventoryCountDetail.SomeItemNotPulled';
    var MsgPullDoneSuccess = '@ResToolMaster.MsgPullDoneSuccess';
    var MsgAllPulldone = '@ResPullMaster.AllPulldon';
    var MsgDuplicateLotNumber = '@ResToolMaster.MsgDuplicateLotNumber';
    var DuplicateSerialFound = '@ResMessage.DuplicateSerialFound';
    var DuplicateNumber = '@ResMessage.DuplicateNumber';
    var MsgEnterPullQuantity = '@ResPullMaster.MsgEnterPullQuantity';
    var MsgAlertValidated = '@ResPullMaster.MsgAlertValidated';
    var DuplicateLotFound = '@ResMessage.DuplicateLotFound';
    var MsgNoLocationToAdd = '@ResPullMaster.MsgNoLocationToAdd';
    var MsgEnterLotNumber = '@ResReceiveOrderDetails.MsgEnterLotNumber';
    var MsgQtyToPullMandatory = '@ResPullMaster.MsgQtyToPullMandatory';
    var MsgInventoryLocationMandatory = '@ResPullMaster.InventoryLocationMandatory';
    var MsgLabourItemRequiredHours = '@ResPullMaster.MsgLabourItemRequiredHours';
    var MsgPullDetails = '@ResPullMaster.PullDetails';
    var MSCreditTitle = '@ResPullMaster.MSCredit';


    var PullItemListColumnsArr = new Array();
    PullItemListColumnsArr.push({
         "mDataProp": null,
        "sClass": "read_only control center NotHide NotMovable",
        "bSortable": false,
        "sDefaultContent": '<img id="imgQty" src="' + sImageUrl + 'drildown_open.jpg' + '">'
        , "fnRender": function (obj, val) {
            if (obj.aData.QuickListGUID == null || obj.aData.QuickListGUID == '') {
                if ($('#NewPullAction').val() == "Pull") {
                    if ('@ViewNewPullbuttons' == 'no') {
                        return "<input type='button' value='@ResPullMaster.Pull' data-val='Pull' onclick='return AddSingleItemToPullList(this);enablePullbutton();' id='btnAdd' class='CreateBtn pullbutton' style='float: none;padding: 2px 6px;margin-left: 5px;' />" + "<span id='spnItemID' style='display:none'>" + obj.aData.ID + "</span>" + "<span id='spnItemGUID' style='display:none'>" + obj.aData.GUID + "</span><span id='spnOn_HandQuantity' style='display:none'>" + obj.aData.OnHandQuantity + "</span>" + "<span id='spnOrderItemType'  style='display:none'>" + obj.aData.ItemType + "</span>";
                    }
                    else {
                        if (obj.aData.SerialNumberTracking == true || obj.aData.LotNumberTracking == true || obj.aData.DateCodeTracking == true) {
                            return "<input type='button' value='@ResPullMaster.Pull' data-val='Pull' onclick='return OpenPullPopup(this);' id='btnAdd' class='CreateBtn pullbutton' style='float: none;padding: 2px 6px;margin-left: 5px;' />" + "<span id='spnItemID' style='display:none'>" + obj.aData.ID + "</span>" + "<span id='spnItemGUID' style='display:none'>" + obj.aData.GUID + "</span><span id='spnOn_HandQuantity' style='display:none'>" + obj.aData.OnHandQuantity + "</span>" + "<span id='spnOrderItemType'  style='display:none'>" + obj.aData.ItemType + "</span>";
                        }
                        else {
                            return "<input type='button' value='@ResPullMaster.Pull' data-val='Pull' onclick='return AddSingleItemToPullList(this);enablePullbutton();' id='btnAdd' class='CreateBtn pullbutton' style='float: none;padding: 2px 6px;margin-left: 5px;' />" + "<span id='spnItemID' style='display:none'>" + obj.aData.ID + "</span>" + "<span id='spnItemGUID' style='display:none'>" + obj.aData.GUID + "</span><span id='spnOn_HandQuantity' style='display:none'>" + obj.aData.OnHandQuantity + "</span>" + "<span id='spnOrderItemType'  style='display:none'>" + obj.aData.ItemType + "</span>";
                        }
                    }
                }
                else if ($('#NewPullAction').val() == "Credit") {
                    return "<input type='button' value='@ResPullMaster.Credit' onclick='return CreditItems(this);' id='btnAdd' class='CreateBtn pullbutton' style='float: none;padding: 2px 6px;margin-left: 5px;' />" + "<span id='spnItemID' style='display:none'>" + obj.aData.ID + "</span>" + "<span id='spnItemGUID' style='display:none'>" + obj.aData.GUID + "</span><span id='spnOn_HandQuantity' style='display:none'>" + obj.aData.OnHandQuantity + "</span>" + "<span id='spnOrderItemType'  style='display:none'>" + obj.aData.ItemType + "</span>" + "<span id='spnIsIgnoreCreditRule'  style='display:none'>@IsIgnoreCreditRule</span>" + "<span id='spnItemNumber' style='display:none'>" + obj.aData.ItemNumber + "</span>";
                }
                else if ($('#NewPullAction').val() == "CreditMS")
                    return "<input type='button' value='@ResPullMaster.CreditMS'  onclick='return MsCreditItems(this);' id='btnAdd' class='CreateBtn pullbutton' style='float: none;padding: 2px 6px;margin-left: 5px;' />" + "<span id='spnItemID' style='display:none'>" + obj.aData.ID + "</span>" + "<span id='spnItemGUID' style='display:none'>" + obj.aData.GUID + "</span><span id='spnOn_HandQuantity' style='display:none'>" + obj.aData.OnHandQuantity + "</span>" + "<span id='spnOrderItemType'  style='display:none'>" + obj.aData.ItemType + "</span>" + "<span id='spnIsIgnoreCreditRule'  style='display:none'>@IsIgnoreCreditRule</span>" + "<span id='spnItemNumber' style='display:none'>" + obj.aData.ItemNumber + "</span>";
                else
                    return "";
            }
            else {
                if ($('#NewPullAction').val() == "Pull") {
                    return "<input type='button' value='@ResPullMaster.Pull' onclick='return LoadQuickListData(this);enablePullbutton();' id='btnLoad' class='CreateBtn pullbutton' style='float: none;padding: 2px 6px;margin-left: 5px;' />" + "<span id='spnQuickListGUID'  style='display:none'>" + obj.aData.QuickListGUID + "</span>" + "<span id='spnOrderItemType'  style='display:none'>" + obj.aData.ItemType + "</span>";
                }
                else if ($('#NewPullAction').val() == "Credit") {
                    return "<input type='button' value='@ResPullMaster.Credit' onclick='return CreditItems(this);' id='btnAdd' class='CreateBtn pullbutton' style='float: none;padding: 2px 6px;margin-left: 5px;' />" + "<span id='spnQuickListGUID'  style='display:none'>" + obj.aData.QuickListGUID + "</span>" + "<span id='spnOrderItemType'  style='display:none'>" + obj.aData.ItemType + "</span>" + "<span id='spnIsIgnoreCreditRule'  style='display:none'>@IsIgnoreCreditRule</span>" + "<span id='spnItemNumber' style='display:none'>" + obj.aData.ItemNumber + "</span>";
                }
                else if ($('#NewPullAction').val() == "CreditMS") {
                    return "<input type='button' value='@ResPullMaster.CreditMS' onclick='return MsCreditItems(this);' id='btnLoad' class='CreateBtn pullbutton' style='float: none;padding: 2px 6px;margin-left: 5px;' />" + "<span id='spnQuickListGUID'  style='display:none'>" + obj.aData.QuickListGUID + "</span>" + "<span id='spnOrderItemType'  style='display:none'>" + obj.aData.ItemType + "</span>" + "<span id='spnIsIgnoreCreditRule'  style='display:none'>@IsIgnoreCreditRule</span>" + "<span id='spnItemNumber' style='display:none'>" + obj.aData.ItemNumber + "</span>";
                }
                else
                    return "";
            }
        }
    });
    PullItemListColumnsArr.push({ mDataProp: "ID", sClass: "read_only center NotHide RowNo", "bSortable": false, sDefaultContent: '' });
    //PullItemListColumnsArr.push({ "mDataProp": "ID", "sClass": "read_only" });
    PullItemListColumnsArr.push({
        "mDataProp": null,
        "bSortable": false,
        "sClass": "read_only control center NotHide",
        "sDefaultContent": '<img id="imgQty" src="' + sImageUrl + 'drildown_open.jpg' + '">',
        "fnRender": function (obj, val) {
            var DefaultPullQTy = obj.aData.DefaultPullQuantity;
            if ($('#NewPullAction').val() == "Credit" || $('#NewPullAction').val() == "CreditMS") {
                if (obj.aData.SerialNumberTracking == true) {
                    if (obj.aData.QLCreditQuantity != null) {
                        var QuantityToCredit = 0;
                        if (QuickListPULLQty > 0)
                            QuantityToCredit = obj.aData.QLCreditQuantity * QuickListPULLQty;
                        else
                            QuantityToCredit = obj.aData.QLCreditQuantity;
                        return "<input maxlength='10' type='text' value='" + QuantityToCredit + "' class='text-boxinner text-boxQuantityFormatSR numericalign' id='txtQty' onkeypress = 'return onlyNumeric(event);' style='width:93%;padding-right:2px;' />";
                    }
                    else {
                        return "<input maxlength='10' type='text' value='0' class='text-boxinner text-boxQuantityFormatSR numericalign' id='txtQty' onkeypress = 'return onlyNumeric(event);' style='width:93%;padding-right:2px;' />";
                    }
                }
                else {
                    if (obj.aData.QLCreditQuantity != null) {
                        var QuantityToCredit = 0;
                        if (QuickListPULLQty > 0)
                            QuantityToCredit = obj.aData.QLCreditQuantity * QuickListPULLQty;
                        else
                            QuantityToCredit = obj.aData.QLCreditQuantity;
                        return "<input maxlength='10' type='text' value='" + QuantityToCredit + "' class='text-boxinner numericinput numericalign' id='txtQty' onkeypress = 'return onlyNumeric(event);' style='width:93%;padding-right:2px;' />";
                    }
                    else {
                        return "<input maxlength='10' type='text' value='0' class='text-boxinner numericinput numericalign' id='txtQty' onkeypress = 'return onlyNumeric(event);' style='width:93%;padding-right:2px;' />";
                    }
                }

            }
            else {
                if (obj.aData.QuickListGUID == null || obj.aData.QuickListGUID == '') {
                    if (obj.aData.SerialNumberTracking == true) {
                        if (obj.aData.DefaultPullQuantity != null) {
                            if (isNaN(DefaultPullQTy)) {
                                DefaultPullQTy = DefaultPullQTy.replace("<span>", "");
                                DefaultPullQTy = DefaultPullQTy.replace("</span>", "");
                            }
                            return "<input maxlength='10' type='text' value='" + DefaultPullQTy + "' class='text-boxinner text-boxQuantityFormatSR numericalign' id='txtQty' onkeypress = 'return onlyNumeric(event);' style='width:93%;padding-right:2px;' />" + "<span id='spnDefaultPullQuantity'  style='display:none'>" + parseFloat(DefaultPullQTy).toFixed(0) + "</span>";
                        }
                        else {
                            return "<input maxlength='10' type='text' value='' class='text-boxinner text-boxQuantityFormatSR numericalign' id='txtQty' onkeypress = 'return onlyNumeric(event);' style='width:93%;padding-right:2px;' />";
                        }
                    }
                    else {
                        if (obj.aData.DefaultPullQuantity != null) {
                            if (isNaN(DefaultPullQTy)) {
                                DefaultPullQTy = DefaultPullQTy.replace("<span>", "");
                                DefaultPullQTy = DefaultPullQTy.replace("</span>", "");
                            }
                            return "<input maxlength='10' type='text' value='" + DefaultPullQTy + "' class='text-boxinner numericinput numericalign' id='txtQty' onkeypress = 'return onlyNumeric(event);' style='width:93%;padding-right:2px;' />" + "<span id='spnDefaultPullQuantity'  style='display:none'>" + parseFloat(DefaultPullQTy) + "</span>";
                        }
                        else {
                            return "<input maxlength='10' type='text' value='' class='text-boxinner numericinput numericalign' id='txtQty' onkeypress = 'return onlyNumeric(event);' style='width:93%;padding-right:2px;' />";
                        }
                    }
                }
                else
                    return "<input maxlength='10' type='text' value='' class='text-boxinner numericalign' id='txtQty' onkeypress = 'return onlyNumeric(event);' style='width:93%;padding-right:2px;' />";
            }
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "ImagePath",
        "sClass": "read_only",
        "sDefaultContent": '',
        "bSortable": true,
        "bSearchable": false,
        "bVisible": false,
        "fnRender": function (obj, val) {
            if ((obj.aData.ImagePath != '' && obj.aData.ImagePath != null) || (obj.aData.ItemImageExternalURL != '' && obj.aData.ItemImageExternalURL != null)) {

                if (obj.aData.ImageType != '' && obj.aData.ImageType != null && obj.aData.ImageType == 'ImagePath'  &&   obj.aData.ImagePath != '' && obj.aData.ImagePath != null) {
                    //var path = '@eTurnsWeb.Helper.SessionHelper.CompanyID.ToString()';
                    var path = '@LogoPathItemImage';
                    //return '<img style="cursor:pointer;"  alt="' + (obj.aData.ItemNumber) + '" id="ItemImageBox" width="120px" height="120px" src="' + "/Uploads/InventoryPhoto/" + path + "/" + obj.aData.ImagePath + '">';
                    return '<img style="cursor:pointer;"  alt="' + (obj.aData.ItemNumber) + '" id="ItemImageBox" width="120px" height="120px" src="' + path + "/" + obj.aData.ID + "/" + obj.aData.ImagePath + '">';
                }
                else if (obj.aData.ImageType != '' && obj.aData.ImageType != null && obj.aData.ImageType == "ExternalImage"  && obj.aData.ItemImageExternalURL != '' && obj.aData.ItemImageExternalURL != null) {
                    return '<img style="cursor:pointer;"  alt="' + (obj.aData.ItemNumber) + '" id="ItemImageBox" width="120px" height="120px" src="' + obj.aData.ItemImageExternalURL + '">';
                }
                else {
                    return "<img src='../Content/images/no-image.jpg' />";
                }
            }
            else {
                return "<img src='../Content/images/no-image.jpg' />";
            }
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "ItemNumber",
        "sClass": "read_only NotHide",
        "sDefaultContent": '',
        "bSortable": true,
        "bSearchable": false
    });
    PullItemListColumnsArr.push({
        "mDataProp": 'DefaultLocationName',
        "sClass": "read_only NotHide",
        "bSortable": true,
        "bSearchable": false,
        "sDefaultContent": '',
        "fnRender": function (obj, val) {

            if (obj.aData.QuickListGUID == null || obj.aData.QuickListGUID == '') {
                if ($('#NewPullAction').val() == "Credit") {

                    var vDefaultLocationName = '';
                    if (obj.aData.ItemType != 4) {
                        vDefaultLocationName = obj.aData.DefaultLocationName;
                    }

                    vDefaultLocationName = ((obj.aData.BinNumber != undefined && obj.aData.BinNumber != null && obj.aData.BinNumber != "") ? obj.aData.BinNumber : obj.aData.DefaultLocationName);

                    var strReturn = '<span style="display:none">"' + vDefaultLocationName + '"</span> <span style="position:relative">';
                    if ('@HasOnTheFlyEntryRight' == "False") {
                        strReturn = strReturn + '<input type="hidden" value="" id="hdnIsLoadMoreLocations" /><input type="text" id="txtBinNumber" class="text-boxinner AutoCreditBins" style = "width:120px;" value="' + vDefaultLocationName + '" />';
                    }
                    else {
                        strReturn = strReturn + '<input type="hidden" value="false" id="hdnIsLoadMoreLocations" /><input type="text" id="txtBinNumber" class="text-boxinner AutoCreditBins" style = "width:120px;" value="' + vDefaultLocationName + '" />';
                    }

                    var binID = obj.aData.DefaultLocation;
                    binID = ((obj.aData.BinID != undefined && obj.aData.BinID != null && obj.aData.BinID != "" && obj.aData.BinID > 0) ? obj.aData.BinID : obj.aData.DefaultLocation);

                    if (isNaN(parseInt(binID)) || parseInt(binID) <= 0)
                        binID = '';

                    strReturn = strReturn + ' <input type="hidden" id="BinID" value="' + binID + '" />';
                    var DefaultPullQTy1 = obj.aData.ItemDefaultPullQuantity;
                    if (DefaultPullQTy1 != null) {
                        if (isNaN(DefaultPullQTy1)) {
                            DefaultPullQTy1 = DefaultPullQTy1.replace("<span>", "");
                            DefaultPullQTy1 = DefaultPullQTy1.replace("</span>", "");
                        }
                    }
                    strReturn = strReturn + ' <input type="hidden" id="hdnDPQ" value="' + DefaultPullQTy1 + '" />';
                    strReturn = strReturn + ' <a id="lnkShowAllOptionsCR" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;font-size:19px;background-color:#fff;" class="ShowAllOptionsBinCR" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                    return strReturn
                }
                else if ($('#NewPullAction').val() == "CreditMS") {

                    var vDefaultLocationName = '';
                    if (obj.aData.ItemType != 4) {
                        vDefaultLocationName = obj.aData.DefaultLocationName;
                    }

                    vDefaultLocationName = ((obj.aData.BinNumber != undefined && obj.aData.BinNumber != null && obj.aData.BinNumber != "") ? obj.aData.BinNumber : obj.aData.DefaultLocationName);

                    var strReturn = '<span style="display:none">"' + vDefaultLocationName + '"</span> <span style="position:relative">';
                    if ('@HasOnTheFlyEntryRight' == "False") {
                        strReturn = strReturn + '<input type="hidden" value="" id="hdnIsLoadMoreLocations" /><input type="text" id="txtBinNumber" class="text-boxinner AutoMSCreditBins" style = "width:93%;" value="' + vDefaultLocationName + '" />';
                    }
                    else {
                        strReturn = strReturn + '<input type="hidden" value="false" id="hdnIsLoadMoreLocations" /><input type="text" id="txtBinNumber" class="text-boxinner AutoMSCreditBins" style = "width:93%;" value="' + vDefaultLocationName + '" />';
                    }

                    var binID = obj.aData.DefaultLocation;

                    binID = ((obj.aData.BinID != undefined && obj.aData.BinID != null && obj.aData.BinID != "" && obj.aData.BinID > 0) ? obj.aData.BinID : obj.aData.DefaultLocation);

                    if (isNaN(parseInt(binID)) || parseInt(binID) <= 0)
                        binID = '';

                    strReturn = strReturn + ' <input type="hidden" id="BinID" value="' + binID + '" />';
                    var DefaultPullQTy1 = obj.aData.ItemDefaultPullQuantity;
                    if (DefaultPullQTy1 != null) {
                        if (isNaN(DefaultPullQTy1)) {
                            DefaultPullQTy1 = DefaultPullQTy1.replace("<span>", "");
                            DefaultPullQTy1 = DefaultPullQTy1.replace("</span>", "");
                        }
                    }
                    strReturn = strReturn + ' <input type="hidden" id="hdnDPQ" value="' + DefaultPullQTy1 + '" />';
                    strReturn = strReturn + ' <a id="lnkShowAllOptionsCR" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsBinMCR" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                    return strReturn
                }
                else {

                    var vDefaultLocationName = '';
                    if (obj.aData.ItemType != 4) {
                        vDefaultLocationName = obj.aData.DefaultLocationName;
                    }
                    vDefaultLocationName = ((obj.aData.BinNumber != undefined && obj.aData.BinNumber != null && obj.aData.BinNumber != "") ? obj.aData.BinNumber : obj.aData.DefaultLocationName);

                    if (vDefaultLocationName == null)
                    {
                        vDefaultLocationName ='';
                    }
                    var strReturn = "";
                    if (AllowPullBeyondAvailableQty == "True"
                        && hasOnTheFlyEntryRight == "True"
                        && obj.aData.SerialNumberTracking == false
                        && obj.aData.LotNumberTracking == false
                        && obj.aData.DateCodeTracking == false) {
                        strReturn = '<span style="display:none">"' + vDefaultLocationName + '"</span><span style="position:relative"><input type="text" id="txtBinNumber" class="text-boxinner AutoPullBins" style = "width:120px;" value="' + vDefaultLocationName + '" />';
                    }
                    else {
                        strReturn = '<span style="display:none">"' + vDefaultLocationName + '"</span> <span style="position:relative"><input type="text" id="txtBinNumber" class="text-boxinner AutoPullBins  bin-input-readonly" style = "width:120px;" value="' + vDefaultLocationName + '" />';
                    }
                    var binID = obj.aData.DefaultLocation;

                    binID = ((obj.aData.BinID != undefined && obj.aData.BinID != null && obj.aData.BinID != "" && obj.aData.BinID > 0) ? obj.aData.BinID : obj.aData.DefaultLocation);

                    if (isNaN(parseInt(binID)) || parseInt(binID) <= 0)
                        binID = '';

                    strReturn = strReturn + ' <input type="hidden" id="BinID" value="' + binID + '" />';
                    var DefaultPullQTy1 = obj.aData.ItemDefaultPullQuantity;
                    if (DefaultPullQTy1 != null) {
                        if (isNaN(DefaultPullQTy1)) {
                            DefaultPullQTy1 = DefaultPullQTy1.replace("<span>", "");
                            DefaultPullQTy1 = DefaultPullQTy1.replace("</span>", "");
                        }
                    }
                    strReturn = strReturn + ' <input type="hidden" id="hdnDPQ" value="' + DefaultPullQTy1 + '" />';
                    strReturn = strReturn + ' <a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;font-size:19px;background-color:#fff;" class="ShowAllOptionsBin" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                    return strReturn
                }
            }
            else {
                return "";
            }
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": null,
        "sClass": "read_only NotHide",
        "bSortable": false,
        "bSearchable": false,
        "sDefaultContent": '',
        "fnRender": function (obj, val) {
            if (obj.aData.QuickListGUID == null || obj.aData.QuickListGUID == '') {
                var strReturn = '';
                if ($('#NewPullAction').val() == "Credit" || $('#NewPullAction').val() == "CreditMS") {

                    //strReturn = strReturn + '<input type="text" id="txtPullOrderNumber" class="text-boxinner" style="width:120px;" />';
                }
                else {
                    strReturn = strReturn + '<span style="position:relative"><input type="text" id="txtPullOrderNumber" class="text-boxinner AutoPullOrderNumber" style="width:120px;" />';
                    strReturn = strReturn + ' <a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsOrderNumber" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                }
                return strReturn
            }
            else {
                return "";
            }
        }
    });


        PullItemListColumnsArr.push({
        "mDataProp": null,
        "sClass": ProjectSpendClass,
        "bSortable": false,
        "bSearchable": false,
        "bVisible": true,
        "sDefaultContent": '',
        "fnRender": function (obj, val) {

                if (obj.aData.QuickListGUID == null || obj.aData.QuickListGUID == '') {
                    if (obj.aData.IsDefaultProjectSpend == false || (!ProjectSpendVisible)) {
                        if (ProjectSpendNameSCR == '') {
                            var strReturn = '<span style="position:relative"><input type="text" id="txtProjectSpent" class="text-boxinner AutoPullProjectSpents" style = "width:120px;" value="" />';
                            strReturn = strReturn + ' <input type="hidden" id="ProjectID" value="" />';
                            strReturn = strReturn + ' <a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptions" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                        }
                        else {
                            var strReturn = '<span style="position:relative"><input type="text" id="txtProjectSpent" class="text-boxinner" disabled="disabled" readonly="readonly" style = "width:120px;" value="' + ProjectSpendNameSCR + '" />';
                            strReturn = strReturn + ' <input type="hidden" id="ProjectID" value="' + ProjectSpendGuidSCR + '" />';

                        }
                    }
                    else {
                        var strReturn = '<span style="position:relative"><input type="text" disabled="disabled" id="txtProjectSpent" class="text-boxinner AutoPullProjectSpents" style = "width:120px;" value="' + obj.aData.DefaultProjectSpend + '" />';
                        strReturn = strReturn + ' <input type="hidden" id="ProjectID" value="' + obj.aData.DefaultProjectSpendGuid + '" />';
                        strReturn = strReturn + ' <a id="lnkShowAllOptions" href="javascript:void(0);" disabled="disabled" style="position:absolute; right:5px; top:0px;" class="ShowAllOptions" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                    }
                    return strReturn
                    //if (obj.aData.ItemType != 4) {
                    //    var strReturn = '<span style="position:relative"><input type="text" id="txtProjectSpent" class="text-boxinner AutoPullProjectSpents" style = "width:120px;" value="" />';
                    //    strReturn = strReturn + ' <input type="hidden" id="ProjectID" value="" />';
                    //    strReturn = strReturn + ' <a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;font-size:19px;background-color:#fff;" class="ShowAllOptions" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                    //    return strReturn
                    //}
                }
                return "";
            }
        });


    PullItemListColumnsArr.push({ "mDataProp": "ManufacturerNumber", "sClass": "read_only" });
    PullItemListColumnsArr.push({ "mDataProp": "ManufacturerName", "sClass": "read_only" });
    PullItemListColumnsArr.push({ "mDataProp": "SupplierPartNo", "sClass": "read_only" });
    PullItemListColumnsArr.push({ "mDataProp": "SupplierName", "sClass": "read_only" });
    PullItemListColumnsArr.push({ "mDataProp": "UPC", "sClass": "read_only" });
    PullItemListColumnsArr.push({ "mDataProp": "UNSPSC", "sClass": "read_only" });
    PullItemListColumnsArr.push({ "mDataProp": "Description", "sClass": "read_only" });
    PullItemListColumnsArr.push({
        "mDataProp": "LongDescription", "sClass": "read_only", "sDefaultContent": '',
        "fnRender": function (obj, val) {
            return "<div class='comment more'>" + val + "</div>";
        }
    });
    PullItemListColumnsArr.push({ "mDataProp": "CostUOMName", "sClass": "read_only" });
    PullItemListColumnsArr.push({
        "mDataProp": "DefaultReorderQuantity", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.DefaultReorderQuantity != null && obj.aData.DefaultReorderQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.DefaultReorderQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "DefaultPullQuantity", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.DefaultPullQuantity != null && obj.aData.DefaultPullQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.DefaultPullQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "Cost", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.Cost != null && obj.aData.Cost != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.Cost, 1) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 1) + "</span>";
        }
    });
    PullItemListColumnsArr.push({ "mDataProp": "Markup", "sClass": "read_only numericalign" });
    PullItemListColumnsArr.push({
        "mDataProp": "SellPrice", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if ("@isCalledFromWorkOrder".toLowerCase() == "false") {
                if (obj.aData.SellPrice != null && obj.aData.SellPrice != NaN)
                    return "<span>" + FormatedCostQtyValues(obj.aData.SellPrice, 1) + "</span>";
                else
                    return "<span>" + FormatedCostQtyValues(0, 1) + "</span>";
            }
            else if ("@isCalledFromWorkOrder".toLowerCase() == "true"
                && "@AllowEditItemSellPriceonWorkOrderPull".toLowerCase() == "true"
                && (obj.aData.QuickListGUID == null || obj.aData.QuickListGUID == '')
                && $('#NewPullAction').val() == "Pull") {
                if (obj.aData.SellPrice != null && obj.aData.SellPrice != NaN)
                    return "<input type='text' class='numericinput text-boxinner' maxlength='10' style='width:60px;' id='WOPullSellPrice' value='" + FormatedCostQtyValues(obj.aData.SellPrice, 1) + "' />";
                else
                    return "<input type='text' class='numericinput text-boxinner' maxlength='10' style='width:60px;' id='WOPullSellPrice' value='" + FormatedCostQtyValues(0, 1) + "' />";
            }
            else {
                if (obj.aData.SellPrice != null && obj.aData.SellPrice != NaN)
                    return "<span>" + FormatedCostQtyValues(obj.aData.SellPrice, 1) + "</span>";
                else
                    return "<span>" + FormatedCostQtyValues(0, 1) + "</span>";
            }
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "ExtendedCost", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.ExtendedCost != null && obj.aData.ExtendedCost != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.ExtendedCost, 1) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 1) + "</span>";
        }
    });
    PullItemListColumnsArr.push({ "mDataProp": "LeadTimeInDays", "sClass": "read_only" });
    PullItemListColumnsArr.push({
        "mDataProp": "Trend", "sClass": "read_only"
        , "fnRender": function (obj, val) {
            return GetBoolInFormat(obj, val);
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "Taxable", "sClass": "read_only"
                            , "fnRender": function (obj, val) {
                                return GetBoolInFormat(obj, val);
                            }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "Consignment", "sClass": "read_only"
        , "fnRender": function (obj, val) {
            return GetBoolInFormat(obj, val);
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "StagedQuantity", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.StagedQuantity != null && obj.aData.StagedQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.StagedQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "InTransitquantity", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.InTransitquantity != null && obj.aData.InTransitquantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.InTransitquantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "OnOrderQuantity", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.OnOrderQuantity != null && obj.aData.OnOrderQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.OnOrderQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "OnTransferQuantity", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.OnTransferQuantity != null && obj.aData.OnTransferQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.OnTransferQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "SuggestedOrderQuantity", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.SuggestedOrderQuantity != null && obj.aData.SuggestedOrderQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.SuggestedOrderQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "RequisitionedQuantity", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.RequisitionedQuantity != null && obj.aData.RequisitionedQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.RequisitionedQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "AverageUsage", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.AverageUsage != null && obj.aData.AverageUsage != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.AverageUsage, 4) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 4) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "Turns", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.Turns != null && obj.aData.Turns != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.Turns, 4) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 4) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "OnHandQuantity", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.OnHandQuantity != null && obj.aData.OnHandQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.OnHandQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "CriticalQuantity", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.CriticalQuantity != null && obj.aData.CriticalQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.CriticalQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "MinimumQuantity", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.MinimumQuantity != null && obj.aData.MinimumQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.MinimumQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "MaximumQuantity", "sClass": "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.MaximumQuantity != null && obj.aData.MaximumQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.MaximumQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    PullItemListColumnsArr.push({ "mDataProp": "WeightPerPiece", "sClass": "read_only numericalign" });
    PullItemListColumnsArr.push({ "mDataProp": "ItemUniqueNumber", "sClass": "read_only" });
    PullItemListColumnsArr.push({
        "mDataProp": "IsTransfer", "sClass": "read_only"
                            , "fnRender": function (obj, val) {
                                return GetBoolInFormat(obj, val);
                            }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "IsPurchase", "sClass": "read_only"
   , "fnRender": function (obj, val) {
       return GetBoolInFormat(obj, val);
   }
    });
    PullItemListColumnsArr.push({ "mDataProp": "InventoryClassificationName", "sClass": "read_only" });
    PullItemListColumnsArr.push({
        "mDataProp": "SerialNumberTracking", "sClass": "read_only"
    , "fnRender": function (obj, val) {
        return GetBoolInFormat(obj, val);
    }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "LotNumberTracking", "sClass": "read_only"
                            , "fnRender": function (obj, val) {
                                return GetBoolInFormat(obj, val);
                            }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "DateCodeTracking", "sClass": "read_only"
    , "fnRender": function (obj, val) {
        return GetBoolInFormat(obj, val);
    }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "ItemType", "sClass": "read_only"
                                    , "fnRender": function (obj, val) {
                                        if (val == 1)
                                            return "Item";
                                        else if (val == 2)
                                            return "Quick List";
                                        else if (val == 3)
                                            return "Kit";
                                        else if (val == 4)
                                            return "Labor";
                                        else
                                            return "";
                                    }
    });
    PullItemListColumnsArr.push({ "mDataProp": "IsLotSerialExpiryCost", "sClass": "read_only" });
    PullItemListColumnsArr.push({ "mDataProp": "RoomName", "sClass": "read_only" });
    PullItemListColumnsArr.push({
        "mDataProp": "Created", "sClass": "read_only",
        "fnRender": function (obj, val) {
            //return GetDateInFullFormat(val);
            return obj.aData.CreatedDate;
        }
    });
    PullItemListColumnsArr.push({
        "mDataProp": "Updated", "sClass": "read_only",
        "fnRender": function (obj, val) {
            //return GetDateInFullFormat(val);
            return obj.aData.UpdatedDate;
        }
    });
    PullItemListColumnsArr.push({ "mDataProp": "UpdatedByName", "sClass": "read_only" });
    PullItemListColumnsArr.push({ "mDataProp": "CreatedByName", "sClass": "read_only" });
    PullItemListColumnsArr.push({ "mDataProp": "CategoryName", "sClass": "read_only" });
    PullItemListColumnsArr.push({ "mDataProp": "Unit", "sClass": "read_only" });
    PullItemListColumnsArr.push({ "mDataProp": "GLAccount", "sClass": "read_only" });
    PullItemListColumnsArr.push({ "mDataProp": "QuanityPulled", "sClass": "read_only" });
    if ('@IsIgnoreCreditRule' == "true" || '@IsIgnoreCreditRule' == "True" || '@IsIgnoreCreditRule' == true) {
        PullItemListColumnsArr.push({
            "mDataProp": "StagingHeaderName",
            "sClass": "read_only",
            "bSortable": false,
            "bSearchable": false,
            "sDefaultContent": '',
            "fnRender": function (obj, val) {
                if ($('#NewPullAction').val() == "CreditMS") {
                    var vStagingHeaderName = '';
                    var strReturn = '<span style="display:none">"' + vStagingHeaderName + '"</span><span style="position:relative">';
                    if ('@HasOnTheFlyEntryRight' == "False") {
                        strReturn = strReturn + '<input type="hidden" value="" id="hdnIsLoadMoreStaging" /><input type="text" id="txtMSStagingHeader" name="txtMSStagingHeader" class="text-boxinner AutoMSCreditStagingHeader" style = "width:93%;" value="' + vStagingHeaderName + '" />';
                    }
                    else {
                        strReturn = strReturn + '<input type="hidden" id="hdnIsLoadMoreStaging" /><input type="text" id="txtMSStagingHeader" name="txtMSStagingHeader" class="text-boxinner AutoMSCreditStagingHeader" style = "width:93%;" value="' + vStagingHeaderName + '" />';
                    }
                    strReturn = strReturn + ' <a id="lnkShowAllOptionsCR" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsStagingHeader" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                    return strReturn
                }
                else {
                    return "";
                }
            }
        });
    }
    PullItemListColumnsArr.push({
        "mDataProp": null,
        "sClass": "read_only NotHide",
        "bSortable": false,
        "bSearchable": false,
        "sDefaultContent": '',
        "fnRender": function (obj, val) {
            if (obj.aData.QuickListGUID == null || obj.aData.QuickListGUID == '') {
                var strReturn = '';
                //if ($('#NewPullAction').val() == "Pull") {
                    strReturn = strReturn + ' <input type="hidden" id="hdnSupplierAccountNumber"/>';
                    strReturn = strReturn + '<span style="position:relative"><input type="text" id="txtSupplierAccountNumber" class="text-boxinner AutoSupplierAccountNumber" style="width:120px;" />';
                    strReturn = strReturn + ' <a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsSupplierAccountNumber" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                //}
                return strReturn
            }
            else {
                return "";
            }
        }
    });
    PullItemListColumnsArr.push(@(Html.RenderColumnsArrayEditableObject("PullMaster", PrependComma: false, isUDFOrderRequire: true)));
    PullItemListColumnsArr.push(@(Html.RenderColumnsArray("ItemMaster", false, "Item")));

    $("#ColumnOrderSetupIM").live('click', function () {
        $("#divReorderPopup").dialog('open');
        return false;
    });

    var ProjectSpendClass = "read_only";
    var ProjectSpendVisible = false;
    $(document).ready(function () {
      var  MoreLocation = $("#hdnMoreLocations").val();
        if ('@(ProjectSpendVisible)' == "True") {
            ProjectSpendClass = "read_only NotHide";
        }
        if ('@string.IsNullOrWhiteSpace(ProjectSpendName)') {
            ProjectSpendNameSCR = '@ProjectSpendName';
            ProjectSpendGuidSCR = '@ProjectSpendGuid';
        }
        if ('@(ProjectSpendVisible)' == "True") {
            ProjectSpendVisible = true;
        }
        if ('@firsttimepop' == 'yes') {
            $("#slctItemstoLoad").val("1");
        }
        else {
            $("#slctItemstoLoad").val("2");
        }

        $("#THStagingHeader").hide();
        $("#TDStagingHeader").hide();

        $(document).off("change", "#slctItemstoLoad");
        $(document).on("change", "#slctItemstoLoad", function () {
            $.ajax({
                'url': '/Pull/SetFilterSession',
                data: { FilterValue: $(this).val(), mntsGUID: '@ViewBag.mntsGUID' },
                success: function (response) {
                    if (response.flag == "true") {
                        NSForItemModel_ExecuteOnDocReady();
                    }
                },
                error: function (response) {
                    showNotificationDialog();
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    $("#spanGlobalMessage").html(response.flag);
                }
            });
            if ($(this).val() == 1) {

            }
            oTableItemModel.fnDraw();
        });
        if ($("#slctItemstoLoad").length > 0) {
            $("div.paginationBlock").css("right", "328px");
            $("#slctItemstoLoad").parent("div.actionBlock").css("right", "210px");
        }

        $("#btnPullAllNewFlow").click(function () {

            if ($('#ItemModeDataTable tbody tr.row_selected').length <= 0) {
                $('#dlgNoSelectErrorMsg').modal();
            }
            else {
                var isSerialLot = false;
                $('#ItemModeDataTable').find("tbody").find("tr.row_selected").each(function (index, tr) {
                    var aPos = $('#ItemModeDataTable').dataTable().fnGetPosition($(tr)[0]);
                    var aData = $('#ItemModeDataTable').dataTable().fnGetData(aPos);
                    if (aData.SerialNumberTracking == "Yes" || aData.LotNumberTracking == "Yes" || aData.DateCodeTracking == "Yes") {
                        isSerialLot = true;
                    }
                });

                if (isSerialLot == true)
                    OpenPullPopup($(this));
                else {
                    $('#GlobalModalProcessing').modal({
                        escClose: false,
                        close: false
                    });
                    setTimeout('AddSingleItemToPullList($("#btnPullAllNewFlow"))', 1000);
                }
            }
        });

        $('#btnPullAll').die('click');
        $('#btnPullAllNewFlow').die('click');
        $('#btnPullAllQL').die('click');

        if (window.location.href.indexOf("Pull/PullMasterList") > 0) {
            //objColumns = GetGridHeaderColumnsObject('ItemModeDataTable', 'New Pull Columns', 'NewPullItemMaster', 'callbacknew()');
            objColumnsMI = GetGridHeaderColumnsObject('ItemModeDataTable', 'New Pull Columns', 'NewConsumePullItemMaster', 'callbacknew()');
        }
        else {
            //objColumns = GetGridHeaderColumnsObject('ItemModeDataTable', 'New Pull Columns', 'NewPullItemMaster', 'OpenItemPopup()');
            objColumnsMI = GetGridHeaderColumnsObject('ItemModeDataTable', '@ResPullMaster.NewPullColumnsHeader', 'NewConsumePullItemMaster', 'OpenItemPopup()');

        }

        fillItemMaster(false);
        $('#NewPullAction').die('change');
        $('#NewPullAction').live('change', function () {

            RefreshPullNarrowSearch();
            NSForItemModel_ExecuteOnDocReady();
            oTableItemModel.fnDraw();
            if ($(this).val() == "Pull") {
                $("#liStageLocationHeaderIM").show();
                $("#liStageLocationIM").show();
                $("#THStagingHeader").hide();
                $("#TDStagingHeader").hide();
                $("#btnPullAll").show();
                $("#btnCreditAll").hide();
                $("#btnMSCreditAll").hide();
                $("#btnPullAllNewFlow").show();
                $('#CtabNew').find('#actionSelectAll3').show();
                if ($("#ItemTypeIM") != undefined && $("#ItemTypeIM").length > 0) {
                    $("[name=multiselect_ItemTypeIM]").each(function () {
                        $(this).parent().parent().show();
                    });
                }
                document.getElementById('colQtyToPull').innerHTML = '@ResRequisitionDetails.QtytoPull';
            }
            else if ($(this).val() == "Credit") {
                $("#liStageLocationHeaderIM").hide();
                $("#liStageLocationIM").hide();
                $("#THStagingHeader").hide();
                $("#TDStagingHeader").hide();
                $("#btnPullAll").hide();
                $("#btnPullAllNewFlow").hide();
                $("#btnCreditAll").show();
                $("#btnMSCreditAll").hide();
                $('#CtabNew').find('#actionSelectAll3').hide();
                if ($("#ItemTypeIM") != undefined && $("#ItemTypeIM").length > 0) {
                    $("[name=multiselect_ItemTypeIM]").each(function () {
                        if ($(this)[0].value > 2) {
                            $(this).parent().parent().hide();
                        }
                    });
                }
                document.getElementById('colQtyToPull').innerHTML = '@ResPullMaster.QtyToCredit';
            }
            else {
                $("#liStageLocationHeaderIM").show();
                $("#liStageLocationIM").show();
                if ('@IsIgnoreCreditRule' == "true" || '@IsIgnoreCreditRule' == "True" || '@IsIgnoreCreditRule' == true) {
                    $("#THStagingHeader").show();
                    $("#TDStagingHeader").show();
                }
                $("#btnPullAll").hide();
                $("#btnPullAllNewFlow").hide();
                $("#btnCreditAll").hide();
                $("#btnMSCreditAll").show();
                $('#CtabNew').find('#actionSelectAll3').hide();
                if ($("#ItemTypeIM") != undefined && $("#ItemTypeIM").length > 0) {
                    $("[name=multiselect_ItemTypeIM]").each(function () {
                        if ($(this)[0].value > 2) {
                            $(this).parent().parent().hide();
                        }
                    });
                }
                document.getElementById('colQtyToPull').innerHTML = '@ResPullMaster.QtytoMSCredit';
            }
        });

        var lastCheckedNewPull;
        $("#ItemModeDataTable").on("tap click", "tbody tr", function (e) {
            if (e.target.type == "checkbox" || e.target.type == "radio" || e.target.type == "text") {
                e.stopPropagation();
            }
            else if (e.currentTarget.getElementsByTagName("input").btnLoad != undefined) {
                e.stopPropagation();
            }
            else {
                //$(this).toggleClass('row_selected');
                if (!lastCheckedNewPull) {
                    lastCheckedNewPull = this;
                }

                if (e.shiftKey) {
                    var start = $('#ItemModeDataTable tbody tr').index(this);
                    var end = $('#ItemModeDataTable tbody tr').index(lastCheckedNewPull);

                    for (i = Math.min(start, end) ; i <= Math.max(start, end) ; i++) {
                        if (!$('#ItemModeDataTable tbody tr').eq(i).hasClass('row_selected')) {
                            $('#ItemModeDataTable tbody tr').eq(i).addClass("row_selected");
                        }
                    }
                    if (window.getSelection) {
                        if (window.getSelection().empty) {  // Chrome
                            window.getSelection().empty();
                        } else if (window.getSelection().removeAllRanges) {  // Firefox
                            window.getSelection().removeAllRanges();
                        }
                    } else if (document.selection) {  // IE?
                        document.selection.empty();
                    }
                } else if ((e.metaKey || e.ctrlKey)) {
                    $(this).toggleClass('row_selected');
                } else {
                    $(this).toggleClass('row_selected');
                }

                lastCheckedNewPull = this;
            }
            return false;
        });

        $('input[type=radio]').live('change', function () {
            var selection = $(this).val(); // credit or pull
            if (selection == "credit")
                $(this).parent().parent().find('#btnAdd').val('Credit');
            else if (selection == "creditms")
                $(this).parent().parent().find('#btnAdd').val('CreditMS');
            else
                $(this).parent().parent().find('#btnAdd').val('Pull');
        });


        $("#btnPullAll").live('click', function () {
            $('#DivLoading').show();
            if ($('#ItemModeDataTable tbody tr.row_selected').length <= 0) {
                $('#dlgNoSelectErrorMsg').modal();
            }
            else {
                $('#GlobalModalProcessing').modal();
                setTimeout('AddSingleItemToPullList($("#btnPullAll"))', 1000);
            }
            $('#DivLoading').hide();
        });

        $("#btnPullAllQL").live('click', function () {
            $('#GlobalModalProcessing').modal();
            setTimeout('CheckValidPullData()', 1000);
        });

        $("#LocationDetails").dialog({
            autoOpen: false,
            show: "blind",
            hide: "explode",
            height: 700,
            title: "Item Locations",
            width: 900,
            modal: true,
            beforeClose: function () {
                if (isDirtyForm) {
                    if (confirm(SaveConfirmationMSG)) {
                        //isDirtyForm = false;
                        return false;
                    }
                    isDirtyForm = false;
                }
            },
            close: function () {
                IsRefreshGrid = true;
                $('#DivLoading').hide();
                $("#LocationDetails").empty();
                $('#ItemModeDataTable').dataTable().fnStandingRedraw();
            }
        });


        $("#project-spend-limit-basic-modal-content").on("click", "#btnModelYesPSLimit", function () {

            if ('@MaintenaceGUID' == '@Guid.Empty') {
                //TabItemClicked('RequisitionCreate','frmRequisitionMaster');
                var url = '@Url.Action("RequisitionList", "Consume")';
                url = url + '?fromPull=' + 'yes'
                window.location.href = url;
            }
            else if ('@MaintenaceGUID' != '@Guid.Empty') {

            }
            else {
                var url = '@Url.Action("RequisitionList", "Consume")';
                url = url + '?fromPull=' + 'yes'
                window.location.href = url;
            }

        });
        $("#dlgCommonErrorMsg").on("click", "#btnYesForPS", function () {
            if ('@MaintenaceGUID' == '@Guid.Empty') {
                var url = '@Url.Action("RequisitionList", "Consume")';
                url = url + '?fromPull=' + 'yes'
                window.location.href = url;
            }
            else if ('@MaintenaceGUID' != '@Guid.Empty') {

            }
            else {
                var url = '@Url.Action("RequisitionList", "Consume")';
                url = url + '?fromPull=' + 'yes'
                window.location.href = url;
            }

        });
        //$("#dlgExpiredItemErrorMsg").on("click", "#btnYesForExpiredItem", function () {
        $("#btnYesForExpiredItem").click(function () {
            $.modal.impl.close();
            if ($('#dlgExpiredItemErrorMsg').find("#btnPullExItemGuid").val() == '00000000-0000-0000-0000-000000000000') {
                PullAllNewFlow(false);
            }
            else {
                ConfirmPullExpiredItems($('#dlgExpiredItemErrorMsg').find("#btnPullExItemGuid").val(), $('#dlgExpiredItemErrorMsg').find("#btnPullExReqGuid").val());
            }
        });
        $("#ColumnOrderSetup_Context1").click(function () {
            //$("#ColumnSortableModalIM").dialog("open");
            $('#ColumnOrderSetupIM').click();

            return false;
        });

        $("#refreshGrid1").click(function () {
            oTableItemModel.fnDraw();
        });

        $("#ItemModeDataTable").live('contextmenu', function (e) {
            /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
            if ($("body").hasClass('DTTT_Print')) {
                e.preventDefault();
                return false;
            }
            /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */

            if ($('#tab1')[0].className == "verticalText selected") {
                var x = e.pageX - this.offsetLeft;
                var y = e.pageY - this.offsetTop;
                $('#divContextMenu1').css({ 'top': e.pageY, 'left': e.pageX }).fadeIn('slow');
                e.preventDefault();
            }
        });

        $('#ItemModeDataTable, #tblPullCommonUDF').on('focus', "input.AutoPullProjectSpents", function (e) {
            var ajaxURL = '/Pull/GetProjectSpentListForNewPULL';
            var tr = $(this).parent().parent().parent();
            var itmGuid = $(tr).find('#spnItemGUID').text();
            var stagName = '';
            $(this).autocomplete({
                source: function (request, response) {
                    $('#DivLoading').show()
                    $.ajax({
                        url: ajaxURL,
                        type: 'POST',
                        data: JSON.stringify({ 'NameStartWith': request.term }),
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            $('#DivLoading').hide()
                            response($.map(data, function (Items) {
                                return {
                                    label: Items.Value,
                                    value: Items.Key,
                                    id: Items.GUID
                                }
                            }));
                        },
                        error: function (err) {
                            $('#DivLoading').hide();
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    $(this).val(ui.item.value);
                    if ($.trim(ui.item.value).length > 0) {
                        if ($(this).parent().find('#ProjectID') != undefined)
                            $(this).parent().find('#ProjectID').val(ui.item.id);
                        if ($(this).parent().find('#ProjectIDCommon') != undefined)
                            $(this).parent().find('#ProjectIDCommon').val(ui.item.id);
                    }
                    else {
                        $(this).parent().find('#ProjectID').val('');
                        $(this).parent().find('#ProjectIDCommon').val('');
                    }
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                    $(this).autocomplete('widget').css('z-index', 9000);
                    $('ul.ui-autocomplete').css('overflow-y', 'auto');
                    $('ul.ui-autocomplete').css('overflow-x', 'hidden');
                    $('ul.ui-autocomplete').css('max-height', '200px');
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {
                    if (ui.item != null && ui.item != undefined && $.trim(ui.item.id).length > 0) {
                        if ($(this).parent().find('#ProjectID') != undefined)
                            $(this).parent().find('#ProjectID').val(ui.item.id);
                        if ($(this).parent().find('#ProjectIDCommon') != undefined)
                            $(this).parent().find('#ProjectIDCommon').val(ui.item.id);
                    }
                    else {
                        $(this).parent().find('#ProjectID').val('');
                        $(this).parent().find('#ProjectIDCommon').val('');
                    }
                }
            });
        });


        $('#ItemModeDataTable').on('focus', "input.AutoPullBins", function (e) {
            var ajaxURL = '/Pull/GetItemLocationsForNewPullGrid';
            var tr = $(this).parent().parent().parent();
            var itmGuid = $(tr).find('#spnItemGUID').text();
            var IsStagingHeaderSelected = false;
            if (typeof IsStagingLocationOnly != 'undefined') {
                IsStagingHeaderSelected = IsStagingLocationOnly;
            }
            var stagName = '';
            $(this).autocomplete({
                source: function (request, response) {
                    $('#DivLoading').show()
                    $.ajax({
                        url: ajaxURL,
                        type: 'POST',
                        data: JSON.stringify({ 'ItemGuid': itmGuid, 'NameStartWith': request.term, 'IsStagingHeaderSelected': IsStagingHeaderSelected }),
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            $('#DivLoading').hide()
                            if (data.isNewBinCreated == true && data.NewBinID > 0) {
                                $(this).parent().find('#BinID').val(data.NewBinID);
                            }
                            response($.map(data.returnKeyValList, function (Items) {
                                //$(this).parent().find('#BinID').val(Items.ID);
                                //if (parseFloat(Items.OtherInfo1) > 0) {
                                //    $(this).parents('tr').find('#txtQty').val(Items.OtherInfo1);
                                //}
                                //else {
                                //    var dfQty = $(this).parent().find('#hdnDPQ').val();
                                //    $(this).parents('tr').find('#txtQty').val(dfQty);
                                //}
                                return {
                                    label: Items.Value,
                                    value: Items.Value,
                                    id: Items.ID,
                                    oinfo: Items.OtherInfo1
                                }
                            }));
                        },
                        error: function (err) {
                            $('#DivLoading').hide();
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    $(this).val(ui.item.value);
                    if (ui.item != null && ui.item != undefined && $.trim(ui.item.id).length > 0 && $.trim(ui.item.value).length > 0) {
                        $(this).parent().find('#BinID').val(ui.item.id);
                        if (parseFloat(ui.item.oinfo) > 0) {
                            $(this).parents('tr').find('#txtQty').val(ui.item.oinfo);
                        }
                        else {
                            var dfQty = $(this).parent().find('#hdnDPQ').val();
                            $(this).parents('tr').find('#txtQty').val(dfQty);
                        }
                    }
                    else {
                        $(this).parent().find('#BinID').val('');
                    }
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                    $(this).autocomplete('widget').css('z-index', 9000);
                    $('ul.ui-autocomplete').css('overflow-y', 'auto');
                    $('ul.ui-autocomplete').css('overflow-x', 'hidden');
                    $('ul.ui-autocomplete').css('max-height', '200px');
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {
                    //                    if (ui.item != null && ui.item != undefined && $.trim(ui.item.id).length > 0) {
                    //                        $(this).parent().find('#BinID').val(ui.item.id);
                    //                    }
                    //                    else {
                    //                        $(this).parent().find('#BinID').val('');
                    //                    }
                }
            });
        });

        $('#ItemModeDataTable').on('focus', "input.AutoCreditBins", function (e) {
            var tr = $(this).parent().parent().parent();
            var itmGuid = $(tr).find('#spnItemGUID').text();
            var stagName = '';
            var hdnIsLoadMoreLocations = $(tr).find("#hdnIsLoadMoreLocations").val();

            $(this).autocomplete({
                source: function (request, response) {
                    $('#DivLoading').show();
                    var qtyRequired = false;

                    $.ajax({
                        url: '/Master/GetBinsOfItem',
                        //type: 'POST',
                        data: { 'StagingName': '', 'NameStartWith': request.term, 'ItemGUID': itmGuid, 'QtyRequired': qtyRequired, 'IsLoadMoreLocations': hdnIsLoadMoreLocations },
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            $('#DivLoading').hide();
                            response($.map(data, function (Items) {
                                return {
                                    label: Items.Key,
                                    value: Items.Value,
                                    selval: Items.Value
                                }
                            }));
                        },
                        error: function (err) {
                            $('#DivLoading').hide();
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    if (ui.item.selval == MoreLocation) {
                        $(tr).find("#hdnIsLoadMoreLocations").val("true");
                        $(this).trigger("focus");
                        $(this).autocomplete("search", " ");
                        return false;
                    }
                    else {
                        $(this).val(ui.item.value);
                    }

                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                    $(this).autocomplete('widget').css('z-index', 9000);
                    $('ul.ui-autocomplete').css('overflow-y', 'auto');
                    $('ul.ui-autocomplete').css('overflow-x', 'hidden');
                    $('ul.ui-autocomplete').css('max-height', '300px');
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {
                }
            });
        });

        $('#ItemModeDataTable ,#tblPullCommonUDF').on('focus', "input.AutoMSCreditStagingHeader", function (e) {
            var tr = $(this).parent().parent().parent();
            var itmGuid = $(tr).find('#spnItemGUID').text();
            var stagName = '';

            $(this).autocomplete({
                source: function (request, response) {
                    $('#DivLoading').show();
                    var qtyRequired = false;

                    $.ajax({
                        url: '/Inventory/GetAllStagingHeaders',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: { NameStartWith: request.term },
                        success: function (data) {
                            $('#DivLoading').hide();
                            response($.map(data, function (Items) {
                                return {
                                    label: Items.StagingName,
                                    value: Items.StagingName,
                                    selval: Items.GUID,
                                    selID: Items.ID
                                }
                            }));
                        },
                        error: function (err) {
                            $('#DivLoading').hide();
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {

                    if ($("#tblPullCommonUDF").find("#MSPullStagingHeaderValue").length > 0) {
                        $("#tblPullCommonUDF").find("#MSPullStagingHeaderValue").val(ui.item.selval);
                    }
                    $(tr).find("#hdnIsLoadMoreStaging").val(ui.item.selval);
                    $(this).val(ui.item.value);
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                    $(this).autocomplete('widget').css('z-index', 9000);
                    $('ul.ui-autocomplete').css('overflow-y', 'auto');
                    $('ul.ui-autocomplete').css('overflow-x', 'hidden');
                    $('ul.ui-autocomplete').css('max-height', '300px');
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {
                }
            });
        });

        $("#ItemModeDataTable").off('change', "input[type='text'][name^='txtMSStagingHeader']");
        $("#ItemModeDataTable").on('change', "input[type='text'][name^='txtMSStagingHeader']", function (e) {
            var objCurtxt = $(this);
            var CurrentValue = $(objCurtxt).val();
            var vItemGUID = $(this).prop("id").split('_')[1];
            var BinID = $("#hdnBinIDValue").val();

            if ($.trim(CurrentValue) != null && $.trim(CurrentValue) != "") {
                $.ajax({
                    type: "POST",
                    url: SaveMaterialStagingUrl,
                    contentType: 'application/json',
                    dataType: 'json',
                    data: "{ BinID: '" + 0 + "' , StagingName: '" + $.trim(CurrentValue) + "'}",
                    success: function (result) {
                        if (result.Status == "Success") {
                            if (result.MaterialStagingGuid != "")
                                $("#ItemModeDataTable").find("#hdnIsLoadMoreStaging").val(result.MaterialStagingGuid);
                        }
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            }
        });

        $("#tblPullCommonUDF").off('change', "input[type='text'][name^='txtMSPullStagingHeader']");
        $("#tblPullCommonUDF").on('change', "input[type='text'][name^='txtMSPullStagingHeader']", function (e) {
            var objCurtxt = $(this);
            var CurrentValue = $(objCurtxt).val();
            var vItemGUID = $(this).prop("id").split('_')[1];
            var BinID = $("#hdnBinIDValue").val();

            if ($.trim(CurrentValue) != null && $.trim(CurrentValue) != "") {
                $.ajax({
                    type: "POST",
                    url: SaveMaterialStagingUrl,
                    contentType: 'application/json',
                    dataType: 'json',
                    data: "{ BinID: '" + 0 + "' , StagingName: '" + $.trim(CurrentValue) + "'}",
                    success: function (result) {
                        if (result.Status == "Success") {
                            if (result.MaterialStagingGuid != "")
                                $("#tblPullCommonUDF").find("#MSPullStagingHeaderValue").val(result.MaterialStagingGuid);
                        }
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            }
        });

        $('#ItemModeDataTable').on('focus', "input.AutoMSCreditBins", function (e) {
            var tr = $(this).parent().parent().parent();
            var itmGuid = $(tr).find('#spnItemGUID').text();
            var stagName = '';
            var hdnIsLoadMoreLocations = $(tr).find("#hdnIsLoadMoreLocations").val();

            $(this).autocomplete({
                source: function (request, response) {
                    $('#DivLoading').show();
                    var qtyRequired = false;

                    $.ajax({
                        url: '/Master/GetBinsOfItem',
                        //type: 'POST',
                        data: { 'StagingName': 'GetAllStagLocationsOfItems', 'NameStartWith': request.term, 'ItemGUID': itmGuid, 'QtyRequired': qtyRequired, 'IsLoadMoreLocations': hdnIsLoadMoreLocations },
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            $('#DivLoading').hide();
                            response($.map(data, function (Items) {
                                return {
                                    label: Items.Key,
                                    value: Items.Value,
                                    selval: Items.Value
                                }
                            }));
                        },
                        error: function (err) {
                            $('#DivLoading').hide();
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    if (ui.item.selval == MoreLocation) {
                        $(tr).find("#hdnIsLoadMoreLocations").val("true");
                        $(this).trigger("focus");
                        $(this).autocomplete("search", " ");
                        return false;
                    }
                    else {
                        $(this).val(ui.item.value);
                    }

                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                    $(this).autocomplete('widget').css('z-index', 9000);
                    $('ul.ui-autocomplete').css('overflow-y', 'auto');
                    $('ul.ui-autocomplete').css('overflow-x', 'hidden');
                    $('ul.ui-autocomplete').css('max-height', '300px');
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {
                }
            });
        });


        $('#ItemModeDataTable, #tblPullCommonUDF').off('focus', "input.AutoPullOrderNumber");
        $('#ItemModeDataTable, #tblPullCommonUDF').on('focus', "input.AutoPullOrderNumber", function (e) {

            var ajaxURL = '/Pull/GetPullOrderNumberForNewPullGrid';
            var tr = $(this).parent().parent().parent();
            var itmGuid = $(tr).find('#spnItemGUID').text();
            $(this).autocomplete({
                source: function (request, response) {

                    $('#DivLoading').show();
                    $.ajax({
                        url: ajaxURL,
                        type: 'POST',
                        data: JSON.stringify({ 'NameStartWith': request.term }),
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            $('#DivLoading').hide()

                            response($.map(data, function (Items) {
                                return {
                                    label: Items.Value,
                                    value: Items.Value
                                }
                            }));
                        },
                        error: function (err) {
                            $('#DivLoading').hide();
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    $(this).val(ui.item.value);
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                    $(this).autocomplete('widget').css('z-index', 9000);
                    $('ul.ui-autocomplete').css('overflow-y', 'auto');
                    $('ul.ui-autocomplete').css('overflow-x', 'hidden');
                    $('ul.ui-autocomplete').css('max-height', '300px');
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {

                }
            });
        });
        $('#ItemModeDataTable').on('focus', "input.AutoSupplierAccountNumber", function (e) {
            var ajaxURL = '/Pull/GetSupplierAccountNumbersforPull';
            var tr = $(this).parent().parent().parent();
            var itmGuid = $(tr).find('#spnItemGUID').text();
            $(this).autocomplete({
                source: function (request, response) {
                    $('#DivLoading').show()
                    $.ajax({
                        url: ajaxURL,
                        type: 'POST',
                        data: JSON.stringify({ 'ItemGuid': itmGuid, 'NameStartWith': request.term }),
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            $('#DivLoading').hide()

                            response($.map(data, function (Items) {
                                return {
                                    label: Items.Value,
                                    value: Items.Value,
                                    selval: Items.GUID
                                }
                            }));
                        },
                        error: function (err) {
                            $('#DivLoading').hide();
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    $(tr).find("#hdnSupplierAccountNumber").val(ui.item.selval);
                    $(this).val(ui.item.value);
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                    $(this).autocomplete('widget').css('z-index', 9000);
                    $('ul.ui-autocomplete').css('overflow-y', 'auto');
                    $('ul.ui-autocomplete').css('overflow-x', 'hidden');
                    $('ul.ui-autocomplete').css('max-height', '300px');
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {

                }
            });
        });

    });
    $("#btnModelPullCancle").click(function () {
        //$('.modalCloseImg').click();

        if ($('#ItemModel') != undefined && $('#ItemModel').length == 1 && $('#ItemModel').parent().css('display') == "block") {
            $("#ItemModel").dialog('close');
        }
        else if ($('#ItemModelPS') != undefined && $('#ItemModelPS').length == 1 && $('#ItemModelPS').parent().css('display') == "block") {
            $("#ItemModelPS").dialog('close');
        }
        else if ($('#ItemModelTemp') != undefined && $('#ItemModelTemp').length == 1 && $('#ItemModelTemp').parent().css('display') == "block") {
            $("#ItemModelTemp").dialog('close');
        }
        else if ($('#ItemModelTemp') != undefined && $('#ItemModelTemp').length == 1 && $('#ItemModelTemp').parent().css('display') == "block") {
            $("#ItemModelTemp").dialog('close');
        }
        else {
            $('.ui-dialog-titlebar-close').click();
        }
        //CallThisFunctionFromModel('success');
    });
    function closeModalNoSelectModel() {
        $.modal.impl.close();
    }

    function closeModalPSLimit() {
        $.modal.impl.close();
        oTableItemModel.fnStandingRedraw();
        //setTimeout(function() {oTableItemModel.fnStandingRedraw();}, 10000);
    }


    function fillItemMaster(bDestroy) {
        var gaiSelected = [];
        oTableItemModel = $('#ItemModeDataTable').dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            //"bAutoWidth": false,
            "sScrollX": "350%",
            //"sScrollX": "8000px",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "aaSorting": [[0, "asc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                //$("td.RowNo:first", nRow).html(this.fnSettings()._iDisplayStart + iDisplayIndex + 1);
                return nRow;
            },
            "fnStateSaveParams": function (oSettings, oData) {

                oData.oSearch.sSearch = "";
                $.ajax({
                    "url": '@Url.Content("~/Master/SaveGridState")',
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: 'NewConsumePullItemMaster' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        o = json;

                    }
                });
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'NewConsumePullItemMaster' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                        //var ColreOrder = o.ColReorder.toString().split(',');
                        if (json.jsonData != '') {
                            var InvisibleUDF = 0;

                            var PullOrderNumberIndex = objColumnsMI['Pull Order Number'];
                            if (o.abVisCols[PullOrderNumberIndex] == false) {
                                //$('#THPullOrderNumber').hide();
                                //$('#TDPullOrderNumber').hide();
                                $('#THPullOrderNumber').html('');
                                $('#TDPullOrderNumber').html('');
                                InvisibleUDF++;
                            }

                            var ProjectSpendNameIndex = objColumnsMI['@eTurns.DTO.ResProjectMaster.ProjectSpendName'];
                            if ('@(ProjectSpendVisible)' == "True") {
                                o.abVisCols[ProjectSpendNameIndex] = true;
                            }
                            else if (o.abVisCols[ProjectSpendNameIndex] == false) {
                                //$('#THProjectSpendName').hide();
                                //$('#TDProjectSpendName').hide();
                                $('#THProjectSpendName').html('');
                                $('#TDProjectSpendName').html('');
                                InvisibleUDF++;
                            }

                            UDF1Index = objColumnsMI['@UDF1Text'];
                            if (UDF1Index != null && UDF1Index != undefined) {
                                if ('@UDF1IsRequired' == 'True') {
                                    o.abVisCols[UDF1Index] = true;
                                }
                                else if (o.abVisCols[UDF1Index] == false) {
                                    @*$("th:contains('@UDF1Text')").hide();
                                    $('#UDF1PullCommon').closest('td').hide();*@
                                    $("#tblPullCommonUDF th:contains('@UDF1Text')").html('');
                                    $('#UDF1PullCommon').closest('td').html('');
                                    InvisibleUDF++;
                                }
                            }
                            else
                                InvisibleUDF++;

                            UDF2Index = objColumnsMI['@UDF2Text'];
                            if (UDF2Index != null && UDF2Index != undefined) {
                                if ('@UDF2IsRequired' == 'True') {
                                    o.abVisCols[UDF2Index] = true;
                                }
                                else if (o.abVisCols[UDF2Index] == false) {
                                    @*$("th:contains('@UDF2Text')").hide();
                                    $('#UDF2PullCommon').closest('td').hide();*@
                                    $("#tblPullCommonUDF th:contains('@UDF2Text')").html('');
                                    $('#UDF2PullCommon').closest('td').html('');
                                    InvisibleUDF++;
                                }
                            }
                            else
                                InvisibleUDF++;

                            UDF3Index = objColumnsMI['@UDF3Text'];
                            if (UDF3Index != null && UDF3Index != undefined) {
                                if ('@UDF3IsRequired' == 'True') {
                                    o.abVisCols[UDF3Index] = true;
                                }
                                else if (o.abVisCols[UDF3Index] == false) {
                                    @*$("th:contains('@UDF3Text')").hide();
                                    $('#UDF3PullCommon').closest('td').hide();*@
                                    $("#tblPullCommonUDF th:contains('@UDF3Text')").html('');
                                    $('#UDF3PullCommon').closest('td').html('');
                                    InvisibleUDF++;
                                }
                            }
                            else
                                InvisibleUDF++;

                            UDF4Index = objColumnsMI['@UDF4Text'];
                            if (UDF4Index != null && UDF4Index != undefined) {
                                if ('@UDF4IsRequired' == 'True') {
                                    o.abVisCols[UDF4Index] = true;
                                }
                                else if (o.abVisCols[UDF4Index] == false) {
                                    @*$("th:contains('@UDF4Text')").hide();
                                    $('#UDF4PullCommon').closest('td').hide();*@
                                    $("#tblPullCommonUDF th:contains('@UDF4Text')").html('');
                                    $('#UDF4PullCommon').closest('td').html('');
                                    InvisibleUDF++;
                                }
                            }
                            else
                                InvisibleUDF++;

                            UDF5Index = objColumnsMI['@UDF5Text'];
                            if (UDF5Index != null && UDF5Index != undefined) {
                                if ('@UDF5IsRequired' == 'True') {
                                    o.abVisCols[UDF5Index] = true;
                                }
                                else if (o.abVisCols[UDF5Index] == false) {
                                    @*$("th:contains('@UDF5Text')").hide();
                                    $('#UDF5PullCommon').closest('td').hide();*@
                                    $("#tblPullCommonUDF th:contains('@UDF5Text')").html('');
                                    $('#UDF5PullCommon').closest('td').html('');
                                    InvisibleUDF++;
                                }
                            }
                            else
                                InvisibleUDF++;

                            //----------------------------
                            //
                            setTimeout(function () {
                                if (InvisibleUDF == 7) {
                                    $('#tblPullCommonUDF').hide();
                                    $('.dataTables_length').attr('style', 'left:0;top:-35px !important');
                                    $('.dataTables_paginate').attr('style', 'left: 145px;top:-24px !important');
                                }
                                else {
                                    $('.dataTables_length').attr('style', 'left:0;top:-82px !important');
                                    $('.dataTables_paginate').attr('style', 'left: 145px;top:-72px !important');
                                }
                            }, 500);
                        }

                    }
                });

                return o;
            },
            "bServerSide": true,
            "sAjaxSource": '@Url.Content(Model.AjaxURLToFillItemGrid)', //'@Url.Content("~/Inventory/ItemMasterListAjax")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                //PostCount = PostCount + 1;

                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;

                for (var i = 0; i <= objCols.length - 1; i++) {
                    arrCols.push(objCols[i].mDataProp);
                }
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }
                if (oSettings.aaSorting != null && oSettings.aaSorting.length != 0) {
                    var sortValue = "";
                    for (var i = 0; i <= oSettings.aaSorting.length - 1; i++) {
                        if (sortValue.length > 0)
                            sortValue += ", "
                        sortValue += arrCols[oSettings.aaSorting[i][0]] + ' ' + oSettings.aaSorting[i][1];
                    }
                    aoData.push({ "name": "SortingField", "value": sortValue });
                }
                    //                    aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                else
                    aoData.push({ "name": "SortingField", "value": "0" });

                aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });

                aoData.push({ "name": "ActionFilter", "value": $('#NewPullAction').val() });
                aoData.push({ "name": "FirstTimePop", "value": '@firsttimepop' });
                aoData.push({ "name": "mntsGUID", "value": '@MaintenaceGUID' });
                aoData.push({ "name": "sItemsFilter", "value": $('#slctItemstoLoad').val() });
                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    cache: false,
                    "data": aoData,
                    "headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback,
                    beforeSend: function () {
                        $('#ItemModeDataTable td').removeHighlight();
                        $('.dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    complete: function () {
                        $('.dataTables_scroll').css({ "opacity": 1 });

                        if ($("#ItemModel_filter").val() != '') {
                            $('#ItemModeDataTable td').highlight($("#ItemModel_filter").val());
                        }

                        //$("input[type='radio']").filter('[value=pull]').attr('checked', 'checked');

                        CallShowHideData();

                        $(".text-boxQuantityFormat").priceFormat({
                            prefix: '',
                            thousandsSeparator: '',
                            centsLimit: parseInt($('#hdQuantitycentsLimit').val(), 10)
                        });

                        $(".text-boxQuantityFormatSR").priceFormat({
                            prefix: '',
                            thousandsSeparator: '',
                            centsLimit: 0
                        });

                        UDFfillEditableOptionsForGrid();

                        $('.ShowAllOptions').off("click");
                        $('.ShowAllOptions').on("click",function () {
                            $(this).siblings('.AutoPullProjectSpents').trigger("focus");
                            $(this).siblings(".AutoPullProjectSpents").autocomplete("search", " ");
                        });

                        $('.ShowAllOptionsBin').off("click");
                        $('.ShowAllOptionsBin').on("click",function () {
                            $(this).siblings('.AutoPullBins').trigger("focus");
                            $(this).siblings(".AutoPullBins").autocomplete("search", " ");
                        });

                        $('.ShowAllOptionsBinCR').off("click")
                        $('.ShowAllOptionsBinCR').on("click",function () {
                            $(this).siblings('.AutoCreditBins').trigger("focus");
                            $(this).siblings(".AutoCreditBins").autocomplete("search", " ");
                        });

                        $('.ShowAllOptionsBinMCR').off("click");
                        $('.ShowAllOptionsBinMCR').on("click", function () {
                            $(this).siblings('.AutoMSCreditBins').trigger("focus");
                            $(this).siblings(".AutoMSCreditBins").autocomplete("search", " ");
                        });

                        $('.ShowAllOptionsStagingHeader').off("click")
                        $('.ShowAllOptionsStagingHeader').on("click",function () {
                            $(this).siblings('.AutoMSCreditStagingHeader').trigger("focus");
                            $(this).siblings(".AutoMSCreditStagingHeader").autocomplete("search", " ");
                        });

                        $('.ShowAllOptionsOrderNumber').off("click");
                        $('.ShowAllOptionsOrderNumber').on("click",function () {
                            $(this).siblings('.AutoPullOrderNumber').trigger("focus");
                            $(this).siblings(".AutoPullOrderNumber").autocomplete("search", " ");
                        });

                        $('.ShowAllOptionsSupplierAccountNumber').off("click");
                        $('.ShowAllOptionsSupplierAccountNumber').on("click",function () {
                            $(this).siblings('.AutoSupplierAccountNumber').trigger("focus");
                            $(this).siblings(".AutoSupplierAccountNumber").autocomplete("search", " ");
                        });

                        $('.bin-input-readonly').off("keypress");
                        $('.bin-input-readonly').on("keypress",function () {
                            return false;
                        });

                        if ('@HasOnTheFlyEntryRight' == "False") {

                            $('.AutoCreditBins').off("keypress");
                            $('.AutoCreditBins').on("keypress",function () {
                                return false;
                            });

                            $('.AutoMSCreditBins').off("keypress");
                            $('.AutoMSCreditBins').on("keypress",function () {
                                return false;
                            });

                            $('.AutoMSCreditStagingHeader').off("keypress");
                            $('.AutoMSCreditStagingHeader').on("keypress",function () {
                                return false;
                            });
                        }
                    }
                })
            },
            "fnInitComplete": function () {

                $('.ColVis').detach().appendTo(".setting-arrow");
                $('#divQTYLegends').show(1000);

            },
            "aoColumns": PullItemListColumnsArr
        });

        $('.DTTT_container').css('z-index', '-1');

        if ('@TempData["WorkOrderGUID"]' != "")
            $('.DTTT_container').hide();

    }

    function onlyNumeric(event) {
        var charCode = (event.which) ? event.which : event.keyCode

        if (charCode > 31 && (charCode < 48 || charCode > 57 || code == 86))
            return false;

        return true;

    }
    function fnFilterGlobalIM() {
        //set filter only if more than 2 characters are pressed
        if (typeof $("#ItemModel_filter") != 'undefined' && ($("#ItemModel_filter").val().length > 2 || $("#ItemModel_filter").val().length == 0)) {
            FilterNPDataFromGlobalFilterIM();
        }
        else {
            $('#ItemModeDataTable td').removeHighlight();
            $('#ItemModeDataTable td').highlight($("#ItemModel_filter").val());
        }
    }

    function FilterNPDataFromGlobalFilterIM() {

        //var searchtext = $("#ItemModel_filter").val().replace(/'/g, "''");
        //$('#ItemModeDataTable').dataTable().fnFilter(
        //                searchtext,
        //                null,
        //                null,
        //                null
        //            );
        DoNarrowSearchIM();
    }

    //$("#ItemModel_filter").keyup(function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    if (code == 13) {
    //    }
    //    else {
    //        fnFilterGlobalIM();
    //    }
    //});
    var timeoutsc12;
    $(document).on('propertychange input', "#ItemModel_filter", function () {
        clearTimeout(timeoutsc12);
        timeoutsc12 = setTimeout(function () {
            fnFilterGlobalIM();
        }, 500);
        return false;
    });

    $("#ItemModel_filter").keypress(function (e) {
        if (e.which == 13 && $("#ItemModel_filter").val().length >= 2) {
            FilterNPDataFromGlobalFilterIM();
        }
    });

    //$("#ItemModel_filter").keydown(function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    if (code == 13) {
    //        var searchtext = $("#ItemModel_filter").val().replace(/'/g, "''");
    //        $('#ItemModeDataTable').dataTable().fnFilter(
    //                        searchtext,
    //                        null,
    //                        null,
    //                        null
    //                    );
    //        return false;
    //    }
    //});


    $("#clear_QLItemModel_filter").click(funClearFilterIM);

    function funClearFilterIM() {
        //Check length first
        if ($("#ItemModel_filter").val().length > 0) {
            $("#ItemModel_filter").val('');
            $('#ItemModeDataTable').dataTable().fnFilter(
                            $("#ItemModel_filter").val(),
                            null,
                            null,
                            null
                        );
        }
        $("#ItemModel_filter").focus();
        return false;
    }

    $('#PageNumberIM').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#GobtnIM").click();
            return false;
        }
    });

    $("#GobtnIM").click(function () {
        var pval = $('#PageNumberIM').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }
        if (pval == 0)
            return;
        oTableItemModel.fnPageChange(Number(pval - 1));
        $('#PageNumberIM').val('');
    });

    // used for refresh the grid manually...
    $('#refreshGridIM').live('click', function () {
        if ($("#divRefreshBlockIM").css("display").toUpperCase() == 'BLOCK')
            $("#divRefreshBlockIM").toggle();

        oTableItemModel.fnDraw();
        //fillItemMaster(false);

    });

    $("#reordersettingIM").click(function () {
        $("#divRefreshBlockIM").toggle();
    });

    function diabledPullbutton() {
        $("table#ItemModeDataTable tbody tr").each(function () {
            $(this).children("td:first").children("input.pullbutton").prop('disabled', true);
        });
    }
    function enablePullbutton() {
        $("table#ItemModeDataTable tbody tr").each(function () {
            $(this).children("td:first").children("input.pullbutton").prop('disabled', false);
        });
    }

    function LoadQuickListData(OBJGridRow) {
        diabledPullbutton();
        var vsQuickListGUID = $(OBJGridRow).parent().parent().find('#spnQuickListGUID').text() == "" ? "" : $(OBJGridRow).parent().parent().find('#spnQuickListGUID').text();
        QuickListPULLQty = parseInt($(OBJGridRow).parent().parent().find('#txtQty').val() == '' ? 0 : $(OBJGridRow).parent().parent().find('#txtQty').val());
        if (QuickListPULLQty > 0) {
            var searchText = "QLGuid=" + vsQuickListGUID + "#Qty=" + QuickListPULLQty.toString();
            oTableItemModel.fnFilter(searchText, null, null, null);
            IsQLLoaded = true;
        }
        else {
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            $("#spanGlobalMessage").html('@ResQuickListItems.msgProperQLQty');
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            enablePullbutton();
        }
        return false;
    }

    $(oTableItemModel).ajaxSuccess(function () {
        if (IsQLLoaded) {
            IsQLLoaded = false;
            //setTimeout('CallForQLPull()', 1000);
        }
    });

    function CallForQLPull() {
        IsQLLoaded = false;
        if (oTableItemModel.find("tbody tr")[0].cells.length > 1) {
            oTableItemModel.find("tbody tr").removeClass("row_selected").addClass("row_selected");
            $("#btnPullAllQL").click();
        }
    }

    function LoadAllItemDataWithFilter() {
        oTableItemModel.fnFilter(narrowSearch, null, null, null);
    }

    function LoadAllItemData() {
        oTableItemModel.fnFilter("", null, null, null);
    }

    function CheckValidPullData() {

        var IsGlobalErrorMsgShow = false;
        var IsPSRedirectToReq = false;
        var IsQLSuccessfullyDone = true;
        var QLErrorMsg = '';
        $('#ItemModeDataTable tbody tr.row_selected').each(function (i) {
            if ($(this).attr('class').indexOf('row_selected') != -1) {
                $(this).toggleClass('row_selected');
                var RowObject = $(this);
                var aPos = $('#ItemModeDataTable').dataTable().fnGetPosition($(this)[0]);
                var aData = $('#ItemModeDataTable').dataTable().fnGetData(aPos);
                var errorMsg = '';
                var txxt = $(this).find('#txtQty');
                var vBinID;
                var vProjectID;
                var itemType = $(this).find('#spnOrderItemType').text();
                var txtQty = txxt.val();
                if (itemType != '4') {
                    vBinID = $(this).find('#BinID')[0].value == '' ? 0 : $(this).find('#BinID')[0].value;

                    if ($("#chkUsePullCommonUDF").is(":checked")) {
                        if ($('#ProjectIDCommon') != undefined)
                            vProjectID = $('#ProjectIDCommon').val() == "" ? "" : $('#ProjectIDCommon').val();
                        else
                            vProjectID = "";
                    }
                    else {
                        if ($(this).find('#ProjectID')[0] != undefined)
                            vProjectID = $(this).find('#ProjectID')[0].value == "" ? "" : $(this).find('#ProjectID')[0].value;
                        else
                            vProjectID = "";
                    }

                    //vProjectID = $(this).find('#ProjectID')[0].value == "" ? "" : $(this).find('#ProjectID')[0].value;

                    if (!(!isNaN(parseFloat(txtQty)) && parseFloat(txtQty) > 0)) {
                        errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": @ResPullMaster.reqQtyToPull</b></br>";
                        IsGlobalErrorMsgShow = true;
                        IsQLSuccessfullyDone = false;
                    }

                    if (!(!isNaN(parseInt(vBinID)) && parseFloat(vBinID) > 0)) {
                        errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": @ResPullMaster.InventoryLocationMandatory</b></br>";
                        IsGlobalErrorMsgShow = true;
                        IsQLSuccessfullyDone = false;
                    }
                }
                else {
                    if (!(!isNaN(parseFloat(txtQty)) && parseFloat(txtQty) > 0)) {
                        errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": @ResPullMaster.MsgLabourItemRequiredHours</b></br>";
                        IsGlobalErrorMsgShow = true;
                        IsQLSuccessfullyDone = false;
                    }

                    vBinID = 0;
                    vProjectID = '';
                }

                if (errorMsg.length <= 0) {
                    var vItemID = $(this).find('#spnItemID').text();
                    var vItemGUID = $(this).find('#spnItemGUID').text();
                    var vspnOn_HandQuantity = $(this).find('#spnOn_HandQuantity').text() == "" ? 0 : $(this).find('#spnOn_HandQuantity').text();
                    var vPullCreditText = "pull"; //$(obj)[0].value;//$(obj).parent().parent().find('input[name=colors'+vItemID+']:checked')[0].value;
                    var VspnDefaultPullQuantity = $(this).find('#spnDefaultPullQuantity').text() == "" ? 0 : $(this).find('#spnDefaultPullQuantity').text();
                    var vUDF1 = ''; var vUDF2 = ''; var vUDF3 = ''; var vUDF4 = ''; var vUDF5 = '';
                    var vUDF1PullCommon = ''; var vUDF2PullCommon = ''; var vUDF3PullCommon = ''; var vUDF4PullCommon = ''; var vUDF5PullCommon = '';

                    if ($("#UDF1PullCommon") != null) {
                        if ($("#UDF1PullCommon").attr("class") == 'selectBox') {
                            vUDF1PullCommon = $("#UDF1PullCommon option:selected").text();
                        }
                        else {
                            vUDF1PullCommon = $("#UDF1PullCommon").val();
                        }
                    }

                    if ($("#UDF2PullCommon") != null) {
                        if ($("#UDF2PullCommon").attr("class") == 'selectBox') {
                            vUDF2PullCommon = $("#UDF2PullCommon option:selected").text();
                        }
                        else {
                            vUDF2PullCommon = $("#UDF2PullCommon").val();
                        }
                    }

                    if ($("#UDF3PullCommon") != null) {
                        if ($("#UDF3PullCommon").attr("class") == 'selectBox') {
                            vUDF3PullCommon = $("#UDF3PullCommon option:selected").text();
                        }
                        else {
                            vUDF3PullCommon = $("#UDF3PullCommon").val();
                        }
                    }

                    if ($("#UDF4PullCommon") != null) {
                        if ($("#UDF4PullCommon").attr("class") == 'selectBox') {
                            vUDF4PullCommon = $("#UDF4PullCommon option:selected").text();
                        }
                        else {
                            vUDF4PullCommon = $("#UDF4PullCommon").val();
                        }
                    }

                    if ($("#UDF5PullCommon") != null) {
                        if ($("#UDF5PullCommon").attr("class") == 'selectBox') {
                            vUDF5PullCommon = $("#UDF5PullCommon option:selected").text();
                        }
                        else {
                            vUDF5PullCommon = $("#UDF5PullCommon").val();
                        }
                    }

                    if ($(this).find('#UDF1') != null) {
                        if ($(this).find('#UDF1').attr("class") == 'selectBox') {
                            vUDF1 = $(this).find('#UDF1 option:selected').text();
                        }
                        else {
                            vUDF1 = $(this).find('#UDF1').val();
                        }
                    }

                    if ($(this).find('#UDF2') != null) {
                        if ($(this).find('#UDF2').attr("class") == 'selectBox') {
                            vUDF2 = $(this).parent().find('#UDF2 option:selected').text();
                        }
                        else {
                            vUDF2 = $(this).find('#UDF2').val();
                        }
                    }

                    if ($(this).find('#UDF3') != null) {
                        if ($(this).find('#UDF3').attr("class") == 'selectBox') {
                            vUDF3 = $(this).find('#UDF3 option:selected').text();
                        }
                        else {
                            vUDF3 = $(this).find('#UDF3').val();
                        }
                    }

                    if ($(this).find('#UDF4') != null) {
                        if ($(this).find('#UDF4').attr("class") == 'selectBox') {
                            vUDF4 = $(this).find('#UDF4 option:selected').text();
                        }
                        else {
                            vUDF4 = $(this).find('#UDF4').val();
                        }
                    }

                    if ($(this).find('#UDF5') != null) {
                        if ($(this).find('#UDF5').attr("class") == 'selectBox') {
                            vUDF5 = $(this).find('#UDF5 option:selected').text();
                        }
                        else {
                            vUDF5 = $(this).find('#UDF5').val();
                        }
                    }

                    if ($("#chkUsePullCommonUDF").is(":checked")) {
                        vUDF1 = vUDF1PullCommon != undefined ? vUDF1PullCommon : '';
                        vUDF2 = vUDF2PullCommon != undefined ? vUDF2PullCommon : '';
                        vUDF3 = vUDF3PullCommon != undefined ? vUDF3PullCommon : '';
                        vUDF4 = vUDF4PullCommon != undefined ? vUDF4PullCommon : '';
                        vUDF5 = vUDF5PullCommon != undefined ? vUDF5PullCommon : '';
                    }

                    ///////////////////////////////////// UPDATE PULL DATA CALL//////////////////////////////////////////START
                    $.ajax({
                        "url": '@Url.Content("~/Pull/CheckValidPullData")',
                        //data: { ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectID, BinID: vBinID, PullCreditQuantity: (txtQty * QuickListPULLQty), PullCredit: vPullCreditText, TempPullQTY: (txtQty * QuickListPULLQty), UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, RequisitionDetailID: "", WorkOrderDetailGUID: '@TempData["WorkOrderGUID"]' },
                        data: { ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectID, BinID: vBinID, PullCreditQuantity: (txtQty), PullCredit: vPullCreditText, TempPullQTY: (txtQty), UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, RequisitionDetailID: "", WorkOrderDetailGUID: '@TempData["WorkOrderGUID"]' },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        success: function (response) {
                            $('#DivLoading').hide();
                            if (response.Status == "ok") {
                                if (response.LocationMSG != "") {
                                    if (response.PSLimitExceed) {
                                        IsPSRedirectToReq = true;
                                        IsGlobalErrorMsgShow = true;
                                        IsQLSuccessfullyDone = false;
                                        errorMsg += "<b style='color:Olive'>" + aData.ItemNumber + ": " + response.LocationMSG + " " + "do you want to create new requisition for the same ?</b><br>"
                                        //return true;
                                    }
                                    else {
                                        IsPSRedirectToReq = false;
                                        IsGlobalErrorMsgShow = true;
                                        IsQLSuccessfullyDone = false;
                                        errorMsg += "<b style='color:Olive'>" + aData.ItemNumber + ": " + response.LocationMSG + "</b><br>"
                                        //return true;
                                    }
                                }
                            }
                            else {
                                IsPSRedirectToReq = false;
                                IsGlobalErrorMsgShow = true;
                                IsQLSuccessfullyDone = false;
                                errorMsg += "<b style='color:Olive'>" + aData.ItemNumber + ": " + response.Message + "</b><br>"
                                //return true;
                            }
                            txxt.val(VspnDefaultPullQuantity);
                        },
                        error: function (response) {
                            IsPSRedirectToReq = false;
                            IsGlobalErrorMsgShow = true;
                            IsQLSuccessfullyDone = false;
                            errorMsg += "<b style='color:Olive'>" + aData.ItemNumber + ": " + response.Message + "</b><br>"
                            //return true;
                        }
                    });
                    ///////////////////////////////////// UPDATE PULL DATA CALL//////////////////////////////////////////END
                }
            }
            QLErrorMsg += errorMsg;
        });

        if (IsPSRedirectToReq) {
            $.modal.impl.close();
            //$('#project-spend-limit-basic-modal-content').modal();
            QLErrorMsg = "<b>@ResPullMaster.SomeItemNotPulled</b><br /><br />" + QLErrorMsg;
            $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', 'none');
            $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', '');
            $('#dlgCommonErrorMsg').find("#pErrMessage").html(QLErrorMsg);
            $('#dlgCommonErrorMsg').modal()
        }
        else if (IsGlobalErrorMsgShow) {
            $.modal.impl.close();
            //$('#noramal-global-msg-QL-basic-modal-content').modal();
            QLErrorMsg = "<b>@ResPullMaster.SomeItemNotPulled</b><br /><br />" + QLErrorMsg;
            $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', '');
            $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
            $('#dlgCommonErrorMsg').find("#pErrMessage").html(QLErrorMsg);
            $('#dlgCommonErrorMsg').modal()
        }
        else {
            oTableItemModel.find("tbody tr").removeClass("row_selected").addClass("row_selected");
            setTimeout('AddSingleItemToPullList($("#btnPullAllQL"))', 1000);
        }
    }

    function AddSingleItemToPullList(obj) {
        diabledPullbutton();
        if ($(obj)[0].value == undefined)
            return false;
        $('#DivLoading').show();
        if ($($(obj)[0]).data("val") == 'Pull QL') {

            var IsGlobalErrorMsgShow = false;
            var IsPSRedirectToReq = false;
            var IsQLSuccessfullyDone = true;
            var errGBLMsg = '';
            $('#ItemModeDataTable tbody tr').each(function (i) {

                if ($(this).attr('class').indexOf('row_selected') != -1) {
                    $(this).toggleClass('row_selected');
                    var RowObject = $(this);
                    var aPos = $('#ItemModeDataTable').dataTable().fnGetPosition($(this)[0]);
                    var aData = $('#ItemModeDataTable').dataTable().fnGetData(aPos);
                    var errorMsg = '';

                    var txxt = $(this).find('#txtQty');

                    var vBinID;
                    var vProjectID;
                    var itemType = $(this).find('#spnOrderItemType').text();
                    var txtQty = txxt.val();

                    if (itemType != '4') {
                        vBinID = $(this).find('#BinID')[0].value == '' ? 0 : $(this).find('#BinID')[0].value;

                        if ($("#chkUsePullCommonUDF").is(":checked")) {
                            if ($('#ProjectIDCommon') != undefined)
                                vProjectID = $('#ProjectIDCommon').val() == "" ? "" : $('#ProjectIDCommon').val();
                            else
                                vProjectID = "";
                            if ($('#txtProjectSpentCommon').val() != '') {
                                ProjectSpendName = $('#txtProjectSpentCommon').val();
                            }
                        }
                        else {
                            if ($(this).find('#ProjectID')[0] != undefined)
                                vProjectID = $(this).find('#ProjectID')[0].value == "" ? "" : $(this).find('#ProjectID')[0].value;
                            else
                                vProjectID = "";
                            if ($(this).find('#txtProjectSpent').val() != '') {
                                ProjectSpendName = $(this).find('#txtProjectSpent').val();
                            }
                        }

                        //vProjectID = $(this).find('#ProjectID')[0].value == "" ? "" : $(this).find('#ProjectID')[0].value;

                        if (!(!isNaN(parseFloat(txtQty)) && parseFloat(txtQty) > 0)) {
                            $(this).css('background-color', 'Olive');
                            IsGlobalErrorMsgShow = true;
                            errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": @ResPullMaster.reqQtyToPull</b><br/>"
                        }

                        if (!(!isNaN(parseInt(vBinID)) && parseInt(vBinID) > 0)) {
                            $(this).css('background-color', 'Olive');
                            IsGlobalErrorMsgShow = true;
                            errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": @ResPullMaster.InventoryLocationMandatory</b><br/>"
                        }


                    }
                    else {

                        if (!(!isNaN(parseFloat(txtQty)) && parseFloat(txtQty) > 0)) {
                            $(this).css('background-color', 'Olive');
                            IsGlobalErrorMsgShow = true;
                            errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": @ResPullMaster.MsgLabourItemRequiredHours</b><br/>"
                        }
                        vBinID = 0;
                        vProjectID = '';
                        ProjectSpendName = '';

                    }


                    if (errorMsg.length <= 0) {
                        var vItemID = $(this).find('#spnItemID').text();
                        var vItemGUID = $(this).find('#spnItemGUID').text();
                        var vspnOn_HandQuantity = $(this).find('#spnOn_HandQuantity').text() == "" ? 0 : $(this).find('#spnOn_HandQuantity').text();
                        var vPullCreditText = "pull"; //$(obj)[0].value;//$(obj).parent().parent().find('input[name=colors'+vItemID+']:checked')[0].value;
                        var VspnDefaultPullQuantity = $(this).find('#spnDefaultPullQuantity').text() == "" ? 0 : $(this).find('#spnDefaultPullQuantity').text();
                        var vUDF1 = ''; var vUDF2 = ''; var vUDF3 = ''; var vUDF4 = ''; var vUDF5 = '';
                        var vUDF1PullCommon = ''; var vUDF2PullCommon = ''; var vUDF3PullCommon = ''; var vUDF4PullCommon = ''; var vUDF5PullCommon = '';

                        if ($("#UDF1PullCommon") != null) {
                            if ($("#UDF1PullCommon").attr("class") == 'selectBox') {
                                vUDF1PullCommon = $("#UDF1PullCommon option:selected").text();
                            }
                            else {
                                vUDF1PullCommon = $("#UDF1PullCommon").val();
                            }
                        }

                        if ($("#UDF2PullCommon") != null) {
                            if ($("#UDF2PullCommon").attr("class") == 'selectBox') {
                                vUDF2PullCommon = $("#UDF2PullCommon option:selected").text();
                            }
                            else {
                                vUDF2PullCommon = $("#UDF2PullCommon").val();
                            }
                        }

                        if ($("#UDF3PullCommon") != null) {
                            if ($("#UDF3PullCommon").attr("class") == 'selectBox') {
                                vUDF3PullCommon = $("#UDF3PullCommon option:selected").text();
                            }
                            else {
                                vUDF3PullCommon = $("#UDF3PullCommon").val();
                            }
                        }

                        if ($("#UDF4PullCommon") != null) {
                            if ($("#UDF4PullCommon").attr("class") == 'selectBox') {
                                vUDF4PullCommon = $("#UDF4PullCommon option:selected").text();
                            }
                            else {
                                vUDF4PullCommon = $("#UDF4PullCommon").val();
                            }
                        }

                        if ($("#UDF5PullCommon") != null) {
                            if ($("#UDF5PullCommon").attr("class") == 'selectBox') {
                                vUDF5PullCommon = $("#UDF5PullCommon option:selected").text();
                            }
                            else {
                                vUDF5PullCommon = $("#UDF5PullCommon").val();
                            }
                        }

                        if ($(this).find('#UDF1') != null) {
                            if ($(this).find('#UDF1').attr("class") == 'selectBox') {
                                vUDF1 = $(this).find('#UDF1 option:selected').text();
                            }
                            else {
                                vUDF1 = $(this).find('#UDF1').val();
                            }
                        }

                        if ($(this).find('#UDF2') != null) {
                            if ($(this).find('#UDF2').attr("class") == 'selectBox') {
                                vUDF2 = $(this).parent().find('#UDF2 option:selected').text();
                            }
                            else {
                                vUDF2 = $(this).find('#UDF2').val();
                            }
                        }

                        if ($(this).find('#UDF3') != null) {
                            if ($(this).find('#UDF3').attr("class") == 'selectBox') {
                                vUDF3 = $(this).find('#UDF3 option:selected').text();
                            }
                            else {
                                vUDF3 = $(this).find('#UDF3').val();
                            }
                        }

                        if ($(this).find('#UDF4') != null) {
                            if ($(this).find('#UDF4').attr("class") == 'selectBox') {
                                vUDF4 = $(this).find('#UDF4 option:selected').text();
                            }
                            else {
                                vUDF4 = $(this).find('#UDF4').val();
                            }
                        }

                        if ($(this).find('#UDF5') != null) {
                            if ($(this).find('#UDF5').attr("class") == 'selectBox') {
                                vUDF5 = $(this).find('#UDF5 option:selected').text();
                            }
                            else {
                                vUDF5 = $(this).find('#UDF5').val();
                            }
                        }

                        if ($("#chkUsePullCommonUDF").is(":checked")) {
                            vUDF1 = vUDF1PullCommon != undefined ? vUDF1PullCommon : '';
                            vUDF2 = vUDF2PullCommon != undefined ? vUDF2PullCommon : '';
                            vUDF3 = vUDF3PullCommon != undefined ? vUDF3PullCommon : '';
                            vUDF4 = vUDF4PullCommon != undefined ? vUDF4PullCommon : '';
                            vUDF5 = vUDF5PullCommon != undefined ? vUDF5PullCommon : '';
                        }

                        var vPullOrderNumber = "";
                        if ($("#chkUsePullCommonUDF").is(":checked")) {
                            if ($('#txtPullOrderNumberCommon') != null) {
                                if ($('#txtPullOrderNumberCommon').attr("class") == 'selectBox') {
                                    vPullOrderNumber = $('#txtPullOrderNumberCommon option:selected').text();
                                }
                                else {
                                    vPullOrderNumber = $('#txtPullOrderNumberCommon').val();
                                }
                            }
                        }
                        else {
                            if ($(this).find('#txtPullOrderNumber') != null) {
                                vPullOrderNumber = $(this).find('#txtPullOrderNumber').val();
                            }
                        }

                        var vPullSupplierAccountNumber = "";
                        if ($(this).find('#hdnSupplierAccountNumber') != null) {
                            vPullSupplierAccountNumber = $(this).find('#hdnSupplierAccountNumber').val();
                        }

                        $('#DivLoading').show();

                        ///////////////////////////////////// UPDATE PULL DATA CALL//////////////////////////////////////////START
                        $.ajax({
                            "url": '@Url.Content("~/Pull/UpdatePullData")',
                            //data: { ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectID, BinID: vBinID, PullCreditQuantity: (txtQty * QuickListPULLQty), PullCredit: vPullCreditText, TempPullQTY: (txtQty * QuickListPULLQty), UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, RequisitionDetailID: "", WorkOrderDetailGUID: '@TempData["WorkOrderGUID"]', ProjectSpendName: ProjectSpendName },
                            data: { ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectID, BinID: vBinID, PullCreditQuantity: (txtQty), PullCredit: vPullCreditText, TempPullQTY: (txtQty), UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, RequisitionDetailID: "", WorkOrderDetailGUID: '@TempData["WorkOrderGUID"]', ProjectSpendName: ProjectSpendName, PullOrderNumber: vPullOrderNumber, SupplierAccountNumberGuid: vPullSupplierAccountNumber},
                            "async": false,
                            cache: false,
                            "dataType": "json",
                            success: function (response) {
                                $('#DivLoading').hide();
                                if (response.Status == "ok") {

                                    if (response.LocationMSG != "") {
                                        if (response.PSLimitExceed) {
                                            $(RowObject).css('background-color', 'Yellow');
                                            IsPSRedirectToReq = true;
                                            IsGlobalErrorMsgShow = true;
                                            IsQLSuccessfullyDone = false;
                                            errorMsg += "<b style='color:Olive'>" + aData.ItemNumber + ": " + response.LocationMSG + " " + "do you want to create new requisition for the same ?</b><br>"
                                        }
                                        else {
                                            $(RowObject).css('background-color', 'Olive');
                                            //IsPSRedirectToReq = false;
                                            IsGlobalErrorMsgShow = true;
                                            IsQLSuccessfullyDone = false;
                                            errorMsg += "<b style='color:Olive'>" + aData.ItemNumber + ": " + response.LocationMSG + "</b><br>"
                                        }
                                    }
                                    else {
                                        UDFInsertNewForGrid(RowObject);
                                        $(RowObject).css('background-color', 'Green');
                                        $(RowObject).css("z-index", "1003");

                                        errorMsg += "<b style='color:Green'>" + aData.ItemNumber + ": " + response.Message + "</b><br>"
                                    }
                                }
                                else {
                                    $(RowObject).css('background-color', 'Red');
                                    IsPSRedirectToReq = false;
                                    IsGlobalErrorMsgShow = true;
                                    IsQLSuccessfullyDone = false;
                                    errorMsg += "<b style='color:Red'>" + aData.ItemNumber + ": " + response.Message + "</b><br>"
                                }
                                txxt.val(VspnDefaultPullQuantity);
                            },
                            error: function (response) {
                                $(RowObject).css('background-color', 'Red');
                                IsPSRedirectToReq = false;
                                IsGlobalErrorMsgShow = true;
                                IsQLSuccessfullyDone = false;
                                errorMsg += "<b style='color:Red'>" + aData.ItemNumber + ": Unexpected error occurred.</b><br>"
                            }
                        });
                        ///////////////////////////////////// UPDATE PULL DATA CALL//////////////////////////////////////////END
                    }

                    //////////////////////////////////////END//////////////////////////////////////
                }
                errGBLMsg += errorMsg;
            });
            $('#DivLoading').show();
            if (IsQLSuccessfullyDone) {
                $.modal.impl.close();
                $('#DivLoading').hide();
                LoadAllItemDataWithFilter();
            }
            else if (IsPSRedirectToReq) {
                $.modal.impl.close();
                errGBLMsg = "<b>@ResPullMaster.SomeItemNotPulled</b><br /><br />" + errGBLMsg;
                $('#DivLoading').hide();
                $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', 'none');
                $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', '');
                $('#dlgCommonErrorMsg').find("#pErrMessage").html(errGBLMsg);
                $('#dlgCommonErrorMsg').modal()
            }
            else if (IsGlobalErrorMsgShow) {
                $.modal.impl.close();
                $('#DivLoading').hide();
                errGBLMsg = "<b>@ResPullMaster.SomeItemNotPulled</b><br /><br />" + errGBLMsg;
                $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', '');
                $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
                $('#dlgCommonErrorMsg').find("#pErrMessage").html(errGBLMsg);

                $('#dlgCommonErrorMsg').modal()
            }
        }
        else if ($($(obj)[0]).data("val") == 'Pull ALL' || $(obj)[0].value == '@eTurns.DTO.ResPullMaster.PullAllButton') {
            var IsGlobalErrorMsgShow = false;
            var IsPSRedirectToReq = false;
            //$('#DivLoading').show();
            var errGBLMsg = ''; $('#DivLoading').show();
            $('#ItemModeDataTable tbody tr.row_selected').each(function (i) {

                if ($(this).attr('class').indexOf('row_selected') != -1) {
                    $(this).toggleClass('row_selected');
                    var errorMsg = '';
                    var RowObject = $(this);
                    var aPos = $('#ItemModeDataTable').dataTable().fnGetPosition($(this)[0]);
                    var aData = $('#ItemModeDataTable').dataTable().fnGetData(aPos);
                    var txxt = $(this).find('#txtQty');
                    var vBinID;
                    var vProjectID;
                    var ProjectSpendName = '';
                    var itemType = $(this).find('#spnOrderItemType').text();
                    var txtQty = txxt.val();
                    if (itemType != '4') {
                        vBinID = $(this).find('#BinID')[0].value == '' ? 0 : $(this).find('#BinID')[0].value;


                            if ($("#chkUsePullCommonUDF").is(":checked")) {
                                if ($('#ProjectIDCommon') != undefined)
                                    vProjectID = $('#ProjectIDCommon').val() == "" ? "" : $('#ProjectIDCommon').val();
                                else
                                    vProjectID = "";
                                if ($('#txtProjectSpentCommon').val() != '') {
                                    ProjectSpendName = $('#txtProjectSpentCommon').val();
                                }
                            }
                            else {
                                if ($(this).find('#ProjectID')[0] != undefined) {
                                    vProjectID = $(this).find('#ProjectID')[0].value == "" ? "" : $(this).find('#ProjectID')[0].value;
                                    ProjectSpendName = $(this).find('#txtProjectSpent').val();
                                }
                                else {
                                    vProjectID = ""; ProjectSpendName = '';
                                }
                            }

                         /*if ((vProjectID == undefined || typeof vProjectID == "undefined" || vProjectID == "") && (ProjectSpendName != undefined && ProjectSpendName != "")) {
		                    $.ajax({
			                    url: "/Pull/GetProjectSpend",
			                    data: { "ProjectSpend": ProjectSpendName },
			                    type: "Get",
			                    dataType: 'json',
			                    async: false,
			                    cache: false,
			                    success: function (data) {
				                    if (data.vProjectID != null && data.vProjectID != undefined && data.vProjectID != "") {
					                    vProjectID = data.vProjectID;
				                    }
			                    }
		                    });
	                    }*/


                        // vProjectID = $(this).find('#ProjectID')[0].value == "" ? "" : $(this).find('#ProjectID')[0].value;
//                        if((hasOnTheFlyEntryRight != "True" || isProjectSpendInsertAllow != "True") && (vProjectID == undefined || typeof vProjectID == "undefined" || vProjectID == "") && (ProjectSpendName != undefined && ProjectSpendName != "")) {
//                            $(this).css('background-color', 'Olive');
//                            IsGlobalErrorMsgShow = true;
//                            errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ":" + noProjectspendOntheFlyRight +"</b><br/>"
//                        }
                        if (!(!isNaN(parseFloat(txtQty)) && parseFloat(txtQty) > 0)) {
                            $(this).css('background-color', 'Olive');
                            IsGlobalErrorMsgShow = true;
                            errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": @ResPullMaster.reqQtyToPull</b><br/>"
                        }

                        if (!(!isNaN(parseInt(vBinID)) && parseInt(vBinID) > 0)) {
                            $(this).css('background-color', 'Olive');
                            IsGlobalErrorMsgShow = true;
                            errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": @ResPullMaster.InventoryLocationMandatory</b><br/>"
                        }

                    }
                    else {

                        if (!(!isNaN(parseFloat(txtQty)) && parseFloat(txtQty) > 0)) {
                            $(this).css('background-color', 'Olive');
                            IsGlobalErrorMsgShow = true;
                            errorMsg += "<b style='color:Olive'>" + aData.ItemNumber + ": @ResPullMaster.MsgLabourItemRequiredHours</b><br>"
                        }
                        vBinID = 0;
                        vProjectID = '';
                        ProjectSpendName = '';
                    }


                    var trimtxtVal = txtQty.replace(/ /g, '');
                    //if (trimtxtVal.length > 0) {
                    if (errorMsg.length <= 0) {
                        var vItemID = $(this).find('#spnItemID').text();
                        var vItemGUID = $(this).find('#spnItemGUID').text();

                        var vspnOn_HandQuantity = $(this).find('#spnOn_HandQuantity').text() == "" ? 0 : $(this).find('#spnOn_HandQuantity').text();
                        var vPullCreditText = "pull"; //$(obj)[0].value;//$(obj).parent().parent().find('input[name=colors'+vItemID+']:checked')[0].value;

                        var VspnDefaultPullQuantity = $(this).find('#spnDefaultPullQuantity').text() == "" ? 0 : $(this).find('#spnDefaultPullQuantity').text();

                        var vUDF1 = ''; var vUDF2 = ''; var vUDF3 = ''; var vUDF4 = ''; var vUDF5 = '';
                        var vUDF1PullCommon = ''; var vUDF2PullCommon = ''; var vUDF3PullCommon = ''; var vUDF4PullCommon = ''; var vUDF5PullCommon = '';

                        if ($("#UDF1PullCommon") != null) {
                            if ($("#UDF1PullCommon").attr("class") == 'selectBox') {
                                vUDF1PullCommon = $("#UDF1PullCommon option:selected").text();
                            }
                            else {
                                vUDF1PullCommon = $("#UDF1PullCommon").val();
                            }
                        }

                        if ($("#UDF2PullCommon") != null) {
                            if ($("#UDF2PullCommon").attr("class") == 'selectBox') {
                                vUDF2PullCommon = $("#UDF2PullCommon option:selected").text();
                            }
                            else {
                                vUDF2PullCommon = $("#UDF2PullCommon").val();
                            }
                        }

                        if ($("#UDF3PullCommon") != null) {
                            if ($("#UDF3PullCommon").attr("class") == 'selectBox') {
                                vUDF3PullCommon = $("#UDF3PullCommon option:selected").text();
                            }
                            else {
                                vUDF3PullCommon = $("#UDF3PullCommon").val();
                            }
                        }

                        if ($("#UDF4PullCommon") != null) {
                            if ($("#UDF4PullCommon").attr("class") == 'selectBox') {
                                vUDF4PullCommon = $("#UDF4PullCommon option:selected").text();
                            }
                            else {
                                vUDF4PullCommon = $("#UDF4PullCommon").val();
                            }
                        }

                        if ($("#UDF5PullCommon") != null) {
                            if ($("#UDF5PullCommon").attr("class") == 'selectBox') {
                                vUDF5PullCommon = $("#UDF5PullCommon option:selected").text();
                            }
                            else {
                                vUDF5PullCommon = $("#UDF5PullCommon").val();
                            }
                        }

                        if ($(this).find('#UDF1') != null) {
                            if ($(this).find('#UDF1').attr("class") == 'selectBox') {
                                vUDF1 = $(this).find('#UDF1 option:selected').text();
                            }
                            else {
                                vUDF1 = $(this).find('#UDF1').val();
                            }
                        }

                        if ($(this).find('#UDF2') != null) {
                            if ($(this).find('#UDF2').attr("class") == 'selectBox') {
                                vUDF2 = $(this).find('#UDF2 option:selected').text();
                            }
                            else {
                                vUDF2 = $(this).find('#UDF2').val();
                            }
                        }

                        if ($(this).find('#UDF3') != null) {
                            if ($(this).find('#UDF3').attr("class") == 'selectBox') {
                                vUDF3 = $(this).find('#UDF3 option:selected').text();
                            }
                            else {
                                vUDF3 = $(this).find('#UDF3').val();
                            }
                        }

                        if ($(this).find('#UDF4') != null) {
                            if ($(this).find('#UDF4').attr("class") == 'selectBox') {
                                vUDF4 = $(this).find('#UDF4 option:selected').text();
                            }
                            else {
                                vUDF4 = $(this).find('#UDF4').val();
                            }
                        }

                        if ($(this).find('#UDF5') != null) {
                            if ($(this).find('#UDF5').attr("class") == 'selectBox') {
                                vUDF5 = $(this).find('#UDF5 option:selected').text();
                            }
                            else {
                                vUDF5 = $(this).find('#UDF5').val();
                            }
                        }

                        if ($("#chkUsePullCommonUDF").is(":checked")) {
                            vUDF1 = vUDF1PullCommon != undefined ? vUDF1PullCommon : '';
                            vUDF2 = vUDF2PullCommon != undefined ? vUDF2PullCommon : '';
                            vUDF3 = vUDF3PullCommon != undefined ? vUDF3PullCommon : '';
                            vUDF4 = vUDF4PullCommon != undefined ? vUDF4PullCommon : '';
                            vUDF5 = vUDF5PullCommon != undefined ? vUDF5PullCommon : '';
                        }

                        var vPullOrderNumber = "";
                        if ($("#chkUsePullCommonUDF").is(":checked")) {
                            if ($('#txtPullOrderNumberCommon') != null) {
                                if ($('#txtPullOrderNumberCommon').attr("class") == 'selectBox') {
                                    vPullOrderNumber = $('#txtPullOrderNumberCommon option:selected').text();
                                }
                                else {
                                    vPullOrderNumber = $('#txtPullOrderNumberCommon').val();
                                }
                            }
                        }
                        else {
                            if ($(this).find('#txtPullOrderNumber') != null) {
                                vPullOrderNumber = $(this).find('#txtPullOrderNumber').val();
                            }
                        }

                        var vPullSupplierAccountNumber = "";
                        if ($(this).find('#hdnSupplierAccountNumber') != null) {
                            vPullSupplierAccountNumber = $(this).find('#hdnSupplierAccountNumber').val();
                        }

                        $('#DivLoading').show();

                        var WOSellPrice = 0;
                        if ("@isCalledFromWorkOrder".toLowerCase() == "true"
                            && "@AllowEditItemSellPriceonWorkOrderPull".toLowerCase() == "true") {
                            var txtWOPullSellPrice = $(this).find('#WOPullSellPrice');
                            if (txtWOPullSellPrice != typeof (undefined) && txtWOPullSellPrice.length > 0) {
                                WOSellPrice = txtWOPullSellPrice.val();
                            }
                        }
                        ///////////////////////////////////// UPDATE PULL DATA CALL//////////////////////////////////////////START
                        $.ajax({
                            "url": '@Url.Content("~/Pull/UpdatePullData")',
                            data: { ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectID, BinID: vBinID, PullCreditQuantity: txtQty, PullCredit: vPullCreditText, TempPullQTY: txtQty, UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, RequisitionDetailID: "", WorkOrderDetailGUID: '@TempData["WorkOrderGUID"]', ProjectSpendName: ProjectSpendName, PullOrderNumber: vPullOrderNumber, SupplierAccountNumberGuid: vPullSupplierAccountNumber, EditedSellPrice: WOSellPrice },
                            "async": false,
                            cache: false,
                            "dataType": "json",
                            success: function (response) {
                                $('#DivLoading').hide();
                                if (response.Status == "ok") {
                                    if (response.LocationMSG != "") {
                                        if (response.PSLimitExceed) {
                                            $(RowObject).css('background-color', 'Yellow');
                                            IsPSRedirectToReq = true;
                                            IsGlobalErrorMsgShow = true;
                                            errorMsg += "<b style='color:Olive'>" + aData.ItemNumber + ": " + response.LocationMSG + " " + "do you want to create new requisition for the same ?</b><br>"
                                        }
                                        else {
                                            $(RowObject).css('background-color', 'Olive');
                                            IsGlobalErrorMsgShow = true;
                                            errorMsg += "<b style='color:Olive'>" + aData.ItemNumber + ": " + response.LocationMSG + "</b><br>"
                                        }
                                    }
                                    else {
                                        UDFInsertNewForGrid(RowObject);
                                        $(RowObject).css('background-color', 'Green');
                                        $(RowObject).css("z-index", "1003");
                                        errorMsg += "<b style='color:Green'>" + aData.ItemNumber + ": " + response.Message + "</b><br>"
                                    }
                                }
                                else {
                                    $(RowObject).css('background-color', 'Red');
                                    IsPSRedirectToReq = false;
                                    IsGlobalErrorMsgShow = true;
                                    errorMsg += "<b style='color:Red'>" + aData.ItemNumber + ": " + response.Message + "</b><br>"
                                }
                                txxt.val(VspnDefaultPullQuantity);

                            },
                            error: function (response) {
                                $(RowObject).css('background-color', 'Red');
                                IsPSRedirectToReq = false;
                                IsGlobalErrorMsgShow = true;
                                errorMsg += "<b style='color:Red'>" + aData.ItemNumber + ":  Unexpected error occurred.</b><br>"
                            }
                        });
                        ///////////////////////////////////// UPDATE PULL DATA CALL//////////////////////////////////////////END
                    }
                    //////////////////////////////////////END//////////////////////////////////////
                }
                errGBLMsg += errorMsg;
            });
            $('#DivLoading').show();
            $.modal.impl.close();

            if (IsPSRedirectToReq) {
                errGBLMsg = "<b>@ResPullMaster.SomeItemNotPulled</b><br /><br />" + errGBLMsg;
                $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', 'none');
                $('#DivLoading').hide();
                $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', '');
            }
            else if (IsGlobalErrorMsgShow) {
                errGBLMsg = "<b>@ResPullMaster.SomeItemNotPulled</b><br /><br />" + errGBLMsg;
                $('#DivLoading').hide();
                $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', '');
                $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
            }
            else if (!IsGlobalErrorMsgShow) {
                errGBLMsg = "<b>@ResPullMaster.PullSuccessMsg</b><br /><br />" + errGBLMsg;
                $('#DivLoading').hide();
                $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', '');
                $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
            }
            $('#dlgCommonErrorMsg').find("#pErrMessage").html(errGBLMsg);
            $('#dlgCommonErrorMsg').modal({
                escClose: false,
                close: false
            });
        }
        else if ($($(obj)[0]).data("val") == 'Pull') {
            $('#DivLoading').show();
            var txxt = $(obj).parent().parent().find('#txtQty');
            var vBinID;
            var vProjectID;
            var ProjectSpendName;
            var itemType = $(obj).parent().find('#spnOrderItemType').text();
            var txtQty = txxt.val();

            if (itemType != '4') {

                vBinID = $(obj).parent().parent().find('#BinID')[0].value == '' ? 0 : $(obj).parent().parent().find('#BinID')[0].value;

                    if ($("#chkUsePullCommonUDF").is(":checked")) {
                        if ($('#ProjectIDCommon') != undefined)
                            vProjectID = $('#ProjectIDCommon').val() == "" ? "" : $('#ProjectIDCommon').val();
                        else
                            vProjectID = "";
                        if ($('#txtProjectSpentCommon').val() != '') {
                            ProjectSpendName = $('#txtProjectSpentCommon').val();
                        }
                    }
                    else {
                        if ($(obj).parent().parent().find('#ProjectID')[0] != undefined) {
                            vProjectID = $(obj).parent().parent().find('#ProjectID')[0].value == "" ? "" : $(obj).parent().parent().find('#ProjectID')[0].value;
                            ProjectSpendName = $(obj).parent().parent().find('#txtProjectSpent').val();
                        }
                        else {
                            vProjectID = "";
                            ProjectSpendName = '';
                        }
                    }

                 /*if ((vProjectID == undefined || typeof vProjectID == "undefined" || vProjectID == "") && (ProjectSpendName != undefined && ProjectSpendName != "")) {
		            $.ajax({
			            url: "/Pull/GetProjectSpend",
			            data: { "ProjectSpend": ProjectSpendName },
			            type: "Get",
			            dataType: 'json',
			            async: false,
			            cache: false,
			            success: function (data) {
				            if (data.vProjectID != null && data.vProjectID != undefined && data.vProjectID != "") {
					            vProjectID = data.vProjectID;
				            }
			            }
		            });
	            }*/

//                if((hasOnTheFlyEntryRight != "True" || isProjectSpendInsertAllow != "True") && (vProjectID == undefined || typeof vProjectID == "undefined" || vProjectID == "") && (ProjectSpendName != undefined && ProjectSpendName != "") ) {
//                    alert(noProjectspendOntheFlyRight);
//                    $('#DivLoading').hide();
//                    enablePullbutton();
//                    return false;
//                }

                if ((txtQty == '' || txtQty == 'undefined') && txtQty.length == 0) {
                    showNotificationDialog();
                    $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
                    $("#spanGlobalMessage").html('@ResPullMaster.reqQtyToPull');
                    $('#DivLoading').hide();
                    enablePullbutton();
                    return false;

                }
                if (vBinID == 0) {
                    showNotificationDialog();
                    $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
                    $("#spanGlobalMessage").html('@ResPullMaster.InventoryLocationMandatory');
                    enablePullbutton();
                    $('#DivLoading').hide();
                    return false;
                }
            }
            else {

                if ($("#chkUsePullCommonUDF").is(":checked")) {
                    if ($('#ProjectIDCommon') != undefined)
                        vProjectID = $('#ProjectIDCommon').val() == "" ? "" : $('#ProjectIDCommon').val();
                    else
                        vProjectID = "";
                    if ($('#txtProjectSpentCommon').val() != '') {
                        ProjectSpendName = $('#txtProjectSpentCommon').val();
                    }
                }
                else {
                    if ($(obj).parent().parent().find('#ProjectID')[0] != undefined)
                        vProjectID = $(obj).parent().parent().find('#ProjectID')[0].value == "" ? "" : $(obj).parent().parent().find('#ProjectID')[0].value;
                    else
                        vProjectID = "";

                    if ($(obj).parent().parent().find('#txtProjectSpent').val() != '') {
                        ProjectSpendName = $(obj).parent().parent().find('#txtProjectSpent').val();
                    }
                }

                if ('@Model.IsProjectSpendMandatoryInRoom' == "True" && (vProjectID == undefined || typeof vProjectID == "undefined" || vProjectID == "") && (ProjectSpendName == undefined || ProjectSpendName == "")) {

                    $("#spanGlobalMessage").html("@ResPullMaster.MsgProjectSpendMandatory");
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    enablePullbutton();
                    $('#DivLoading').hide();
                    return false;
                }

                /*if ((vProjectID == undefined || typeof vProjectID == "undefined" || vProjectID == "") && (ProjectSpendName != undefined && ProjectSpendName != "")) {
		            $.ajax({
			            url: "/Pull/GetProjectSpend",
			            data: { "ProjectSpend": ProjectSpendName },
			            type: "Get",
			            dataType: 'json',
			            async: false,
			            cache: false,
			            success: function (data) {
				            if (data.vProjectID != null && data.vProjectID != undefined && data.vProjectID != "") {
					            vProjectID = data.vProjectID;
				            }
			            }
		            });
	            }*/

//                if((hasOnTheFlyEntryRight != "True" || isProjectSpendInsertAllow != "True") && (vProjectID == undefined || typeof vProjectID == "undefined" || vProjectID == "") && (ProjectSpendName != undefined && ProjectSpendName != "") ) {
//                    $("#spanGlobalMessage").text(noProjectspendOntheFlyRight);
//                    $('div#target').fadeToggle();
//                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
//                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
//                    enablePullbutton();
//                    $('#DivLoading').hide();
//                    return false;
//                }

                if (txtQty == 'undefined' || txtQty == '') {
                    showNotificationDialog();
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    $("#spanGlobalMessage").html('@ResPullMaster.MsgLabourItemRequiredHours');
                    enablePullbutton();
                    $('#DivLoading').hide();
                    return false;
                }
                if (parseFloat(txtQty) <= 0) {
                    showNotificationDialog();
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    $("#spanGlobalMessage").html('@ResPullMaster.MsgLabourItemRequiredHours');
                    enablePullbutton();
                    $('#DivLoading').hide();
                    return false;
                }
                if (parseFloat(txtQty) == NaN) {
                    showNotificationDialog();
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    $("#spanGlobalMessage").html('@ResPullMaster.MsgLabourItemRequiredHours');
                    enablePullbutton();
                    $('#DivLoading').hide();
                    return false;
                }

                vBinID = 0;
                //vProjectID = '';
                //ProjectSpendName = '';

            }


            var trimtxtVal = txtQty.replace(/ /g, '');
            if (trimtxtVal.length > 0) {

                var vItemID = $(obj).parent().find('#spnItemID').text();
                var vItemGUID = $(obj).parent().find('#spnItemGUID').text();

                var vspnOn_HandQuantity = $(obj).parent().parent().find('#spnOn_HandQuantity').text() == "" ? 0 : $(obj).parent().parent().find('#spnOn_HandQuantity').text();
                var vPullCreditText = "pull"; //$(obj)[0].value;//$(obj).parent().parent().find('input[name=colors'+vItemID+']:checked')[0].value;

                var VspnDefaultPullQuantity = $(obj).parent().parent().find('#spnDefaultPullQuantity').text() == "" ? 0 : $(obj).parent().parent().find('#spnDefaultPullQuantity').text();

                $('#DivLoading').show();

                var vUDF1 = ''; var vUDF2 = ''; var vUDF3 = ''; var vUDF4 = ''; var vUDF5 = '';
                var vUDF1PullCommon = ''; var vUDF2PullCommon = ''; var vUDF3PullCommon = ''; var vUDF4PullCommon = ''; var vUDF5PullCommon = '';

                if ($("#UDF1PullCommon") != null) {
                    if ($("#UDF1PullCommon").attr("class") == 'selectBox') {
                        vUDF1PullCommon = $("#UDF1PullCommon option:selected").text();
                    }
                    else {
                        vUDF1PullCommon = $("#UDF1PullCommon").val();
                    }
                }

                if ($("#UDF2PullCommon") != null) {
                    if ($("#UDF2PullCommon").attr("class") == 'selectBox') {
                        vUDF2PullCommon = $("#UDF2PullCommon option:selected").text();
                    }
                    else {
                        vUDF2PullCommon = $("#UDF2PullCommon").val();
                    }
                }

                if ($("#UDF3PullCommon") != null) {
                    if ($("#UDF3PullCommon").attr("class") == 'selectBox') {
                        vUDF3PullCommon = $("#UDF3PullCommon option:selected").text();
                    }
                    else {
                        vUDF3PullCommon = $("#UDF3PullCommon").val();
                    }
                }

                if ($("#UDF4PullCommon") != null) {
                    if ($("#UDF4PullCommon").attr("class") == 'selectBox') {
                        vUDF4PullCommon = $("#UDF4PullCommon option:selected").text();
                    }
                    else {
                        vUDF4PullCommon = $("#UDF4PullCommon").val();
                    }
                }

                if ($("#UDF5PullCommon") != null) {
                    if ($("#UDF5PullCommon").attr("class") == 'selectBox') {
                        vUDF5PullCommon = $("#UDF5PullCommon option:selected").text();
                    }
                    else {
                        vUDF5PullCommon = $("#UDF5PullCommon").val();
                    }
                }

                if ($(obj).parent().parent().find('#UDF1') != null) {
                    if ($(obj).parent().parent().find('#UDF1').attr("class") == 'selectBox') {
                        vUDF1 = $(obj).parent().parent().find('#UDF1 option:selected').text();
                    }
                    else {
                        vUDF1 = $(obj).parent().parent().find('#UDF1').val();
                    }
                }

                if ($(obj).parent().parent().find('#UDF2') != null) {
                    if ($(obj).parent().parent().find('#UDF2').attr("class") == 'selectBox') {
                        vUDF2 = $(obj).parent().parent().find('#UDF2 option:selected').text();
                    }
                    else {
                        vUDF2 = $(obj).parent().parent().find('#UDF2').val();
                    }
                }

                if ($(obj).parent().parent().find('#UDF3') != null) {
                    if ($(obj).parent().parent().find('#UDF3').attr("class") == 'selectBox') {
                        vUDF3 = $(obj).parent().parent().find('#UDF3 option:selected').text();
                    }
                    else {
                        vUDF3 = $(obj).parent().parent().find('#UDF3').val();
                    }
                }

                if ($(obj).parent().parent().find('#UDF4') != null) {
                    if ($(obj).parent().parent().find('#UDF4').attr("class") == 'selectBox') {
                        vUDF4 = $(obj).parent().parent().find('#UDF4 option:selected').text();
                    }
                    else {
                        vUDF4 = $(obj).parent().parent().find('#UDF4').val();
                    }
                }

                if ($(obj).parent().parent().find('#UDF5') != null) {
                    if ($(obj).parent().parent().find('#UDF5').attr("class") == 'selectBox') {
                        vUDF5 = $(obj).parent().parent().find('#UDF5 option:selected').text();
                    }
                    else {
                        vUDF5 = $(obj).parent().parent().find('#UDF5').val();
                    }
                }

                if ($("#chkUsePullCommonUDF").is(":checked")) {
                    vUDF1 = vUDF1PullCommon != undefined ? vUDF1PullCommon : '';
                    vUDF2 = vUDF2PullCommon != undefined ? vUDF2PullCommon : '';
                    vUDF3 = vUDF3PullCommon != undefined ? vUDF3PullCommon : '';
                    vUDF4 = vUDF4PullCommon != undefined ? vUDF4PullCommon : '';
                    vUDF5 = vUDF5PullCommon != undefined ? vUDF5PullCommon : '';
                }

                var vPullOrderNumber = "";
                if ($("#chkUsePullCommonUDF").is(":checked")) {
                    if ($('#txtPullOrderNumberCommon') != null) {
                        if ($('#txtPullOrderNumberCommon').attr("class") == 'selectBox') {
                            vPullOrderNumber = $('#txtPullOrderNumberCommon option:selected').text();
                        }
                        else {
                            vPullOrderNumber = $('#txtPullOrderNumberCommon').val();
                        }
                    }
                }
                else {
                    if ($(obj).parent().parent().find('#txtPullOrderNumber') != null) {
                        vPullOrderNumber = $(obj).parent().parent().find('#txtPullOrderNumber').val();
                    }
                }

                var vPullSupplierAccountNumber = "";
                if ($(obj).parent().parent().find('#hdnSupplierAccountNumber') != null) {
                    vPullSupplierAccountNumber = $(obj).parent().parent().find('#hdnSupplierAccountNumber').val();
                }

                var WOSellPrice = 0;
                if ("@isCalledFromWorkOrder".toLowerCase() == "true"
                    && "@AllowEditItemSellPriceonWorkOrderPull".toLowerCase() == "true") {
                    var txtWOPullSellPrice = $(obj).parent().parent().find('#WOPullSellPrice');
                    if (txtWOPullSellPrice != typeof (undefined) && txtWOPullSellPrice.length > 0) {
                        WOSellPrice = txtWOPullSellPrice.val();
                    }
                }
                $('#DivLoading').show();

                ///////////////////////////////////// UPDATE PULL DATA CALL//////////////////////////////////////////START
                $.ajax({
                    "url": '@Url.Content("~/Pull/UpdatePullData")',
                    data: { ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectID, BinID: vBinID, PullCreditQuantity: txtQty, PullCredit: vPullCreditText, TempPullQTY: txtQty, UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, RequisitionDetailID: "", WorkOrderDetailGUID: '@TempData["WorkOrderGUID"]', ProjectSpendName: ProjectSpendName, PullOrderNumber: vPullOrderNumber, SupplierAccountNumberGuid: vPullSupplierAccountNumber, EditedSellPrice : WOSellPrice },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    success: function (response) {
                        $('#DivLoading').hide();
                        enablePullbutton();
                        if (response.Status == "ok") {
                            if (response.LocationMSG != "") {
                                if (response.PSLimitExceed) {
                                    // write code to redirect to requisition with confirm box
                                    $("#PSPlimit").text(response.LocationMSG + " " + "do you want to create new requisition for the same ?");
                                    $('#project-spend-limit-basic-modal-content').modal();
                                }
                                else {
                                    if ('@MaintenaceGUID' == '@Guid.Empty') {
                                        showNotificationDialog();
                                        $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
                                        $("#spanGlobalMessage").html(response.LocationMSG);
                                    }
                                    else {
                                        $("#PSPlimit").text(response.LocationMSG + " " + "do you want to create new requisition for the same ?");
                                        $('#project-spend-limit-basic-modal-content').modal();
                                    }
                                    //
                                }
                            }
                            else {
                                UDFInsertNewForGrid($(obj).parent().parent());
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                $("#spanGlobalMessage").html(response.Message);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                                $("#spanGlobalMessage").css("z-index", "1003");
                                $('div#target').css("z-index", "1003");
                                if (typeof oTable != 'undefined') {
                                    oTable.fnDraw();
                                }
                                oTableItemModel.fnStandingRedraw();
                            }
                        }
                        else {
                            //                            $("#spanGlobalMessage").html(response.Message);
                            //                            $('div#target').fadeToggle();
                            //                            $("div#target").delay(2000).fadeOut(200);
                            //                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            var errGBLPullMsg = "<b>Item is not able to Pull Due to following reasons.</b><br /><br />" + response.Message;
                            $('#DivLoading').hide();
                            $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', '');
                            $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
                            $('#dlgCommonErrorMsg').find("#pErrMessage").html(errGBLPullMsg);
                            $('#dlgCommonErrorMsg').modal({
                                escClose: false,
                                close: false
                            });
                        }
                        txxt.val(VspnDefaultPullQuantity);
                    },
                    error: function (response) {
                        enablePullbutton();
                        $('#DivLoading').hide();
                        $("#spanGlobalMessage").html(response.message);
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    }
                });
                ///////////////////////////////////// UPDATE PULL DATA CALL//////////////////////////////////////////END
            }
            $('#DivLoading').hide();
        }
        else if ($(obj)[0].value == 'Credit') {
            $('#DivLoading').show();
            var txtQty = $(obj).parent().parent().find('#txtQty').val();
            var vBinName = $(obj).parent().parent().find('#txtBinNumber').val();

            var vitemGUID = $(obj).parent().find('#spnItemGUID').text();
            var itemType = $(obj).parent().find('#spnOrderItemType').text();
            var vProjectID = "";

            if ($("#chkUsePullCommonUDF").is(":checked")) {
                if ($('#ProjectIDCommon') != undefined)
                    vProjectID = $('#ProjectIDCommon').val() == "" ? "" : $('#ProjectIDCommon').val();
                else
                    vProjectID = "";
                if ($('#txtProjectSpentCommon').val() != '') {
                    ProjectSpendName = $('#txtProjectSpentCommon').val();
                }
            }
            else {
                if ($(obj).parent().parent().find('#ProjectID')[0] != undefined) {
                    vProjectID = $(obj).parent().parent().find('#ProjectID')[0].value == "" ? "" : $(obj).parent().parent().find('#ProjectID')[0].value;
                    ProjectSpendName = $(obj).parent().parent().find('#txtProjectSpent').val();
                }
                else {
                    vProjectID = "";
                    ProjectSpendName = '';
                }
            }

            if ('@Model.IsProjectSpendMandatoryInRoom' == "True" && (vProjectID == undefined || vProjectID == "")) {
                if ('@(TempData["WorkOrderGUID"])' != null && '@(TempData["WorkOrderGUID"])'.length > 0) {
                    showNotificationDialog();
                    $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
                    $("#spanGlobalMessage").html("@ResPullMaster.MsgCreditBackProjectSpendValidation");
                    $('#DivLoading').hide();
                }
                else {
                    $("#spanGlobalMessage").html("@ResPullMaster.MsgCreditBackProjectSpendValidation");
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    enablePullbutton();
                }
                $('#DivLoading').hide();
                return false;
            }
            else {
                var vIsConsignment = $(obj).parent().find('#spnIsConsignment').text();

                var vConsignedQuantity = 0;
                var vCustomerOwnedQuantity = 0;
                if (vIsConsignment.toLowerCase() == "true") {
                    vConsignedQuantity = txtQty;
                }
                else {
                    vCustomerOwnedQuantity = txtQty;
                }

                var arrItems = new Array();
                var data = { "ItemGUID": vitemGUID, "IsCreditPull": true, "ProjectSpentGUID": vProjectID, "IsOnlyFromUI": true, "ConsignedQuantity": vConsignedQuantity, "CustomerOwnedQuantity": vCustomerOwnedQuantity, "BinNumber": vBinName, "WorkOrderGUID": '@(TempData["WorkOrderGUID"])' };
                arrItems.push(data);

                $.ajax({
                    "url": '@Url.Content("~/Inventory/ItemLocationDetailsSaveForCreditPull")',
                    data: JSON.stringify({ 'objData': arrItems, 'PullCreditType': 'credit' }),
                    type: "Post",
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        $('#DivLoading').hide();
                        enablePullbutton();
                        if (response.Status == 'OK') {
                            //UDFInsertNewForGrid($(obj).parent().parent());
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").html(response.Message);
                            $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');

                            $('#ItemModeDataTable').dataTable().fnStandingRedraw();
                        }
                        else {
                            $("#spanGlobalMessage").html(response.Message);
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        }
                    },
                    error: function (response) {
                        enablePullbutton();
                        $('#DivLoading').hide();
                        $("#spanGlobalMessage").html(response.message);
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    }
                });

                $('#DivLoading').hide();
                return false;
            }
        }
        else if ($(obj)[0].value == 'Credit MS') {
            $('#DivLoading').show();
            var itemId = $(obj).parent().find('#spnItemGUID').text();
            var itemType = $(obj).parent().find('#spnOrderItemType').text();
            var vProjectID = "";
            if ($("#chkUsePullCommonUDF").is(":checked")) {
                if ($('#ProjectIDCommon') != undefined)
                    vProjectID = $('#ProjectIDCommon').val() == "" ? "" : $('#ProjectIDCommon').val();
                else
                    vProjectID = "";
            }
            else {
                if ($(obj).parent().parent().find('#ProjectID')[0] != undefined)
                    vProjectID = $(obj).parent().parent().find('#ProjectID')[0].value == "" ? "" : $(obj).parent().parent().find('#ProjectID')[0].value;
                else
                    vProjectID = "";
            }

            //var vProjectID = $(obj).parent().parent().find('#ProjectID')[0].value == "" ? "" : $(obj).parent().parent().find('#ProjectID')[0].value;

            if ('@Model.IsProjectSpendMandatoryInRoom' == "True" && (vProjectID == undefined || vProjectID == "")) {
                if ('@(TempData["WorkOrderGUID"])' != null && '@(TempData["WorkOrderGUID"])'.length > 0) {
                    showNotificationDialog();
                    $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
                    $("#spanGlobalMessage").html("@ResPullMaster.MsgMSCreditBackProjectSpendValidation");
                    $('#DivLoading').hide();
                }
                else {
                    $("#spanGlobalMessage").html("@ResPullMaster.MsgMSCreditBackProjectSpendValidation");
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    enablePullbutton();
                }
                $('#DivLoading').hide();
                return false;
            }
            else {
                var idtype = itemId + '%23' + itemType + '%23' + 'WorkOrderGuid-' + '@(TempData["WorkOrderGUID"])'; //+ '%23' +  'frompullcreditMS' ;
                $('#DivLoading').show();
                $('#LocationDetails').load('../Inventory/LocationDetailsMS?ItemID_ItemType=' + idtype, function () {
                    $('#LocationDetails').dialog('open');
                    $('#DivLoading').hide();
                    IsRefreshGrid = true;
                });
                $('#DivLoading').hide();
                return false;
            }
        }
        else {
            $('#DivLoading').hide();
            return false;
        }
        $('#DivLoading').hide();
    }

    function OpenCreditPopup(obj) {
        diabledPullbutton();
        if ($(obj)[0].value == undefined)
            return false;
        $('#DivLoading').show();

        if ($(obj)[0].value == 'Credit') {
            $('#DivLoading').show();

            var itemId = $(obj).parent().find('#spnItemGUID').text();
            var itemType = $(obj).parent().find('#spnOrderItemType').text();
            var txtQty = $(obj).parent().parent().find('#txtQty').val();

            var vProjectID = "";
            if ($("#chkUsePullCommonUDF").is(":checked")) {
                if ($('#ProjectIDCommon') != undefined)
                    vProjectID = $('#ProjectIDCommon').val() == "" ? "" : $('#ProjectIDCommon').val();
                else
                    vProjectID = "";
            }
            else {
                if ($(obj).parent().parent().find('#ProjectID')[0] != undefined)
                    vProjectID = $(obj).parent().parent().find('#ProjectID')[0].value == "" ? "" : $(obj).parent().parent().find('#ProjectID')[0].value;
                else
                    vProjectID = "";
            }

            if ('@Model.IsProjectSpendMandatoryInRoom' == "True" && (vProjectID == undefined || vProjectID == "")) {
                if ('@(TempData["WorkOrderGUID"])' != null && '@(TempData["WorkOrderGUID"])'.length > 0) {
                    showNotificationDialog();
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    $("#spanGlobalMessage").html("@ResPullMaster.MsgCreditBackProjectSpendValidation");
                    $('#DivLoading').hide();
                }
                else {
                    $("#spanGlobalMessage").html("@ResPullMaster.MsgCreditBackProjectSpendValidation");
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    enablePullbutton();
                }
                $('#DivLoading').hide();
                return false;
            }
            else {
                var idtype = itemId + '%23' + itemType + '%23' + 'frompullcredit' + '%23' + '@(TempData["WorkOrderGUID"])';
                $('#DivLoading').show();
                $('#LocationDetails').load('../Inventory/LocationDetailsNew?ItemID_ItemType=' + idtype + '&ProjectSpendGUID=' + vProjectID + '&QtyToCredit=' + txtQty + '', function () {
                    $('#LocationDetails').dialog('open');
                    $('#DivLoading').hide();
                    IsRefreshGrid = true;
                });
                $('#DivLoading').hide();
                return false;
            }
        }
    }

    function GoToRequisition() {

        if ('@MaintenaceGUID' == '@Guid.Empty') {
            $.modal.impl.close();
            var url = '@Url.Action("RequisitionList", "Consume")';
            url = url + '?fromPull=' + 'yes'
            window.location.href = url;
        }
        else if ('@MaintenaceGUID' != '@Guid.Empty') {

        }
        else {
            $.modal.impl.close();
            var url = '@Url.Action("RequisitionList", "Consume")';
            url = url + '?fromPull=' + 'yes'
            window.location.href = url;
        }
    }

    $('#actionSelectAll3').live('click', function () {
        var Alllen = 0;
        var selLen = 0;
        $('#ItemModeDataTable tbody tr').each(function (i) {
            if ($(this).find('#BinID').length > 0) {
                Alllen = parseInt(Alllen) + 1;
            }
        });
        $('#ItemModeDataTable tbody tr.row_selected').each(function (i) {
            if ($(this).find('#BinID').length > 0) {
                selLen = parseInt(selLen) + 1;
            }
        });

        if (selLen < Alllen) {
            $('#ItemModeDataTable tbody tr').each(function (i) {
                if ($(this).find('#BinID').length > 0) {
                    $(this).removeClass("row_selected").addClass("row_selected");
                }
            });
        }
        else {
            $('#ItemModeDataTable').find("tbody tr").removeClass("row_selected");
        }
    });


    //////////////////////////////////// // new added for QL///////////////////////////////////START

    function AddQuickListToSelectedModuleForPull(obj) { // new added for QL
        // $('#DivLoading').show();
        SaveQuickListToSelectedModuleForPull(obj);
        return;
    }

    function SaveQuickListToSelectedModuleForPull(btn) { // new added for QL
        $('#DivLoading').show();
        var IsGlobalErrorMsgShow = false;
        var errGBLMsg = '';
        var arrItems = new Array();
        var qty = 0;
        var tr = $(btn).parent().parent();

        var vUDF1 = ''; var vUDF2 = ''; var vUDF3 = ''; var vUDF4 = ''; var vUDF5 = '';
        var vUDF1PullCommon = ''; var vUDF2PullCommon = ''; var vUDF3PullCommon = ''; var vUDF4PullCommon = ''; var vUDF5PullCommon = '';
        var vPullOrderNumber = "";
        var vQuickListGUID = '';

        vQuickListGUID = $(tr).find('#spnQuickListGUID').text();
        var txtQty = $(tr).find('#txtQty');
        if (txtQty != undefined || txtQty != null)
            qty = parseFloat($(txtQty).val());


        if ($("#chkUsePullCommonUDF").is(":checked")) {
            if ($('#txtPullOrderNumberCommon') != null) {
                if ($('#txtPullOrderNumberCommon').attr("class") == 'selectBox') {
                    vPullOrderNumber = $('#txtPullOrderNumberCommon option:selected').text();
                }
                else {
                    vPullOrderNumber = $('#txtPullOrderNumberCommon').val();
                }
            }
        }
        else {
            if ($(tr).find('#txtPullOrderNumber') != null) {
                if ($(tr).find('#txtPullOrderNumber').attr("class") == 'selectBox') {
                    vPullOrderNumber = $(tr).find('#txtPullOrderNumber option:selected').text();
                }
                else {
                    vPullOrderNumber = $(tr).find('#txtPullOrderNumber').val();
                }
            }
        }

        if ($("#UDF1PullCommon") != null) {
            if ($("#UDF1PullCommon").attr("class") == 'selectBox') {
                vUDF1PullCommon = $("#UDF1PullCommon option:selected").text();
            }
            else {
                vUDF1PullCommon = $("#UDF1PullCommon").val();
            }
        }

        if ($("#UDF2PullCommon") != null) {
            if ($("#UDF2PullCommon").attr("class") == 'selectBox') {
                vUDF2PullCommon = $("#UDF2PullCommon option:selected").text();
            }
            else {
                vUDF2PullCommon = $("#UDF2PullCommon").val();
            }
        }

        if ($("#UDF3PullCommon") != null) {
            if ($("#UDF3PullCommon").attr("class") == 'selectBox') {
                vUDF3PullCommon = $("#UDF3PullCommon option:selected").text();
            }
            else {
                vUDF3PullCommon = $("#UDF3PullCommon").val();
            }
        }

        if ($("#UDF4PullCommon") != null) {
            if ($("#UDF4PullCommon").attr("class") == 'selectBox') {
                vUDF4PullCommon = $("#UDF4PullCommon option:selected").text();
            }
            else {
                vUDF4PullCommon = $("#UDF4PullCommon").val();
            }
        }

        if ($("#UDF5PullCommon") != null) {
            if ($("#UDF5PullCommon").attr("class") == 'selectBox') {
                vUDF5PullCommon = $("#UDF5PullCommon option:selected").text();
            }
            else {
                vUDF5PullCommon = $("#UDF5PullCommon").val();
            }
        }

        if ($(tr).find('#UDF1') != null) {
            if ($(tr).find('#UDF1').attr("class") == 'selectBox') {
                vUDF1 = $(tr).find('#UDF1 option:selected').text();
            }
            else {
                vUDF1 = $(tr).find('#UDF1').val();
            }
        }

        if ($(tr).find('#UDF2') != null) {
            if ($(tr).find('#UDF2').attr("class") == 'selectBox') {
                vUDF2 = $(tr).parent().find('#UDF2 option:selected').text();
            }
            else {
                vUDF2 = $(tr).find('#UDF2').val();
            }
        }

        if ($(tr).find('#UDF3') != null) {
            if ($(tr).find('#UDF3').attr("class") == 'selectBox') {
                vUDF3 = $(tr).find('#UDF3 option:selected').text();
            }
            else {
                vUDF3 = $(tr).find('#UDF3').val();
            }
        }

        if ($(tr).find('#UDF4') != null) {
            if ($(tr).find('#UDF4').attr("class") == 'selectBox') {
                vUDF4 = $(tr).find('#UDF4 option:selected').text();
            }
            else {
                vUDF4 = $(tr).find('#UDF4').val();
            }
        }

        if ($(tr).find('#UDF5') != null) {
            if ($(tr).find('#UDF5').attr("class") == 'selectBox') {
                vUDF5 = $(tr).find('#UDF5 option:selected').text();
            }
            else {
                vUDF5 = $(tr).find('#UDF5').val();
            }
        }

        if ($("#chkUsePullCommonUDF").is(":checked")) {
            vUDF1 = vUDF1PullCommon;
            vUDF2 = vUDF2PullCommon;
            vUDF3 = vUDF3PullCommon;
            vUDF4 = vUDF4PullCommon;
            vUDF5 = vUDF5PullCommon;
        }

        $.ajax({
            url: '@Url.Content("~/Pull/GetItemByQLGuid")',
            data: { 'QuickListGUID': vQuickListGUID, 'PullQuantity': qty },
            dataType: 'json',
            async: false,
            cache: false,
            success: function (data) {
                var PullInfo = new Array();
                var isSerialLot = false;
                for (var i = 0; i < data.length; i++) {
                    //                    $('#DivLoading').show();
                    var errorMsg = '';
                    var vBinID;
                    var vProjectID;

                    var itemType = data[i].ItemType;

                    if (itemType != '4') {
                        vBinID = data[i].BinID == '' ? 0 : data[i].BinID;

                        if ($("#chkUsePullCommonUDF").is(":checked")) {
                            if ($('#ProjectIDCommon') != undefined)
                                vProjectID = $('#ProjectIDCommon').val() == "" ? "" : $('#ProjectIDCommon').val();
                            else
                                vProjectID = "";
                            if ($('#txtProjectSpentCommon').val() != '') {
                                ProjectSpendName = $('#txtProjectSpentCommon').val();
                            }
                        }
                        else {
                            if ($(tr).find('#ProjectID')[0] != undefined)
                                vProjectID = $(tr).find('#ProjectID').value == "" ? "" : $(tr).find('#ProjectID').value;
                            else
                                vProjectID = "";
                            if ($(tr).find('#txtProjectSpent').val() != '') {
                                ProjectSpendName = $(tr).find('#txtProjectSpent').val();
                            }
                        }
                        if (!(!isNaN(parseFloat(qty)) && parseFloat(qty) > 0)) {
                            $(tr).css('background-color', 'Olive');
                            IsGlobalErrorMsgShow = true;
                            errorMsg += "<b style='color:Olive;'>" + data[i].ItemNumber + ": " + '@ResPullMaster.reqQtyToPull' + "</b><br/>";
                        }

                        if (!(!isNaN(parseInt(vBinID)) && parseInt(vBinID) > 0)) {
                            $(tr).css('background-color', 'Olive');
                            IsGlobalErrorMsgShow = true;
                            errorMsg += "<b style='color:Olive;'>" + data[i].ItemNumber + ": " + '@ResPullMaster.InventoryLocationMandatory' + "</b><br/>";
                        }
                    }
                    else {

                        if (!(!isNaN(parseFloat(qty)) && parseFloat(qty) > 0)) {
                            $(tr).css('background-color', 'Olive');
                            IsGlobalErrorMsgShow = true;
                            errorMsg += "<b style='color:Olive;'>" + data[i].ItemNumber + ": " + '@ResPullMaster.MsgLabourItemRequiredHours' + "</b><br/>";
                        }
                        vBinID = 0;
                        vProjectID = '';
                        ProjectSpendName = '';
                    }

                    if (errorMsg.length <= 0) {
                        if (data[i].SerialNumberTracking || data[i].LotNumberTracking || data[i].DateCodeTracking) {
                            isSerialLot = true;
                        }

                        var PullQty = 0;
                        var QLDefaultQuantity = (data[i].QuanityPulled != null ? data[i].QuanityPulled : 1);
                        PullQty = qty * QLDefaultQuantity;

                        PullInfo.push({ ID: 0, ItemID: data[i].ID, ItemNumber: data[i].ItemNumber, ItemType: data[i].ItemType, PoolQuantity: PullQty, ItemGUID: data[i].GUID, BinID: vBinID, DefaultPullQuantity: (data[i].DefaultPullQuantity == "" ? 0 : data[i].DefaultPullQuantity), ProjectSpendGUID: vProjectID, ProjectSpendName: ProjectSpendName, UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, WorkOrderDetailGUID: '@TempData["WorkOrderGUID"]', PullOrderNumber: vPullOrderNumber });
                    }
                }

                if (isSerialLot == true) {
                    if (errorMsg.length <= 0) {
                        $.ajax({
                            type: "POST",
                            url: PullItemQuantityUrl,
                            contentType: 'application/json',
                            dataType: 'html',
                            data: JSON.stringify(PullInfo),
                            success: function (RetData) {
                                $("#DivPullSelection").html("");
                                $("#DivPullSelection").html(RetData);
                                $("#DivPullSelection").dialog('open');
                                $('#DivLoading').hide();
                            },
                            error: function (response) {
                                $(tr).css('background-color', 'Red');
                                IsPSRedirectToReq = false;
                                IsGlobalErrorMsgShow = true;
                                errorMsg += "<b style='color:Red'>" + data[i].ItemNumber + " :  Unexpected error occurred.</b><br>"
                            }
                        });
                    }
                    return false;
                }
                else {
                    for (var i = 0; i < PullInfo.length; i++) {
                        $('#DivLoading').show();
                        var errorMsg = '';
                        var vBinID;
                        var vProjectID;

                        var itemType = PullInfo[i].ItemType;

                        if (itemType != '4') {
                            vBinID = PullInfo[i].BinID == '' ? 0 : PullInfo[i].BinID;

                            if ($("#chkUsePullCommonUDF").is(":checked")) {
                                if ($('#ProjectIDCommon') != undefined)
                                    vProjectID = $('#ProjectIDCommon').val() == "" ? "" : $('#ProjectIDCommon').val();
                                else
                                    vProjectID = "";
                                if ($('#txtProjectSpentCommon').val() != '') {
                                    ProjectSpendName = $('#txtProjectSpentCommon').val();
                                }
                            }
                            else {
                                if ($(tr).find('#ProjectID')[0] != undefined)
                                    vProjectID = $(tr).find('#ProjectID').value == "" ? "" : $(tr).find('#ProjectID').value;
                                else
                                    vProjectID = "";
                                if ($(tr).find('#txtProjectSpent').val() != '') {
                                    ProjectSpendName = $(tr).find('#txtProjectSpent').val();
                                }
                            }
                            if (!(!isNaN(parseFloat(qty)) && parseFloat(qty) > 0)) {
                                $(tr).css('background-color', 'Olive');
                                IsGlobalErrorMsgShow = true;
                                errorMsg += "<b style='color:Olive;'>" + PullInfo[i].ItemNumber + ": @ResPullMaster.reqQtyToPull</b><br/>"
                            }

                            if (!(!isNaN(parseInt(vBinID)) && parseInt(vBinID) > 0)) {
                                $(tr).css('background-color', 'Olive');
                                IsGlobalErrorMsgShow = true;
                                errorMsg += "<b style='color:Olive;'>" + PullInfo[i].ItemNumber + ": @ResPullMaster.InventoryLocationMandatory</b><br/>"
                            }
                        }
                        else {

                            if (!(!isNaN(parseFloat(qty)) && parseFloat(qty) > 0)) {
                                $(tr).css('background-color', 'Olive');
                                IsGlobalErrorMsgShow = true;
                                errorMsg += "<b style='color:Olive;'>" + PullInfo[i].ItemNumber + ": @ResPullMaster.MsgLabourItemRequiredHours</b><br/>"
                            }
                            vBinID = 0;
                            vProjectID = '';
                            ProjectSpendName = '';
                        }

                        if (errorMsg.length <= 0) {
                            $('#GlobalModalProcessing').modal({
                                escClose: false,
                                close: false
                            });

                            if (errorMsg.length <= 0) {

                                var vItemGUID = PullInfo[i].ItemGUID;

                                //var vspnOn_HandQuantity = data[i].OnHandQuantity == "" ? 0 : data[i].OnHandQuantity;
                                var vPullCreditText = "pull";
                                var VspnDefaultPullQuantity = PullInfo[i].DefaultPullQuantity == "" ? 0 : PullInfo[i].DefaultPullQuantity;

                                //$('#DivLoading').show();
                                ///////////////////////////////////// UPDATE PULL DATA CALL//////////////////////////////////////////START
                                $.ajax({
                                    "url": '@Url.Content("~/Pull/UpdatePullData")',
                                    data: { ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectID, BinID: vBinID, PullCreditQuantity: PullInfo[i].PoolQuantity, PullCredit: vPullCreditText, TempPullQTY: PullInfo[i].PoolQuantity, UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, RequisitionDetailID: "", WorkOrderDetailGUID: '@TempData["WorkOrderGUID"]', ProjectSpendName: ProjectSpendName, PullOrderNumber: vPullOrderNumber },
                                    "async": false,
                                    cache: false,
                                    "dataType": "json",
                                    success: function (response) {
                                        $('#DivLoading').hide();
                                        if (response.Status == "ok") {
                                            if (response.LocationMSG != "") {
                                                if (response.PSLimitExceed) {
                                                    $(tr).css('background-color', 'Yellow');
                                                    IsPSRedirectToReq = true;
                                                    IsGlobalErrorMsgShow = true;
                                                    errorMsg += "<b style='color:Olive'>" + PullInfo[i].ItemNumber + " : " + response.LocationMSG + " " + "do you want to create new requisition for the same ?</b><br>"
                                                }
                                                else {
                                                    $(tr).css('background-color', 'Olive');
                                                    IsGlobalErrorMsgShow = true;
                                                    errorMsg += "<b style='color:Olive'>" + PullInfo[i].ItemNumber + " : " + response.LocationMSG + "</b><br>"
                                                }
                                            }
                                            //else {
                                            //    UDFInsertNewForGrid(tr);
                                            //    $(tr).css('background-color', 'Green');
                                            //    errorMsg += "<b style='color:Green'>" + data[i].ItemNumber + " : " + response.Message + "</b><br>"
                                            //}
                                        }
                                        else {
                                            $(tr).css('background-color', 'Red');
                                            IsPSRedirectToReq = false;
                                            IsGlobalErrorMsgShow = true;
                                            errorMsg += "<b style='color:Red'>" + PullInfo[i].ItemNumber + " : " + response.Message + "</b><br>"
                                        }
                                        txtQty.val(VspnDefaultPullQuantity);
                                    },
                                    error: function (response) {
                                        $(tr).css('background-color', 'Red');
                                        IsPSRedirectToReq = false;
                                        IsGlobalErrorMsgShow = true;
                                        errorMsg += "<b style='color:Red'>" + PullInfo[i].ItemNumber + " :  Unexpected error occurred.</b><br>"
                                    }
                                });
                                ///////////////////////////////////// UPDATE PULL DATA CALL//////////////////////////////////////////END
                            }
                        }
                        errGBLMsg += errorMsg;
                    }
                }

                $.modal.impl.close();
                $('#DivLoading').hide();

                if (IsGlobalErrorMsgShow) {
                    $.modal.impl.close();
                    $('#DivLoading').hide();
                    errGBLMsg = "<b>Some of the Item(s) from the quick list is(are) not able to Pull(s) Due to following reasons.</b><br /><br />" + errGBLMsg;
                    $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', '');
                    $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
                    $('#dlgCommonErrorMsg').find("#pErrMessage").html(errGBLMsg);

                    $('#dlgCommonErrorMsg').modal()
                }
            },
            error: function (xhr) {
                $('#DivLoading').hide();
                $(btn).removeAttr("disabled");
            }
        });
    }

    //////////////////////////////////// // new added for QL///////////////////////////////////END
</script>
<script type='text/javascript' src="@Url.Content("~/Scripts/PageScripts/PullCommon.js?v=" + version)"></script>
<script src="@Url.Content("~/Scripts/CreditPull.js?v=" + version)" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/PageScripts/MSCreditPull.js?v=" + version)" type="text/javascript"></script>
