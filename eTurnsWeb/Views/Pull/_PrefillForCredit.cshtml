@model ItemInfoToCredit
@{
    bool isCost = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.HideCostMarkUpSellPrice);
    int index = 0;
}
<div class="innerGrid" id="divPreReceiveInfo" style="background: none repeat scroll 0 0 #F8F8F8;
    padding: 10px; float: left; width: 98%;">
    <div class="infoBlock" style="margin: 5px; width: 96%; margin-bottom:30px">
        <ul>
            @if (!string.IsNullOrEmpty(Model.QuickListName))
            {
                <li>
                    <label for="RoomName">
                        @ResQuickList.QuickListName
                    </label>
                    : <span>@(Model.QuickListName)</span>
                </li>
            }
            <li>
                <label for="RoomName">
                    @ResItemMaster.Item #
                </label>
                : <span>@Model.ItemNumber</span>
            </li>
            @if (!string.IsNullOrEmpty(Model.Bin))
            {
                <li>
                    <label for="RoomName">
                        @ResPullMaster.CreditBinNumber#
                    </label>
                    : <span>@Model.Bin</span>
                </li>
            }
            @if (Model.ItemTracking != null)
            {
                <li>
                    <label for="RoomName">
                        @ResItemMaster.TrackingType
                    </label>
                    : <span>@(Model.ItemTracking)</span>
                </li>
            }
            @if (!string.IsNullOrEmpty(Model.QuickListName) && Model.ItemQtyInQL != null)
            {
                <li>
                    <label for="RoomName">
                        @ResQuickList.QuickListCreditQty
                    </label>
                    : <span>@(Model.CreditQLQty)</span>
                </li>

                <li>
                    <label for="RoomName">
                        @ResPullMaster.ItemQtyInQL
                    </label>
                    : <span>@(Model.ItemQtyInQL)</span>
                </li>
            }
            <li>
                <label for="RoomName">
                    @ResPullMaster.CreditQty
                </label>
                : <span>@(Model.Quantity)</span>
            </li>
        </ul>
    </div>
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div style="margin: 5px; width: 96%; color: Red;">
            @Model.ErrorMessage
            <br />
            @if (Model.PrevPullsToCredit != null && Model.PrevPullsToCredit.Count > 0)
            {
                @Html.Label(string.Format(@ResPullMaster.MsgCreditToSelectRow, Model.PrevPullQty))
            }
        </div>
    }
    <br />
    <br />
    <div style="float: left; clear: both; width: 99%; margin: 5px;">
        @if (Model.PrevPullsToCredit != null && Model.PrevPullsToCredit.Count > 0)
        {
            <table id="PrePullDetailData" class="display" style="float: left; clear: both; width: 99%;">
                <thead>
                    <tr>
                        @if (!string.IsNullOrEmpty(Model.ItemTracking))
                        {

                            <th>
                                @if (Model.ItemTracking == "SERIALTRACK")
                                {
                                    @Html.Label("Serial")
                                }
                                else if (Model.ItemTracking == "LOTTRACK")
                                {
                                    @Html.Label("Lots")
                                }
                                else if (Model.ItemTracking == "DATECODETRACK")
                                {
                                    @Html.Label("Expire Date")
                                }
                            </th>
                        }
                        @if (Model.ItemTracking == "LOTTRACK" || Model.ItemTracking == "DATECODETRACK")
                        {
                            <th>
                                @Html.Label("Credit Qty")
                            </th>
                        }
                        <th>
                            @eTurns.DTO.ResPullDetails.PoolQuantity
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.PrevPullsToCredit)
                    {
                        index += 1;
                        <tr onclick="RowClicked(this)">
                            @if (!string.IsNullOrEmpty(Model.ItemTracking))
                            {
                                <td>
                                    @if (Model.ItemTracking == "SERIALTRACK")
                                    {
                                        @item.Serial
                                        @Html.Hidden("hdnSerialNumber", item.Serial)
                                    }
                                    else if (Model.ItemTracking == "LOTTRACK")
                                    {
                                        @item.Lot
                                        @Html.Hidden("hdnLotNumber", item.Lot)
                                    }
                                    else if (Model.ItemTracking == "DATECODETRACK")
                                    {
                                        @item.ExpireDate
                                        @Html.Hidden("hdnExpiration", item.ExpireDate)
                                    }
                                </td>

                            }
                            @if (Model.ItemTracking == "LOTTRACK" || Model.ItemTracking == "DATECODETRACK")
                            {
                                <td>
                                    @if (!Model.IsModelShow)
                                    {
                                        @Html.TextBox("txtCreditQty" + index, item.Qty, new { @class = "text-boxinner numericalign ldqty" })
                                    }
                                    else
                                    {
                                        @Html.TextBox("txtCreditQty" + index, "", new { @class = "text-boxinner numericalign ldqty" })
                                    }
                                </td>
                            }
                            <td>
                                @item.Qty
                                @Html.Hidden("hdnPoolQuantity", item.Qty)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
    <div style="width: 98%; float: left; text-align: center; margin: 10px;">
        <input type="button" class="CreateBtn" value="@ResCommon.Save" id="bntSavePreCredit" style="text-align: center;
            float: left" />
        <input type="button" class="CreateBtn" value="@ResCommon.Cancel" id="bntPreCreditCancel" style="text-align: center;
            float: left" />
        <input type="button" class="CreateBtn" value="@ResCommon.CancelAll" id="bntPreCreditCancelAll"
               style="text-align: center; float: right" />
    </div>
</div>
<script type="text/javascript">

    $(document).ready(function () {

        var tbl = $('#PrePullDetailData').dataTable({
            "bJQueryUI": true,
            "bRetrieve": true,
            "bDestroy": true,
            "bScrollCollapse": true,
            "sScrollX": "150%",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>',
            "aaSorting": [],
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bServerSide": false,
            "bDestroy": true,
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                if ('@Model.IsModelShow' == 'False') {
                    $(nRow).addClass('row_selected').css('display', 'none');
                }
                return nRow;
            },
           "oLanguage": {
            "sLengthMenu": MsgShowRecordsGridBtn,
            "sEmptyTable": MsgNoDataAvailableInTable,
            "sInfo": MsgShowingNoOfEntries,
            "sInfoEmpty": MsgShowingZeroEntries,
            "sZeroRecords": MsgNoDataAvailableInTable
            },
            "fnInitComplete": function () {
                $('.ColVis').detach().appendTo(".setting-arrow");
                //$('.dataTables_scrollBody').css('max-height', '250px');
            }
        });


        $('.DTTT_container').css('z-index', '-1');
        if ('@Model.IsModelShow' == 'False') {
            var modelObj = GetToFillPreCreditToAdd();
            if (modelObj != null) {
                gblPreCreditObjToSave.push(modelObj);
                $('#divPreCreditInfo').dialog('close');
            }
            else {
                $("#PrePullDetailData tbody tr").each(function (i) {
                    $(this).css('display', '');
                });
                ShowHideCreditProgressBar(false);
            }
        }
        else {
            ShowHideCreditProgressBar(false);
        }
    });


    $('input.ldqty').on('change', function (e) {
        if ($(this).val() > 0) {
            if (!$(this).parent().parent().hasClass('row_selected')) {
                $(this).parent().parent().addClass('row_selected');
            }
        }
        else {
            if ($(this).parent().parent().hasClass('row_selected')) {
                $(this).parent().parent().removeClass('row_selected');
            }
        }
        RowClicked($(this).parent().parent());
    });

    $('#bntPreCreditCancel').on('click', function (e) {
        $('#divPreCreditInfo').dialog('close');
    });

    $('#bntPreCreditCancelAll').on('click', function (e) {
        SelectedPreCreditObj = null;
        gblPreCreditObjToSave = null;
        $('#divPreCreditInfo').dialog('close');
    });

    $('#bntSavePreCredit').on('click', function (e) {

        if (arrSelectedRowData == null || arrSelectedRowData == undefined || arrSelectedRowData.length <= 0) {
            if ($("#PrePullDetailData tbody tr.row_selected").length > 0) {
                showNotificationDialog();
                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                $("#spanGlobalMessage").html('@ResPullMaster.ReqProperCreditQty');
            }
            else {
                showNotificationDialog();
                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                $("#spanGlobalMessage").html('@ResPullMaster.ReqRowtoCredit');
            }
            return false;
        }

        var modelObj = GetToFillPreCreditToAddOnSaveClick();
        if (modelObj != null) {
            gblPreCreditObjToSave.push(modelObj);
            $('#divPreCreditInfo').dialog('close');
        }
    });

    $("#PrePullDetailData").on("tap click", "tbody tr", function (e) {
        $(this).toggleClass('row_selected');
    });

    var arrSelectedRowData = new Array();
    var TotalCreditQty = 0;
    function RowClicked(tr) {

        var qty = 0;
        var serial = null;
        var lots = null;
        var expDate = null;
        var prevPullQty = 0;
        var _error = '';
        var AddObject = true;

        if ($(tr).find('#hdnSerialNumber').length > 0) {
            serial = $(tr).find('#hdnSerialNumber').val();
            var SerialResult = $.grep(arrSelectedRowData, function (e) { return e.Serial == serial; });
            if (SerialResult != null && SerialResult != undefined && SerialResult.length > 0) {
                arrSelectedRowData = $.grep(arrSelectedRowData, function (e) {
                    return e.Serial != serial;
                });
                AddObject = false;
            }
        }
        else if ($(tr).find('#hdnLotNumber').length > 0) {
            lots = $(tr).find('#hdnLotNumber').val();
            var LotResult = $.grep(arrSelectedRowData, function (e) { return e.Lot == lots; });
            if (LotResult != null && LotResult != undefined && LotResult.length > 0) {
                arrSelectedRowData = $.grep(arrSelectedRowData, function (e) {
                    return e.Lot != lots;
                });
                AddObject = false;
            }
        }
        else if ($(tr).find('#hdnExpiration').length > 0) {
            expDate = $(tr).find('#hdnExpiration').val();
            var expDateResult = $.grep(arrSelectedRowData, function (e) { return e.ExpireDate == expDate; });
            if (expDateResult != null && expDateResult != undefined && expDateResult.length > 0) {
                arrSelectedRowData = $.grep(arrSelectedRowData, function (e) {
                    return e.ExpireDate != expDate;
                });
                AddObject = false;
            }
        }

        if ((serial == null || serial == undefined || serial == '')
            && (lots == null || lots == undefined || lots == '')
            && (expDate == null || expDate == undefined || expDate == '')
            && arrSelectedRowData.length > 0) {
            AddObject = false;
        }

        if (AddObject == true) {
            if ($(tr).find('#hdnExpiration').length > 0) {
                expDate = $(tr).find('#hdnExpiration').val();
            }

            if ($(tr).find('input.ldqty').length > 0) {
                qty = $(tr).find('input.ldqty').val();
                prevPullQty = $(tr).find('#hdnPoolQuantity').val();
                if (!isNaN(parseFloat(qty)) && parseFloat(qty) > 0) {
                    if (parseFloat(prevPullQty) < parseFloat(qty)) {
                        showNotificationDialog();
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        $("#spanGlobalMessage").html('@ResPullMaster.MsgCreditQtyLessThanPullQty');
                        return false;
                    }
                }
            }
            else if ($(tr).find('#hdnPoolQuantity').length > 0) {
                qty = $(tr).find('#hdnPoolQuantity').val();
            }

            if (!isNaN(parseFloat(qty)) && parseFloat(qty) > 0) {
                TotalCreditQty = parseFloat(TotalCreditQty) + parseFloat(qty);
                arrSelectedRowData.push({ 'Serial': serial, 'Lot': lots, 'ExpireDate': expDate, 'Qty': qty, 'Error': _error });
            }
        }
    }

    function GetToFillPreCreditToAdd() {
        var obj = {};
        var arrObj = new Array();
        var totalCreditQty = 0;
        var error = '';
        $("#PrePullDetailData tbody tr.row_selected").each(function (i) {
            var qty = 0;
            var serial = null;
            var lots = null;
            var expDate = null;
            var prevPullQty = 0;

            if ($(this).find('#hdnSerialNumber').length > 0) {
                serial = $(this).find('#hdnSerialNumber').val();
            }
            else if ($(this).find('#hdnLotNumber').length > 0) {
                lots = $(this).find('#hdnLotNumber').val();
            }

            if ($(this).find('#hdnExpiration').length > 0) {
                expDate = $(this).find('#hdnExpiration').val();
            }

            if ($(this).find('input.ldqty').length > 0) {
                qty = $(this).find('input.ldqty').val();
                prevPullQty = $(this).find('#hdnPoolQuantity').val();
                if (!isNaN(parseFloat(qty)) && parseFloat(qty) > 0) {
                    if (parseFloat(prevPullQty) < parseFloat(qty)) {
                        error = error + '@ResPullMaster.MsgCreditQtyLessThanPullQty';
                        return false;
                    }
                }
            }
            else if ($(this).find('#hdnPoolQuantity').length > 0) {
                qty = $(this).find('#hdnPoolQuantity').val();
            }

            if (!isNaN(parseFloat(qty)) && parseFloat(qty) > 0) {
                totalCreditQty = parseFloat(totalCreditQty) + parseFloat(qty);
                arrObj.push({ 'Serial': serial, 'Lot': lots, 'ExpireDate': expDate, 'Qty': qty });
            }
        });

        if (error.length > 0) {
            showNotificationDialog();
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            $("#spanGlobalMessage").html(error);
            return null;
        }
        var tolprvpulls = '@Model.PrevPullQty';

        if (!isNaN(parseFloat(tolprvpulls)) && parseFloat(tolprvpulls) > 0) {
            if (parseFloat(tolprvpulls) < parseFloat(totalCreditQty)) {
                showNotificationDialog();
                $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
                $("#spanGlobalMessage").html('@ResPullMaster.MsgCreditQtyMoreThanPreviousPullQty');
                return null;
            }
        }
        if (isNaN(parseFloat(totalCreditQty)) || parseFloat(totalCreditQty) < 0) {
            showNotificationDialog();
            $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
            $("#spanGlobalMessage").html('@ResPullMaster.ReqQuantitytoCredit');
            return null;
        }
        if (arrObj != null && arrObj.length > 0) {
            obj = {
                'ItemGuid': '@Model.ItemGuid', 'WOGuid': '@Model.WOGuid',
                'ItemType': '@Model.ItemType', 'Bin': '@Model.Bin',
                'ProjectName': '@Model.ProjectName', 'Quantity': '@Model.Quantity',
                'UDF1': '@Model.UDF1', 'UDF2': '@Model.UDF2', 'UDF3': '@Model.UDF3',
                'UDF4': '@Model.UDF4', 'UDF5': '@Model.UDF5', 'ItemTracking': '@Model.ItemTracking',
                'PrevPullQty': '@Model.PrevPullQty', 'ItemNumber': '@Model.ItemNumber', 'PullOrderNumber': '@Model.PullOrderNumber', 'SupplierAccountGuid' : '@Model.SupplierAccountGuid', 'PrevPullsToCredit': arrObj
            };
            return obj;
        }
        else {
            showNotificationDialog();
            $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
            $("#spanGlobalMessage").html('@ResPullMaster.MsgAllQuantityCredited');
            return null;
        }
    }

    function GetToFillPreCreditToAddOnSaveClick() {

        var obj = {};
        var arrObj = new Array();
        var totalCreditQty = 0;
        var error = '';
        var SelectedCreditQuantity = 0;

        var i = 0;
        for (i = 0; i < arrSelectedRowData.length; i++) {
            if (arrSelectedRowData[i].Error != '') {
                error = error + arrSelectedRowData[i].Error;
                return false;
            }

            if (!isNaN(parseFloat(arrSelectedRowData[i].Qty)) && parseFloat(arrSelectedRowData[i].Qty) > 0) {
                SelectedCreditQuantity = parseFloat(SelectedCreditQuantity) + parseFloat(arrSelectedRowData[i].Qty);
            }

            arrObj.push(arrSelectedRowData[i]);
        }

        if (error.length > 0) {
            showNotificationDialog();
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            $("#spanGlobalMessage").html(error);
            return null;
        }
        var tolprvpulls = '@Model.PrevPullQty';

        if (!isNaN(parseFloat(tolprvpulls)) && parseFloat(tolprvpulls) > 0) {
            if (parseFloat(tolprvpulls) < parseFloat(totalCreditQty)) {
                showNotificationDialog();
                $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
                $("#spanGlobalMessage").html('@ResPullMaster.MsgCreditQtyMoreThanPreviousPullQty');
                return null;
            }
        }
        if (isNaN(parseFloat(totalCreditQty)) || parseFloat(totalCreditQty) < 0) {
             showNotificationDialog();
             $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
             $("#spanGlobalMessage").html('@ResPullMaster.ReqQuantitytoCredit');
            return null;
        }

        if (!isNaN(parseFloat('@Model.Quantity')) && (parseFloat(SelectedCreditQuantity) > parseFloat('@Model.Quantity'))) {
             showNotificationDialog();
             $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
             $("#spanGlobalMessage").html('@ResPullMaster.MsgQtyMoreThanQtyToCredit');
            return null;
        }
        if (!isNaN(parseFloat('@Model.Quantity')) && (parseFloat(SelectedCreditQuantity) < parseFloat('@Model.Quantity'))) {
             showNotificationDialog();
             $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
             $("#spanGlobalMessage").html('@ResPullMaster.MsgQtyLessThanQtyToCredit');
            return null;
        }

        if (arrObj != null && arrObj.length > 0) {
            obj = {
                'ItemGuid': '@Model.ItemGuid', 'WOGuid': '@Model.WOGuid',
                'ItemType': '@Model.ItemType', 'Bin': '@Model.Bin',
                'ProjectName': '@Model.ProjectName', 'Quantity': '@Model.Quantity',
                'UDF1': '@Model.UDF1', 'UDF2': '@Model.UDF2', 'UDF3': '@Model.UDF3',
                'UDF4': '@Model.UDF4', 'UDF5': '@Model.UDF5', 'ItemTracking': '@Model.ItemTracking',
                'PrevPullQty': '@Model.PrevPullQty', 'ItemNumber': '@Model.ItemNumber', 'PullOrderNumber': '@Model.PullOrderNumber', 'SupplierAccountGuid' : '@Model.SupplierAccountGuid', 'PrevPullsToCredit': arrObj
            };
            return obj;
        }
        else {
             showNotificationDialog();
             $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
             $("#spanGlobalMessage").html('@ResPullMaster.MsgAllQuantityCredited');
            return null;
        }
    }
</script>
