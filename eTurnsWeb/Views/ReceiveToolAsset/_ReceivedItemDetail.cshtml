@model ReceivableItemDTO
@{
    GridHeaderSettings receivesettings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplaySaveButton = false, DisplayUDFButton = false, UDFSetupFor = "", DisplaySettings = false, DisplayColumnSetupButton = false, DisplayContextMenu = false, DisplayPrintBlock = false, DisplayDeleteButton = true, DataTableName = "ReceivedItemDetail_" + Model.OrderDetailID };
    if (Model.OrderStatus == (int)OrderStatus.Closed)
    {
        receivesettings.DisplayDeleteButton = false;
    }

    bool isCost = false;
    isCost = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.HideCostMarkUpSellPrice);
    string strCostDeci = "N";
    string strQtyDeci = "N";
    string strDateFor = "MM/dd/yyyy";
    //if (eTurnsWeb.Helper.SessionHelper.CompanyConfig != null)
    //{
    //    strCostDeci = "N" + eTurnsWeb.Helper.SessionHelper.CompanyConfig.CostDecimalPoints.GetValueOrDefault(0);
    //    strQtyDeci = "N" + eTurnsWeb.Helper.SessionHelper.CompanyConfig.QuantityDecimalPoints.GetValueOrDefault(0);
    //    if (!string.IsNullOrEmpty(eTurnsWeb.Helper.SessionHelper.CompanyConfig.DateFormatCSharp))
    //    {
    //        strDateFor = eTurnsWeb.Helper.SessionHelper.CompanyConfig.DateFormatCSharp;
    //    }
    //}

    if (!string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.CurrencyDecimalDigits))
    {
        strCostDeci = "N" + eTurnsWeb.Helper.SessionHelper.CurrencyDecimalDigits;
    }
    if (!string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits))
    {
        strQtyDeci = "N" + eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits;
    }
    if (!string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.DateTimeFormat))
    {
        strDateFor = eTurnsWeb.Helper.SessionHelper.DateTimeFormat;
    }
    bool isUpdate = false;
    bool isInsert = false;
    isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Receive, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Receive, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
}
<table style="width: 50%; float: left; margin-bottom: 10px;">
    <tr>
        <td>
            <div class="userContentInnerGrid">
                @Html.QuickListItemsGridTopHeader(receivesettings, eTurnsWeb.Helper.SessionHelper.ModuleList.Receive)
                <table id="ReceivedItemDetail_@Model.OrderDetailID" class="display">
                    <thead>
                        <tr>
                            @*<th class="NotSortable">
                                Edit
                            </th>*@
                            <th>
                                @eTurns.DTO.ResBin.BinNumber
                            </th>
                            @if (Model.SerialNumberTracking)
                            {
                                <th>
                                    @eTurns.DTO.ResItemLocationDetails.SerialNumber
                                </th>
                            }
                            @if (Model.LotNumberTracking)
                            {
                                <th>
                                    @eTurns.DTO.ResItemLocationDetails.LotNumber
                                </th>
                            }
                            @if (Model.DateCodeTracking)
                            {
                                <th>
                                    @eTurns.DTO.ResItemLocationDetails.ExpirationDate
                                </th>
                            }
                            <th>
                                @eTurns.DTO.ResItemLocationDetails.ReceivedDate
                            </th>
                            <th>
                                @eTurns.DTO.ResItemLocationDetails.CustomerOwnedQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemLocationDetails.ConsignedQuantity
                            </th>
                            @if (isCost)
                            {
                                <th>
                                    @eTurns.DTO.ResItemLocationDetails.Cost
                                </th>
                            }
                            <th>
                                @eTurns.DTO.ResOrder.PackSlipNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResItemLocationDetails.Created
                            </th>
                            <th>
                                @eTurns.DTO.ResItemLocationDetails.CreatedBy
                            </th>
                            <th>
                                EDI Sent
                            </th>
                            <th>
                                Last EDI On
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.AddedFrom
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.EditedFrom
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ReceivedOnDate
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate
                            </th>
                            @Html.RenderColumnsHeader("ReceivedOrderTransferDetail", typeof(eTurns.DTO.ResReceiveOrderDetails), "")
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ReceivedItemDetail != null && Model.ReceivedItemDetail.Count() > 0)
                        {
                            foreach (var item in Model.ReceivedItemDetail)
                            {
                            <tr id="tr_@item.ID">
                               @* <td>
                                    @if (!Model.IsCloseItem.GetValueOrDefault(false) && !item.IsEDISent.GetValueOrDefault(false) && Model.OrderStatus < (int)OrderStatus.Closed && isUpdate)
                                    {
                                        <input type="button" onclick="javascript:return OpenEditReceive(this)" id="btnEditReceive"
                                            class="GridBtnStyle inLineBtn" value="Edit" />
                                    }
                                </td>*@
                                <td>
                                    @item.BinNumber
                                    <input type='hidden' id='hdnGUID' value="@item.GUID.ToString()" />
                                    <input type='hidden' id='hdnID' value="@item.ID.ToString()" />
                                </td>
                                @if (Model.SerialNumberTracking)
                                {
                                    <td>
                                        @item.SerialNumber
                                    </td>
                                }
                                @if (Model.LotNumberTracking)
                                {
                                    <td>
                                        @item.LotNumber
                                    </td>
                                }
                                @if (Model.DateCodeTracking)
                                {
                                    <td>
                                        @item.ExpirationDateStr
                                    </td>
                                }
                                <td>
                                    @item.strReceivedDate
                                </td>
                                <td>
                                    @item.CustomerOwnedQuantity.GetValueOrDefault(0).ToString(strQtyDeci)
                                </td>
                                <td>
                                    @item.ConsignedQuantity.GetValueOrDefault(0).ToString(strQtyDeci)
                                </td>
                                @if (isCost)
                                {
                                    <td>
                                        @item.Cost.GetValueOrDefault(0).ToString(strCostDeci, eTurnsWeb.Helper.SessionHelper.RoomCulture)
                                    </td>
                                }
                                <td>
                                    @item.PackSlipNumber
                                </td>
                                <td>
                                    @item.CreatedDate
                                </td>
                                <td>
                                    @item.CreatedByName
                                </td>
                                @if (item.IsEDISent.GetValueOrDefault(false))
                                {
                                    <td id="tdEDISent_@item.ID">
                                        Yes
                                    </td>
                                }
                                else
                                {
                                    <td id="tdEDISent_@item.ID">
                                        No
                                    </td>
                                }
                                @if (item.LastEDIDate.GetValueOrDefault(DateTime.MinValue) > DateTime.MinValue)
                                {
                                    <td>
                                        @eTurnsWeb.Helper.CommonUtility.ToClientDateTime((item.LastEDIDate.GetValueOrDefault(DateTime.MinValue)))
                                    </td>
                                }
                                else
                                {
                                    <td>
                                    </td>
                                }
                                <td>
                                    @item.AddedFrom
                                </td>
                                <td>
                                    @item.EditedFrom
                                </td>
                                <td>
                                    @item.ReceivedOnDate
                                </td>
                                <td>
                                    @item.ReceivedOnDateWeb
                                </td>
                                @Html.RenderColumnsArrayForDOM("ReceivedOrderTransferDetail", item)
                            </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </td>
    </tr>
</table>
<div class="dialog" id="ReceivedOrderInnerGrid_@Model.OrderDetailID" style="display: none;">
    <div class="inner">
        <p class="text">
            @eTurns.DTO.Resources.ResMessage.DeleteConfirm
        </p>
        <a href="JavaScript:void(0)" id="btnYesReceivedItem_@Model.OrderDetailID" onclick="return DeleteYesSelectedRows('@Model.OrderDetailID.ToString()')" class="yes">
            <img src="~/Content/images/yes.png" alt="Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="javascript:void(0)" class="no" onclick="closeModal()">
            <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div>
<div id="divEditReceive">
</div>
<script language="javascript" type="text/javascript">

    $(document).ready(function () {

        fillReceivedItemDetailGrid('@Model.OrderDetailID');
        $('#deleteRows1').attr("onclick", "return deleteRowsReceived('@Model.OrderDetailID.ToString()')");
        $('#deleteRows1').attr("id", "deleteRowsRevd_@Model.OrderDetailID");


        $('#divEditReceive').dialog({
            autoOpen: false,
            modal: true,
            draggable: true,
            resizable: true,
            width: '90%',
            height: 220,
            title: "Edit Received",
            open: function () {
                $('#DivLoading').show();
                var receiveGUID = $(this).data("ReceivedGUID");
                $.ajax({
                    url: '@Url.Content("~/Receive/OpenEditReceiveDialog")',
                    data: { 'ReceivedGUID': receiveGUID },
                    type: 'Post',
                    "async": false,
                    "cache": false,
                    "dataType": "text",
                    success: function (result) {
                        $('#DivLoading').hide();
                        $('#divEditReceive').html(result)
                    },
                    error: function (xhr) {
                        $('#DivLoading').hide();
                    }

                });
            },
            close: function () {
                $(this).empty();
                $('#divEditReceive').empty();
                if ($(this).data("Success")) {
                    ImageIDToOpen = "#imgPlusMinus_" + '@Model.OrderDetailID';
                    $('#myDataTable').dataTable().fnStandingRedraw();
                    $('#DivLoading').hide();
                }
            }
        });

    });

    $('#ReceivedItemDetail_' + '@Model.OrderDetailID' + ' tbody tr').on('click', function (e) {
        var id = $(this).attr('id').replace('tr_', '');
        var td = $(this).find('#tdEDISent_' + id);
        if ($.trim(td[0].innerHTML).toLowerCase() === 'yes') {
            return false;
        }
        $(this).toggleClass('row_selected');
        return false;
    });

    
    //$('#btnEditReceive').on('click', function () {
    function OpenEditReceive(obj) {
        var receivedGUID = $(obj).parent().parent().find('#hdnGUID').val();
        $('#divEditReceive').data({ "ReceivedGUID": receivedGUID }).dialog('open');
        return false;
    }

</script>
