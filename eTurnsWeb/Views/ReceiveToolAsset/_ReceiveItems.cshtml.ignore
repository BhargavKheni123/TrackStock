@model eTurnsWeb.Controllers.ModelForReceivedItems
<div class="innerGrid" style="background: none repeat scroll 0 0 #F8F8F8; padding: 10px 0 0 28px">
    <table style="width: 98%;">
        <tr>
            <td class="BtnBlock" style="float: none; border: 1px solid #F8F8F8; height: 2px;">
                <div class="viewBlock" style="width: 200px; float: left">
                    Order:
                    @Html.DropDownList("ddlOrders", new SelectList(Model.ReceivedOrderList, "GUID", "OrderNumber"), new { @onchange = "HandleDropdownList(this,'" + Model.ItemGUID + "')", id = "ddlOrders_" + @Model.ItemGUID, @class = "selectBox", @style = "width:150px" })
                </div>
                <div class="viewBlock" id="divQty_@Model.ItemGUID" style="display: none; width: 160px; float: left">
                    Enter Quantity:
                    <input type="text" id="txtRecieveQty_@Model.ItemGUID" onkeydown="return OnlyNumeric(event,this);"
                        class="text-box" style="width: 60px; background-color: White" />
                    <input type="hidden" id="hndStaginId_@Model.ItemGUID" value="0" />
                </div>
                <div class="viewBlock" style="width: 250px; float: left">
                    <input type="button" value="Receive" id="btnInLineReceive_@Model.ItemGUID" onclick="return SaveNewReceive(this,'@Model.ItemGUID',@Model.ItemType);" class="CreateBtn" style="margin: 0 5px 0 0;
                            float: left;" />
                </div>
            </td>
        </tr>
        <tr>
            <td style="border: 0px solid #DDDDDD; padding: 5px 5px;">
                <table style="border: none; float: left;">
                    <tr>
                        <td style="width: 150px">
                            @Html.Label("lblRequiredDate", "Required Date")
                        </td>
                        <td style="width: 100px">
                            @Html.Label("lblRequiredDateDisp", "-", new { id = "lblRequiredDateDisp" + @Model.ItemGUID, text = "" })
                        </td>
                        <td style="width: 150px">
                            @Html.Label("lblRequiredQuantity", "Requested Quantity")
                        </td>
                        <td style="width: 50px">@Html.Label("lblRequiredQuantityDisp", "-", new { id = "lblRequiredQuantityDisp" + @Model.ItemGUID, text = "" })
                        </td>
                        <td style="width: 150px">
                            @Html.Label("lblReceiveQuantity", "Receive Quantity")
                        </td>
                        <td style="width: 50px">@Html.Label("lblReceiveQuantityDisp", "-", new { id = "lblReceiveQuantityDisp" + @Model.ItemGUID, text = "" })
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td style="padding: 5px 5px; border: 0px solid #DDDDDD;">
                <div id="LoadInnerGrid_@Model.ItemGUID" style="float: left; width: 98%">
                </div>
            </td>
        </tr>
    </table>
</div>
<div id="LocationDetailsReceiveItems">
</div>
<div id="LocationDetailsForStagingItemReceive">
</div>
<script type="text/javascript">

    $(document).ready(function () {
        $("#LocationDetailsReceiveItems").dialog({ autoOpen: false, modal: true, draggable: true, resizable: true, width: '75%', height: 710, title: 'Item Locations',
            open: function () {
                $('#DivLoading').show();

                $.get('@Url.Content("~/Inventory/LocationDetails")', { ItemID_ItemType: $(this).data("cdata") }, function (data) {
                    $('#LocationDetailsReceiveItems').html(data);
                    $('#DivLoading').hide();
                });
            },
            beforeClose: function () {
                if (isDirtyForm) {
                    if (confirm("This page is asking you to confirm that you want to leave - data you have entered may not be saved.")) {
                        //isDirtyForm = false;
                        return false;
                    }
                    isDirtyForm = false;
                }
            },
            close: function () {
                $('#DivLoading').show();
                $("#LocationDetailsReceiveItems").empty();
                var splitvalues = $(this).data("cdata").split('#');
                if (splitvalues != null && splitvalues != undefined && splitvalues.length > 0)
                    fillInnerGrid(splitvalues[2], splitvalues[0]);
                $('#DivLoading').hide();
            }
        });
        HandleDropdownList($('#ddlOrders_' + '@Model.ItemGUID'), '@Model.ItemGUID');

        $("#LocationDetailsForStagingItemReceive").dialog({ autoOpen: false, modal: true, draggable: true, resizable: true, width: '70%', height: 600, title: 'Item Locations',
            open: function () {
                $('#DivLoading').show();
                  $.get('@Url.Content("~/Inventory/LocationDetailsMS")', { ItemID_ItemType: $(this).data("cdata") }, function (data) {
                    $("#LocationDetailsForStagingItemReceive").html(data);
                    $('#DivLoading').hide();
                });
            },
            beforeClose: function () {
                if (isDirtyForm) {
                    if (confirm("This page is asking you to confirm that you want to leave - data you have entered may not be saved.")) {
                        //isDirtyForm = false;
                        return false;
                    }
                    isDirtyForm = false;
                }
            },
            close: function () {
                $('#DivLoading').show();
                $("#LocationDetailsReceiveItems").empty();
                var splitvalues = $(this).data("cdata").split('#');
                if (splitvalues != null && splitvalues != undefined && splitvalues.length > 0)
                    fillInnerGridForStaging(splitvalues[2], splitvalues[0]);
                $('#DivLoading').hide();
            }
        });
    });

</script>
