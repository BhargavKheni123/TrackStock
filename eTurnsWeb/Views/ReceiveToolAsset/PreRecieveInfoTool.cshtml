@model ToFillPreReceiveToolDTO
@{
    DateTime RecvDate = DateTime.MinValue;
    // DateTime RecvDate = DateTime.Parse(Model.ReceivedDate);
    //DateTime.TryParseExact(Model.ReceivedDate, eTurnsWeb.Helper.SessionHelper.RoomDateFormat, eTurns.DTO.Resources.ResourceHelper.CurrentCult,System.Globalization.DateTimeStyles.None,out RecvDate);
    DateTime.TryParseExact(Model.ReceivedDate, eTurnsWeb.Helper.SessionHelper.RoomDateFormat, (System.Globalization.CultureInfo)System.Web.HttpContext.Current.Session["RoomCulture"], System.Globalization.DateTimeStyles.None, out RecvDate);
    if (RecvDate <= DateTime.MinValue)
    {
        RecvDate = DateTime.Parse(Model.ReceivedDate);
    }
    bool isCost = false;
    isCost = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.HideCostMarkUpSellPrice);
}
<div class="innerGrid" id="divPreReceiveInfo" style="background: none repeat scroll 0 0 #F8F8F8;
    padding: 10px; float: left; width: 98%;">
    <div class="infoBlock" style="margin: 5px; width: 96%">
        <ul>
            <li>
                <label for="RoomName">
                    Order#
                </label>
                : <span>@(Model.OrderNumber)</span>
            </li>
            <li>
                <label for="RoomName">
                    Release#
                </label>
                : <span>@(Model.ReleaseNumber)</span>
            </li>
            <li>
                <label for="RoomName">
                    Serial
                </label>
                : <span>@(Model.Serial)</span>
            </li>

            <li>
                <label for="RoomName">
                    Appr. Qty
                </label>
                : <span>@(Model.ApproveQty.GetValueOrDefault(Model.RequestedQty.GetValueOrDefault(0)))</span>
            </li>
            <li>
                <label for="RoomName">
                    Received Qty
                </label>
                : <span>@(Model.ReceiveQty.GetValueOrDefault(0))</span>
            </li>
        </ul>
    </div>
    <br />
    <div style="float: left; clear: both; width: 98%; margin: 5px;">
        <table id="tblPreReceiveHeader" class="display" style="float: left; clear: both;
            width: 98%;">
            <thead>
                <tr>
                    @if (isCost)
                    {
                        <th>
                            @ResItemLocationDetails.Cost
                        </th>
                    }
                    <th>
                        @ResItemLocationDetails.ReceivedDate
                    </th>
                    <th>
                        @ResReceiveOrderDetails.ReceiveBin
                    </th>
                    <th>
                        @ResOrder.PackSlipNumber
                    </th>
                    @*<th>
                        @ResToolAssetQuantityDetail.Description

                    </th>*@
                    @Html.RenderColumnsHeader("ReceivedOrderTransferDetail", typeof(eTurns.DTO.ResReceiveOrderDetails), "")
                </tr>
            </thead>
            <tbody>
                <tr style="border: 1px solid #dddddd;">

                    <td>
                        @Html.TextBox("txtReceivedCost", Model.Cost.GetValueOrDefault(0), new { @id = "txtReceivedCost", @class = "text-boxinner numericinput", @style = "width:120px;" })
                    </td>

                    <td>
                        @Html.TextBox("txtReceivedDate", RecvDate.ToString(eTurnsWeb.Helper.SessionHelper.RoomDateFormat, eTurnsWeb.Helper.SessionHelper.RoomCulture), new { @id = "txtReceivedDate", @class = "text-boxinner dateTextbox", @style = "width:120px;", @readonly = "readonly" })
                        <input type="hidden" id="hdnOrdDtlGuid" value="@Model.OrderDetailGUID" />
                        <input type="hidden" id="hdnOrdGuid" value="@Model.OrderGUID" />
                        <input type="hidden" id="hdnToolGuid" value="@Model.ToolGUID" />
                        <input type="hidden" id="hdnIsPackSlipMand" value="false" />
                        <input type="hidden" id="hdnOrdStatus" value="@Model.OrderStatus" />
                        <input type="hidden" id="hdnReceivedCost" value="@Model.Cost.GetValueOrDefault(0)" />
                        <input type="hidden" id="hdnComment" value="@Model.Comment" />
                    </td>
                    <td>
                        @Html.TextBox("txtReceiveBin", Model.Location, new { @id = "txtReceiveBin", @class = "text-boxinner ReciveEditAuto", @style = "width:120px;" })
                    </td>
                    <td>
                        @Html.TextBox("txtPackslip", Model.PackSlipNumber, new { @id = "txtPackslip", @class = "text-boxinner", @style = "width:120px;" })
                    </td>
                    @*<td>
                        @Html.TextBox("txtDescription", Model.Description, new { @id = "txtDescription" , @class = "text-boxinner txtDescription", @style = "width:120px;", @maxlength = "1024" })
                    </td>*@
                    @Html.RenderColumnsArrayEditableObjectForDOMWithValue("ReceivedToolAssetOrderTransferDetail", Model)
                </tr>
            </tbody>
        </table>
    </div>
    <br />
    <div style="float: left; clear: both; width: 50%; margin: 5px;">
        <table id="tblPreReceive" class="display" style="float: left; clear: both; width: 98%;">
            <thead>
                <tr>

                    <th>
                        Qty. to Receive
                    </th>
                    <th>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.MakePreReceiveDetail)
                {
                    <tr style="border: 1px solid #dddddd;">

                        <td>

                            @Html.TextBox("txtQuantity", item.Quantity, new { @id = "txtQuantity", @class = "text-boxinner text-boxQuantityFormat", @style = "width:120px;" })

                        </td>
                        <td></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div style="width: 98%; float: left; text-align: center; margin: 10px;">
        <input type="button" class="CreateBtn" value="@ResCommon.Save" id="bntSavePreReceive" style="text-align: center;
            float: left" />
        <input type="button" class="CreateBtn" value="@ResCommon.Cancel" id="bntPreReceiveCancel" style="text-align: center;
            float: left" />
        <input type="button" class="CreateBtn" value="@ResCommon.CancelAll" id="bntPreReceiveCancelAll"
               style="text-align: center; float: right" />
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {

        if ('@Model.IsModelShow' === 'False') {
            var obj = GetToFillPreRcvToolToAdd();

            gblArrReceiveInfoToSave.push(obj);
            $('#divPreRecieveInfo').dialog('close');
        }
        else {
            closeOrdReceiveInfoModel();
            $('#DivLoading').hide();
            $('#divPreRecieveInfo').parent().css('width', '800px');
        }

        $("input.dateTextbox").datepicker({
            dateFormat: '@eTurnsWeb.Helper.SessionHelper.RoomDateJSFormat', showButtonPanel: true,
            changeMonth: true,
            changeYear: true,
            clearText: 'Clear', onClose: function () { this.focus(); }
        });
    });

    $('#bntPreReceiveCancel').on('click', function (e) {
        $('#divPreRecieveInfo').dialog('close');
    });
    $('#bntPreReceiveCancelAll').on('click', function (e) {
        $('#divPreRecieveInfo').dialog('close');
        gblArrPreReceiveObj = null;
        gblArrReceiveInfoToSave = null;
        $('#btnReceiveAllNew').removeAttr('disabled');
        $('#DivLoading').hide();
        closeOrdReceiveInfoModel();
    });

    $('#bntSavePreReceive').on('click', function (e) {

        gblArrReceiveInfoToSave.push(GetToFillPreRcvToAdd());
        $('#divPreRecieveInfo').dialog('close');
    });



    function GetToFillPreRcvToolToAdd() {
        var arrRcvdtlObj = new Array();
        $('#tblPreReceive tbody tr').each(function (i) {
            var qty = 0;
            var serial = ''
            var Lot = ''
            var ExpDate = ''
            qty = $(this).find('#txtQuantity').val();
            if (isNaN(parseFloat(qty)) || parseFloat(qty) <= 0) {
                return;
            }



            var toFillRcvDtl = { "Quantity": qty };
            arrRcvdtlObj.push(toFillRcvDtl);
        });
        
        var tr = $('#tblPreReceiveHeader tbody').find('tr:first');

        var Cost = 0;
        if ($(tr).find('#txtReceivedCost').length > 0) {
            Cost = $(tr).find('#txtReceivedCost').val();
        }
        else if ($(tr).find('#hdnReceivedCost').length > 0) {
            Cost = $(tr).find('#hdnReceivedCost').val();
        }

        var IsPackslipMand = $(tr).find('#hdnIsPackSlipMand').val();
        var ordStatus = $(tr).find('#hdnOrdStatus').val();
        var tolGUID = $(tr).find('#hdnToolGuid').val();
        var ordDtlGuid = $(tr).find('#hdnOrdDtlGuid').val();
        var ordGuid = $(tr).find('#hdnOrdGuid').val();
        var uDF1 = getRecUDFSelectedVal(tr, "UDF1");
        var uDF2 = getRecUDFSelectedVal(tr, "UDF2");
        var uDF3 = getRecUDFSelectedVal(tr, "UDF3");
        var uDF4 = getRecUDFSelectedVal(tr, "UDF4");
        var uDF5 = getRecUDFSelectedVal(tr, "UDF5");
        var bin = $(tr).find("#txtReceiveBin").val();
        var packSlip = $(tr).find("#txtPackslip").val();
        var recvDate = $(tr).find("#txtReceivedDate").val();
        var recvComment = $(tr).find('#hdnComment').val();

      

        var toFillPreRcv = {

            "Cost": Cost,
            "Location": bin,
            "BinNumber": bin, "ReceivedDate": recvDate, "PackSlipNumber": packSlip,
            "UDF1": uDF1, "UDF2": uDF2, "UDF3": uDF3, "UDF4": uDF4, "UDF5": uDF5,
            "Comment": recvComment,
            "ToolGUID": tolGUID, "OrderDetailGUID": ordDtlGuid,
            "OrderStatus": ordStatus, "OrderGUID": ordGuid,
            "MakePreReceiveDetail": arrRcvdtlObj
        };
        return toFillPreRcv;
    }

</script>
