@{
    ViewBag.Title = eTurns.DTO.ResCartItem.PageTitle;
    var version = eTurnsWeb.Helper.CommonUtility.GetReleaseNumber();
    var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, ShowSelectAll = true, DataTableName = "myDataTable", ListViewhref = "#", GroupedViewhref = "CartItems", DisplayUDFButton = true, UDFSetupFor = "CartItemList&UDFHeader=" + @eTurns.DTO.ResCartItem.CartItemHeader, DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "CartItemList", DisplayDeleteButton = true, ShowCartPageAction = true };
    //var settings = new GridHeaderSettings() { dataViewType = DataViewType.Both, DataTableName = "myDataTable", ListViewhref = "#", GroupedViewhref = "CartItems", DisplayUDFButton = true, UDFSetupFor = "CartItem", DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "CartItem", DisplayDeleteButton = false };
    //var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplayUDFButton = true, UDFSetupFor = "CartItem", DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "CartItem", ShowDelete = false };
    var modelCommon = new eTurns.DTO.CommonDTO { PageName = "CartItemList" };

    bool isCost = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.HideCostMarkUpSellPrice);
    bool IsableToApprove = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.AllowanquotetobeApproved);
    bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Cart, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Cart, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    string CartCoockiename = "DefaultCartListview_" + eTurnsWeb.Helper.SessionHelper.UserID;
    List<BinMasterDTO>
    lstAllBins = (List<BinMasterDTO>
        )ViewBag.AllBinsOfRoom;
    string strBinLocations = "<option value=''></option>";
    foreach (var item in lstAllBins)
    {
        strBinLocations += "<option value='" + item.ID + "'>" + item.BinNumber + "</option>";
    }


    bool UDF1IsRequired = Html.GetUdfIsRequiredStatus("OrderMaster", "UDF1");
    bool UDF2IsRequired = Html.GetUdfIsRequiredStatus("OrderMaster", "UDF2");
    bool UDF3IsRequired = Html.GetUdfIsRequiredStatus("OrderMaster", "UDF3");
    bool UDF4IsRequired = Html.GetUdfIsRequiredStatus("OrderMaster", "UDF4");
    bool UDF5IsRequired = Html.GetUdfIsRequiredStatus("OrderMaster", "UDF5");

    bool TrUDF1IsRequired = Html.GetUdfIsRequiredStatus("TransferMaster", "UDF1");
    bool TrUDF2IsRequired = Html.GetUdfIsRequiredStatus("TransferMaster", "UDF2");
    bool TrUDF3IsRequired = Html.GetUdfIsRequiredStatus("TransferMaster", "UDF3");
    bool TrUDF4IsRequired = Html.GetUdfIsRequiredStatus("TransferMaster", "UDF4");
    bool TrUDF5IsRequired = Html.GetUdfIsRequiredStatus("TransferMaster", "UDF5");

    bool QuoteUDF1IsRequired = Html.GetUdfIsRequiredStatus("QuoteMaster", "UDF1");
    bool QuoteUDF2IsRequired = Html.GetUdfIsRequiredStatus("QuoteMaster", "UDF2");
    bool QuoteUDF3IsRequired = Html.GetUdfIsRequiredStatus("QuoteMaster", "UDF3");
    bool QuoteUDF4IsRequired = Html.GetUdfIsRequiredStatus("QuoteMaster", "UDF4");
    bool QuoteUDF5IsRequired = Html.GetUdfIsRequiredStatus("QuoteMaster", "UDF5");

    bool HasOnTheFlyEntryRight = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.OnTheFlyEntry);
    bool IsSubmit = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.OrderSubmit);
    bool IsApprove = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.OrderApproval);
    bool isCartOrder = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.CartOrder);
    bool HaveCreateOrderRight = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Orders, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool HaveCreateQuoteRight = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Quote, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool isCartOrderTransfer = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.CartTransferPermission);
    bool isTransferInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Transfer, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);

    bool isCartReturnOrder = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.SuggestedReturnpermission);

    string CartPDFURL = string.Format("{0}?t={1}", "/Uploads/HelpDoc/Cart.pdf", DateTime.Now.Ticks);

    bool IsShowChangeLog = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.ItemMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.ShowChangeLog);

    bool IsCartOrderTab = ViewBag.IsCartOrderTab;
    bool IsCartTransferTab = ViewBag.IsCartTransferTab;
    bool IsCartSuggestedReturnTab = ViewBag.IsCartSuggestedReturnTab;
    //HelpDocumentMasterDTO objHelpDTO = eTurnsWeb.Helper.SessionHelper.GetHelpDocumentMaster("Cart");
    //string CartBasicVideo = "";
    //if (objHelpDTO != null)
    //{
    //    CartBasicVideo = objHelpDTO.ModuleVideoPath.Replace("../Uploads/HelpVideo/", "");
    //}
    List<HelpDocumentDetailDTO> objHelpDocDtlDTO = eTurnsWeb.Helper.SessionHelper.GetHelpDocumentDetail("Cart", (int)HelpDocType.Module);
    string OrderAllowedFileExtension = eTurns.DTO.SiteSettingHelper.OrderAllowedFileExtension;
}
<style type="text/css">
    .datatables_length label select {
        width: 48px;
    }

    .datatables_length {
        width: 300px !important;
        left: -96px !important;
    }

    .datatables_paginate {
        left: 48px !important;
    }

    .userhead paginationblock {
        right: 315px !important;
    }

    .actionBlock {
        right: 240px !important;
    }

    .userHead .selectBox {
        min-width: none;
        width: 75px !important;
    }

    .paginationBlock {
        right: 333px !important;
    }

    .actionBlock {
        right: 160px !important;
    }

    .dataTables_scrollBody {
        max-height: 500px;
        overflow-y: scroll;
    }

    .IteamBlock li {
        width: 92.5% !important;
    }

    .dataTables_wrapper .top {
        left: 0px !important;
    }
</style>
@if (SiteSettingHelper.IsBorderStateURL == "1" && SiteSettingHelper.EnableOktaLoginForSpecialUrls.Contains(eTurnsWeb.Helper.SessionHelper.CurrentDomainURL))
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyleBS.css")" />
}
else
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyle.css")" />
}
<script type='text/javascript' src="@Url.Content("~/Content/OpenAccess/jquery.cookie.js")"></script>
@section head{
    <script type='text/javascript' src="@Url.Content("~/Scripts/TabCommon.js?v=" + version)"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/SiteScripts.js?v=" + version)"></script>
    <script type="text/javascript">
        var bindropdownoption = '@strBinLocations';
        var decoded = $('<div/>').html(bindropdownoption).text();
        var CartItemListColumnsArr = new Array();
        var formData = new FormData();

        CartItemListColumnsArr.push({ mDataProp: null, sClass: "read_only center NotHide RowNo", "bSortable": false, sDefaultContent: '' });
        var isUpdateDisplay = true;
        var Fregments = location.hash.split('#');
        for (i = 0; i < Fregments.length; i++) {
            if (Fregments[i].toUpperCase() == 'LISTSUGGESTEDRETURN') {
                isUpdateDisplay = false;
            }
        }

    if ('@isUpdate' == 'True') {
        CartItemListColumnsArr.push({
            mDataProp: null,
            bSortable: false,
            sClass: "read_only",
            sDefaultContent: '',
            fnRender: function (obj, val) {
                if (obj.aData.IsAutoMatedEntry || obj.aData.IsDeleted || isUpdateDisplay == false) {
                    return "<input disabled='disabled' type='button' value='@ResCartItem.Update' onclick='return UpdateSingleItemToCart(this);' id='btnUpdateCartItem~" + obj.aData.ItemGUID + "~" + obj.aData.ID + "' class='CreateBtndisabled' style='float: none;padding: 2px 6px;margin-left: 5px;' /><span style='display:none;' id='spnUDF1'>" + obj.aData.UDF1 + "</span><span style='display:none;' id='spnUDF2'>" + obj.aData.UDF2 + "</span><span style='display:none;' id='spnUDF3'>" + obj.aData.UDF3 + "</span><span style='display:none;' id='spnUDF4'>" + obj.aData.UDF4 + "</span><span style='display:none;' id='spnUDF5'>" + obj.aData.UDF5 + "</span>";
                }
                else {
                    return "<input type='button' value='@ResCartItem.Update' onclick='return UpdateSingleItemToCart(this);' id='btnUpdateCartItem~" + obj.aData.ItemGUID + "~" + obj.aData.ID + "' class='CreateBtn' style='float: none;padding: 2px 6px;margin-left: 5px;' /><span style='display:none;' id='spnUDF1'>" + obj.aData.UDF1 + "</span><span style='display:none;' id='spnUDF2'>" + obj.aData.UDF2 + "</span><span style='display:none;' id='spnUDF3'>" + obj.aData.UDF3 + "</span><span style='display:none;' id='spnUDF4'>" + obj.aData.UDF4 + "</span><span style='display:none;' id='spnUDF5'>" + obj.aData.UDF5 + "</span>";
                }
            }
        });
    }
    //CartItemListColumnsArr.push({ mDataProp: "ID", sClass: "read_only" });
    CartItemListColumnsArr.push({ mDataProp: "ItemNumber", sClass: "read_only", sDefaultContent: '<img id="imgQty" src="' + sImageUrl + 'drildown_open.jpg' + '">', fnRender: function (obj, val) { return "<span id='spnItemNumber'>" + obj.aData.ItemNumber + "</span>"; } });
    CartItemListColumnsArr.push({ mDataProp: "Description", sClass: "read_only" });
    CartItemListColumnsArr.push({
        mDataProp: "BinName", sClass: "read_only", sDefaultContent: '', bSearchable: false, bSortable: true, fnRender: function (obj, val) {
            if (obj.aData.IsAutoMatedEntry || isUpdateDisplay == false) {
                return "<span id='spBinName'>" + obj.aData.BinName + "</span>";
            }
            else {
                var itemdefaultbin = obj.aData.BinName;
                if (itemdefaultbin == null || itemdefaultbin == 'null' || itemdefaultbin == undefined || itemdefaultbin == "undefined") {
                    itemdefaultbin = "";
                }
                if (obj.aData.IsDeleted == false) {
                    if ('@HasOnTheFlyEntryRight' == '@Boolean.TrueString') {
                        return '<span style="display:none" id="spBinName">' + obj.aData.BinName + '</span> <span style="position:relative"><input type="text" id="txtBinName" name="txtBinName" value="' + itemdefaultbin + '" class="text-boxinner" style="width:100px;" /><a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptions" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                    }
                    else {
                        return "<span style='display:none' id='spBinName'>" + obj.aData.BinName + "</span> <select id='slctBinName' name='slctBinName' class='selectBox'><option value='" + itemdefaultbin + "'>" + itemdefaultbin + "</option</select><input type='text' id='txtBinName' name='txtBinName' value='" + itemdefaultbin + "' style='display:none;' />";
                    }
                }
                else {
                    return "<span id='spBinName'>" + obj.aData.BinName + "</span>";
                }
                //return "<input type='text' value='" + obj.aData.BinName + "' id='txtBinName' name='txtBinName' class='selectBox' />";
            }
        }
    });
        CartItemListColumnsArr.push({
        mDataProp: "Quantity", sClass: "read_only numericalign", sDefaultContent: '<img id="imgQty" src="' + sImageUrl + 'drildown_open.jpg' + '">', fnRender: function (obj, val) {
            if (obj.aData.IsDeleted == true || isUpdateDisplay == false) {
                return "<span id='spQuantity'>" + FormatedCostQtyValues(obj.aData.Quantity, 2) + "</span>";

            }
            else {
                if (!obj.aData.SerialNumberTracking) {
                    return "<span style='display:none' id='spQuantity'>" + obj.aData.Quantity + "</span><input type='text' value='" + obj.aData.Quantity + "' class='numericinput text-boxinner numericalign' id='txtQty' maxlength='10' style='width:30px;' />" +
                        "<input type='hidden' id='hdnDefultOrderQty' value='" + obj.aData.DefaultReorderQuantity + "' />" +
                        "<input type='hidden' id='hdnIsAllowOrderCostuom' value='" + obj.aData.IsAllowOrderCostuom + "' />" +
                        "<input type='hidden' id='hdnOrderUOMValue' value='" + obj.aData.OrderUOMValue + "' />" +
                        "<input type='hidden' id='hdnIsEnforceDefultOrdQty' value='" + obj.aData.IsEnforceDefaultReorderQuantity + "' />";
                }
                else {
                    return "<span style='display:none' id='spQuantity'>" + obj.aData.Quantity + "</span><input type='text' value='" + obj.aData.Quantity + "' class='numericinput text-boxinner numericalign' id='txtQty' maxlength='10' style='width:30px;' />" +
                        "<input type='hidden' id='hdnDefultOrderQty' value='" + obj.aData.DefaultReorderQuantity + "' />" +
                        "<input type='hidden' id='hdnIsAllowOrderCostuom' value='" + obj.aData.IsAllowOrderCostuom + "' />" +
                        "<input type='hidden' id='hdnOrderUOMValue' value='" + obj.aData.OrderUOMValue + "' />" +
                        "<input type='hidden' id='hdnIsEnforceDefultOrdQty' value='" + obj.aData.IsEnforceDefaultReorderQuantity + "' />";
                }
            }
        }
    });
    CartItemListColumnsArr.push({ mDataProp: "OrderUOM", sClass: "read_only" });
    CartItemListColumnsArr.push({
        mDataProp: "OrderUOMQuantity", sClass: "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.OrderUOMQuantity != null && obj.aData.OrderUOMQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.OrderUOMQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    CartItemListColumnsArr.push({
        mDataProp: "ReplenishType", sClass: "read_only NotHide", sDefaultContent: '<img id="imgQty" src="' + sImageUrl + 'drildown_open.jpg' + '">', fnRender: function (obj, val) {
            if (obj.aData.IsAutoMatedEntry || obj.aData.IsDeleted == true) {
                return "<span id='spnReplenishType'>" + obj.aData.ReplenishType + "</span>" +
                       "<select id='slctRt' style='display:none;' disabled='true'><option selected='selected' value='" + obj.aData.ReplenishType + "'>" + obj.aData.ReplenishType + "</option></select>" +
                       "<input type='hidden' id='hdnUniqueID' value='" + obj.aData.GUID.toString() + "' />";

            }
            else {
                if (obj.aData.IsTransfer || obj.aData.IsPurchase) {
                    var rTypedrpbld = "<select id='slctRt' style='display:none;' class='selectBox' disabled='true'>";
                    if (obj.aData.IsTransfer || obj.aData.ReplenishType == 'Transfer') {
                        if (obj.aData.ReplenishType == 'Transfer') {
                            rTypedrpbld += "<option selected='selected' value='Transfer'>Transfer</option>";
                        }
                        else {
                            rTypedrpbld += "<option value='Transfer'>Transfer</option>";
                        }
                    }
                    if (obj.aData.IsPurchase || obj.aData.ReplenishType == 'Purchase') {
                        if (obj.aData.ReplenishType == 'Purchase') {
                            rTypedrpbld += "<option selected='selected' value='Purchase'>Purchase</option>";
                        }
                        else {
                            rTypedrpbld += "<option value='Purchase'>Purchase</option>";
                        }
                    }
                    rTypedrpbld += "</select><lable id='spnReplenishType'>" + obj.aData.ReplenishType + "</lable>";
                    return rTypedrpbld + "<input type='hidden' id='hdnUniqueID' value='" + obj.aData.GUID.toString() + "' />";
                }
                else {
                    if (obj.aData.ReplenishType != "" && obj.aData.ReplenishType != null) {
                        var rTypedrpbld = "<select id='slctRt' class='selectBox' disabled='true' style='display:none;'><option selected='selected' value='" + obj.aData.ReplenishType + "'>" + obj.aData.ReplenishType + "</option></select><lable id='spnReplenishType'>" + obj.aData.ReplenishType + "</lable>";
                        return rTypedrpbld + "<input type='hidden' id='hdnUniqueID' value='" + obj.aData.GUID.toString() + "' />";
                    }
                    else {
                        return "<input type='hidden' id='hdnUniqueID' value='" + obj.aData.GUID.toString() + "' />";
                    }

                }
            }
        }
    });
    CartItemListColumnsArr.push({ mDataProp: "IsAutoMatedEntry", sClass: "read_only", "fnRender": function (obj, val) { return GetBoolInFormat(obj, val); } });
    CartItemListColumnsArr.push({ mDataProp: "CategoryName", sClass: "read_only" });
    CartItemListColumnsArr.push({ mDataProp: "UnitName", sClass: "read_only" });
    //        CartItemListColumnsArr.push({ mDataProp: "PackingQuantity", sClass: "read_only",
    //            "fnRender": function (obj, val) {
    //                if (obj.aData.PackingQuantity != null && obj.aData.PackingQuantity != NaN)
    //                    return "<span>" + FormatedCostQtyValues(obj.aData.PackingQuantity, 2) + "</span>";
    //                else
    //                    return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
    //            }
    //        });
    CartItemListColumnsArr.push({
        mDataProp: "DefaultReorderQuantity", sClass: "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.DefaultReorderQuantity != null && obj.aData.DefaultReorderQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.DefaultReorderQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    CartItemListColumnsArr.push({
        mDataProp: "OnOrderQuantity", sClass: "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.OnOrderQuantity != null && obj.aData.OnOrderQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.OnOrderQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    CartItemListColumnsArr.push({
        mDataProp: "OnTransferQuantity", sClass: "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.OnTransferQuantity != null && obj.aData.OnTransferQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.OnTransferQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    CartItemListColumnsArr.push({
        mDataProp: "RequisitionedQuantity", sClass: "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.RequisitionedQuantity != null && obj.aData.RequisitionedQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.RequisitionedQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    CartItemListColumnsArr.push({
        mDataProp: "OnHandQuantity", sClass: "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.OnHandQuantity != null && obj.aData.OnHandQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.OnHandQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });

    CartItemListColumnsArr.push({
        mDataProp: "ItemLocationOH", sClass: "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.ItemLocationOH != null && obj.aData.ItemLocationOH != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.ItemLocationOH, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });

    CartItemListColumnsArr.push({
        mDataProp: "CriticalQuantity", sClass: "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.CriticalQuantity != null && obj.aData.CriticalQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.CriticalQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    CartItemListColumnsArr.push({
        mDataProp: "MinimumQuantity", sClass: "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.MinimumQuantity != null && obj.aData.MinimumQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.MinimumQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
    CartItemListColumnsArr.push({
        mDataProp: "MaximumQuantity", sClass: "read_only numericalign",
        "fnRender": function (obj, val) {
            if (obj.aData.MaximumQuantity != null && obj.aData.MaximumQuantity != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.MaximumQuantity, 2) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 2) + "</span>";
        }
    });
        CartItemListColumnsArr.push({
            mDataProp: "SupplierName", sClass: "read_only",
            "fnRender": function (obj, val) {
                return "<span>" + obj.aData.SupplierName+"</span><input type='hidden' id='QuoteSupplierID' value='" + obj.aData.SupplierId.toString() + "' />";
            }});
    CartItemListColumnsArr.push({ mDataProp: "SupplierPartNo", sClass: "read_only" });
    CartItemListColumnsArr.push({ mDataProp: "ManufacturerName", sClass: "read_only" });
    CartItemListColumnsArr.push({ mDataProp: "ManufacturerNumber", sClass: "read_only" });
    CartItemListColumnsArr.push({
        mDataProp: "Cost", sClass: "read_only numericalign isCost",
        "fnRender": function (obj, val) {
            if (obj.aData.Cost != null && obj.aData.Cost != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.Cost, 1) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 1) + "</span>";
        }
    });
    CartItemListColumnsArr.push({ mDataProp: "Markup", sClass: "read_only isCost" });
    CartItemListColumnsArr.push({
        mDataProp: "SellPrice", sClass: "read_only numericalign isCost",
        "fnRender": function (obj, val) {
            if (obj.aData.SellPrice != null && obj.aData.SellPrice != NaN)
                return "<span>" + FormatedCostQtyValues(obj.aData.SellPrice, 1) + "</span>";
            else
                return "<span>" + FormatedCostQtyValues(0, 1) + "</span>";
        }
    });
    CartItemListColumnsArr.push({ mDataProp: "Created", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.CreatedDate; } });
    CartItemListColumnsArr.push({ mDataProp: "Updated", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.UpdatedDate; } });
    CartItemListColumnsArr.push({ mDataProp: "UpdatedByName", sClass: "read_only" });
    CartItemListColumnsArr.push({ mDataProp: "CreatedByName", sClass: "read_only" });
    CartItemListColumnsArr.push({ mDataProp: "AddedFrom", sClass: "read_only" });
    CartItemListColumnsArr.push({ mDataProp: "EditedFrom", sClass: "read_only" });
    CartItemListColumnsArr.push({ mDataProp: "ReceivedOn", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.ReceivedOnDate; } });
    CartItemListColumnsArr.push({ mDataProp: "ReceivedOnWeb", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.ReceivedOnDateWeb; } });
    CartItemListColumnsArr.push({ mDataProp: "CostUOM", sClass: "read_only" });
        CartItemListColumnsArr.push({
            mDataProp: "LongDescription", sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val) {
                return "<div class='comment more'>" + obj.aData.LongDescription + "</div>";
            }
        });
    //        CartItemListColumnsArr.push({ mDataProp: "ReceivedOnDate", sClass: "read_only" });
    //        CartItemListColumnsArr.push({ mDataProp: "ReceivedOnDateWeb", sClass: "read_only" });
    CartItemListColumnsArr.push(@(Html.RenderColumnsArray("ItemMaster", false, "Item")));
    CartItemListColumnsArr.push(@(Html.RenderColumnsArrayEditableObject("CartItemList", false, isUDFOrderRequire: true)));
    var oTable;
    var IsRefreshGrid = false;
    var deleteURL = "/Replenish/DeleteCartItemRecords";
    //var PostCount = 0;
    var IsDeletePopupOpen = true;
    var AllowDeletePopup = true;
    var HistorySelected;
    var SelectedID = 0;
    var objColumns = {}

    $(document).ready(function () {
        @*if ('@IsCartOrderTab'.toLowerCase() == 'true' && '@isCartOrder'.toLowerCase() == 'true') {
            $('#tabOrders').show();
        }
        else { $('#tabOrders').hide(); }

        if ('@IsCartTransferTab'.toLowerCase() == 'true' && '@isCartOrderTransfer'.toLowerCase() == 'true') {
            $('#tabTransfers').show();
        }
        else { $('#tabTransfers').hide(); }

        if ('@IsCartSuggestedReturnTab'.toLowerCase() == 'true' && '@isCartReturnOrder'.toLowerCase() == 'true') {
            $('#tabReturnList').show();
        }
        else { $('#tabReturnList').hide(); }*@
        $("#hdnPageName").val('@modelCommon.PageName');
      //  debugger;

        if ('@isCartOrderTransfer' == "True" && '@isTransferInsert' == "True") {
            $("select#slectAction option[value=3]").show();
        }
        else {

            $("select#slectAction option[value=3]").hide();
        }
        if ('@isCartOrder'.toLowerCase() == 'true')
        {
            if ('@HaveCreateOrderRight'.toLowerCase() == 'true') {
                $("select#slectAction option[value=4]").show();
            }
            else
            {
                $("select#slectAction option[value=4]").hide();
            }

            if ('@HaveCreateQuoteRight'.toLowerCase() == 'true') {
                $("select#slectAction option[value=6]").show();
            }
            else
            {
                $("select#slectAction option[value=6]").hide();
            }
        }
        else {
            $("select#slectAction option[value=4]").hide();
            $("select#slectAction option[value=6]").hide();
        }

        if ('@IsCartSuggestedReturnTab'.toLowerCase() == 'true' && '@isCartReturnOrder' == "True") {
            $("select#slectAction option[value=5]").show();
        }
        else
        {
            $("select#slectAction option[value=5]").hide();
        }

       // $("#slectAction").val(4).change();

        objColumns = GetGridHeaderColumnsObject('myDataTable');
        $("select[id*='dd_CartListItem']").each(function () {
            $(this).attr("uid", "ITEM" + $(this).attr("uid"));
        });
        $("select[id*='dd_CartListItem']").each(function () {
            $(this).parent("li").find("div.accordion").find("div.dropcontent").attr("id", "ITEM" + $(this).parent("li").find("div.accordion").find("div.dropcontent").attr("id"));
        });

        $("#myDataTable").on("click", "a.ShowAllOptions", function () {
            $('#myDataTable').find("input[id='txtBinName']").off('focus');
            $('#myDataTable').find("input[id='txtBinName']").on('focus');
            $(this).siblings("input[id='txtBinName']").trigger("focus");
            $(this).siblings("input[id='txtBinName']").autocomplete("search", " ");
        });

        $("#myDataTable").on({
            mouseover: function () {
                FillLocations($(this), "");
            },
            focus: function () {
                FillLocations($(this), "");
            },
            change: function () {
                $(this).parent().find("input[id='txtBinName']").val($(this).val());
            }
        }, "#slctBinName");

        @*$("#myDataTable").on({
                focus: function () {
                    SetAutoCompleteOpenOnFocus($(this), '@Url.Action("GetAllLocationOfRoom", "Master")', null, " ");
                }
            }, "input[type='text'][id='txtBinName']");*@


        //lnkShowAllOptions
        $('#myDataTable').find("input[type='text'][id='txtBinName']").off('focus');
        $('#myDataTable').on('focus', "input[type='text'][id='txtBinName']", function (e) {
            $(this).off('focus');
            var ajaxURL = '@Url.Action("GetAllLocationOfRoom", "Master")';
            SetAutoCompleteForCurrentRoomLocations(this, ajaxURL, ' ');
        });
        //$("#myDataTable").on('focus', "input[type='text'][name='txtBinName']", function (e) {

        //    var objCurtxt = $(this);
        //    var aPos = oTable.fnGetPosition($(objCurtxt).parent()[0]);
        //    var aData = oTable.fnGetData(aPos[0]);

        //    var itmguid = aData.ItemGUID;
        //    $(this).autocomplete({
        //        source: function (request, response) {
        //            $.ajax({
        //                url: '/Master/GetBinsOfItem',
        //                contentType: 'application/json',
        //                dataType: 'json',
        //                data: {
        //                    featureClass: "P",
        //                    style: "full",
        //                    maxRows: 1000,
        //                    NameStartWith: request.term,
        //                    StagingName: '',
        //                    ItemGUID: itmguid

        //                },
        //                success: function (data) {
        //                    response($.map(data, function (item) {
        //                        return {
        //                            label: item,
        //                            value: item
        //                        }
        //                    }));
        //                },
        //                error: function (err) {

        //                }
        //            });
        //        },
        //        autoFocus: false,
        //        minLength: 1,
        //        select: function (event, ui) {
        //            //                    $(objCurtxt).parent().parent().find("input[type='hidden'][name='hdnStagingBin']").val(ui.item.selval);
        //            //                    $(objCurtxt).parent().parent().find("input[type='hidden'][name='hdnStagingBinName']").val(ui.item.label);
        //        },
        //        open: function () {
        //            $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
        //        },
        //        close: function () {
        //            $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
        //            $(objCurtxt).trigger("change");
        //        },
        //        change: function (event, ui) {
        //            //                    $(objCurtxt).parent().parent().find("input[type='hidden'][name='hdnStagingBinName']").val($(objCurtxt).val());
        //        }
        //    });
        //});

        $.cookie('@CartCoockiename', '@Url.Action("CartItemList", "Replenish")', { expires: 365, SameSite: 'Strict'  });
        LoadTabs();
        for (i = 0; i < Fregments.length; i++) {
            if (Fregments[i].toUpperCase() == 'LISTTRANSFERS') {
                $('#tab5').removeClass('selected');
                $('#tabOrders').removeClass('selected');
                $('#tabReturnList').removeClass('selected');
                $('#tabTransfers').addClass('selected');
                if ($("#btnCheckout") != undefined) {
                    $("#btnCheckout").val($("#hdnCreateTransfers").val());
                }
                $("#slectAction").val("3");
                if ($("#slectAction") != undefined) {
                    $("#slectAction").hide();
                }
                if ($("#deleteRows") != undefined) { $("#deleteRows").show(); }

                ShowHidePrintReportType("LISTTRANSFERS");

                if ('@IsCartTransferTab'.toLowerCase() == 'true' && '@isCartOrderTransfer'.toLowerCase() == 'true') {
                    $('#btnCheckout').show();
                }
                else { $('#btnCheckout').hide(); }
            }
            else if (Fregments[i].toUpperCase() == 'LISTORDERS') {
                $('#tab5').removeClass('selected');
                $('#tabTransfers').removeClass('selected');
                $('#tabReturnList').removeClass('selected');
                $('#tabOrders').addClass('selected');
                if ($("#btnCheckout") != undefined) {
                    $("#btnCheckout").val($("#hdnCreateOrders").val());
                }
                $("#slectAction").val("4");
                if ($("#slectAction") != undefined) {
                    $("#slectAction").hide();
                }
                if ($("#deleteRows") != undefined) { $("#deleteRows").show(); }

                ShowHidePrintReportType("LISTORDERS");

                if ('@IsCartOrderTab'.toLowerCase() == 'true' && '@isCartOrder'.toLowerCase() == 'true' && '@HaveCreateOrderRight'.toLowerCase() == "true" ) {
                    $("#btnCheckout").show();
                }
                else { $('#btnCheckout').hide(); }
            }
            else if (Fregments[i].toUpperCase() == 'LISTSUGGESTEDRETURN') {
                $('#tab5').removeClass('selected');
                $('#tabOrders').removeClass('selected');
                $('#tabTransfers').removeClass('selected');
                $('#tabReturnList').addClass('selected');
                if ($("#btnCheckout") != undefined) {
                    $("#btnCheckout").val($("#hdnCreateReturns").val());
                }
                $("#slectAction").val("5");
                if ($("#slectAction") != undefined) {
                    $("#slectAction").hide();
                }
                if ($("#deleteRows") != undefined) { $("#deleteRows").hide(); }

                ShowHidePrintReportType("LISTSUGGESTEDRETURN");

                if ('@IsCartSuggestedReturnTab'.toLowerCase() == 'true' && '@isCartReturnOrder'.toLowerCase() == 'true') {
                    $('#btnCheckout').show();
                }
                else { $('#btnCheckout').hide(); }
            }
            else
            {
                if ($("#btnCheckout") != undefined) {
                    $("#btnCheckout").val($("#hdnCreate").val());
                }
                if ($("#slectAction") != undefined) {
                    $("#slectAction").show();
                    $("#slectAction").val("4"); // Select replaced with create order
                }
                if ($("#deleteRows") != undefined) { $("#deleteRows").show(); }

                ShowHidePrintReportType("LIST");
                $('#btnCheckout').show();
            }
        }
        var gaiSelected = [];
        oTable = $('#myDataTable').dataTable({
            "bJQueryUI": true,
            "sScrollX": "100%",
            "bScrollCollapse": true,
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "aaSorting": [[2, "asc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            //"iDeferLoading": 1,
            "aoColumns": CartItemListColumnsArr,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {


                //$("#thUpdate").show();
                //this.fnSetColumnVis(1, true);

                //for (i = 0; i < location.hash.split('#').length; i++) {
                //    if (location.hash.split('#')[i].toUpperCase() == 'LISTSUGGESTEDRETURN') {
                //        $("#thUpdate").hide();
                //        this.fnSetColumnVis(1, false);
                //    }
                //}

                if (aData.IsDeleted == true && aData.IsArchived == true)
                    $(nRow).css('background-color', '#B9BCBF');
                    //    nRow.className = "GridDeleatedArchivedRow";
                else if (aData.IsDeleted == true)
                    $(nRow).css('background-color', '#FFCCCC');
                    //  nRow.className = "GridDeletedRow";
                else if (aData.IsArchived == true)
                    $(nRow).css('background-color', '#CCFFCC');
                //nRow.className = "GridArchivedRow";

                var spnReplenishType = $(nRow).find("#spnReplenishType").text();

                if (aData.IsDeleted || aData.IsArchived || spnReplenishType.toLowerCase() == "suggestedreturn") {
                    $(nRow).find("input,select").attr("disabled", "disabled");
                    if (spnReplenishType.toLowerCase() != "suggestedreturn") {
                        $("#thUpdate").css("display", 'none');
                        $(nRow).find("input[type='button'][id^='btnUpdateCartItem']").parent("td").hide();
                    }
                    if (spnReplenishType.toLowerCase() == "suggestedreturn") {
                        $(nRow).find("#txtBinName").hide();
                        $(nRow).find("#lnkShowAllOptions").hide();
                        $(nRow).find("#slctBinName").hide();
                        // $(nRow).find("#txtQty").hide();
                        $(nRow).find("#txtQty").removeAttr("disabled");

                        $(nRow).find("#spBinName").show();
                       // $(nRow).find("#spQuantity").removeAttr("style");
                       // $(nRow).find("spQuantity").show();
                    }
                }
                if (aData.IsDeleted == false) {
                    if (spnReplenishType.toLowerCase() != "suggestedreturn") {
                        $("#thUpdate").show();
                        $(nRow).find("input[type='button'][id^='btnUpdateCartItem']").parent("td").show();

                        if (aData.IsAutoMatedEntry.toLowerCase() == "yes")
                        {
                            $(nRow).find("#spBinName").show();
                        }
                        else
                        {
                            $(nRow).find("#spBinName").hide();
                        }
                        $(nRow).find("spQuantity").hide();
                    }
                    else
                    {
                        if (spnReplenishType.toLowerCase() == "suggestedreturn") {
                            $(nRow).find("input[type='button'][id^='btnUpdateCartItem']").attr("disabled", "disabled");
                            $(nRow).find("input[type='button'][id^='btnUpdateCartItem']").removeClass("CreateBtn");
                            $(nRow).find("input[type='button'][id^='btnUpdateCartItem']").addClass("CreateBtndisabled");

                            $(nRow).find("#txtBinName").hide();
                            $(nRow).find("#lnkShowAllOptions").hide();
                            $(nRow).find("#slctBinName").hide();
                           // $(nRow).find("#txtQty").hide();

                            $(nRow).find("#spBinName").show();
                           // $(nRow).find("#spQuantity").removeAttr("style");
                           // $(nRow).find("spQuantity").show();
                        }
                    }
                    if (aData.IsItemLevelMinMaxQtyRequired == true || aData.IsItemLevelMinMaxQtyRequired == 'Yes') {
                        var onhand = parseFloat($(aData.OnHandQuantity).text());
                        var critQty = parseFloat($(aData.CriticalQuantity).text());
                        var minQty = parseFloat($(aData.MinimumQuantity).text());
                        var onhanditemLoc = parseFloat($(aData.ItemLocationOH).text());
                        if (onhand < critQty) {
                            $(nRow).attr({ 'style': 'background-color:@eTurnsWeb.Helper.SessionHelper.CriticalQuantityBackColor !Important' });
                        }
                        else if (onhand < minQty) {
                            $(nRow).attr({ 'style': 'background-color:@eTurnsWeb.Helper.SessionHelper.MinimumQuantityBackColor !Important' });
                        }
                    }
                    else if (aData.IsItemLevelMinMaxQtyRequired == false || aData.IsItemLevelMinMaxQtyRequired == 'No') {
                        var onhand = parseFloat($(aData.ItemLocationOH).text());
                        var critQty = parseFloat($(aData.CriticalQuantity).text());
                        var minQty = parseFloat($(aData.MinimumQuantity).text());
                        if (onhand < critQty) {
                            $(nRow).attr({ 'style': 'background-color:@eTurnsWeb.Helper.SessionHelper.CriticalQuantityBackColor !Important' });
                        }
                        else if (onhand < minQty) {
                            $(nRow).attr({ 'style': 'background-color:@eTurnsWeb.Helper.SessionHelper.MinimumQuantityBackColor !Important' });
                        }
                    }
                }
                if (spnReplenishType.toLowerCase() != "transfer") {
                    if (aData.IsItemActive == false
                        || aData.IsItemOrderable == false) {
                        $(nRow).attr({ 'style': 'background-color:@eTurnsWeb.Helper.SessionHelper.QuoteLegendNotOrderableBackColor !Important' });
                    }
                }
                $("td.RowNo:first", nRow).html(this.fnSettings()._iDisplayStart + iDisplayIndex + 1);
                return nRow;
            },
            "fnStateSaveParams": function (oSettings, oData) {

                oData.oSearch.sSearch = "";
                $.ajax({
                    "url": '@Url.Content("~/Master/SaveGridState")',
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: 'CartItemList' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        o = json;
                        //var ArrFregments = location.hash.split('#');
                        //var i = 0;
                        //for (i = 0; i < ArrFregments.length; i++) {
                        //    if (ArrFregments[i].toUpperCase() == 'NEW') {
                        //        callbacknew()
                        //        location.hash = "";
                        //    }
                        //}
                    }
                });
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                        "type": "POST",
                        data: { ListName: 'CartItemList' },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        "success": function (json) {
                            if (json.jsonData != '') {
                                o = JSON.parse(json.jsonData);
                            }
                        }
                    });
                    return o;
                },
                "bServerSide": true,
                "sAjaxSource": '@Url.Action("CartItemListAjax", "Replenish")',
                "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                    var arrCols = new Array();
                    var objCols = this.fnSettings().aoColumns;
                    for (var i = 0; i <= objCols.length - 1; i++) {
                        arrCols.push(objCols[i].mDataProp);
                    }

                    //---------------------------------------------------
                    //
                    var ReplenishType = "";
                    var ArrFregments = location.hash.split('#');
                    var i = 0;
                    for (i = 0; i < ArrFregments.length; i++) {
                        //// below if condition is commentec for the jira: WI-5971 Production: Once user visits Suggested return order page, not able to click replenish type
                        //if (ArrFregments[i].toUpperCase() == 'LIST') {
                        //    ReplenishType = 'List';
                        //    if ($("[id*='CartRT-option'][value='Purchase']").length > 0 && $("[id*='CartRT-option'][value='Purchase']")[0] != null && $("[id*='CartRT-option'][value='Purchase']")[0] != undefined) {
                        //        $("[id*='CartRT-option'][value='Purchase']").removeAttr('checked');
                        //        //location.hash = "";
                        //    }

                        //    if ($("[id*='CartRT-option'][value='Transfer']").length > 0 && $("[id*='CartRT-option'][value='Transfer']")[0] != null && $("[id*='CartRT-option'][value='Transfer']")[0] != undefined) {
                        //        $("[id*='CartRT-option'][value='Transfer']").removeAttr('checked');
                        //        //location.hash = "";
                        //    }

                        //    if ($("[id*='CartRT-option'][value='SuggestedReturn']").length > 0 && $("[id*='CartRT-option'][value='SuggestedReturn']")[0] != null && $("[id*='CartRT-option'][value='SuggestedReturn']")[0] != undefined) {
                        //        $("[id*='CartRT-option'][value='SuggestedReturn']").removeAttr('checked');
                        //        //location.hash = "";
                        //    }

                        //    var SelectionTextSpan = $('#CartRT').next("button").find('span');
                        //    if (SelectionTextSpan != null && SelectionTextSpan != undefined && SelectionTextSpan.length > 1) {
                        //        SelectionTextSpan[1].innerText = 'Replenish type';
                        //    }

                        //    $('#tab5').addClass('selected');
                        //    $('#tabOrders').removeClass('selected');
                        //    $('#tabReturnList').removeClass('selected');
                        //    $('#tabTransfers').removeClass('selected');

                        //    if ($("#slectAction") != undefined) {
                        //        $("#slectAction").show();
                        //        $("#slectAction").val("");
                        //    }
                        //    if ($("#deleteRows") != undefined) { $("#deleteRows").show(); }
                        //    break;
                        //}
                        //else if (ArrFregments[i].toUpperCase() == 'LISTORDERS') {
                        if(ArrFregments[i].toUpperCase() == 'LISTORDERS') {
                            ReplenishType = 'Purchase';
                            if ($("[id*='CartRT-option'][value='Purchase']").length > 0 && $("[id*='CartRT-option'][value='Purchase']")[0] != null && $("[id*='CartRT-option'][value='Purchase']")[0] != undefined) {
                                $("[id*='CartRT-option'][value='Purchase']").attr('checked', 'checked');
                                $("#CartRTCollapse").html('');
                                $("#CartRTCollapse").append($("[id*='CartRT-option'][value='Purchase']").html());
                                //location.hash = "";
                            }

                            if ($("[id*='CartRT-option'][value='Transfer']").length > 0 && $("[id*='CartRT-option'][value='Transfer']")[0] != null && $("[id*='CartRT-option'][value='Transfer']")[0] != undefined) {
                                $("[id*='CartRT-option'][value='Transfer']").removeAttr('checked');
                                //location.hash = "";
                            }

                            if ($("[id*='CartRT-option'][value='SuggestedReturn']").length > 0 && $("[id*='CartRT-option'][value='SuggestedReturn']")[0] != null && $("[id*='CartRT-option'][value='SuggestedReturn']")[0] != undefined) {
                                $("[id*='CartRT-option'][value='SuggestedReturn']").removeAttr('checked');
                                //location.hash = "";
                            }

                            var SelectionTextSpan = $('#CartRT').next("button").find('span');
                            if (SelectionTextSpan != null && SelectionTextSpan != undefined && SelectionTextSpan.length > 1) {
                                SelectionTextSpan[1].innerText = 'Replenish type 1 selected';
                            }

                            $('#tabOrders').addClass('selected');
                            $('#tab5').removeClass('selected');
                            $('#tabReturnList').removeClass('selected');
                            $('#tabTransfers').removeClass('selected');

                            $("#slectAction").val("4");
                            if ($("#slectAction") != undefined) {
                                $("#slectAction").hide();
                            }
                            if ($("#deleteRows") != undefined) { $("#deleteRows").show(); }
                            break;
                        }
                        else if (ArrFregments[i].toUpperCase() == 'LISTSUGGESTEDRETURN') {
                            ReplenishType = 'SuggestedReturn';
                            if ($("[id*='CartRT-option'][value='Purchase']").length > 0 && $("[id*='CartRT-option'][value='Purchase']")[0] != null && $("[id*='CartRT-option'][value='Purchase']")[0] != undefined) {
                                $("[id*='CartRT-option'][value='Purchase']").removeAttr('checked');
                                //location.hash = "";
                            }

                            if ($("[id*='CartRT-option'][value='Transfer']").length > 0 && $("[id*='CartRT-option'][value='Transfer']")[0] != null && $("[id*='CartRT-option'][value='Transfer']")[0] != undefined) {
                                $("[id*='CartRT-option'][value='Transfer']").removeAttr('checked');
                                //location.hash = "";
                            }

                            if ($("[id*='CartRT-option'][value='SuggestedReturn']").length > 0 && $("[id*='CartRT-option'][value='SuggestedReturn']")[0] != null && $("[id*='CartRT-option'][value='SuggestedReturn']")[0] != undefined) {
                                $("[id*='CartRT-option'][value='SuggestedReturn']").attr('checked', 'checked');
                                $("#CartRTCollapse").html('');
                                $("#CartRTCollapse").append($("[id*='CartRT-option'][value='SuggestedReturn']").html());
                                //location.hash = "";
                            }

                            var SelectionTextSpan = $('#CartRT').next("button").find('span');
                            if (SelectionTextSpan != null && SelectionTextSpan != undefined && SelectionTextSpan.length > 1) {
                                SelectionTextSpan[1].innerText = 'Replenish type 1 selected';
                            }

                            $('#tabReturnList').addClass('selected');
                            $('#tabOrders').removeClass('selected');
                            $('#tab5').removeClass('selected');
                            $('#tabTransfers').removeClass('selected');

                            $("#slectAction").val("5");
                            if ($("#slectAction") != undefined) {
                                $("#slectAction").hide();
                            }
                            if ($("#deleteRows") != undefined) { $("#deleteRows").hide(); }
                            break;
                        }
                        else if (ArrFregments[i].toUpperCase() == 'LISTTRANSFERS') {
                            ReplenishType = 'Transfer';
                            if ($("[id*='CartRT-option'][value='Purchase']").length > 0 && $("[id*='CartRT-option'][value='Purchase']")[0] != null && $("[id*='CartRT-option'][value='Purchase']")[0] != undefined) {
                                $("[id*='CartRT-option'][value='Purchase']").removeAttr('checked');
                                //location.hash = "";
                            }

                            if ($("[id*='CartRT-option'][value='Transfer']").length > 0 && $("[id*='CartRT-option'][value='Transfer']")[0] != null && $("[id*='CartRT-option'][value='Transfer']")[0] != undefined) {
                                $("[id*='CartRT-option'][value='Transfer']").attr('checked', 'checked');
                                $("#CartRTCollapse").html('');
                                $("#CartRTCollapse").append($("[id*='CartRT-option'][value='Transfer']").html());
                                //location.hash = "";
                            }

                            if ($("[id*='CartRT-option'][value='SuggestedReturn']").length > 0 && $("[id*='CartRT-option'][value='SuggestedReturn']")[0] != null && $("[id*='CartRT-option'][value='SuggestedReturn']")[0] != undefined) {
                                $("[id*='CartRT-option'][value='SuggestedReturn']").removeAttr('checked');
                                //location.hash = "";
                            }

                            var SelectionTextSpan = $('#CartRT').next("button").find('span');
                            if (SelectionTextSpan != null && SelectionTextSpan != undefined && SelectionTextSpan.length > 1) {
                                SelectionTextSpan[1].innerText = 'Replenish type 1 selected';
                            }

                            $('#tabTransfers').addClass('selected');
                            $('#tabOrders').removeClass('selected');
                            $('#tab5').removeClass('selected');
                            $('#tabReturnList').removeClass('selected');
                            $("#slectAction").val("3");
                            if ($("#slectAction") != undefined) {
                                $("#slectAction").hide();
                            }
                            if ($("#deleteRows") != undefined) { $("#deleteRows").show(); }
                            break;
                        }
                    }

                    aoData.push({ "name": "ReplenishType", "value": ReplenishType });

                    //---------------------------------------------------
                    //
                    for (var j = 0; j <= aoData.length - 1; j++) {
                        if (aoData[j].name == "sColumns") {
                            aoData[j].value = arrCols.join("|");
                            break;
                        }
                    }

                    if (oSettings.aaSorting.length != 0)
                        aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                    else
                        aoData.push({ "name": "SortingField", "value": "0" });

                    aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                    aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });

                    oSettings.jqXHR = $.ajax({
                        "dataType": 'json',
                        "type": "POST",
                        "url": sSource,
                        cache: false,
                        "data": aoData,
						"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                        "success": fnCallback,
                        beforeSend: function () {
                            $('#myDataTable').removeHighlight();
                            $('.dataTables_scroll').css({ "opacity": 0.2 });
                        },
                        complete: function () {
                            var HistorySelected1 = fnGetSelected(oTable);
                            if (HistorySelected1.length == 0) {
                                $('#tab6').hide();
                            }
                            $('.dataTables_scroll').css({ "opacity": 1 });
                            if ($("#global_filter").val() != '') {
                                $('#myDataTable').highlight($("#global_filter").val());
                            }
                            SetUDFSelected(oSettings);

                            $(".text-boxPriceFormat").priceFormat({
                                prefix: '',
                                thousandsSeparator: '',
                                centsLimit: parseInt($('#hdCostcentsLimit').val(), 10)
                            });
                            $(".text-boxQuantityFormat").priceFormat({
                                prefix: '',
                                thousandsSeparator: '',
                                centsLimit: parseInt($('#hdQuantitycentsLimit').val(), 10)
                            });
                            $(".text-boxQuantityFormatSR").priceFormat({
                                prefix: '',
                                thousandsSeparator: '',
                                centsLimit: 0
                            });

                            UDFfillEditableOptionsForGrid();
                            CallShowHideData();
                            //$('.ShowAllOptions').click(function () {
                            //    $(this).siblings('#txtBinName').trigger("focus");
                            //    //$(this).siblings("#txtBinName").autocomplete("search", " ");
                            //});
                        }
                    })
                },
                "fnInitComplete": function () {
                    $('.ColVis').detach().appendTo(".setting-arrow");
                    $('#divQTYLegends').show(1000);
                    $("#SpanInActiveLegend").show();
                    @*$('#divQuoteLegends').show(1000);
                    if (typeof ($('#divQuoteLegends').find("#spnQuoteLegends")) != undefined) {
                        $('#divQuoteLegends').find("#spnQuoteLegends").text('@ResCartItem.CartLegendNotOrderable');
                    }*@
                }
            }).makeEditable({
                sUpdateURL: '@Url.Content("~/Master/UpdateData")'
            });

        //HIDE PRINT CONTAINER
        $('.DTTT_container').css('z-index', '-1');

        if ('@isCost' == '@Boolean.FalseString') {

            //ColumnsToHideinPopUp.push(21);
            //ColumnsToHideinPopUp.push(22);
            //ColumnsToHideinPopUp.push(23);
            HideColumnUsingClassName("myDataTable");
            //oTable.fnSetColumnVis(21, false);
            //oTable.fnSetColumnVis(22, false);
            //oTable.fnSetColumnVis(23, false);
        }


        $('#deleteRows').click(function () {
            /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
            if ($("body").hasClass('DTTT_Print')) {
                return false;
            }
            /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
            deleteURL = "/Replenish/DeleteCartItemRecords";
            var anSelectedReq = fnGetSelected(oTable);
            var stringIDs = "";
            for (var i = 0; i <= anSelectedReq.length - 1; i++) {
                stringIDs = stringIDs + $(anSelectedReq[i]).find('#hdnUniqueID').val() + ",";
            }
            if (stringIDs.length > 0) {
                $('#basic-modal-content').modal();
                IsDeletePopupOpen = true;
            }
        });

        $('#undeleteRows').click(function () {

            $("#btnCheckout").attr('disabled', 'disabled');
            $('#btnCheckout').removeClass('btnGeneral');
            $('#btnCheckout').addClass('btnGeneraldisabled');

            var _ReplanishType = '';
            var ArrFregments = location.hash.split('#');
            var i = 0;
            for (i = 0; i < ArrFregments.length; i++) {
                if (ArrFregments[i].toUpperCase() == 'LISTORDERS') {
                    $("#btnCheckout").val($("#hdnCreateOrders").val())
                    if ($("#deleteRows") != undefined) { $("#deleteRows").show(); }
                }
                else if (ArrFregments[i].toUpperCase() == 'LISTTRANSFERS') {
                    $("#btnCheckout").val($("#hdnCreateTransfers").val())
                    if ($("#deleteRows") != undefined) { $("#deleteRows").show(); }
                }
                else if (ArrFregments[i].toUpperCase() == 'LISTSUGGESTEDRETURN') {
                    $("#btnCheckout").val($("#hdnCreateReturns").val())
                    if ($("#deleteRows") != undefined) { $("#deleteRows").hide(); }
                }
                else if (ArrFregments[i] != "") {
                    $("#btnCheckout").val($("#hdnCreate").val());
                    if ($("#deleteRows") != undefined) { $("#deleteRows").show(); }
                }
            }

            /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
            if ($("body").hasClass('DTTT_Print')) {
                return false;
            }

            deleteURL = "/Inventory/UnDeleteRecords";
            var anSelectedReq = fnGetSelected(oTable);
            var stringIDs = "";
            for (var i = 0; i <= anSelectedReq.length - 1; i++) {
                stringIDs = stringIDs + $(anSelectedReq[i]).find('#hdnUniqueID').val() + ",";
            }
            if (stringIDs.length > 0) {
                $('#basic-Undelmodal-content').modal();
                IsDeletePopupOpen = true;
            }
            else {
                $("#spanGlobalMessage").html("@ResCommon.SelectRecordstoUnDelete");
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            }
        });

        $("div.userHead").find("div.viewBlock").find("a").click(function () {
            $.cookie('@CartCoockiename', $(this).attr("href"), { exRequiredDate: 365, SameSite: 'Strict'  });
        });

        /* HISTORY related data deleated and archived START */
        $('#IsDeletedRecords').live('click', function () {
            NarrowSearchInGrid('');
        });
        $('#IsArchivedRecords').live('click', function () {
            NarrowSearchInGrid('');
        });

        $('#ViewHistory').live('click', function () {
            HistorySelected = fnGetSelected(oTable);
            if (HistorySelected != undefined && HistorySelected.length == 1) {
                $("#atab5").click();
            }
            else {
                $('#tab5').html('');
                $("#spanGlobalMessage").html('@ResCommon.msgSelectForViewHistory');
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                return false;
            }
        });
        /* HISTORY related data deleated and archived END */

    });

        function ClearNarrowSearch() {

            UserCreatedNarroValues = "";
            UserUpdatedNarroValues = "";
            CartRTNarroValues = "";
            CartSupplierNarroValues = "";
            ItemLocationNarroValues = "";
            StockStatusTypeNarroValues = "";
            PullCategoryNarroValues = "";
            ItemUDF1 = ""; ItemUDF2 = ""; ItemUDF3 = ""; ItemUDF4 = ""; ItemUDF5 = "";
            ItemUDF6 = ""; ItemUDF7= ""; ItemUDF8 = ""; ItemUDF9 = ""; ItemUDF10 = "";


            if (typeof ($("#CartRT").multiselect("getChecked").length) != undefined
                && $("#CartRT").multiselect("getChecked").length > 0) {
                //$('#CartRT').multiselect('refresh')
                //$("#CartRT").multiselect("widget").find(":checkbox").removeAttr("checked");
                $("#CartRTCollapse").html('');
                $("#CartRTCollapse").hide();
                //$("#CartRT").multiselect({ selectedText: "" });
            }

            if (typeof ($("#CartSupplier").multiselect("getChecked").length) != undefined
                && $("#CartSupplier").multiselect("getChecked").length > 0) {
                //$('#CartSupplier').multiselect('refresh')
                //$("#CartSupplier").multiselect("widget").find(":checkbox").removeAttr("checked");
                $("#CartSupplierCollapse").html('');
                $("#CartSupplierCollapse").hide();
                //$("#CartSupplier").multiselect({ selectedText: "" });
            }

            if (typeof ($("#ItemLocation").multiselect("getChecked").length) != undefined
                && $("#ItemLocation").multiselect("getChecked").length > 0) {
                //$('#ItemLocation').multiselect('refresh')
                //$("#ItemLocation").multiselect("widget").find(":checkbox").removeAttr("checked");
                $("#ItemLocationCollapse").html('');
                $("#ItemLocationCollapse").hide();
                //$("#ItemLocation").multiselect({ selectedText: "" });
            }

            if (typeof ($("#StockStatus").multiselect("getChecked").length) != undefined
                && $("#StockStatus").multiselect("getChecked").length > 0) {
                //$('#StockStatus').multiselect('refresh')
                //$("#StockStatus").multiselect("widget").find(":checkbox").removeAttr("checked");
                $("#StockStatusCollapse").html('');
                $("#StockStatusCollapse").hide();
                //$("#StockStatus").multiselect({ selectedText: "" });
            }

            if (typeof ($("#PullCategory").multiselect("getChecked").length) != undefined
                && $("#PullCategory").multiselect("getChecked").length > 0) {
                //$('#PullCategory').multiselect('refresh')
                //$("#PullCategory").multiselect("widget").find(":checkbox").removeAttr("checked");
                $("#PullCategoryCollapse").html('');
                $("#PullCategoryCollapse").hide();
                //$("#PullCategory").multiselect({ selectedText: "" });
            }

            if (typeof ($("#UserCreated").multiselect("getChecked").length) != undefined
                && $("#UserCreated").multiselect("getChecked").length > 0) {
                //$('#UserCreated').multiselect('refresh')
                //$("#UserCreated").multiselect("widget").find(":checkbox").removeAttr("checked");
                $("#UserCreatedCollapse").html('');
                $("#UserCreatedCollapse").hide();
                //$("#UserCreated").multiselect({ selectedText: "" });
            }

            if (typeof ($("#UserUpdated").multiselect("getChecked").length) != undefined
                && $("#UserUpdated").multiselect("getChecked").length > 0) {
                UserUpdatedNarroValues = "";
               // $('#UserUpdated').multiselect('refresh')
               // $("#UserUpdated").multiselect("widget").find(":checkbox").removeAttr("checked");
                $("#UserUpdatedCollapse").html('');
                $("#UserUpdatedCollapse").hide();
                //$("#UserUpdated").multiselect({ selectedText: "" });
            }

            //if ($('#DateCFrom') != undefined && $('#DateCFrom').val() != '') $('#DateCFrom').val('');
            //if ($('#DateCTo') != undefined && $('#DateCTo').val() != '') $('#DateCTo').val('');
            //if ($('#DateUFrom') != undefined && $('#DateUFrom').val() != '') $('#DateUFrom').val('');
            //if ($('#DateUTo') != undefined && $('#DateUTo').val() != '') $('#DateUTo').val('');

            if (typeof ($("#UDF1_dd_CartListItem").multiselect("getChecked").length) != undefined && $("#UDF1_dd_CartListItem").multiselect("getChecked").length > 0) {
                $("#ITEMUDF1Collapse_CartListItem").html('');
                $("#ITEMUDF1Collapse_CartListItem").hide();
            }
            if (typeof ($("#UDF2_dd_CartListItem").multiselect("getChecked").length) != undefined && $("#UDF2_dd_CartListItem").multiselect("getChecked").length > 0) {
                $("#ITEMUDF2Collapse_CartListItem").html('');
                $("#ITEMUDF2Collapse_CartListItem").hide();
            }
            if (typeof ($("#UDF3_dd_CartListItem").multiselect("getChecked").length) != undefined && $("#UDF3_dd_CartListItem").multiselect("getChecked").length > 0) {
                $("#ITEMUDF3Collapse_CartListItem").html('');
                $("#ITEMUDF3Collapse_CartListItem").hide();
            }
            if (typeof ($("#UDF4_dd_CartListItem").multiselect("getChecked").length) != undefined && $("#UDF4_dd_CartListItem").multiselect("getChecked").length > 0) {
                $("#ITEMUDF4Collapse_CartListItem").html('');
                $("#ITEMUDF4Collapse_CartListItem").hide();
            }
            if (typeof ($("#UDF5_dd_CartListItem").multiselect("getChecked").length) != undefined && $("#UDF5_dd_CartListItem").multiselect("getChecked").length > 0) {
                $("#ITEMUDF5Collapse_CartListItem").html('');
                $("#ITEMUDF5Collapse_CartListItem").hide();
            }
            if (typeof ($("#UDF6_dd_CartListItem").multiselect("getChecked").length) != undefined && $("#UDF6_dd_CartListItem").multiselect("getChecked").length > 0) {
                $("#ITEMUDF6Collapse_CartListItem").html('');
                $("#ITEMUDF6Collapse_CartListItem").hide();
            }
            if (typeof ($("#UDF7_dd_CartListItem").multiselect("getChecked").length) != undefined && $("#UDF7_dd_CartListItem").multiselect("getChecked").length > 0) {
                $("#ITEMUDF7Collapse_CartListItem").html('');
                $("#ITEMUDF7Collapse_CartListItem").hide();
            }
            if (typeof ($("#UDF8_dd_CartListItem").multiselect("getChecked").length) != undefined && $("#UDF8_dd_CartListItem").multiselect("getChecked").length > 0) {
                $("#ITEMUDF8Collapse_CartListItem").html('');
                $("#ITEMUDF8Collapse_CartListItem").hide();
            }
            if (typeof ($("#UDF9_dd_CartListItem").multiselect("getChecked").length) != undefined && $("#UDF9_dd_CartListItem").multiselect("getChecked").length > 0) {
                $("#ITEMUDF9Collapse_CartListItem").html('');
                $("#ITEMUDF9Collapse_CartListItem").hide();
            }
            if (typeof ($("#UDF10_dd_CartListItem").multiselect("getChecked").length) != undefined && $("#UDF10_dd_CartListItem").multiselect("getChecked").length > 0) {
                $("#ITEMUDF10Collapse_CartListItem").html('');
                $("#ITEMUDF10Collapse_CartListItem").hide();
            }


            //UDFs
            $("select[name='udflist_CartListItem']").each(function (index) {
                if (typeof ($(this).multiselect("getChecked").length) != undefined && $(this).multiselect("getChecked").length > 0) {
                    var UDFUniqueID = this.getAttribute('UID');

                   // $('#' + UDFUniqueID).multiselect('refresh')
                   // $('#' + UDFUniqueID).multiselect("widget").find(":checkbox").removeAttr("checked");
                    $('#' + UDFUniqueID + 'Collapse').html('');
                    $('#' + UDFUniqueID + 'Collapse').hide();
                   // $('#' + UDFUniqueID).multiselect({ selectedText: "" });
                }
            });

            if ($('#global_filter').val() != '') $('#global_filter').val('');
        }

    /* HISTORY related data deleated and archived START */
    function fnGetSelected(oTableLocal) {
        return oTableLocal.$('tr.row_selected');
    }
    function HistoryTabClick() {

        GetHistoryData();
    }

    //        function GetHistoryData() {
    //            var trselected = oTable.$('tr.row_selected');
    //            if (trselected != undefined && trselected.length == 1) {
    //                var aData = oTable.fnGetData(trselected[0]);
    //                //if (SelectedID != aData.ID) {
    //                    //SelectedID = aData.ID;
    //                    $('#DivLoading').show();
    //                    $("#CTab").hide();
    //                    $("#CtabCL").show();
    //                    $('#CtabCL').load('CartItemHistory/' + SelectedID, function () { $('#DivLoading').hide(); });
    //                    //$('#tab5').load('MaterialStagingHistory', function () { $('#DivLoading').hide(); });
    //                //}
    //            }
    //            else {
    //                $('#CtabCL').html('');
    //                $("#spanGlobalMessage").text("@ResCommon.msgSelectForViewHistory");
    //                $('div#target').fadeToggle();
    //                $("div#target").delay(2000).fadeOut(200);
    //                return false;
    //            }
    //        }

    function GetHistoryData() {
        HistorySelected = fnGetSelected(oTable);
        if ($('#IsDeletedRecords').is(':checked')) {
            $('#undeleteRows').css('display', '');
            //$('#deleteRows').css('display', 'none');
            $("#deleteRows").attr("style", "display:inline-block;pointer-events: none;");
        }
        else {
            $('#undeleteRows').css('display', 'none');
            //$('#deleteRows').css('display', '');
            $("#deleteRows").removeAttr("style");
        }
        if (HistorySelected != undefined && HistorySelected.length == 1) {
            //SelectedHistoryRecordID = HistorySelected[0].id;
            var CartGUID = $(HistorySelected).find('#hdnUniqueID')[0].value;
            SelectedID = CartGUID;
            $('#DivLoading').show();
            $("#CTab").hide();
            $("#CtabCL").show();
            $('#CtabCL').load('CartItemHistory/?GUID=' + SelectedID, function () { $('#DivLoading').hide(); });
        }
        else {
            $('#CtabCL').html('');
            $("#spanGlobalMessage").html('@ResCommon.msgSelectForViewHistory');
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            return false;
        }
    }
    function SSNarroSearch(SSDDLObject) {
        //oTable.fnFilter($(CostDDLObject).val(),null,null,null);
        if ($(SSDDLObject).val() != "0") {
            SSNarroSearchValue = $(SSDDLObject).val();
            DoNarrowSearch();
        }
        else {
            SSNarroSearchValue = '';
            DoNarrowSearch();
        }
    }
    /* HISTORY related data deleated and archived END */
    </script>
    <script type="text/javascript">
        var createCartOrderType = '@OrderType.Order';
    var isTabClick = false;
    var TabsArry = [new TabClass('tab1', '@eTurns.DTO.Resources.ResCommon.New', 'callbacknew();', true, true),
     new TabClass('tab5', '@eTurns.DTO.Resources.ResCommon.List', 'callbackhistory();', true, true, true, "divUnSubmittted"),
     new TabClass('tabOrders', '@eTurns.DTO.Resources.ResCommon.mnuSuggestedOrders', 'callbackOrder();', true, true, true, "divSuggestedOrders"),
     new TabClass('tabTransfers', '@eTurns.DTO.Resources.ResCommon.mnuSuggestedTransfers', 'callbackTransfers();', true, true, true, "divSuggestedTransfers"),
     new TabClass('tabReturnList', '@eTurns.DTO.Resources.ResCommon.mnuSuggestedReturn', 'callbackCartItemReturnList();', true, true, true, "divSuggestedReturn"),

    ];
    if ('@IsShowChangeLog.ToString().ToUpper()' == 'TRUE') {
        TabsArry.push(new TabClass('tab6', '@eTurns.DTO.Resources.ResCommon.ChangeLog', 'callbackCL();', false, true));
    }
        function SetTabView() {
            var tabname = window.location.hash.toLowerCase();

            switch (tabname) {
                case "#list":
                    $("#tab5").click();
                    break
                case "#new":
                    $("#tab1").click();
                    break
                case "#listorders":
                    $("#tabOrders").click();
                    break
                case "#listtransfers":
                    $("#tabTransfers").click();
                    break
                case "#listsuggestedreturn":
                    $("#tabReturnList").click();
                    break;

            }

        }
        $(document).ready(function () {
            $(window).on('hashchange', function () {
                if (isTabClick == false) {
                    SetTabView();
                }
                else {
                    isTabClick = false;
                }
            });
            //SetTabView();
        });
        function callbacknew() {
            CartRTNarroValues = "";
        window.location.hash = '#new';
        if ($("#btnCheckout") != undefined) {
            $("#btnCheckout").val($("#hdnCreate").val());
        }
        if ($("#slectAction") != undefined) {
            $("#slectAction").show();
            $("#slectAction").val("4"); // select Replaced with Create order
        }

            if ($('#IsDeletedRecords').is(':checked')) {
                $('#undeleteRows').css('display', '');
            //$('#deleteRows').css('display', 'none');
            $("#deleteRows").attr("style", "display:inline-block;pointer-events: none;");
        }
        else {
            $('#undeleteRows').css('display', 'none');
            //$('#deleteRows').css('display', '');
            $("#deleteRows").removeAttr("style");
        }
        TabItemClickedCart('NewCartItem', 'frmCartItem');
    }
    function callbackhistory() {
        CartRTNarroValues = "";
        window.location.hash = '#list';
        ClearUDF();
        $("#tab6").hide();
        //$('#deleteRows').css('display', 'none');
        $("#deleteRows").attr("style", "display:inline-block;pointer-events: none;");
        $('#undeleteRows').css('display', 'none');
        $('#dvSupCatalogbutton').hide();

        //RefressFilterCart("CartItemList");
        RefressFilterCart("CartItemList");
        ClearNarrowSearch();
        oTable.fnFilter("");

        //$('#myDataTable').dataTable().fnStandingRedraw();
        if ($("#btnCheckout") != undefined) {
            $("#btnCheckout").val($("#hdnCreate").val());
        }
        if ($("#slectAction") != undefined) {
            $("#slectAction").show();
            $("#slectAction").val("4");// select Replaced with Create order
        }
        if ($("#deleteRows") != undefined) { $("#deleteRows").show(); }
        $("#btnCheckout").show();


        if ('@isCartOrderTransfer' == "True" && '@isTransferInsert' == "True") {
            $("select#slectAction option[value=3]").show();
        }
        else {

            $("select#slectAction option[value=3]").hide();
        }

        if ('@isCartOrder'.toLowerCase() == "true")
        {
            if ('@HaveCreateOrderRight'.toLowerCase() == "true") {
                $("select#slectAction option[value=4]").show();
            }
            else
            {
                $("select#slectAction option[value=4]").hide();
            }

            if ('@HaveCreateQuoteRight'.toLowerCase() == 'true') {
                $("select#slectAction option[value=6]").show();
            }
            else
            {
                $("select#slectAction option[value=6]").hide();
            }
        }
        else {
            $("select#slectAction option[value=4]").hide();
            $("select#slectAction option[value=6]").hide();
        }

        if ('@IsCartSuggestedReturnTab'.toLowerCase() == 'true' && '@isCartReturnOrder' == "True") {
            $("select#slectAction option[value=5]").show();
        }
        else {
            $("select#slectAction option[value=5]").hide();
        }

        ShowHidePrintReportType("LIST");

    } //HistoryTabClick(); }
    function ClearUDF() {
        UserUDF1NarrowValues = '';
        UserUDF2NarrowValues = '';
        UserUDF3NarrowValues = '';
        UserUDF4NarrowValues = '';
        UserUDF5NarrowValues = '';
        ItemUDF1 = '';
        ItemUDF2 = '';
        ItemUDF3 = '';
        ItemUDF4 = '';
        ItemUDF5 = '';
    }
    function callbackCL() {
        CartRTNarroValues = "";
        var HistorySelected1 = fnGetSelected(oTable);
        if (HistorySelected1.length > 0 && $('#tab6').is(':hidden')) {
            $('#tab6').show();
        }
        //$('#deleteRows').css('display', 'none');
        $("#deleteRows").attr("style", "display:inline-block;pointer-events: none;");
        $('#undeleteRows').css('display', 'none');
        HistoryTabClick();
    }
    function callbackCartItemReturnList() {
        CartRTNarroValues = "";
        window.location.hash = '#listSuggestedReturn';
        ClearUDF();
        $("#Ctab").show();
        $('#tab5').removeClass('selected');
        $('#tabOrders').removeClass('selected');
        $('#tabTransfers').removeClass('selected');
        $('#tabReturnList').addClass('selected');

        $("#btnCheckout").attr('disabled', 'disabled');
        $('#btnCheckout').removeClass('btnGeneral');
        $('#btnCheckout').addClass('btnGeneraldisabled');

        if ('@IsCartSuggestedReturnTab'.toLowerCase() == 'true' && '@isCartReturnOrder'.toLowerCase() == 'true') {
            $("#btnCheckout").show();
        }
        else {
            $("#btnCheckout").hide();
        }

        $("#deleteRows").attr("style", "display:inline-block;pointer-events: none;");
        $('#undeleteRows').css('display', 'none');
        $('#dvSupCatalogbutton').hide();
        //RefressFilterCart("CartItemList");
        //$('#myDataTable').dataTable().fnStandingRedraw();
        RefressFilterCart("CartItemList");
        ClearNarrowSearch();
        oTable.fnFilter("");

        if ($("#btnCheckout") != undefined) {
            $("#btnCheckout").val($("#hdnCreateReturns").val());
        }
        if ($("#deleteRows") != undefined) { $("#deleteRows").hide(); }

        ShowHidePrintReportType("LISTSUGGESTEDRETURN");

        //window.location.hash = '#listSuggestedReturn';
        //LoadPartialView("CtabReturnList", '@Url.Action("CartForReturnList", "Replenish", new { TabName = "tabReturnList" })');
        }

        function callbackOrder() {
            CartRTNarroValues = "";
            window.location.hash = '#listOrders';
            ClearUDF();
            $("#tab6").hide();

            $("#btnCheckout").attr('disabled', 'disabled');
            $('#btnCheckout').removeClass('btnGeneral');
            $('#btnCheckout').addClass('btnGeneraldisabled');

            if ('@IsCartOrderTab'.toLowerCase() == 'true' && '@isCartOrder'.toLowerCase() == 'true' && '@HaveCreateOrderRight'.toLowerCase() == 'true' ) {
                $("#btnCheckout").show();
            }
            else {
                $("#btnCheckout").hide();
            }

            $('#tab5').removeClass('selected');
            $('#tabTransfers').removeClass('selected');
            $('#tabReturnList').removeClass('selected');
            $('#tabOrders').addClass('selected');
            
            $("#deleteRows").attr("style", "display:inline-block;pointer-events: none;");
            $('#undeleteRows').css('display', 'none');
            $('#dvSupCatalogbutton').hide();
            RefressFilterCart("CartItemList");
            ClearNarrowSearch();
            //$('#myDataTable').dataTable().fnStandingRedraw();
            //GetCartNarrowSearchData();
            oTable.fnFilter("");
            if ($("#btnCheckout") != undefined) {
                $("#btnCheckout").val($("#hdnCreateOrders").val());
            }
            if ($("#deleteRows") != undefined) { $("#deleteRows").show(); }

            ShowHidePrintReportType("LISTORDERS");
        }

        function callbackTransfers() {
            CartRTNarroValues = "";
            window.location.hash = '#listTransfers';
            ClearUDF();
            $("#tab6").hide();

            $("#btnCheckout").attr('disabled', 'disabled');
            $('#btnCheckout').removeClass('btnGeneral');
            $('#btnCheckout').addClass('btnGeneraldisabled');

            if ('@IsCartTransferTab'.toLowerCase() == 'true' && '@isCartOrderTransfer'.toLowerCase() == 'true') {
                $("#btnCheckout").show();
            }
            else {
                $("#btnCheckout").hide();
            }

            $('#tab5').removeClass('selected');
            $('#tabOrders').removeClass('selected');
            $('#tabReturnList').removeClass('selected');
            $('#tabTransfers').addClass('selected');
            
            $("#deleteRows").attr("style", "display:inline-block;pointer-events: none;");
            $('#undeleteRows').css('display', 'none');
            $('#dvSupCatalogbutton').hide();
            //RefressFilterCart("CartItemList");
            //$('#myDataTable').dataTable().fnStandingRedraw();
            RefressFilterCart("CartItemList");
            ClearNarrowSearch();
            oTable.fnFilter("");
            $("#btnCheckout").val($("#hdnCreateTransfers").val());
            if ($("#deleteRows") != undefined) { $("#deleteRows").show(); }
            ShowHidePrintReportType("LISTTRANSFERS");

            //LoadPartialView("Ctab", '@Url.Action("CartItemList", "Replenish", new { TabName = "tabTransfers" })');
        }

        function ShowHidePrintReportType(PageName)
        {
            if (PageName.toLowerCase() == "LISTSUGGESTEDRETURN".toLowerCase()) {
                IsSuggestedReturnPage = true;

                if ($("#liSuggestedOrderPrint") != undefined && $("#liSuggestedOrderPrint").length > 0) {
                    $("#liSuggestedOrderPrint").hide();
                }
                if ($("#liSuggestedOrderPrintExcel") != undefined && $("#liSuggestedOrderPrintExcel").length > 0) {
                    $("#liSuggestedOrderPrintExcel").hide();
                }
                if ($("#liSuggestedOrderPrintPDF") != undefined && $("#liSuggestedOrderPrintPDF").length > 0) {
                    $("#liSuggestedOrderPrintPDF").hide();
                }

                if ($("#liSuggestedReturnPrint") != undefined && $("#liSuggestedReturnPrint").length > 0) {
                    $("#liSuggestedReturnPrint").show();
                }
                if ($("#liSuggestedReturnPrintExcel") != undefined && $("#liSuggestedReturnPrintExcel").length > 0) {
                    $("#liSuggestedReturnPrintExcel").show();
                }
                if ($("#liSuggestedReturnPrintPDF") != undefined && $("#liSuggestedReturnPrintPDF").length > 0) {
                    $("#liSuggestedReturnPrintPDF").show();
                }
            }
            else
            {
                IsSuggestedReturnPage = false;
                if ($("#liSuggestedOrderPrint") != undefined && $("#liSuggestedOrderPrint").length > 0) {
                    $("#liSuggestedOrderPrint").show();
                }
                if ($("#liSuggestedOrderPrintExcel") != undefined && $("#liSuggestedOrderPrintExcel").length > 0) {
                    $("#liSuggestedOrderPrintExcel").show();
                }
                if ($("#liSuggestedOrderPrintPDF") != undefined && $("#liSuggestedOrderPrintPDF").length > 0) {
                    $("#liSuggestedOrderPrintPDF").show();
                }

                if ($("#liSuggestedReturnPrint") != undefined && $("#liSuggestedReturnPrint").length > 0) {
                    $("#liSuggestedReturnPrint").hide();
                }
                if ($("#liSuggestedReturnPrintExcel") != undefined && $("#liSuggestedReturnPrintExcel").length > 0) {
                    $("#liSuggestedReturnPrintExcel").hide();
                }
                if ($("#liSuggestedReturnPrintPDF") != undefined && $("#liSuggestedReturnPrintPDF").length > 0) {
                    $("#liSuggestedReturnPrintPDF").hide();
                }
            }
        }
    </script>
}
<div class="userListingWrapper">
    <div id="dvSupCatalogbutton" style="display: none; width: 10%; float: right;">
        @(Html.Partial("SupplierCatalog", new SupplierCatalogItemDTO() { SourcePageName = "CartItemMaster", OpenPopup = true, ButtonText = "Add from Catalog" }))
    </div>
    <h2>
        @eTurns.DTO.ResCartItem.CartItemHeader
    </h2>
    <div class="Infoclass" style="width:70px !important">
        @if (objHelpDocDtlDTO != null && objHelpDocDtlDTO.Count > 0 && objHelpDocDtlDTO.FirstOrDefault().IsVideoShow == true)
        {
            var VideoCount = objHelpDocDtlDTO.Where(x => x.IsVideo == true).Count();
            if (VideoCount > 1)
            {
                <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">
                    <a href="#" style="z-index:205 !important">
                        <img src="~/Content/images/InfoVideo.png" alt="Help" />
                    </a>
                    <div class="refreshBlock" style="z-index:200 !important; top: 20px;">
                        <ul class="sub_subMenu">
                            @foreach (var item in objHelpDocDtlDTO)
                            {
                                if (item.IsVideo == true && !string.IsNullOrWhiteSpace(item.ModuleVideoName) && !string.IsNullOrWhiteSpace(item.ModuleVideoPath))
                                {
                                    <li class="help_docvideo" onclick="return OpenHelpDocVideo('@item.ModuleVideoPath.Replace("../Uploads/HelpDoc/", "")', '@item.ModuleVideoNoExt');">@item.ModuleVideoNoExt</li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            }
            else
            {
                HelpDocumentDetailDTO helpDetails = new HelpDocumentDetailDTO();
                helpDetails = objHelpDocDtlDTO.Where(x => x.IsVideo == true).FirstOrDefault();

                if (helpDetails != null && helpDetails.IsVideo == true && !string.IsNullOrWhiteSpace(helpDetails.ModuleVideoName) && !string.IsNullOrWhiteSpace(helpDetails.ModuleVideoPath))
                {
                    <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">
                        <img class="help_docvideo" src="~/Content/images/InfoVideo.png" alt="@helpDetails.ModuleVideoNoExt" onclick="return OpenHelpDocVideo('@helpDetails.ModuleVideoPath.Replace("../Uploads/HelpDoc/", "")', '@helpDetails.ModuleVideoNoExt');" />
                    </div>
                }
            }
        }
        @if (objHelpDocDtlDTO != null && objHelpDocDtlDTO.Count > 0 && objHelpDocDtlDTO.FirstOrDefault().IsDocShow == true)
        {
            var DocCount = objHelpDocDtlDTO.Where(x => x.IsDoc == true).Count();
            if (DocCount > 1)
            {
                <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">
                    <a href="#" style="z-index:205 !important">
                        <img src="~/Content/images/Info.png" alt="Help" />
                    </a>
                    <div class="refreshBlock" style="z-index:200 !important; top: 20px;">
                        <ul class="sub_subMenu">
                            @foreach (var item in objHelpDocDtlDTO)
                            {
                                if (item.IsDoc == true && !string.IsNullOrWhiteSpace(item.ModuleDocName) && !string.IsNullOrWhiteSpace(item.ModuleDocPath))
                                {
                                    <li class="help_docvideo" onclick="return window.open('@item.ModuleDocPath', '_blank')">@item.ModuleDocNoExt</li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            }
            else
            {
                HelpDocumentDetailDTO helpDetails = new HelpDocumentDetailDTO();
                helpDetails = objHelpDocDtlDTO.Where(x => x.IsDoc == true).FirstOrDefault();

                if (helpDetails != null && helpDetails.IsDoc == true && !string.IsNullOrWhiteSpace(helpDetails.ModuleDocName) && !string.IsNullOrWhiteSpace(helpDetails.ModuleDocPath))
                {
                    <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">
                        <img class="help_docvideo" src="~/Content/images/Info.png" alt="@helpDetails.ModuleDocNoExt" onclick="return window.open('@helpDetails.ModuleDocPath', '_blank')" />
                    </div>
                }
            }
        }
    </div>
    <div class="userListBlock">
        @Html.Hidden("hdnInsertRights", isInsert)
        @Html.Hidden("hdnUpdateRights", isUpdate)
        @Html.Hidden("hdnPageName", modelCommon.PageName)

        @Html.Hidden("hdnCreateOrders", ResCartItem.CreateOrders)
        @Html.Hidden("hdnCreateTransfers", ResCartItem.CreateTransfers)
        @Html.Hidden("hdnCreateReturns", ResCartItem.CreateReturns)
        @Html.Hidden("hdnCreate", ResCartItem.Create)

        <ul class='tabs'></ul>
        <div id="CtabNew" class="tabContener">
        </div>
        <div id="Ctab" class="tabContener">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="global_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_global_filter" />
                        </a>
                    </div>
                </div>
            </div>
            @Html.GridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.Cart)
            @*@Html.Partial("NarrowSearchLayout", modelCommon)*@
            @{ Html.RenderPartial("NarrowSearchLayout", modelCommon);}

            <div class="userContent">
                <table id="myDataTable" class="display">
                    <thead>
                        <tr>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.RowNo
                            </th>
                            @if (isUpdate)
                            {
                                <th id="thUpdate">
                                    @eTurns.DTO.Resources.ResCommon.ActionUpdate
                                </th>
                            }

                            @*
                                <th>
                                    @eTurns.DTO.Resources.ResCommon.ID
                                </th>*@
                            <th>
                                @eTurns.DTO.ResCartItem.ItemNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Description
                            </th>
                            <th>
                                @eTurns.DTO.ResCartItem.BinName
                            </th>
                            <th>
                                @eTurns.DTO.ResCartItem.Quantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OrderUOM
                            </th>
                            <th>
                                @eTurns.DTO.ResCartItem.OrderUOMQTY
                            </th>
                            <th>
                                @eTurns.DTO.ResCartItem.ReplenishType
                            </th>
                            <th>
                                @eTurns.DTO.ResCartItem.IsAutoMatedEntry
                            </th>
                            <th>
                                @eTurns.DTO.ResCategoryMaster.Category
                            </th>
                            <th>
                                @eTurns.DTO.ResUnitMaster.Unit
                            </th>
                            @*
                                <th>
                                    @eTurns.DTO.ResItemMaster.PackingQuantity
                                </th>*@
                            <th>
                                @eTurns.DTO.ResItemMaster.DefaultReorderQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OnOrderQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OnTransferQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.RequisitionedQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OnHandQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ItemLocationOH
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.CriticalQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.MinimumQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.MaximumQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Supplier
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.SupplierPartNo
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ManufacturerName
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ManufacturerNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Cost
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Markup
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.SellPrice
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.CreatedOn
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.UpdatedOn
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.LastUpdatedBy
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.CreatedBy
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.AddedFrom
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.EditedFrom
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ReceivedOnDate
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.CostUOMName
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.LongDescription
                            </th>
                            @Html.RenderColumnsHeader("ItemMaster", typeof(eTurns.DTO.ResItemMaster), "Item")
                            @Html.RenderColumnsHeader("CartItemList", typeof(eTurns.DTO.ResCartItem))
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
                <div id="processing_message" style="display: none" title="Processing">
                    @eTurns.DTO.Resources.ResMessage.RequestProcessMessage
                </div>
                @*START : QTY Legends*@
                @Html.Partial("_QTYLegends")
                @*@Html.Partial("_QuoteLegends")*@
                @*END : QTY Legends*@
            </div>
        </div>
        <div id="CtabCL" class="tabContener">
        </div>
        @*<div id="CtabReturnList" class="tabContener" style="min-height: 970px;">
            </div>*@
    </div>
    <div class="dialog" id="basic-modal-content-CartAction" style="display: none;">
        <div class="inner">
            <p class="text" id="ptextcart">
            </p>
            <a href="JavaScript:void{}" id="btnModelYesCartAction" class="yes">
                <img src="~/Content/images/yes.png" alt="Yes" />
                @eTurns.DTO.Resources.ResMessage.ConfirmYes
            </a><a href="#" class="no" onclick="closeModal()">
                <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
            </a>
        </div>
    </div>
    <div class="dialog" id="basic-modal-content-CartConfirmAction" style="display: none;">
        <div class="inner">
            <p class="text" id="ptextcart">
            </p>
            <a href="JavaScript:void{}" id="btnModelOkTransferAction" class="yes">
                <img src="~/Content/images/yes.png" alt="Yes" />
                @eTurns.DTO.Resources.ResMessage.InformOk
            </a>
        </div>
    </div>
    <div id="dvCreteOrderTransfer" style="width: 95%">
        @{Html.Partial("OrdersFromCart", new List<OrderMasterDTO>());}
    </div>
    <div id="dvCreteReturnOrder" style="width: 95%">
        @{Html.Partial("ReturnOrderFromCart", new List<OrderMasterDTO>());}
    </div>
    <div id="dvCreteQuote" style="width: 95%">
        @{Html.Partial("CreateQuoteFromCart", new List<QuoteMasterDTO>());}
    </div>
</div>
<script type="text/javascript">
    //    var objColumns = {
    //        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.ActionUpdate)': 0,
    //        '@MvcHtmlString.Create(ResCartItem.ItemNumber)': 1,
    //        '@MvcHtmlString.Create(ResCartItem.BinName)': 2,
    //        '@MvcHtmlString.Create(ResCartItem.Quantity)': 3,
    //        '@MvcHtmlString.Create(ResCartItem.ReplenishType)': 4,
    //        '@MvcHtmlString.Create(ResCartItem.IsAutoMatedEntry)': 5,
    //        '@MvcHtmlString.Create(ResCategoryMaster.Category)': 6,
    //        '@MvcHtmlString.Create(ResUnitMaster.Unit)': 7,
    //        //  '@MvcHtmlString.Create(ResItemMaster.PackingQuantity)': 8,
    //        '@MvcHtmlString.Create(ResItemMaster.DefaultReorderQuantity)': 8,
    //        '@MvcHtmlString.Create(ResItemMaster.OnOrderQuantity)': 9,
    //        '@MvcHtmlString.Create(ResItemMaster.OnTransferQuantity)': 10,
    //        '@MvcHtmlString.Create(ResItemMaster.RequisitionedQuantity)': 11,
    //        '@MvcHtmlString.Create(ResItemMaster.OnHandQuantity)': 12,
    //        '@MvcHtmlString.Create(ResItemMaster.CriticalQuantity)': 13,
    //        '@MvcHtmlString.Create(ResItemMaster.MinimumQuantity)': 14,
    //        '@MvcHtmlString.Create(ResItemMaster.MaximumQuantity)': 15,
    //        '@MvcHtmlString.Create(ResItemMaster.Supplier)': 16,
    //        '@MvcHtmlString.Create(ResItemMaster.SupplierPartNo)': 17,
    //        '@MvcHtmlString.Create(ResItemMaster.ManufacturerName)': 18,
    //        '@MvcHtmlString.Create(ResItemMaster.ManufacturerNumber)': 19,
    //        '@MvcHtmlString.Create(ResItemMaster.Cost)': 20,
    //        '@MvcHtmlString.Create(ResItemMaster.Markup)': 21,
    //        '@MvcHtmlString.Create(ResItemMaster.SellPrice)': 22,
    //        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.CreatedOn)': 23,
    //        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.UpdatedOn)': 24,
    //        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.LastUpdatedBy)': 25,
    //        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.CreatedBy)': 26,
    //        '@MvcHtmlString.Create(ResCartItem.UDF1)': 27,
    //        '@MvcHtmlString.Create(ResCartItem.UDF2)': 28,
    //        '@MvcHtmlString.Create(ResCartItem.UDF3)': 29,
    //        '@MvcHtmlString.Create(ResCartItem.UDF4)': 30,
    //        '@MvcHtmlString.Create(ResCartItem.UDF5)': 31
    //    };

    //    function BlankSession() {
    //        $.ajax({ url: '@Url.Content("~/Inventory/BlankSession")'
    //                                    , type: 'GET'
    //                                    , contentType: "application/json"
    //                                    , success: function (result) {
    //                                    },
    //            error: function (msg) {
    //            }
    //        });
    //    }
    var btnCreate = $("#hdnCreate").val();
    var btnCreateOrders = $("#hdnCreateOrders").val();
    var btnCreateTransfers = $("#hdnCreateTransfers").val();
    var btnCreateReturns = $("#hdnCreateReturns").val();
    function TabItemClickedCart(action, formName) {
        if (IsEditMode) {
            IsEditMode = false;
            return;
        }
        AllowDeletePopup = false;
        $('#DivLoading').show();
        $(formName).append($('#CtabNew').load(action, function () {
            //            $("#dvSupCatalogbutton").show();
            $('#DivLoading').hide();


        }));
        $.validator.unobtrusive.parseDynamicContent('#' + formName + ' input:last');
    }

    function SetUDFSelected(objParams) {

        $("#" + objParams.sInstance).find("tbody").find("tr").each(function () {

            var binId = $(this).find("input[name='hdnBinID']").val();
            //            $(this).find("#slctBinName").val(binId);

            var $objUdf1 = $(this).find("#UDF1");
            var $spnUDF1 = $(this).find("#spnUDF1");
            var $objUdf2 = $(this).find("#UDF2");
            var $spnUDF2 = $(this).find("#spnUDF2");
            var $objUdf3 = $(this).find("#UDF3");
            var $spnUDF3 = $(this).find("#spnUDF3");
            var $objUdf4 = $(this).find("#UDF4");
            var $spnUDF4 = $(this).find("#spnUDF4");
            var $objUdf5 = $(this).find("#UDF5");
            var $spnUDF5 = $(this).find("#spnUDF5");

            if ($objUdf1 != undefined && $spnUDF1 != undefined) {
                if ($objUdf1.is("select")) {
                    $objUdf1.find("option").filter(function () {
                        return this.text == $spnUDF1.text();
                    }).attr('selected', true);
                }
                else if ($objUdf1.is("input[type='text']")) {
                    $objUdf1.val($spnUDF1.text());
                }
            }
            if ($objUdf2 != undefined && $spnUDF2 != undefined) {
                if ($objUdf2.is("select")) {
                    $objUdf2.find("option").filter(function () {
                        return this.text == $spnUDF2.text();
                    }).attr('selected', true);
                }
                else if ($objUdf2.is("input[type='text']")) {
                    $objUdf2.val($spnUDF2.text());
                }
            }
            if ($objUdf3 != undefined && $spnUDF3 != undefined) {
                if ($objUdf3.is("select")) {
                    $objUdf3.find("option").filter(function () {
                        return this.text == $spnUDF3.text();
                    }).attr('selected', true);
                }
                else if ($objUdf3.is("input[type='text']")) {
                    $objUdf3.val($spnUDF3.text());
                }
            }
            if ($objUdf4 != undefined && $spnUDF4 != undefined) {
                if ($objUdf4.is("select")) {
                    $objUdf4.find("option").filter(function () {
                        return this.text == $spnUDF4.text();
                    }).attr('selected', true);
                }
                else if ($objUdf4.is("input[type='text']")) {
                    $objUdf4.val($spnUDF4.text());
                }
            }

            if ($objUdf5 != undefined && $spnUDF5 != undefined) {
                if ($objUdf5.is("select")) {
                    $objUdf5.find("option").filter(function () {
                        return this.text == $spnUDF5.text();
                    }).attr('selected', true);
                }
                else if ($objUdf5.is("input[type='text']")) {
                    $objUdf5.val($spnUDF5.text());
                }
            }
        });
    }

    function UpdateSingleItemToCart(obj) {

        var currentTR = $(obj).parent().parent()[0];
        var aPos = oTable.fnGetPosition($(obj).parent()[0]);
        var aData = oTable.fnGetData(aPos[0]);
        var arrId = obj.id.split("~");
        //var vItemID = arrId[1];
        var vItemGUID = arrId[1];
        var vCartItemId = arrId[2];
        var txtQty = $(obj).parent().parent().find("#txtQty");
        var slctRt = $(obj).parent().parent().find("#slctRt");
        var slctBinName = $(obj).parent().parent().find("input[type='text'][name='txtBinName']");
        var vItemNumber = $(obj).parent().parent().find("#spnItemNumber").text();
        var ReplenishType = "";
        var BinName = '';
        if (slctRt != undefined) {
            ReplenishType = $(slctRt).val();
        }
        if (slctBinName != undefined) {
            BinName = $(slctBinName).val();
        }
        if (txtQty != undefined && vItemGUID != "") {
            var trimtxtValQ = $(txtQty).val().replace(/ /g, '');

            if (!isNaN(trimtxtValQ) && trimtxtValQ.length > 0 && parseFloat(trimtxtValQ) > 0) {
                $('#DivLoading').show();
                var vUDF1 = '';
                var vUDF2 = '';
                var vUDF3 = '';
                var vUDF4 = '';
                var vUDF5 = '';


                if ($(obj).parent().parent().find('#UDF1') != null) {
                    if ($(obj).parent().parent().find('#UDF1').attr("class") == 'selectBox') {
                        vUDF1 = $(obj).parent().parent().find('#UDF1 option:selected').text();
                    }
                    else {
                        vUDF1 = $(obj).parent().parent().find('#UDF1').val();
                    }
                }

                if ($(obj).parent().parent().find('#UDF2') != null) {
                    if ($(obj).parent().parent().find('#UDF2').attr("class") == 'selectBox') {
                        vUDF2 = $(obj).parent().parent().find('#UDF2 option:selected').text();
                    }
                    else {
                        vUDF2 = $(obj).parent().parent().find('#UDF2').val();
                    }
                }

                if ($(obj).parent().parent().find('#UDF3') != null) {
                    if ($(obj).parent().parent().find('#UDF3').attr("class") == 'selectBox') {
                        vUDF3 = $(obj).parent().parent().find('#UDF3 option:selected').text();
                    }
                    else {
                        vUDF3 = $(obj).parent().parent().find('#UDF3').val();
                    }
                }

                if ($(obj).parent().parent().find('#UDF4') != null) {
                    if ($(obj).parent().parent().find('#UDF4').attr("class") == 'selectBox') {
                        vUDF4 = $(obj).parent().parent().find('#UDF4 option:selected').text();
                    }
                    else {
                        vUDF4 = $(obj).parent().parent().find('#UDF4').val();
                    }
                }

                if ($(obj).parent().parent().find('#UDF5') != null) {
                    if ($(obj).parent().parent().find('#UDF5').attr("class") == 'selectBox') {
                        vUDF5 = $(obj).parent().parent().find('#UDF5 option:selected').text();
                    }
                    else {
                        vUDF5 = $(obj).parent().parent().find('#UDF5').val();
                    }
                }
                $.ajax({
                    "url": '@Url.Action("UpdateCartItemData", "Replenish")',
                    "data": { ID: vCartItemId, ItemGUID: vItemGUID, ItemNumber: vItemNumber, CartQty: trimtxtValQ, BinName: BinName, ReplenishType: ReplenishType, UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, IsFromUI: true },
                    "async": false,
                    "cache": false,
                    "dataType": "json",
                    success: function (response) {

                        if (response.Status == "ok") {

                            UDFInsertNewForGrid($(obj).parent().parent());
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").html(response.Message);
                            $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                            if (oTable != undefined) {
                                var row_id = oTable.fnGetPosition(currentTR);
                                oTable.fnUpdate(response.CartObj, row_id);
                                oTable.$("tr[id='" + vItemGUID + "']").find("span[id='spnQty_" + vItemGUID + "']").text(response.TotalQty);
                            }
                        }
                        else {
                            $("#spanGlobalMessage").html(response.Message);
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        }
                        $('#DivLoading').hide();
                        RefressFilterCart("CartItemList");
                        CallNarrowfunctions();
                        //FillRedCount();
                    },
                    error: function (response) {
                        $('#DivLoading').hide();
                        $("#spanGlobalMessage").html(response.message);
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    }
                });

            }
            else {
                $("#spanGlobalMessage").html('@eTurns.DTO.ResCartItem.msgAddSingle');
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                //alert('@eTurns.DTO.ResCartItem.msgAddSingle');
            }
        }

    }
</script>
@*@if (false)
    {
    <script src="../../Scripts/jquery-1.9.1-vsdoc.js" type="text/javascript"></script>
    }*@
<script type="text/javascript">
    //    $(document).ready(function () {
    //        oTable.fnDraw();
    //    });
    var removedFileListName = [];
    var OrderAllowedFileExtension = '@OrderAllowedFileExtension';
    jQuery(function () {
        setTimeout(function () {
            $.ajax({
                "dataType": 'json',
                "type": "POST",
                "url": '@Url.Action("ClearSession", "Replenish")',
                "success": function (retdata) {

                }
            })

        }, 10000);

        $("#dvCreteOrderTransfer").dialog({
            autoOpen: false,
            modal: true,
            width: 1200,
            title: '@eTurns.DTO.ResCartItem.PageTitle',
            draggable: false,
            resizable: false,
            open: function () {
                AllowDeletePopup = false;
            },
            close: function () {
                AllowDeletePopup = true;
                removedFileListName = [];
            }
        });

        $("#dvCreteReturnOrder").dialog({
            autoOpen: false,
            modal: true,
            width: 1200,
            title: '@eTurns.DTO.ResCartItem.PageTitle',
            draggable: false,
            resizable: false,
            open: function () {
                AllowDeletePopup = false;
            },
            close: function () {
                AllowDeletePopup = true;
            }
        });

        $("#dvCreteQuote").dialog({
            autoOpen: false,
            modal: true,
            width: 1200,
            title: '@eTurns.DTO.ResQuoteMaster.PageTitle',
            draggable: false,
            resizable: false,
            open: function () {
                AllowDeletePopup = false;
            },
            close: function () {
                AllowDeletePopup = true;
            }
        });

        //        $("#basic-modal-content-CartAction").dialog({
        //            autoOpen: false,
        //            modal: true,
        //            width: 400,
        //            title: '@eTurns.DTO.ResCartItem.PageTitle',
        //            draggable: false,
        //            resizable: false,
        //            open: function () {
        //            }
        //        });

        $("#btnCheckout").click(function () {
            if ($("#slectAction").val() != "") {
                var anSelected = fnGetSelected(oTable);
                var stringIDs = "";
                var strPurchase = 0;
                var strTransfer = 0;
                var strSuggestedReturn = 0;
                var OrderLineItemUDF1 = "";
                var OrderLineItemUDF2 = "";
                var OrderLineItemUDF3 = "";
                var OrderLineItemUDF4 = "";
                var OrderLineItemUDF5 = "";
                var OrderItemQuantity = "";
                var QuoteSuppliers = "";
                for (var i = 0; i <= anSelected.length - 1; i++) {
                    if ($(anSelected[i]).find('#txtQty') != null && $(anSelected[i]).find('#txtQty') != undefined && $(anSelected[i]).find('#txtQty').length > 0) {
                        var trimtxtValQ = $(anSelected[i]).find('#txtQty').val().replace(/ /g, '');
                        if (!isNaN(trimtxtValQ) && trimtxtValQ.length > 0 && parseFloat(trimtxtValQ) > 0) {

                        } else {
                            if (($("#slectAction").val() == 3 && $(anSelected[i]).find("select#slctRt").val() == "Transfer") || ($("#slectAction").val() == 4 && $(anSelected[i]).find("select#slctRt").val() == "Purchase") || ($("#slectAction").val() == 5 && $(anSelected[i]).find("select#slctRt").val() == "SuggestedReturn") || ($("#slectAction").val() == 6 && $(anSelected[i]).find("select#slctRt").val() == "Purchase") ) {
                                $("#spanGlobalMessage").html("@ResCartItem.QuantityReplenishValidation");
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                                return;
                            }
                        }
                    }
                    if ($("#slectAction").val() == 3 && $(anSelected[i]).find("select#slctRt").val() == "Transfer") {
                        stringIDs = stringIDs + $(anSelected[i]).find('#hdnUniqueID').val() + ",";
                        if ($(anSelected[i]).find('#txtQty') != null) {
                            if ($(anSelected[i]).find('#txtQty').val() != undefined) {
                                OrderItemQuantity = OrderItemQuantity + $(anSelected[i]).find('#txtQty').val() + ",";
                            }
                        }
                    }
                    else if (($("#slectAction").val() == 4 || $("#slectAction").val() == 6)
                        && $(anSelected[i]).find("select#slctRt").val() == "Purchase") {
                        stringIDs = stringIDs + $(anSelected[i]).find('#hdnUniqueID').val() + ",";
                        if ($(anSelected[i]).find('#UDF1') != null) {
                            if ($(anSelected[i]).find('#UDF1').attr("class") == 'selectBox' && $(anSelected[i]).find('#UDF1 option:selected').text() != undefined) {
                                OrderLineItemUDF1 = OrderLineItemUDF1 + $(anSelected[i]).find('#UDF1 option:selected').text() + ",";
                            }
                            else {
                                if ($(anSelected[i]).find('#UDF1').val() != undefined) {
                                    OrderLineItemUDF1 = OrderLineItemUDF1 + $(anSelected[i]).find('#UDF1').val() + ",";
                                }
                            }
                        }
                        if ($(anSelected[i]).find('#UDF2') != null) {
                            if ($(anSelected[i]).find('#UDF2').attr("class") == 'selectBox' && $(anSelected[i]).find('#UDF2 option:selected').text() != undefined) {
                                OrderLineItemUDF2 = OrderLineItemUDF2 + $(anSelected[i]).find('#UDF2 option:selected').text() + ",";
                            }
                            else {
                                if ($(anSelected[i]).find('#UDF2').val() != undefined) {
                                    OrderLineItemUDF2 = OrderLineItemUDF2 + $(anSelected[i]).find('#UDF2').val() + ",";
                                }
                            }
                        }
                        if ($(anSelected[i]).find('#UDF3') != null) {
                            if ($(anSelected[i]).find('#UDF3').attr("class") == 'selectBox' && $(anSelected[i]).find('#UDF3 option:selected').text() != undefined) {
                                OrderLineItemUDF3 = OrderLineItemUDF3 + $(anSelected[i]).find('#UDF3 option:selected').text() + ",";
                            }
                            else {
                                if ($(anSelected[i]).find('#UDF3').val() != undefined) {
                                    OrderLineItemUDF3 = OrderLineItemUDF3 + $(anSelected[i]).find('#UDF3').val() + ",";
                                }
                            }
                        }
                        if ($(anSelected[i]).find('#UDF4') != null) {
                            if ($(anSelected[i]).find('#UDF4').attr("class") == 'selectBox' && $(anSelected[i]).find('#UDF4 option:selected').text() != undefined) {
                                OrderLineItemUDF4 = OrderLineItemUDF4 + $(anSelected[i]).find('#UDF4 option:selected').text() + ",";
                            }
                            else {
                                if ($(anSelected[i]).find('#UDF4').val() != undefined) {
                                    OrderLineItemUDF4 = OrderLineItemUDF4 + $(anSelected[i]).find('#UDF4').val() + ",";
                                }
                            }
                        }

                        if ($(anSelected[i]).find('#UDF5') != null) {
                            if ($(anSelected[i]).find('#UDF5').attr("class") == 'selectBox' && $(anSelected[i]).find('#UDF5 option:selected').text() != undefined) {
                                OrderLineItemUDF5 = OrderLineItemUDF5 + $(anSelected[i]).find('#UDF5 option:selected').text() + ",";
                            }
                            else {
                                if ($(anSelected[i]).find('#UDF5').val() != undefined) {
                                    OrderLineItemUDF5 = OrderLineItemUDF5 + $(anSelected[i]).find('#UDF5').val() + ",";
                                }
                            }
                        }
                        if ($(anSelected[i]).find('#txtQty') != null && $(anSelected[i]).find('#txtQty') != undefined && $(anSelected[i]).find('#txtQty').length > 0) {
                            if ($(anSelected[i]).find('#txtQty').val() != undefined) {
                                var apprQty = $(anSelected[i]).find('#txtQty').val();
                                var isEnforceDefultOrdQty = $(anSelected[i]).find('#hdnIsEnforceDefultOrdQty').val();
                                var IsAllowOrderCostuom = $(anSelected[i]).find('#hdnIsAllowOrderCostuom').val();
                                var OrderUOMValue = $(anSelected[i]).find('#hdnOrderUOMValue').val();
                                var defultOrderQty = $(anSelected[i]).find('#hdnDefultOrderQty').val();
                                var itemNumber = $(anSelected[i]).find('#spnItemNumber').html();
                                var modulo = 0;
                                var qtyadd = 0;
                                if (isEnforceDefultOrdQty == 'true') {
                                    if (!isNaN(parseFloat(defultOrderQty)) && parseFloat(defultOrderQty) > 0) {
                                        var alertMsg = ' ' + '@ResOrder.QuantityNotMatchedWithDefaultReOrderQty'.replace("{0}", defultOrderQty).replace("{1}", itemNumber)
                                        if (!isNaN(parseFloat(apprQty)) && parseFloat(apprQty) > 0) {
                                            if (IsAllowOrderCostuom == "true") {
                                                modulo = (parseFloat(apprQty) * parseFloat(OrderUOMValue)) % (parseFloat(defultOrderQty));
                                                qtyadd = (parseFloat(apprQty) * parseFloat(OrderUOMValue));
                                            }
                                            else {
                                                modulo = (parseFloat(apprQty)) % (parseFloat(defultOrderQty));
                                                qtyadd = parseFloat(apprQty);
                                            }
                                        }
                                        if (!isNaN(parseFloat(modulo)) && parseFloat(modulo) > 0) {
                                            //alert(alertMsg);
                                            $('#DivLoading').hide();
                                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                                            $("#spanGlobalMessage").html(alertMsg);
                                            showNotificationDialog();
                                            isError = true;
                                            return false;
                                        } else {
                                            OrderItemQuantity = OrderItemQuantity + qtyadd + ",";
                                        }
                                    }
                                } else {
                                    OrderItemQuantity = OrderItemQuantity + $(anSelected[i]).find('#txtQty').val() + ",";
                                }
                                //OrderItemQuantity = OrderItemQuantity + $(anSelected[i]).find('#spDefaultReorderQuantityTemp').html() + ",";
                                //if (OrderItemQuantity === '' || OrderItemQuantity === null)
                                //    OrderItemQuantity = OrderItemQuantity + $(anSelected[i]).find('#txtQty').val() + ",";

                            }
                        }

                    }
                    else if ($("#slectAction").val() == 5) {
                        stringIDs = stringIDs + $(anSelected[i]).find('#hdnUniqueID').val() + ",";
                        if ($(anSelected[i]).find('#UDF1') != null) {
                            if ($(anSelected[i]).find('#UDF1').attr("class") == 'selectBox' && $(anSelected[i]).find('#UDF1 option:selected').text() != undefined) {
                                OrderLineItemUDF1 = OrderLineItemUDF1 + $(anSelected[i]).find('#UDF1 option:selected').text() + ",";
                            }
                            else {
                                if ($(anSelected[i]).find('#UDF1').val() != undefined) {
                                    OrderLineItemUDF1 = OrderLineItemUDF1 + $(anSelected[i]).find('#UDF1').val() + ",";
                                }
                            }
                        }
                        if ($(anSelected[i]).find('#UDF2') != null) {
                            if ($(anSelected[i]).find('#UDF2').attr("class") == 'selectBox' && $(anSelected[i]).find('#UDF2 option:selected').text() != undefined) {
                                OrderLineItemUDF2 = OrderLineItemUDF2 + $(anSelected[i]).find('#UDF2 option:selected').text() + ",";
                            }
                            else {
                                if ($(anSelected[i]).find('#UDF2').val() != undefined) {
                                    OrderLineItemUDF2 = OrderLineItemUDF2 + $(anSelected[i]).find('#UDF2').val() + ",";
                                }
                            }
                        }
                        if ($(anSelected[i]).find('#UDF3') != null) {
                            if ($(anSelected[i]).find('#UDF3').attr("class") == 'selectBox' && $(anSelected[i]).find('#UDF3 option:selected').text() != undefined) {
                                OrderLineItemUDF3 = OrderLineItemUDF3 + $(anSelected[i]).find('#UDF3 option:selected').text() + ",";
                            }
                            else {
                                if ($(anSelected[i]).find('#UDF3').val() != undefined) {
                                    OrderLineItemUDF3 = OrderLineItemUDF3 + $(anSelected[i]).find('#UDF3').val() + ",";
                                }
                            }
                        }
                        if ($(anSelected[i]).find('#UDF4') != null) {
                            if ($(anSelected[i]).find('#UDF4').attr("class") == 'selectBox' && $(anSelected[i]).find('#UDF4 option:selected').text() != undefined) {
                                OrderLineItemUDF4 = OrderLineItemUDF4 + $(anSelected[i]).find('#UDF4 option:selected').text() + ",";
                            }
                            else {
                                if ($(anSelected[i]).find('#UDF4').val() != undefined) {
                                    OrderLineItemUDF4 = OrderLineItemUDF4 + $(anSelected[i]).find('#UDF4').val() + ",";
                                }
                            }
                        }

                        if ($(anSelected[i]).find('#UDF5') != null) {
                            if ($(anSelected[i]).find('#UDF5').attr("class") == 'selectBox' && $(anSelected[i]).find('#UDF5 option:selected').text() != undefined) {
                                OrderLineItemUDF5 = OrderLineItemUDF5 + $(anSelected[i]).find('#UDF5 option:selected').text() + ",";
                            }
                            else {
                                if ($(anSelected[i]).find('#UDF5').val() != undefined) {
                                    OrderLineItemUDF5 = OrderLineItemUDF5 + $(anSelected[i]).find('#UDF5').val() + ",";
                                }
                            }
                        }

                        if ($(anSelected[i]).find('#txtQty') != null && $(anSelected[i]).find('#txtQty') != undefined && $(anSelected[i]).find('#txtQty').length > 0) {
                            if ($(anSelected[i]).find('#txtQty').val() != undefined) {
                                OrderItemQuantity = OrderItemQuantity + $(anSelected[i]).find('#txtQty').val() + ",";
                            }
                        }
                    }
                    if ($(anSelected[i]).find('#slctRt').val() == "Purchase") {
                        strPurchase = strPurchase + 1;
                    }
                    else if ($(anSelected[i]).find('#slctRt').val() == "Transfer") {
                        strTransfer = strTransfer + 1;
                    }
                    else if ($(anSelected[i]).find('#slctRt').val() == "SuggestedReturn") {
                        strSuggestedReturn = strSuggestedReturn + 1;
                    }
                    QuoteSuppliers = QuoteSuppliers + $(anSelected[i]).find('#QuoteSupplierID').val() + ",";;
                }
                if ($("#slectAction").val() == 3 && strTransfer == 0) {
                    //alert("@ResCartItem.MsgSelectItemWithTransfer");
                    $("#spanGlobalMessage").html("@ResCartItem.MsgSelectItemWithTransfer");
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                }
                else if (($("#slectAction").val() == 4 || $("#slectAction").val() == 6)
                    && strPurchase == 0) {
                    $("#spanGlobalMessage").html("@ResCartItem.MsgSelectItemWithPurchase");
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    //alert("@ResCartItem.MsgSelectItemWithPurchase");
                }
                else if ($("#slectAction").val() == 5 && strSuggestedReturn == 0) {
                    $("#spanGlobalMessage").html("@ResCartItem.MsgSelectItemWithSuggestedReturn");
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    //alert("@ResCartItem.MsgSelectItemWithSuggestedReturn");
                }
                else {
                    $('#DivLoading').show();

                    if ($("#slectAction").val() == 3 && strTransfer > 0) {
                        if ($.trim(stringIDs) != "") {
                            $.ajax({
                                url: '@Url.Action("OpenCreateTransferPopup", "Replenish")',
                                type: 'POST',
                                dataType: 'json',
                                data: "{ActionType:'" + parseInt($("#slectAction").val()) + "' , Ids: '" + stringIDs + "',TransferItemQuantity:'" + OrderItemQuantity + "'}",
                                contentType: "application/json; charset=utf-8",
                                dataType: "html",
                                success: function (result) {
                                    //$('#DivLoading').hide();
                                    //$('#basic-modal-content-CartAction').find("#ptextcart").text(result.Message);
                                    //$('#basic-modal-content-CartAction').modal();
                                    if (result != '') {
                                        $('#DivLoading').hide();
                                        $("#dvCreteOrderTransfer").empty();
                                        $("#dvCreteOrderTransfer").html(result);
                                        $("#dvCreteOrderTransfer").dialog("open");
                                    }
                                    else {
                                        $('#DivLoading').hide();
                                        $('div#target').fadeToggle();
                                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                        $('div#target').css("z-index", 100000);
                                        $("#spanGlobalMessage").html("@ResCartItem.MsgNoItemAvailableinreplineshRoom");
                                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                                    }
                                },
                                error: function (request, status, error) {

                                }
                            });
                        }
                        else {
                            $("#spanGlobalMessage").html("@ResCartItem.ReqItemsToCreateTransfer");
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            //alert("@ResCartItem.ReqItemsToCreateTransfer");
                        }
                    }
                     else if ($("#slectAction").val() == 4 && strPurchase > 0) {
                        if ($.trim(stringIDs) != "") {
                            $('#DivLoading').show();
                            $.ajax({
                                url: '@Url.Action("OpenCreateOrderTransferPopup", "Replenish")',
                                type: 'POST',
                                //dataType: 'json',
                                data: "{ActionType:'" + parseInt($("#slectAction").val()) + "' , Ids: '" + stringIDs + "', OrderLineItemUDF1: '" + OrderLineItemUDF1 + "', OrderLineItemUDF2: '" + OrderLineItemUDF2 + "', OrderLineItemUDF3: '" + OrderLineItemUDF3 + "', OrderLineItemUDF4: '" + OrderLineItemUDF4 + "', OrderLineItemUDF5: '" + OrderLineItemUDF5 + "',OrderItemQuantity:'"+ OrderItemQuantity +"'}",
                                contentType: "application/json; charset=utf-8",
                                dataType: "html",
                                success: function (result) {
                                    createCartOrderType = '@((int)OrderType.Order)';
                                    $('#DivLoading').hide();
                                    $("#dvCreteOrderTransfer").empty();
                                    $("#dvCreteOrderTransfer").html(result);
                                    $("#dvCreteOrderTransfer").dialog("open");
                                },
                                error: function (request, status, error) {
                                }
                            });
                        }
                        else {
                            $("#spanGlobalMessage").html("@ResCartItem.ReqItemsToCreateOrder");
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            //alert("@ResCartItem.ReqItemsToCreateOrder");
                        }
                    }
                    else if ($("#slectAction").val() == 5 && strSuggestedReturn > 0) {
                        if ($.trim(stringIDs) != "") {
                            $('#DivLoading').show();
                            $.ajax({
                                url: '@Url.Action("OpenCreateReturnOrderPopup", "Replenish")',
                                type: 'POST',
                                data: "{Ids: '" + stringIDs + "', OrderLineItemUDF1: '" + OrderLineItemUDF1 + "', OrderLineItemUDF2: '" + OrderLineItemUDF2 + "', OrderLineItemUDF3: '" + OrderLineItemUDF3 + "', OrderLineItemUDF4: '" + OrderLineItemUDF4 + "', OrderLineItemUDF5: '" + OrderLineItemUDF5 + "',OrderItemQuantity:'" + OrderItemQuantity + "'}",
                                contentType: "application/json; charset=utf-8",
                                dataType: "html",
                                success: function (result) {
                                    createCartOrderType = '@((int)OrderType.RuturnOrder)';
                                    $('#DivLoading').hide();
                                    $("#dvCreteReturnOrder").empty();
                                    $("#dvCreteReturnOrder").html(result);
                                    $("#dvCreteReturnOrder").dialog("open");
                                },
                                error: function (request, status, error) {
                                }
                            });
                        }
                        else {
                            $("#spanGlobalMessage").html("@ResCartItem.ReqItemsToCreateReturnOrder");
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            //alert("@ResCartItem.ReqItemsToCreateReturnOrder");
                        }
                    }
                     else if ($("#slectAction").val() == 6 && strPurchase > 0) {
                        if ($.trim(stringIDs) != "") {
                            $('#DivLoading').show();
                            $.ajax({
                                url: '@Url.Action("OpenCreateQuotePopup", "Replenish")',
                                type: 'POST',
                                data: "{Ids: '" + stringIDs + "', QuoteLineItemUDF1: '" + OrderLineItemUDF1 + "', QuoteLineItemUDF2: '" + OrderLineItemUDF2 + "', QuoteLineItemUDF3: '" + OrderLineItemUDF3 + "', QuoteLineItemUDF4: '" + OrderLineItemUDF4 + "', QuoteLineItemUDF5: '" + OrderLineItemUDF5 + "',OrderItemQuantity:'" + OrderItemQuantity + "',QuoteSuppliers:'" + QuoteSuppliers +"'}",
                                contentType: "application/json; charset=utf-8",
                                dataType: "html",
                                success: function (result) {
                                    $('#DivLoading').hide();
                                    $("#dvCreteQuote").empty();
                                    $("#dvCreteQuote").html(result);
                                    $("#dvCreteQuote").dialog("open");
                                },
                                error: function (request, status, error) {
                                }
                            });
                        }
                        else {
                             $("#spanGlobalMessage").html("@ResQuoteMaster.msgQuoteItemSelect");
                             $('div#target').fadeToggle();
                             $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                             $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            //alert("@ResQuoteMaster.msgQuoteItemSelect");
                        }
                    }
                }
            }
            //else {
            //    alert("Please select action in dropdown.");
            //}
        });

    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        if ('@IsCartOrderTab'.toLowerCase() == 'true' && '@isCartOrder'.toLowerCase() == 'true' && '@HaveCreateOrderRight'.toLowerCase() == 'true' ) {
            CartRTNarroValues = "";
            //$('#tabOrders').show();
            //$("#btnCheckout").show();
        }
        else {
           // $('#tabOrders').hide();
            //$("#btnCheckout").hide();
        }

        if ('@IsCartTransferTab'.toLowerCase() == 'true' && '@isCartOrderTransfer'.toLowerCase() == 'true') {
            CartRTNarroValues = "";
           // $('#tabTransfers').show();
            //$("#btnCheckout").show();
        }
        else {
           // $('#tabTransfers').hide();
            //$("#btnCheckout").hide();
        }

        if ('@IsCartSuggestedReturnTab'.toLowerCase() == 'true' && '@isCartReturnOrder'.toLowerCase() == 'true') {
           // $('#tabReturnList').show();
           // $("#btnCheckout").show();
        }
        else {
           // $('#tabReturnList').hide();
            //$("#btnCheckout").hide();
        }

        $("#btnCheckout").attr('disabled', 'disabled');
        $('#btnCheckout').removeClass('btnGeneral');
        $('#btnCheckout').addClass('btnGeneraldisabled');

        var _ReplanishType = '';
        var ArrFregments = location.hash.split('#');
        var i = 0;
        for (i = 0; i < ArrFregments.length; i++) {
            if (ArrFregments[i].toUpperCase() == 'LISTORDERS') {
                $("#btnCheckout").val($("#hdnCreateOrders").val())
            }
            else if (ArrFregments[i].toUpperCase() == 'LISTTRANSFERS') {
                $("#btnCheckout").val($("#hdnCreateTransfers").val())
            }
            else if (ArrFregments[i].toUpperCase() == 'LISTSUGGESTEDRETURN') {
                $("#btnCheckout").val($("#hdnCreateReturns").val());
                $("#deleteRows").hide();
            }
            else if (ArrFregments[i] != "") { $("#btnCheckout").val($("#hdnCreate").val()); }
        }

        $("#dvCreteOrderTransfer").on('change', "input#chkHeader", function (e) {
            $("#dvCreteOrderTransfer").find("input[type='checkbox'][id^='chkOrder']").prop("checked", $(this).prop("checked") == undefined ? false : $(this).prop("checked"));
        });

        $("#dvCreteReturnOrder").on('change', "input#chkHeader", function (e) {
            $("#dvCreteReturnOrder").find("input[type='checkbox'][id^='chkOrder']").prop("checked", $(this).prop("checked") == undefined ? false : $(this).prop("checked"));
        });

        $("#dvCreteOrderTransfer").on('focus', "input.AutoCompleteddl", function (e) {

            var ctrlID = $(this).attr('id');
            var type = "";
            var ajaxURL = '';

            if (ctrlID.indexOf("txtStagingName") >= 0) {
                type = 'Staging';
                ajaxURL = '/Inventory/GetAllStagingHeaders';
            }
            else if (ctrlID.indexOf("txtShipViaName") >= 0) {
                type = 'ShipVia';
                ajaxURL = '/Master/GetAllShipVia';
            }
            else if (ctrlID.indexOf("txtCustomerName") >= 0) {
                type = 'Customer';
                ajaxURL = '/Master/GetAllCustomers';
            }
            else if (ctrlID.indexOf("txtVendorName") >= 0) {
                type = 'Vendor';
                ajaxURL = '/Master/GetAllVendors';
            }
            $(this).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: ajaxURL,
                        contentType: 'application/json',
                        dataType: 'json',
                        data: { NameStartWith: request.term },
                        success: function (data) {
                            response($.map(data, function (Items) {
                                if (type == 'Staging') {
                                    return {
                                        label: Items.StagingName,
                                        value: Items.StagingName,
                                        selval: Items.ID
                                    }
                                }
                                else if (type == 'ShipVia') {
                                    return {
                                        label: Items.ShipVia,
                                        value: Items.ShipVia,
                                        selval: Items.ID
                                    }
                                }
                                else if (type == 'Customer') {
                                    return {
                                        label: Items.Customer,
                                        value: Items.Customer,
                                        selval: Items.ID
                                    }
                                }
                                else if (type == 'Vendor') {
                                    return {
                                        label: Items.Vender,
                                        value: Items.Vender,
                                        selval: Items.ID
                                    }
                                }
                            }));
                        },
                        error: function (err) {
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {
                }
            });
        });

        $("#dvCreteReturnOrder").on('focus', "input.AutoCompleteddl", function (e) {
            var ctrlID = $(this).attr('id');
            var type = "";
            var ajaxURL = '';

            if (ctrlID.indexOf("txtStagingName") >= 0) {
                type = 'Staging';
                ajaxURL = '/Inventory/GetAllStagingHeaders';
            }
            else if (ctrlID.indexOf("txtShipViaName") >= 0) {
                type = 'ShipVia';
                ajaxURL = '/Master/GetAllShipVia';
            }
            else if (ctrlID.indexOf("txtVendorName") >= 0) {
                type = 'Vendor';
                ajaxURL = '/Master/GetAllVendors';
            }
            $(this).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: ajaxURL,
                        contentType: 'application/json',
                        dataType: 'json',
                        data: { NameStartWith: request.term },
                        success: function (data) {
                            response($.map(data, function (Items) {
                                if (type == 'Staging') {
                                    return {
                                        label: Items.StagingName,
                                        value: Items.StagingName,
                                        selval: Items.ID
                                    }
                                }
                                else if (type == 'ShipVia') {
                                    return {
                                        label: Items.ShipVia,
                                        value: Items.ShipVia,
                                        selval: Items.ID
                                    }
                                }
                                else if (type == 'Vendor') {
                                    return {
                                        label: Items.Vender,
                                        value: Items.Vender,
                                        selval: Items.ID
                                    }
                                }
                            }));
                        },
                        error: function (err) {
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {
                }
            });
        });

    });
    function RemovenonOrderableItems() {
        $("#myDataTable").find("tbody tr.row_selected").each(function () {
            var aPos = oTable.fnGetPosition($(this)[0]);
            var aData = oTable.fnGetData(aPos);
            var ReplenishType = $(this).find('#spnReplenishType').text();
            if (ReplenishType.toLowerCase() != "transfer") {
                if (aData.IsItemActive == false
                    || aData.IsItemOrderable == false) {
                    $(this).removeClass("row_selected");
                }
            }
        });
    }
    $("#dvCreteOrderTransfer").on("click", "#btnCancel", function () {
        $("#dvCreteOrderTransfer").dialog("close");
    });
    $("#dvCreteOrderTransfer").on("click", "#btnSaveOrders", function () {
        var validationToken = true;
        var errMsg = '';
        var vSupplierName = '';
        var orderHeaders = new Array();
        var orderSelected = $("#dvCreteOrderTransfer").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").length;
        if (orderSelected > 0) {
            $("#dvCreteOrderTransfer").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").each(function (indx, curchk) {
                var vUDF1 = '', vUDF2 = '', vUDF3 = '', vUDF4 = '', vUDF5 = '';
                var curRow = $(curchk).parent().parent();
                var supplierId = $(curRow).find("input[type='hidden'][id^='hdnSupplierId']").val();
                var lineItems = $(curRow).find("input[type='hidden'][id^='hdnNoOfLineItems']").val();
                var orderLineItemsIds = $(curRow).find("input[type='hidden'][id^='hdnOrderLineItemsIds']").val();
                var orderNumber = $(curRow).find("input[type='text'][id^='txtOrderNumber']").val();
                var orderStatus = $(curRow).find("select[id^='ddlOrderStatus']").val();
                var comments = $(curRow).find("textarea[id^='txtComment']").val();
                var requiredDate = $(curRow).find("input[type='text'][id^='txtRequiredDate']").val();
                var shipViaName = $(curRow).find("input[type='text'][id^='txtShipViaName']").val();
                var stagingName = $(curRow).find("input[type='text'][id^='txtStagingName']").val();
                var customerName = $(curRow).find("input[type='text'][id^='txtCustomerName']").val();
                var VendorName = $(curRow).find("input[type='text'][id^='txtVendorName']").val();
                var ShippingTrackNumber = $(curRow).find("input[type='text'][id^='ShippingTrackNumber']").val();
                var SupplierAccountGuid = $(curRow).find("select[id^='ddlSupplierAccountt_']").val();
                vSupplierName = $(curRow).find('#spSupplierName').text();
                var isBlanketOrder = $(curRow).find("input[type='hidden'][id^='hdnIsBlanketOrder']").val();

                if (isBlanketOrder == "True") {
                    var blanketPO = $(curRow).find("select[id^='ddlBlanketPO']").val();
                    if (!isNaN(parseInt(blanketPO)) && parseInt(blanketPO) > 0) {
                        orderNumber = $(curRow).find("select[id^='ddlBlanketPO'] :selected").text();
                    }
                    else {
                        orderNumber = "";
                    }
                }

                if ($(curRow).find('#UDF1').length > 0) {
                    if ($(curRow).find('#UDF1').attr("class") == 'selectBox') {
                        vUDF1 = $(curRow).find('#UDF1 option:selected').text();
                    }
                    else {
                        vUDF1 = $(curRow).find('#UDF1').val();
                    }
                }

                if ($(curRow).find('#UDF2').length > 0) {
                    if ($(curRow).find('#UDF2').attr("class") == 'selectBox') {
                        vUDF2 = $(curRow).find('#UDF2 option:selected').text();
                    }
                    else {
                        vUDF2 = $(curRow).find('#UDF2').val();
                    }
                }

                if ($(curRow).find('#UDF3').length > 0) {
                    if ($(curRow).find('#UDF3').attr("class") == 'selectBox') {
                        vUDF3 = $(curRow).find('#UDF3 option:selected').text();
                    }
                    else {
                        vUDF3 = $(curRow).find('#UDF3').val();
                    }
                }

                if ($(curRow).find('#UDF4').length > 0) {
                    if ($(curRow).find('#UDF4').attr("class") == 'selectBox') {
                        vUDF4 = $(curRow).find('#UDF4 option:selected').text();
                    }
                    else {
                        vUDF4 = $(curRow).find('#UDF4').val();
                    }
                }

                if ($(curRow).find('#UDF5').length > 0) {
                    if ($(curRow).find('#UDF5').attr("class") == 'selectBox') {
                        vUDF5 = $(curRow).find('#UDF5 option:selected').text();
                    }
                    else {
                        vUDF5 = $(curRow).find('#UDF5').val();
                    }
                }

                var udfFlag = 0;
                var udfReqMsg = '';
                if ($.trim(vUDF1) == "" && '@UDF1IsRequired' == 'True') {
                    udfReqMsg += ' @ResOrder.UDF1' + ",";
                    udfFlag++;
                }
                if ($.trim(vUDF2) == "" && '@UDF2IsRequired' == 'True') {
                    udfReqMsg += ' @ResOrder.UDF2' + ",";
                    udfFlag++;
                }
                if ($.trim(vUDF3) == "" && '@UDF3IsRequired' == 'True') {
                    udfReqMsg += ' @ResOrder.UDF3' + ",";
                    udfFlag++;
                }
                if ($.trim(vUDF4) == "" && '@UDF4IsRequired' == 'True') {
                    udfReqMsg += ' @ResOrder.UDF4' + ",";
                    udfFlag++;
                }
                if ($.trim(vUDF5) == "" && '@UDF5IsRequired' == 'True') {
                    udfReqMsg += ' @ResOrder.UDF5' + ",";
                    udfFlag++;
                }

                if ($.trim(udfReqMsg) != '') {
                    var requiredMsg = '@ResMessage.MsgRequired';
                    var replacePart = udfReqMsg.slice(0, -1);
                    errMsg += requiredMsg.replace('{0}', replacePart);
                }
                orderHeaders.push({
                    ID: 0, OrderNumber: orderNumber,
                    Supplier: supplierId,
                    Comment: comments,
                    RequiredDate: requiredDate, ShipViaName: shipViaName,
                    StagingName: stagingName, CustomerName: customerName, ShippingVendorName: VendorName,
                    ShippingTrackNumber: ShippingTrackNumber, OrderLineItemsIds: orderLineItemsIds,
                    OrderStatus: orderStatus, SupplierAccountGuid: SupplierAccountGuid,
                    UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5
                });

                if ($.trim(orderNumber) == "") {
                    $(curRow).css("background-color", "#FFA17F");
                    if (validationToken == true) {
                        validationToken = false;
                        errMsg += '@string.Format(ResMessage.MsgRequired, ResOrder.OrderNumber)';
                    }
                }
                else {
                    $(curRow).css("background-color", "");
                }
                if ($.trim(errMsg) != "" && udfFlag > 0) {
                    $(curRow).css("background-color", "#FFA17F");
                    if (validationToken == true) {
                        validationToken = false;
                    }
                }
                else {
                    $(curRow).css("background-color", "");
                }
            });
            if (validationToken == true) {
                var orderCreatedMsg = '@ResCartItem.OrdersWillBeCreated';
                $('#basic-modal-content-CartAction').find("#ptextcart").html(orderCreatedMsg.replace('{0}' ,orderSelected));
                $('#basic-modal-content-CartAction').modal();
                IsDeletePopupOpen = true;
            }
            else {
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                $('div#target').css("z-index", 100000);
                $("#spanGlobalMessage").html(vSupplierName + ' ' + errMsg);
                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            }
        }
        else {
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            $('div#target').css("z-index", 100000);
            $("#spanGlobalMessage").html("@ResCartItem.ReqOrderToCreate");
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');

        }
        //        if (validationToken == true) {
        //            var orderSelected = $("#dvCreteOrderTransfer").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").length;
        //            if (orderSelected > 0) {
        //                $('#basic-modal-content-CartAction').find("#ptextcart").text(orderSelected + " Order(s) will be created.");
        //                $('#basic-modal-content-CartAction').modal();
        //                IsDeletePopupOpen = true;

        //            } else {
        //                alert("@ResCartItem.ReqOrderToCreate");
        //            }
        //        }



    });

    $("#dvCreteReturnOrder").on("click", "#btnSaveReturnOrders", function () {
        var validationToken = true;
        var errMsg = '';
        var vSupplierName = '';
        var orderHeaders = new Array();
        var orderSelected = $("#dvCreteReturnOrder").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").length;
        if (orderSelected > 0) {
            $("#dvCreteReturnOrder").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").each(function (indx, curchk) {
                var vUDF1 = '', vUDF2 = '', vUDF3 = '', vUDF4 = '', vUDF5 = '';
                var curRow = $(curchk).parent().parent();
                var supplierId = $(curRow).find("input[type='hidden'][id^='hdnSupplierId']").val();
                var lineItems = $(curRow).find("input[type='hidden'][id^='hdnNoOfLineItems']").val();
                var orderLineItemsIds = $(curRow).find("input[type='hidden'][id^='hdnOrderLineItemsIds']").val();
                var orderNumber = $(curRow).find("input[type='text'][id^='txtOrderNumber']").val();
                var orderStatus = $(curRow).find("select[id^='ddlOrderStatus']").val();
                var comments = $(curRow).find("textarea[id^='txtComment']").val();
                var requiredDate = $(curRow).find("input[type='text'][id^='txtRequiredDate']").val();
                var shipViaName = $(curRow).find("input[type='text'][id^='txtShipViaName']").val();
                var stagingName = $(curRow).find("input[type='text'][id^='txtStagingName']").val();
                var VendorName = $(curRow).find("input[type='text'][id^='txtVendorName']").val();
                var ShippingTrackNumber = $(curRow).find("input[type='text'][id^='ShippingTrackNumber']").val();
                var SupplierAccountGuid = $(curRow).find("select[id^='ddlSupplierAccountt_']").val();
                vSupplierName = $(curRow).find('#spSupplierName').text();
                var isBlanketOrder = $(curRow).find("input[type='hidden'][id^='hdnIsBlanketOrder']").val();

                if (isBlanketOrder == "True") {
                    var blanketPO = $(curRow).find("select[id^='ddlBlanketPO']").val();
                    if (!isNaN(parseInt(blanketPO)) && parseInt(blanketPO) > 0) {
                        orderNumber = $(curRow).find("select[id^='ddlBlanketPO'] :selected").text();
                    }
                    else {
                        orderNumber = "";
                    }
                }
                if ($(curRow).find('#UDF1').length > 0) {
                    if ($(curRow).find('#UDF1').attr("class") == 'selectBox') {
                        vUDF1 = $(curRow).find('#UDF1 option:selected').text();
                    }
                    else {
                        vUDF1 = $(curRow).find('#UDF1').val();
                    }
                }

                if ($(curRow).find('#UDF2').length > 0) {
                    if ($(curRow).find('#UDF2').attr("class") == 'selectBox') {
                        vUDF2 = $(curRow).find('#UDF2 option:selected').text();
                    }
                    else {
                        vUDF2 = $(curRow).find('#UDF2').val();
                    }
                }

                if ($(curRow).find('#UDF3').length > 0) {
                    if ($(curRow).find('#UDF3').attr("class") == 'selectBox') {
                        vUDF3 = $(curRow).find('#UDF3 option:selected').text();
                    }
                    else {
                        vUDF3 = $(curRow).find('#UDF3').val();
                    }
                }

                if ($(curRow).find('#UDF4').length > 0) {
                    if ($(curRow).find('#UDF4').attr("class") == 'selectBox') {
                        vUDF4 = $(curRow).find('#UDF4 option:selected').text();
                    }
                    else {
                        vUDF4 = $(curRow).find('#UDF4').val();
                    }
                }

                if ($(curRow).find('#UDF5').length > 0) {
                    if ($(curRow).find('#UDF5').attr("class") == 'selectBox') {
                        vUDF5 = $(curRow).find('#UDF5 option:selected').text();
                    }
                    else {
                        vUDF5 = $(curRow).find('#UDF5').val();
                    }
                }

                var udfFlag = 0;
                var udfReqMsg = '';
                if ($.trim(vUDF1) == "" && '@UDF1IsRequired' == 'True') {
                    udfReqMsg += ' @ResOrder.UDF1' + ",";
                    udfFlag++;
                }
                if ($.trim(vUDF2) == "" && '@UDF2IsRequired' == 'True') {
                    udfReqMsg += ' @ResOrder.UDF2' + ",";
                    udfFlag++;
                }
                if ($.trim(vUDF3) == "" && '@UDF3IsRequired' == 'True') {
                    udfReqMsg += ' @ResOrder.UDF3' + ",";
                    udfFlag++;
                }
                if ($.trim(vUDF4) == "" && '@UDF4IsRequired' == 'True') {
                    udfReqMsg += ' @ResOrder.UDF4' + ",";
                    udfFlag++;
                }
                if ($.trim(vUDF5) == "" && '@UDF5IsRequired' == 'True') {
                    udfReqMsg += ' @ResOrder.UDF5' + ",";
                    udfFlag++;
                }

                if ($.trim(udfReqMsg) != '') {
                    var requiredMsg = '@ResMessage.MsgRequired';
                    var replacePart = udfReqMsg.slice(0, -1);
                    errMsg += requiredMsg.replace('{0}', replacePart);
                }
                orderHeaders.push({
                    ID: 0, OrderNumber: orderNumber,
                    Supplier: supplierId,
                    Comment: comments,
                    RequiredDate: requiredDate, ShipViaName: shipViaName,
                    StagingName: stagingName, ShippingVendorName: VendorName,
                    ShippingTrackNumber: ShippingTrackNumber, OrderLineItemsIds: orderLineItemsIds,
                    OrderStatus: orderStatus, SupplierAccountGuid: SupplierAccountGuid,
                    UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5
                });

                if ($.trim(orderNumber) == "") {
                    $(curRow).css("background-color", "#FFA17F");
                    if (validationToken == true) {
                        validationToken = false;
                        errMsg += '@string.Format(ResMessage.MsgRequired, ResOrder.ReturnOrderNumber)';
                    }
                }
                else {
                    $(curRow).css("background-color", "");
                }
                if ($.trim(errMsg) != "" && udfFlag > 0) {
                    $(curRow).css("background-color", "#FFA17F");
                    if (validationToken == true) {
                        validationToken = false;
                    }
                }
                else {
                    $(curRow).css("background-color", "");
                }
            });
            if (validationToken == true) {
                var returnOrderCreatedMsg = '@ResCartItem.ReturnOrdersWillBeCreated';
                $('#basic-modal-content-CartAction').find("#ptextcart").html(returnOrderCreatedMsg.replace('{0}', orderSelected));
                $('#basic-modal-content-CartAction').modal();
                IsDeletePopupOpen = true;
            }
            else {
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                $('div#target').css("z-index", 100000);
                $("#spanGlobalMessage").html(vSupplierName + ' ' + errMsg);
                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            }
        }
        else {
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            $('div#target').css("z-index", 100000);
            $("#spanGlobalMessage").html("@ResCartItem.ReqOrderToCreate");
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');

        }
    });


    //////////start Quote ///////////

    $("#dvCreteQuote").on("click", "#btnCancel", function () {
        $("#dvCreteQuote").dialog("close");
    });
    $("#dvCreteQuote").on("click", "#btnSaveQuotes", function () {
        var validationToken = true;
        var errMsg = '';
        var vSupplierName = '';
        var QuoteHeaders = new Array();
        var QuoteSelected = $("#dvCreteQuote").find("table.display").find("input[type='text'][id^='txtQuoteNumber']").length;
        if (QuoteSelected > 0) {
            $("#dvCreteQuote").find("table.display").find("input[type='text'][id^='txtQuoteNumber']").each(function (indx, curchk) {
                var vUDF1 = '', vUDF2 = '', vUDF3 = '', vUDF4 = '', vUDF5 = '';
                var curRow = $(curchk).parent().parent();
                var lineItems = $(curRow).find("input[type='hidden'][id^='hdnNoOfLineItems']").val();
                var QuoteLineItemsIds = $(curRow).find("input[type='hidden'][id^='hdnQuoteLineItemsIds']").val();
                var QuoteNumber = $(curRow).find("input[type='text'][id^='txtQuoteNumber']").val();
                var QuoteStatus = $(curRow).find("select[id^='ddlQuoteStatus']").val();
                var comments = $(curRow).find("textarea[id^='txtQuoteComment']").val();
                var requiredDate = $(curRow).find("input[type='text'][id^='txtQuoteRequiredDate']").val();
                var SupplierIDs = $.map($($(curRow).find("select[id^='ddlQuoteSupplierIdsCSV']")).multiselect("getChecked"), function (input) { return input.value; });

                if ($(curRow).find('#UDF1').length > 0) {
                    if ($(curRow).find('#UDF1').attr("class") == 'selectBox') {
                        vUDF1 = $(curRow).find('#UDF1 option:selected').text();
                    }
                    else {
                        vUDF1 = $(curRow).find('#UDF1').val();
                    }
                }

                if ($(curRow).find('#UDF2').length > 0) {
                    if ($(curRow).find('#UDF2').attr("class") == 'selectBox') {
                        vUDF2 = $(curRow).find('#UDF2 option:selected').text();
                    }
                    else {
                        vUDF2 = $(curRow).find('#UDF2').val();
                    }
                }

                if ($(curRow).find('#UDF3').length > 0) {
                    if ($(curRow).find('#UDF3').attr("class") == 'selectBox') {
                        vUDF3 = $(curRow).find('#UDF3 option:selected').text();
                    }
                    else {
                        vUDF3 = $(curRow).find('#UDF3').val();
                    }
                }

                if ($(curRow).find('#UDF4').length > 0) {
                    if ($(curRow).find('#UDF4').attr("class") == 'selectBox') {
                        vUDF4 = $(curRow).find('#UDF4 option:selected').text();
                    }
                    else {
                        vUDF4 = $(curRow).find('#UDF4').val();
                    }
                }

                if ($(curRow).find('#UDF5').length > 0) {
                    if ($(curRow).find('#UDF5').attr("class") == 'selectBox') {
                        vUDF5 = $(curRow).find('#UDF5 option:selected').text();
                    }
                    else {
                        vUDF5 = $(curRow).find('#UDF5').val();
                    }
                }

                var udfFlag = 0;
                var udfReqMsg = '';
                if ($.trim(vUDF1) == "" && '@QuoteUDF1IsRequired' == 'True') {
                    udfReqMsg += ' @ResQuoteMaster.UDF1' + ",";
                    udfFlag++;
                }
                if ($.trim(vUDF2) == "" && '@QuoteUDF2IsRequired' == 'True') {
                    udfReqMsg += ' @ResQuoteMaster.UDF2' + ",";
                    udfFlag++;
                }
                if ($.trim(vUDF3) == "" && '@QuoteUDF3IsRequired' == 'True') {
                    udfReqMsg += ' @ResQuoteMaster.UDF3' + ",";
                    udfFlag++;
                }
                if ($.trim(vUDF4) == "" && '@QuoteUDF4IsRequired' == 'True') {
                    udfReqMsg += ' @ResQuoteMaster.UDF4' + ",";
                    udfFlag++;
                }
                if ($.trim(vUDF5) == "" && '@QuoteUDF5IsRequired' == 'True') {
                    udfReqMsg += ' @ResQuoteMaster.UDF5' + ",";
                    udfFlag++;
                }

                if ($.trim(udfReqMsg) != '') {
                    errMsg += udfReqMsg.slice(0, -1) + ' ' + "is Required";
                }
                QuoteHeaders.push({
                    ID: 0, QuoteNumber: QuoteNumber,
                    Comment: comments,
                    RequiredDate: requiredDate,
                    QuoteLineItemsIds: QuoteLineItemsIds,
                    QuoteStatus: QuoteStatus,
                    UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5,
                    QuoteSupplierIdsCSV: (SupplierIDs != null ? SupplierIDs.toString() : "")
                });

                if ($.trim(QuoteNumber) == "") {
                    $(curRow).css("background-color", "#FFA17F");
                    if (validationToken == true) {
                        validationToken = false;
                        errMsg += '@ResQuoteMaster.QuoteNumber' + " is required";
                    }
                }
                else {
                    $(curRow).css("background-color", "");
                }
                if ($.trim(requiredDate) == "") {
                    $(curRow).css("background-color", "#FFA17F");
                    if (validationToken == true) {
                        validationToken = false;
                        errMsg += '@ResQuoteMaster.RequiredDate' + " is required";
                    }
                }
                else {
                    $(curRow).css("background-color", "");
                }
                @*if (SupplierIDs == null && SupplierIDs == "") {
                    $(curRow).css("background-color", "#FFA17F");
                    if (validationToken == true) {
                        validationToken = false;
                        errMsg += '@ResQuoteMaster.QuoteSupplierNamesCSV' + " is required";
                    }
                }
                else {
                    $(curRow).css("background-color", "");
                }*@
                if ($.trim(errMsg) != "" && udfFlag > 0) {
                    $(curRow).css("background-color", "#FFA17F");
                    if (validationToken == true) {
                        validationToken = false;
                    }
                }
                else {
                    $(curRow).css("background-color", "");
                }
            });
            if (validationToken == true) {
                $('#basic-modal-content-CartAction').find("#ptextcart").html(QuoteSelected + '@ResQuoteMaster.alertQuoteCreated');
                $('#basic-modal-content-CartAction').modal();
                IsDeletePopupOpen = true;
            }
            else {
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                $('div#target').css("z-index", 100000);
                $("#spanGlobalMessage").html(vSupplierName + ' ' + errMsg);
                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            }
        }
        else {
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            $('div#target').css("z-index", 100000);
            $("#spanGlobalMessage").html("@ResCartItem.ReqOrderToCreate");
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');

        }
    });

    ///////// end quote ////////////////

    //$("#dvCreteOrderTransfer").on("click", "#btnSaveTransfers", function () {
    //    var validationToken = true;
    //    var orderHeaders = new Array();
    //    var orderSelected = $("#dvCreteOrderTransfer").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").length;
    //    if (orderSelected > 0) {
    //        $("#dvCreteOrderTransfer").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").each(function (indx, curchk) {

    //            var curRow = $(curchk).parent().parent();
    //            var TransferNumber = $(curRow).find("input[type='text'][id^='txtTransferNumber']").val();

    //            if ($.trim(TransferNumber) == "") {
    //                $(curRow).css("background-color", "#FFA17F");
    //                if (validationToken == true) {
    //                    validationToken = false;
    //                }
    //            }
    //            else {
    //                $(curRow).css("background-color", "");
    //            }

    //        });
    //        if (validationToken == true) {
    //            $('#basic-modal-content-CartAction').find("#ptextcart").text(orderSelected + " Transfers(s) will be created.");
    //            $('#basic-modal-content-CartAction').modal();
    //            IsDeletePopupOpen = true;
    //        }
    //        else {
    //            $('div#target').fadeToggle();
    //            $("div#target").delay(2000).fadeOut(200);
    //            $('div#target').css("z-index", 100000);
    //            $("#spanGlobalMessage").text("@ResCommon.CorrectErrorToProceed");
    //            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
    //        }
    //    }
    //    else {
    //        $('div#target').fadeToggle();
    //        $("div#target").delay(2000).fadeOut(200);
    //        $('div#target').css("z-index", 100000);
    //        $("#spanGlobalMessage").text("Please select Transfer to create");
    //        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');

    //    }
    //    //        if (validationToken == true) {
    //    //            var orderSelected = $("#dvCreteOrderTransfer").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").length;
    //    //            if (orderSelected > 0) {
    //    //                $('#basic-modal-content-CartAction').find("#ptextcart").text(orderSelected + " Order(s) will be created.");
    //    //                $('#basic-modal-content-CartAction').modal();
    //    //                IsDeletePopupOpen = true;

    //    //            } else {
    //    //                alert("@ResCartItem.ReqOrderToCreate");
    //    //            }
    //    //        }



    //});
    $("#dvCreteOrderTransfer").on("click", "#btnSaveTransfers", function () {
        var RequiredDateStr = '';
        var ReplineshRoomID = '';
        var TransferNumber = '';
        var TransferStatus = '';
        var Comment = '';
        var StagingName = '';
        var stringIDs = "";
        var validationToken = true;
        var errTrnsMsg = '';
        var vTrUDF1 = '', vTrUDF2 = '', vTrUDF3 = '', vTrUDF4 = '', vTrUDF5 = '', ItemQuantityString='';
        var udfFlag = 0;
        $("#dvCreteOrderTransfer").find("table.display").find("input[type='checkbox'][id^='chkOrder']").each(function (indx, curchk) {

            var curRow = $(curchk).parent().parent();
            /// save UDF options for the editable dropdown start ////
            if ($(curRow).find('.udf-editable-dropdownbox').length > 0) {
                $(curRow).find('.udf-editable-dropdownbox').each(function () {
                    var _UDFID = $(this).prev().val();
                    var _UDFOption = $(this).val();
                    var _UDFColumnName = $(this).prop("name");
                    var actionURL;
                    var params;
                    var udftable = '';
                    if ($("input#UDFTableName").length > 0) {
                        udftable = $("input#UDFTableName").val();
                    }
                    if (_UDFID > 0) {
                        //Add Mode  - UDFOption
                        actionURL = '/UDF/InsertUDFOption';
                        params = { UDFID: _UDFID, UDFOption: _UDFOption, UDFTableName: udftable, UDFColumnName: _UDFColumnName }
                        $.ajax({
                            'url': actionURL,
                            data: params,
                            success: function (response) {
                            }
                        });
                    }
                });
            }
            /// save UDF options for the editable dropdown end ////

            RequiredDateStr = $(curRow).find("input[type='text'][id^='txtRequiredDate']").val();
            //stringIDs = $(curRow).find("input[type='hidden'][id^='hdnOrderLineItemsIds]").val();
            ReplineshRoomID = $(curRow).find("select[id^='ddlReplenishingRoomID']").val();
            TransferNumber = $(curRow).find("input[type='text'][id^='txtTransferNumber']").val();
            TransferStatus = $(curRow).find("select[id^='ddlTransferStatus']").val();
            Comment = $(curRow).find("textarea[id^='txtComment']").val();
            StagingName = $(curRow).find("input[type='text'][id^='txtStagingName']").val();

            if ($(curRow).find('#UDF1').length > 0) {
                if ($(curRow).find('#UDF1').attr("class") == 'selectBox') {
                    vTrUDF1 = $(curRow).find('#UDF1 option:selected').text();
                }
                else {
                    vTrUDF1 = $(curRow).find('#UDF1').val();
                }
            }

            if ($(curRow).find('#UDF2').length > 0) {
                if ($(curRow).find('#UDF2').attr("class") == 'selectBox') {
                    vTrUDF2 = $(curRow).find('#UDF2 option:selected').text();
                }
                else {
                    vTrUDF2 = $(curRow).find('#UDF2').val();
                }
            }

            if ($(curRow).find('#UDF3').length > 0) {
                if ($(curRow).find('#UDF3').attr("class") == 'selectBox') {
                    vTrUDF3 = $(curRow).find('#UDF3 option:selected').text();
                }
                else {
                    vTrUDF3 = $(curRow).find('#UDF3').val();
                }
            }

            if ($(curRow).find('#UDF4').length > 0) {
                if ($(curRow).find('#UDF4').attr("class") == 'selectBox') {
                    vTrUDF4 = $(curRow).find('#UDF4 option:selected').text();
                }
                else {
                    vTrUDF4 = $(curRow).find('#UDF4').val();
                }
            }

            if ($(curRow).find('#UDF5').length > 0) {
                if ($(curRow).find('#UDF5').attr("class") == 'selectBox') {
                    vTrUDF5 = $(curRow).find('#UDF5 option:selected').text();
                }
                else {
                    vTrUDF5 = $(curRow).find('#UDF5').val();
                }
            }

            ItemQuantityString = $(curRow).find("input[type='hidden'][id^='hdnTransferQuantityString']").val();

            if ($.trim(vTrUDF1) == "" && '@TrUDF1IsRequired' == 'True') {
                errTrnsMsg += '@ResTransfer.UDF1' + " is required; ";
                udfFlag++;
            }
            if ($.trim(vTrUDF2) == "" && '@TrUDF2IsRequired' == 'True') {
                errTrnsMsg += '@ResTransfer.UDF2' + " is required; ";
                udfFlag++;
            }
            if ($.trim(vTrUDF3) == "" && '@TrUDF3IsRequired' == 'True') {
                errTrnsMsg += '@ResTransfer.UDF3' + " is required; ";
                udfFlag++;
            }
            if ($.trim(vTrUDF4) == "" && '@TrUDF4IsRequired' == 'True') {
                errTrnsMsg += '@ResTransfer.UDF4' + " is required; ";
                udfFlag++;
            }
            if ($.trim(vTrUDF5) == "" && '@TrUDF5IsRequired' == 'True') {
                errTrnsMsg += '@ResTransfer.UDF5' + " is required; ";
                udfFlag++;
            }



            var anSelected = fnGetSelected(oTable);
            stringIDs = '';
            for (var i = 0; i <= anSelected.length - 1; i++) {
                if ($(anSelected[i]).find("select#slctRt").val() == "Transfer") {
                    stringIDs = stringIDs + $(anSelected[i]).find('#hdnUniqueID').val() + ",";
                }
            }

            if ($.trim(TransferNumber) == "" || ReplineshRoomID == '' || ReplineshRoomID == '0') {
                $(curRow).css("background-color", "#FFA17F");
                if (validationToken == true) {
                    validationToken = false;
                }
            }

            if ($.trim(errTrnsMsg) != "" && udfFlag > 0) {
                $(curRow).css("background-color", "#FFA17F");
                if (validationToken == true) {
                    validationToken = false;
                }
            }
        });
        if (validationToken == true) {

            $.ajax({
                type: "POST",
                url: '@Url.Action("CreateTransfersNew", "Replenish")',
                contentType: 'application/json',
                dataType: 'json',
                data: "{Action:'" + parseInt($("#slectAction").val()) + "' , Ids: '" + stringIDs + "',RequiredDateStr:'" + RequiredDateStr + "',ReplineshRoomID:" + ReplineshRoomID + ",TransferNumber:'" + TransferNumber + "',TransferStatus:" + TransferStatus + ",Comment:'" + Comment + "',StagingName:'" + StagingName + "',UDF1:'" + vTrUDF1 + "',UDF2:'" + vTrUDF2 + "',UDF3:'" + vTrUDF3 + "',UDF4:'" + vTrUDF4 + "',UDF5:'" + vTrUDF5 + "',TransferQuantityString:'" + ItemQuantityString +"'}",
                success: function (retdt) {

                    $.modal.close();
                    if (retdt.Status == "ok") {
                        $('#DivLoading').hide();
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").html(retdt.Message);
                        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                        RefressFilterCart("CartItemList");
                        oTable.fnDraw();
                        $("#dvCreteOrderTransfer").dialog("close");
                    }
                    else if (retdt.Status == "partialtrasnfer") {
                        //if (confirm(retdt.Message)) {
                        //    RefressFilterCart("CartItemList");
                        //    oTable.fnDraw();
                        //    $("#dvCreteOrderTransfer").dialog("close");
                        //}
                        $('#basic-modal-content-CartConfirmAction').find("#ptextcart").html(retdt.Message);
                        $('#basic-modal-content-CartConfirmAction').modal();
                        $("#btnModelOkTransferAction").click(function () {
                            closeModal();
                            RefressFilterCart("CartItemList");
                            oTable.fnDraw();
                            $("#dvCreteOrderTransfer").dialog("close");
                        });
                    }
                    else if (retdt.Status == "NotASingleItem") {
                        $('div#target').fadeToggle();
                        $('#DivLoading').hide();
                        $("div#target").css("z-index", "999999");
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").html(retdt.Message);
                        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('errorIcon');
                    }
                    else {
                        $('div#target').fadeToggle();
                        $('#DivLoading').hide();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").html(retdt.Message);
                        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('errorIcon');
                    }

                },
                error: function (err) {
                    $('#DivLoading').hide();
                    alert("There is some Error");
                }
            });
        }
        else {
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            $('div#target').css("z-index", 100000);
            if (ReplineshRoomID == '' || ReplineshRoomID == '0') {
                $("#spanGlobalMessage").html('@eTurns.DTO.ResTransfer.ReplinishRoomRequired');
            }
            if ($.trim(TransferNumber) == "") {
                $("#spanGlobalMessage").html('@eTurns.DTO.ResTransfer.TransferNumberRequired');
            }
            if ($.trim(errTrnsMsg) != "") {
                $("#spanGlobalMessage").html(errTrnsMsg);
            }
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
        }
    });

    $("#dvCreteOrderTransfer,#dvCreteReturnOrder").on("change", "select[id^='ddlBlanketPO']", function () {
        if (!isNaN(parseInt($(this).val())) && parseInt($(this).val()) > 0) {
            $('#DivLoading').show();
            var ddlBlanketPOID = $(this).attr('id');
            var rawNumber = ddlBlanketPOID.replace('ddlBlanketPO_','');
            var orderNumber = $("#" + ddlBlanketPOID + ' option:selected').text();
            var tmpCartOrderType = createCartOrderType;
            $.get("/Order/GetOrderReleaseNumberForCart", { 'OrderNumber': orderNumber, 'OrderType': (parseInt(tmpCartOrderType) || 1)}, function (data) {
                if (data.Success = "True") {
                    $('#tdReleaseNo_' + rawNumber).text(data.ReleaseNumber);
                }
                $('#DivLoading').hide();
            });
        }
        else {
            var ddlBlanketPOID = $(this).attr('id');
            var rawNumber = ddlBlanketPOID.replace('ddlBlanketPO_', '');
            $('#tdReleaseNo_' + rawNumber).text("");
            $('#DivLoading').hide();
            return false;
        }
    });



    $("#btnModelYesCartAction").click(function () {

        var btnSave = $(this);
        closeModal();
        $('#DivLoading').show();
        if ($("#slectAction").val() == 3) {
            var stringIDs = "";
            var anSelected = fnGetSelected(oTable);
            for (var i = 0; i <= anSelected.length - 1; i++) {
                stringIDs = stringIDs + $(anSelected[i]).find('#hdnUniqueID').val() + ",";
            }

        }
        else if ($("#slectAction").val() == 4) {
            var orderHeaders = new Array();
            var validationToken = true;
            if ($("#dvCreteOrderTransfer").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").length > 0) {

                $("#dvCreteOrderTransfer").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").each(function (indx, curchk) {
                    if ($(curRow).find("select[id^='ddlOrderStatus']").val() == 2) {

                    }
                    var vvUDF1 = '', vvUDF2 = '', vvUDF3 = '', vvUDF4 = '', vvUDF5 = '';
                    var curRow = $(curchk).parent().parent();

                    /// save UDF options for the editable dropdown start ////
                    if ($(curRow).find('.udf-editable-dropdownbox').length > 0) {
                        $(curRow).find('.udf-editable-dropdownbox').each(function () {
                            var _UDFID = $(this).prev().val();
                            var _UDFOption = $(this).val();
                            var _UDFColumnName = $(this).prop("name");
                            var actionURL;
                            var params;
                            var udftable = '';
                            if ($("input#UDFTableName").length > 0) {
                                udftable = $("input#UDFTableName").val();
                            }
                            if (_UDFID > 0) {
                                //Add Mode  - UDFOption
                                actionURL = '/UDF/InsertUDFOption';
                                params = { UDFID: _UDFID, UDFOption: _UDFOption, UDFTableName: udftable, UDFColumnName: _UDFColumnName }
                                $.ajax({
                                    'url': actionURL,
                                    data: params,
                                    success: function (response) {
                                    }
                                });
                            }
                        });
                    }
                    /// save UDF options for the editable dropdown end ////

                    var supplierId = $(curRow).find("input[type='hidden'][id^='hdnSupplierId']").val();
                    var lineItems = $(curRow).find("input[type='hidden'][id^='hdnNoOfLineItems']").val();
                    var orderLineItemsIds = $(curRow).find("input[type='hidden'][id^='hdnOrderLineItemsIds']").val();
                    var orderNumber = $(curRow).find("input[type='text'][id^='txtOrderNumber']").val();
                    var suplierName = $(curRow).find("span[id='spSupplierName']").text();
                    var orderStatus = $(curRow).find("select[id^='ddlOrderStatus']").val();
                    var comments = $(curRow).find("textarea[id^='txtComment']").val();
                    var requiredDate = $(curRow).find("input[type='text'][id^='txtRequiredDate']").val();
                    var shipViaName = $(curRow).find("input[type='text'][id^='txtShipViaName']").val();
                    var stagingName = $(curRow).find("input[type='text'][id^='txtStagingName']").val();
                    var customerName = $(curRow).find("input[type='text'][id^='txtCustomerName']").val();
                    var VendorName = $(curRow).find("input[type='text'][id^='txtVendorName']").val();
                    var ShippingTrackNumber = $(curRow).find("input[type='text'][id^='ShippingTrackNumber']").val();
                    var SupplierAccountGuid = $(curRow).find("select[id^='ddlSupplierAccountt_']").val();

                    var orderLineItemsUDF1 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF1']").val();
                    var orderLineItemsUDF2 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF2']").val();
                    var orderLineItemsUDF3 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF3']").val();
                    var orderLineItemsUDF4 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF4']").val();
                    var orderLineItemsUDF5 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF5']").val();

                    var ItemQuantityString = $(curRow).find("input[type='hidden'][id^='hdnCartQuantity']").val();

                    var isBlanketOrder = $(curRow).find("input[type='hidden'][id^='hdnIsBlanketOrder']").val();

                    if (isBlanketOrder == "True") {
                        var blanketPO = $(curRow).find("select[id^='ddlBlanketPO']").val();
                        if (!isNaN(parseInt(blanketPO)) && parseInt(blanketPO) > 0) {
                            orderNumber = $(curRow).find("select[id^='ddlBlanketPO'] :selected").text();
                        }
                        else {
                            orderNumber = "";
                        }
                    }

                    if ($(curRow).find('#UDF1').length > 0) {
                        if ($(curRow).find('#UDF1').attr("class") == 'selectBox') {
                            vvUDF1 = $(curRow).find('#UDF1 option:selected').text();
                        }
                        else {
                            vvUDF1 = $(curRow).find('#UDF1').val();
                        }
                    }

                    if ($(curRow).find('#UDF2').length > 0) {
                        if ($(curRow).find('#UDF2').attr("class") == 'selectBox') {
                            vvUDF2 = $(curRow).find('#UDF2 option:selected').text();
                        }
                        else {
                            vvUDF2 = $(curRow).find('#UDF2').val();
                        }
                    }

                    if ($(curRow).find('#UDF3').length > 0) {
                        if ($(curRow).find('#UDF3').attr("class") == 'selectBox') {
                            vvUDF3 = $(curRow).find('#UDF3 option:selected').text();
                        }
                        else {
                            vvUDF3 = $(curRow).find('#UDF3').val();
                        }
                    }

                    if ($(curRow).find('#UDF4').length > 0) {
                        if ($(curRow).find('#UDF4').attr("class") == 'selectBox') {
                            vvUDF4 = $(curRow).find('#UDF4 option:selected').text();
                        }
                        else {
                            vvUDF4 = $(curRow).find('#UDF4').val();
                        }
                    }

                    if ($(curRow).find('#UDF5').length > 0) {
                        if ($(curRow).find('#UDF5').attr("class") == 'selectBox') {
                            vvUDF5 = $(curRow).find('#UDF5 option:selected').text();
                        }
                        else {
                            vvUDF5 = $(curRow).find('#UDF5').val();
                        }
                    }


                    orderHeaders.push({
                        ID: 0, OrderNumber: orderNumber, Supplier: supplierId, Comment: comments, RequiredDateString: requiredDate, ShipViaName: shipViaName,
                        StagingName: stagingName, CustomerName: customerName, ShippingVendorName: VendorName, ShippingTrackNumber: ShippingTrackNumber,
                        OrderLineItemsIds: orderLineItemsIds, OrderStatus: orderStatus, IsOnlyFromUI: true, SupplierAccountGuid: SupplierAccountGuid,
                        OrderLineItemUDF1: orderLineItemsUDF1, OrderLineItemUDF2: orderLineItemsUDF2, OrderLineItemUDF3: orderLineItemsUDF3,
                        OrderLineItemUDF4: orderLineItemsUDF4, OrderLineItemUDF5: orderLineItemsUDF5,
                        UDF1: vvUDF1, UDF2: vvUDF2, UDF3: vvUDF3, UDF4: vvUDF4, UDF5: vvUDF5,
                        SupplierName: suplierName, CartQuantityString : ItemQuantityString
                    });

                    if ($.trim(orderNumber) == "") {
                        $(curRow).css("background-color", "#FFA17F");
                        if (validationToken == true) {
                            validationToken = false;
                        }
                    }

                });

                if (validationToken == true) {
                    var dataToSend = JSON.stringify(orderHeaders);
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("CreateOrdersfromCart", "Replenish")',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: dataToSend,
                        success: function (retdt) {
                            if (retdt != null && retdt.lstOrders != null && retdt != undefined && retdt.lstOrders != undefined) {
                                for (var i = 0; i < retdt.lstOrders.length; i++) {
                                    var SUPPLIERID = retdt.lstOrders[i].Supplier;
                                    var totalfiles = document.getElementById(retdt.lstOrders[i].Supplier).files.length;
                                    if (totalfiles > 0) {
                                        for (var j = 0; j < totalfiles; j++) {
                                            var fileExt = document.getElementById(retdt.lstOrders[i].Supplier).files[j].name;
                                            fileExt = fileExt.substring(fileExt.lastIndexOf('.'));
                                            if (OrderAllowedFileExtension.indexOf(fileExt.toLowerCase()) <= -1) {
                                                // do nothing for invalid file
                                            } else {
                                                var SUPPLIERID = (retdt.lstOrders[i] != undefined && retdt.lstOrders[i].Supplier != undefined) ? parseInt(retdt.lstOrders[i].Supplier) : 0;
                                                var FILENAME = document.getElementById(retdt.lstOrders[i].Supplier).files[j].name;
                                                var isavailable = removedFileListName.filter(function (item) {
                                                    return item.id == SUPPLIERID && item.fileName === FILENAME
                                                });
                                                if (isavailable.length == 0) {
                                                    formData.append("file_" + retdt.lstOrders[i].Supplier + j.toString(), document.getElementById(retdt.lstOrders[i].Supplier).files[j]);
                                                }
                                            }
                                        }
                                        //uupload image for suucess
                                        var OrderGuid;
                                        var OrderID;
                                        if (retdt.lstOrders[i] != undefined && retdt.lstOrders[i].GUID != "00000000-0000-0000-0000-000000000000" && retdt.lstOrders[i].ID > 0) {
                                            OrderGuid = retdt.lstOrders[i].GUID;
                                            OrderID = retdt.lstOrders[i].ID;
                                            //send formdata to server-side
                                            $.ajax({
                                                url: "/api/fileupload/OrderFileUpload/" + OrderID + "?OrderGUID=" + OrderGuid,
                                                type: 'post',
                                                data: formData,
                                                dataType: 'html', // we return html from our file
                                                async: false,
                                                processData: false,  // tell jQuery not to process the data
                                                contentType: false,   // tell jQuery not to set contentType
                                                success: function (data) {
                                                    formData = new FormData();
                                                    deleteFromArray(SUPPLIERID);
                                                },
                                                error: function (request) {
                                                    console.log(request.responseText);
                                                    formData = new FormData();
                                                }
                                            });
                                        } else {
                                            formData = new FormData();
                                        }
                                    }
                                }
                            }
                            $.modal.close();
                            $('#DivLoading').hide();
                            if (retdt.Status == "ok") {
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                $("#spanGlobalMessage").html(retdt.Message);
                                $('div#target').css("z-index", 100000);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');

                                RefressFilterCart("CartItemList");
                                oTable.fnDraw();
                                $("#dvCreteOrderTransfer").dialog("close");
                            }
                            else {
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime + 3000).fadeOut(FadeOutTime + 1000);
                                $("#spanGlobalMessage").html(retdt.Message);
                                $('div#target').css("z-index", 100000);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('errorIcon');
                            }

                        },
                        error: function (err) {
                            alert("There is some Error");
                        }
                    });

                }
                else {
                    $('div#target').fadeToggle();
                    $('#DivLoading').hide();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $('div#target').css("z-index", 100000);
                    $("#spanGlobalMessage").html("@ResCommon.CorrectErrorToProceed");
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                }
            }
        }
        ///////////////// for return Order start /////////////////////
        else if ($("#slectAction").val() == 5) {
            var orderHeaders = new Array();
            var validationToken = true;
            if ($("#dvCreteReturnOrder").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").length > 0) {

                $("#dvCreteReturnOrder").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").each(function (indx, curchk) {
                    var vvUDF1 = '', vvUDF2 = '', vvUDF3 = '', vvUDF4 = '', vvUDF5 = '';
                    var curRow = $(curchk).parent().parent();

                    /// save UDF options for the editable dropdown start ////
                    if ($(curRow).find('.udf-editable-dropdownbox').length > 0) {
                        $(curRow).find('.udf-editable-dropdownbox').each(function () {
                            var _UDFID = $(this).prev().val();
                            var _UDFOption = $(this).val();
                            var _UDFColumnName = $(this).prop("name");
                            var actionURL;
                            var params;
                            var udftable = '';
                            if ($("input#UDFTableName").length > 0) {
                                udftable = $("input#UDFTableName").val();
                            }
                            if (_UDFID > 0) {
                                //Add Mode  - UDFOption
                                actionURL = '/UDF/InsertUDFOption';
                                params = { UDFID: _UDFID, UDFOption: _UDFOption, UDFTableName: udftable, UDFColumnName: _UDFColumnName }
                                $.ajax({
                                    'url': actionURL,
                                    data: params,
                                    success: function (response) {
                                    }
                                });
                            }
                        });
                    }
                    /// save UDF options for the editable dropdown end ////

                    var supplierId = $(curRow).find("input[type='hidden'][id^='hdnSupplierId']").val();
                    var lineItems = $(curRow).find("input[type='hidden'][id^='hdnNoOfLineItems']").val();
                    var orderLineItemsIds = $(curRow).find("input[type='hidden'][id^='hdnOrderLineItemsIds']").val();
                    var orderNumber = $(curRow).find("input[type='text'][id^='txtOrderNumber']").val();
                    var suplierName = $(curRow).find("span[id='spSupplierName']").text();
                    var orderStatus = $(curRow).find("select[id^='ddlOrderStatus']").val();
                    var comments = $(curRow).find("textarea[id^='txtComment']").val();
                    var requiredDate = $(curRow).find("input[type='text'][id^='txtRequiredDate']").val();
                    var shipViaName = $(curRow).find("input[type='text'][id^='txtShipViaName']").val();
                    var stagingName = $(curRow).find("input[type='text'][id^='txtStagingName']").val();
                    var VendorName = $(curRow).find("input[type='text'][id^='txtVendorName']").val();
                    var ShippingTrackNumber = $(curRow).find("input[type='text'][id^='ShippingTrackNumber']").val();
                    var SupplierAccountGuid = $(curRow).find("select[id^='ddlSupplierAccountt_']").val();

                    var orderLineItemsUDF1 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF1']").val();
                    var orderLineItemsUDF2 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF2']").val();
                    var orderLineItemsUDF3 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF3']").val();
                    var orderLineItemsUDF4 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF4']").val();
                    var orderLineItemsUDF5 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF5']").val();
                    var isBlanketOrder = $(curRow).find("input[type='hidden'][id^='hdnIsBlanketOrder']").val();
                    var ItemQuantityString = $(curRow).find("input[type='hidden'][id^='hdnCartQuantity']").val();

                    if (isBlanketOrder == "True") {
                        var blanketPO = $(curRow).find("select[id^='ddlBlanketPO']").val();
                        if (!isNaN(parseInt(blanketPO)) && parseInt(blanketPO) > 0) {
                            orderNumber = $(curRow).find("select[id^='ddlBlanketPO'] :selected").text();
                        }
                        else {
                            orderNumber = "";
                        }
                    }
                    if (orderLineItemsUDF1 == undefined)
                        orderLineItemsUDF1 = "";
                    if (orderLineItemsUDF2 == undefined)
                        orderLineItemsUDF2 = "";
                    if (orderLineItemsUDF3 == undefined)
                        orderLineItemsUDF3 = "";
                    if (orderLineItemsUDF4 == undefined)
                        orderLineItemsUDF4 = "";
                    if (orderLineItemsUDF5 == undefined)
                        orderLineItemsUDF5 = "";

                    if ($(curRow).find('#UDF1').length > 0) {
                        if ($(curRow).find('#UDF1').attr("class") == 'selectBox') {
                            vvUDF1 = $(curRow).find('#UDF1 option:selected').text();
                        }
                        else {
                            vvUDF1 = $(curRow).find('#UDF1').val();
                        }
                    }
                    if ($(curRow).find('#UDF2').length > 0) {
                        if ($(curRow).find('#UDF2').attr("class") == 'selectBox') {
                            vvUDF2 = $(curRow).find('#UDF2 option:selected').text();
                        }
                        else {
                            vvUDF2 = $(curRow).find('#UDF2').val();
                        }
                    }
                    if ($(curRow).find('#UDF3').length > 0) {
                        if ($(curRow).find('#UDF3').attr("class") == 'selectBox') {
                            vvUDF3 = $(curRow).find('#UDF3 option:selected').text();
                        }
                        else {
                            vvUDF3 = $(curRow).find('#UDF3').val();
                        }
                    }
                    if ($(curRow).find('#UDF4').length > 0) {
                        if ($(curRow).find('#UDF4').attr("class") == 'selectBox') {
                            vvUDF4 = $(curRow).find('#UDF4 option:selected').text();
                        }
                        else {
                            vvUDF4 = $(curRow).find('#UDF4').val();
                        }
                    }
                    if ($(curRow).find('#UDF5').length > 0) {
                        if ($(curRow).find('#UDF5').attr("class") == 'selectBox') {
                            vvUDF5 = $(curRow).find('#UDF5 option:selected').text();
                        }
                        else {
                            vvUDF5 = $(curRow).find('#UDF5').val();
                        }
                    }
                    orderHeaders.push({
                        ID: 0, OrderNumber: orderNumber, Supplier: supplierId, Comment: comments, RequiredDateString: requiredDate, ShipViaName: shipViaName,
                        StagingName: stagingName, ShippingVendorName: VendorName, ShippingTrackNumber: ShippingTrackNumber,
                        OrderLineItemsIds: orderLineItemsIds, OrderStatus: orderStatus, IsOnlyFromUI: true, SupplierAccountGuid: SupplierAccountGuid,
                        OrderLineItemUDF1: orderLineItemsUDF1, OrderLineItemUDF2: orderLineItemsUDF2, OrderLineItemUDF3: orderLineItemsUDF3,
                        OrderLineItemUDF4: orderLineItemsUDF4, OrderLineItemUDF5: orderLineItemsUDF5,
                        UDF1: vvUDF1, UDF2: vvUDF2, UDF3: vvUDF3, UDF4: vvUDF4, UDF5: vvUDF5,
                        SupplierName: suplierName, CartQuantityString: ItemQuantityString
                    });

                    if ($.trim(orderNumber) == "") {
                        $(curRow).css("background-color", "#FFA17F");
                        if (validationToken == true) {
                            validationToken = false;
                        }
                    }
                });

                if (validationToken == true) {
                    var dataToSend = JSON.stringify(orderHeaders);
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("CreateReturnOrdersfromCart", "Replenish")',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: dataToSend,
                        success: function (retdt) {
                            $.modal.close();
                            $('#DivLoading').hide();
                            if (retdt.Status == "ok") {
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                $("#spanGlobalMessage").html(retdt.Message);
                                $('div#target').css("z-index", 100000);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');

                                RefressFilterCart("CartItemList");
                                oTable.fnDraw();
                                $("#dvCreteReturnOrder").dialog("close");
                            }
                            else {
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime + 3000).fadeOut(FadeOutTime + 1000);
                                $("#spanGlobalMessage").html(retdt.Message);
                                $('div#target').css("z-index", 100000);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('errorIcon');
                            }

                        },
                        error: function (err) {
                            alert("There is some Error");
                        }
                    });

                }
                else {
                    $('div#target').fadeToggle();
                    $('#DivLoading').hide();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $('div#target').css("z-index", 100000);
                    $("#spanGlobalMessage").html("@ResCommon.CorrectErrorToProceed");
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                }
            }
        }
        //////////////// for return order end ///////////////////////

        //////////////// for quote start ////////////////////////////

        else if ($("#slectAction").val() == 6) {
            var QuoteHeaders = new Array();
            var validationToken = true;
            if ($("#dvCreteQuote").find("table.display").find("input[type='text'][id^='txtQuoteNumber']").length > 0) {

                $("#dvCreteQuote").find("table.display").find("input[type='text'][id^='txtQuoteNumber']").each(function (indx, curchk) {
                    if ($(curRow).find("select[id^='ddlQuoteStatus']").val() == 2) {

                    }
                    var vvUDF1 = '', vvUDF2 = '', vvUDF3 = '', vvUDF4 = '', vvUDF5 = '';
                    var curRow = $(curchk).parent().parent();

                    /// save UDF options for the editable dropdown start ////
                    if ($(curRow).find('.udf-editable-dropdownbox').length > 0) {
                        $(curRow).find('.udf-editable-dropdownbox').each(function () {
                            var _UDFID = $(this).prev().val();
                            var _UDFOption = $(this).val();
                            var _UDFColumnName = $(this).prop("name");
                            var actionURL;
                            var params;
                            var udftable = '';
                            if ($("input#UDFTableName").length > 0) {
                                udftable = $("input#UDFTableName").val();
                            }
                            if (_UDFID > 0) {
                                //Add Mode  - UDFOption
                                actionURL = '/UDF/InsertUDFOption';
                                params = { UDFID: _UDFID, UDFOption: _UDFOption, UDFTableName: udftable, UDFColumnName: _UDFColumnName }
                                $.ajax({
                                    'url': actionURL,
                                    data: params,
                                    success: function (response) {
                                    }
                                });
                            }
                        });
                    }
                    /// save UDF options for the editable dropdown end ////

                    var QuoteStatusValue = $(curRow).find("select[id^='ddlQuoteStatus']").val();
                    //$(curRow).find("select[id^='hdnPrevQuoteStatus']").val(QuoteStatusValue);

                    if (QuoteStatusValue === '@((int)QuoteStatus.Submitted)'
                        && '@IsableToApprove' == "True")
                    {
                        //$(curRow).find("select[id^='hdnPrevQuoteStatus']").val(QuoteStatusValue);
                        $(curRow).find("select[id^='ddlQuoteStatus']").val('@((int)QuoteStatus.Approved)');
                    }

                    var lineItems = $(curRow).find("input[type='hidden'][id^='hdnNoOfLineItems']").val();
                    var QuoteLineItemsIds = $(curRow).find("input[type='hidden'][id^='hdnQuoteLineItemsIds']").val();
                    var QuoteNumber = $(curRow).find("input[type='text'][id^='txtQuoteNumber']").val();
                    var QuoteStatus = $(curRow).find("select[id^='ddlQuoteStatus']").val();
                    var comments = $(curRow).find("textarea[id^='txtQuoteComment']").val();
                    var requiredDate = $(curRow).find("input[type='text'][id^='txtQuoteRequiredDate']").val();
                    var QuoteLineItemsUDF1 = $(curRow).find("input[type='hidden'][id^='hdnQuoteLineUDF1']").val();
                    var QuoteLineItemsUDF2 = $(curRow).find("input[type='hidden'][id^='hdnQuoteLineUDF2']").val();
                    var QuoteLineItemsUDF3 = $(curRow).find("input[type='hidden'][id^='hdnQuoteLineUDF3']").val();
                    var QuoteLineItemsUDF4 = $(curRow).find("input[type='hidden'][id^='hdnQuoteLineUDF4']").val();
                    var QuoteLineItemsUDF5 = $(curRow).find("input[type='hidden'][id^='hdnQuoteLineUDF5']").val();
                    var SupplierIDs = $.map($($(curRow).find("select[id^='ddlQuoteSupplierIdsCSV']")).multiselect("getChecked"), function (input) { return input.value; });

                    var ItemQuantityString = $(curRow).find("input[type='hidden'][id^='hdnCartQuantity']").val();
                    if ($(curRow).find('#UDF1').length > 0) {
                        if ($(curRow).find('#UDF1').attr("class") == 'selectBox') {
                            vvUDF1 = $(curRow).find('#UDF1 option:selected').text();
                        }
                        else {
                            vvUDF1 = $(curRow).find('#UDF1').val();
                        }
                    }

                    if ($(curRow).find('#UDF2').length > 0) {
                        if ($(curRow).find('#UDF2').attr("class") == 'selectBox') {
                            vvUDF2 = $(curRow).find('#UDF2 option:selected').text();
                        }
                        else {
                            vvUDF2 = $(curRow).find('#UDF2').val();
                        }
                    }

                    if ($(curRow).find('#UDF3').length > 0) {
                        if ($(curRow).find('#UDF3').attr("class") == 'selectBox') {
                            vvUDF3 = $(curRow).find('#UDF3 option:selected').text();
                        }
                        else {
                            vvUDF3 = $(curRow).find('#UDF3').val();
                        }
                    }

                    if ($(curRow).find('#UDF4').length > 0) {
                        if ($(curRow).find('#UDF4').attr("class") == 'selectBox') {
                            vvUDF4 = $(curRow).find('#UDF4 option:selected').text();
                        }
                        else {
                            vvUDF4 = $(curRow).find('#UDF4').val();
                        }
                    }

                    if ($(curRow).find('#UDF5').length > 0) {
                        if ($(curRow).find('#UDF5').attr("class") == 'selectBox') {
                            vvUDF5 = $(curRow).find('#UDF5 option:selected').text();
                        }
                        else {
                            vvUDF5 = $(curRow).find('#UDF5').val();
                        }
                    }

                    QuoteHeaders.push({
                        ID: 0, QuoteNumber: QuoteNumber,
                        Comment: comments,
                        RequiredDateString: requiredDate,
                        QuoteLineItemsIds: QuoteLineItemsIds,
                        QuoteStatus: QuoteStatus,
                        IsOnlyFromUI: true,
                        QuoteLineItemUDF1: QuoteLineItemsUDF1,
                        QuoteLineItemUDF2: QuoteLineItemsUDF2,
                        QuoteLineItemUDF3: QuoteLineItemsUDF3,
                        QuoteLineItemUDF4: QuoteLineItemsUDF4,
                        QuoteLineItemUDF5: QuoteLineItemsUDF5,
                        UDF1: vvUDF1, UDF2: vvUDF2, UDF3: vvUDF3, UDF4: vvUDF4, UDF5: vvUDF5,
                        QuoteSupplierIdsCSV: (SupplierIDs != null ? SupplierIDs.toString() : ""),
                        QuoteQuantityString: ItemQuantityString

                    });

                    if ($.trim(QuoteNumber) == "") {
                        $(curRow).css("background-color", "#FFA17F");
                        if (validationToken == true) {
                            validationToken = false;
                        }
                    }
                    if (SupplierIDs == null && SupplierIDs == "") {
                        $(curRow).css("background-color", "#FFA17F");
                        if (validationToken == true) {
                            validationToken = false;
                        }
                    }
                });

                if (validationToken == true) {
                    var dataToSend = JSON.stringify(QuoteHeaders);
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("CreateQuotefromCart", "Replenish")',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: dataToSend,
                        success: function (retdt) {
                            $.modal.close();
                            $('#DivLoading').hide();
                            if (retdt.Status == "ok") {
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                $("#spanGlobalMessage").html(retdt.Message);
                                $('div#target').css("z-index", 100000);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');

                                RefressFilterCart("CartItemList");
                                oTable.fnDraw();
                                $("#dvCreteQuote").dialog("close");
                            }
                            else {
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime + 3000).fadeOut(FadeOutTime + 1000);
                                $("#spanGlobalMessage").html(retdt.Message);
                                $('div#target').css("z-index", 100000);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('errorIcon');
                            }

                        },
                        error: function (err) {
                            alert("There is some Error");
                        }
                    });

                }
                else {
                    $('div#target').fadeToggle();
                    $('#DivLoading').hide();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $('div#target').css("z-index", 100000);
                    $("#spanGlobalMessage").html("@ResCommon.CorrectErrorToProceed");
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                }
            }
        }

        /////////////// for quote end //////////////////////////////
    });
    $("#dvCreteOrderTransfer").on("focus", "input[id^='txtRequiredDate']", function () {
        $(this).datepicker(
            {
                dateFormat: RoomDateJSFormat,
                showButtonPanel: true,
                clearText: 'Clear',
                onClose: function () {
                    this.focus();
                }
            });

    });

    $("#dvCreteReturnOrder").on("focus", "input[id^='txtRequiredDate']", function () {
        $(this).datepicker(
            {
                dateFormat: RoomDateJSFormat,
                showButtonPanel: true,
                clearText: 'Clear',
                onClose: function () {
                    this.focus();
                }
            });

    });
    $("#dvCreteQuote").on("focus", "input[id^='txtQuoteRequiredDate']", function () {
        $(this).datepicker(
            {
                dateFormat: RoomDateJSFormat,
                showButtonPanel: true,
                clearText: 'Clear',
                onClose: function () {
                    this.focus();
                }
            });

    });

    function deleteFromArray(ID) {
        var RemovedFileCount = removedFileListName.length;
        for (var i = 0; i <= RemovedFileCount; i++) {
            var isavailable = removedFileListName.filter(function (item) {
                return item.id == ID;
            });
            var Index = removedFileListName.indexOf(isavailable[0]);
            if (Index >= 0) {
                removedFileListName.splice(Index, 1);
            }
        }

    }

</script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Authorization.js?v=" + version)"></script>
