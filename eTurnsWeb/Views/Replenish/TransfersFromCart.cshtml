@model IList<eTurns.DTO.TransferMasterDTO>
    @{ 
        bool isTransferUDF = new eTurns.DAL.UDFDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetNonDeletedUDFCountByUDFTableName("TransferMaster", eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID) > 0;

    }
<table style="width: 100%" class="display" id="tableCartOrder">
    <thead>
        <tr>
            <th style="text-align: left;display:none;">
                <input type="checkbox" name="chkHeader" id="chkHeader" />
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResTransfer.ReplinishRoom
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResTransfer.TransferNumber
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResTransfer.TransferStatus
            </th>
            @*<th style="text-align: left;">
                @eTurns.DTO.ResTransfer.ReleaseNumber
            </th>*@
            <th style="text-align: left;">
                @eTurns.DTO.ResTransfer.NoOfItems
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResTransfer.Comment
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResTransfer.RequireDate
            </th>
            @*<th style="text-align: left;">
                @eTurns.DTO.ResTransfer.ShippingMethod
            </th>*@
            <th style="text-align: left;">
                @eTurns.DTO.ResTransfer.StagingName
            </th>
            @*<th style="text-align: left;">
                @eTurns.DTO.ResTransfer.Customer
            </th>*@
            @*<th style="text-align: left;">
                @eTurns.DTO.ResTransfer.ShippingVendor
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResTransfer.ShippingTrackNumber
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResTransfer.SupplierAccountDetail
            </th>*@
            @if (isTransferUDF)
            {
                @Html.RenderColumnsHeaderByName("TransferMaster", typeof(eTurns.DTO.ResTransfer))
            }
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Count() > 0)
        {
            string clasname = "";
            for (int i = 0; i < 1; i++)
            {
                if ((i + 1) % 2 == 0)
                {
                    clasname = "even";
                }
                else
                {
                    clasname = "odd";
                }
                <tr class="@clasname">
                    <td style="text-align: left; display: none;">
                        @Html.CheckBoxFor(m => Model[i].IsTransferSelected, new { @class = "check-box", @id = "chkOrder_" + i, @value = i })
                        
                    </td>
                    @*<td style="text-align: left;">
                        @Html.DisplayFor(m => Model[i].SupplierName)
                    </td>*@
                <td style="text-align: left;">
                    @Html.DropDownListFor(m => Model[i].ReplenishingRoomID, new SelectList(ViewBag.ReplenishingRoom, "ID", "RoomName", Model[i].ReplenishingRoomID), new { id = "ddlReplenishingRoomID_" + i, @class = "selectBox", @style = "width:120px" })
                    @Html.HiddenFor(m => Model[i].NoOfItems, new { @id = "hdnNoOfLineItems_" + i })
                    @Html.HiddenFor(m => Model[i].TransferLineItemsIds, new { @id = "hdnOrderLineItemsIds_" + i })
                    @Html.HiddenFor(m => Model[i].TransferQuantityString, new { @id = "hdnTransferQuantityString_" + i })
                </td>
                    <td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].TransferNumber, new { @class = "text-boxinner", @style = "width:90%;", @maxlength = 22, @id = "txtTransferNumber_" + i })
                    </td>
                    <td style="text-align: left;">
                        @Html.DropDownListFor(m => Model[i].TransferStatus, new SelectList(ViewBag.TrasnferStatusList, "value", "Text", Model[i].TransferStatus), new { id = "ddlTransferStatus_" + i, @class = "selectBox", @style = "width:120px" })
                    </td>
                    @*<td style="text-align: left;">
                        @Html.DisplayFor(m => Model[i].ReleaseNumber)
                    </td>*@
                    <td style="text-align: left;">
                        @Html.DisplayFor(m => Model[i].NoOfItems)
                    </td>
                    <td style="text-align: left;">
                        @Html.TextAreaFor(m => Model[i].Comment, new { @maxlength = 1024, @class = "text-boxinner", @style = "width:90%;", @cols = 20, @id = "txtComment_" + i })
                    </td>
                    <td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].RequiredDateString, new { @class = "text-boxinner", @style = "width:90%;", @id = "txtRequiredDate_" + i })
                    </td>
                    @*<td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].ShipViaName, new { @class = "AutoCompleteddl text-boxinner", @style = "width:90%;", @id = "txtShipViaName_" + i })
                    </td>*@
                    <td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].StagingName, new { @class = "AutoCompleteddl text-boxinner", @style = "width:90%;", @id = "txtStagingName_" + i })
                    </td>
                    @*<td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].CustomerName, new { @class = "AutoCompleteddl text-boxinner", @style = "width:90%;", @id = "txtCustomerName_" + i })
                    </td>
                    <td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].ShippingVendorName, new { @class = "AutoCompleteddl text-boxinner", @style = "width:90%;", @id = "txtVendorName_" + i })
                    </td>
                    <td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].ShippingTrackNumber, new { @class = "text-boxinner", @style = "width:90%;", @id = "ShippingTrackNumber_" + i })
                    </td>
                    <td style="text-align: left;">
                        @Html.DropDownListFor(model => Model[i].SupplierAccountGuid, Enumerable.Empty<SelectListItem>(), new { @id = "ddlSupplierAccountt_" + i, @class = "selectBox", @style = "width:120px", autofocus = "autofocus" })
                        @Html.HiddenFor(model => Model[i].SupplierAccountGuid)
                    </td>*@
                    @if (isTransferUDF)
                    {
                        @Html.RenderColumnsArrayEditableObjectForDOMByName("TransferMaster", controlIDPostfix: "")
                    }
                </tr>
            }

        }
    </tbody>
</table>
<table style="width: 100%">
    <tr>
        <td>
            &nbsp;
        </td>
    </tr>
    <tr>
        <td style="text-align: right;">
            <input type="button" class="btnGeneral" value="@ResCommon.Save" id="btnSaveTransfers" name="btnSaveTransfers" />
            <input type="button" class="btnGeneral" value="@ResCommon.Cancel" id="btnCancel" name="btnCancel" />
        </td>
    </tr>
</table>
<script>
    $(document).ready(function () {
        $("table#tableCartOrder tbody tr").each(function () {
            var currentTr = $(this);
            var supplierId = $(currentTr).find("input[id^='hdnSupplierId_']").val();
            $(currentTr).find("select[id^='ddlSupplierAccountt_']").empty();
            $(currentTr).find("select[id^='ddlSupplierAccountt_']").html('');
            if (supplierId != '' && supplierId != null) {
                $.ajax({
                    url: "/Order/ShowData",
                    data: { "SupplierID": supplierId },
                    type: "Get",
                    async:false,
                    success: function (data) {
                        for (var i = 0; i < data.length; i++) {
                            var opt = new Option(data[i].AccountNumnerMerge, data[i].GUID);
                            $(currentTr).find("select[id^='ddlSupplierAccountt_']").append(opt);

                        }
                        $.ajax({
                            url: "/Order/GetDefaultAccount",
                            data: { "SupplierID": supplierId },
                            type: "Get",
                            async: false,
                            success: function (data) {
                                $(currentTr).find("select[id^='ddlSupplierAccountt_']").val(data);
                            }
                        });

                    }
                });
            }
        });


        UDFfillEditableOptionsForGridTrnsAndOrd();

    });
</script>