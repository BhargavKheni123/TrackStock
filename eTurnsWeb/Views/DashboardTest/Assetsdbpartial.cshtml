<style>
    .dataTables_scrollBody
    {
        max-height: 90px !important;
    }
    .Lnavd
    {
        float: left;
        padding-left: 1px;
    }
    
    .Lnavd li
    {
        float: left;
        padding: 2px 4px 1px 0px;
        position: relative;
        list-style: none;
    }
    .Lnavd li.clear
    {
        width: 100%;
        height: 1px;
        float: left;
        margin: 0;
        padding: 0;
    }
    .lia
    {
        background: none repeat scroll 0 0 #F3F9FF;
        border: 1px solid #C7E3FF;
        border-radius: 5px 5px 5px 5px;
        color: #1971BD;
        float: left;
        font-size: 12px;
        padding: 1px 5px;
        cursor: pointer;
        text-align: center;
        text-decoration: none; /* width: 50px;*/
    }
    .liahover
    {
        background: no-repeat scroll 90px center #1971BD;
        border: 1px solid #1971BD;
        border-radius: 5px 5px 5px 5px;
        color: #FFFFFF !important;
        cursor: auto;
        text-decoration: none;
    }
    /*  .Lnavd li a
    {
        background: none repeat scroll 0 0 #F3F9FF;
        border: 1px solid #C7E3FF;
        border-radius: 5px 5px 5px 5px;
        color: #1971BD;
        float: left;
        font-size: 12px;
        padding: 1px 5px;
        text-align: center;
        text-decoration: none; 
    }*/
    .Lnavd li a:hover
    {
        text-decoration: none;
    }
    .imgclassd span
    {
        background: url("../../content/images/num-selected.png") no-repeat scroll 0 0 transparent;
        color: #FFFFFF;
        float: right;
        font-size: 12px;
        font-weight: bold;
        height: 18px;
        margin: -12px 0 0 -6px;
        padding: 6px 0;
        text-align: center;
        width: 29px;
    }
    .gridchartclass
    {
        float:right;margin-right: 0;margin-top: -25px;padding-bottom: 0;padding-left: 0;padding-top: 0;width: auto;
        }
</style>
<div style="float: left; width: 100%;">
    <div id="dvToolsAssetsmain" class="Lnavd">
        <ul>
         <li class="imgclassd"><a id="lnkAssets" title="Assets" onclick="BindGrid('lnkAssets','Assets')"
                class="lia">@eTurns.DTO.Resources.ResLayout.Assets</a></li>
            <li class="imgclassd"><a id="lnkTools" title="Tools" onclick="BindGrid('lnkTools','Tools')"
                class="lia">@eTurns.DTO.Resources.ResLayout.Tool</a></li>
           
        </ul>
    </div>
    <div id="divMainToolsTab" style="float: left; width: 100%;">
        <div class="viewBlock gridchartclass" >
            <span class="label">View:</span> <a class="view" href="javascript:void(0);" onclick="ShowHideDiv('Tools','Grid');">
                <img alt="" id="imgTOGrid" src="/content/images/list-view.png"></a> <a class="view" href="javascript:void(0);" onclick="ShowHideDiv('Tools','Chart');">
                    <img alt="" id="imgTOChart" src="/content/images/thumb-view.png"></a>
        </div>
        <div style="float: left; padding-top: 4px;">
            <ul>
                <li style="border-right: none; float: left; padding-right: 5px;">
                    <label for="label" style="float: left; padding: 1.3% 2px;">
                        @Html.Label("Days")
                    </label>
                    @Html.TextBox("txtToolsDays", "", new { @class = "importtext-box", id = "txtToolsDays", @style = "width:30px;background:white", maxlength = 3 })
                </li>
                <li style="border-right: none; float: left; padding-right: 5px;">
                    <div class="BtnBlockform" style="margin: 0px 0px 0px 5px;">
                        <input type="button" value="GO" id="btnToolsgo" name="btnToolsgo" class="CreateBtn"
                            style="float: left;" />
                    </div>
                </li>
            </ul>
        </div>
        <div id="dvTooltab" class="tabContener">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
                    <div class="searchinputBNew">
                        <input type="text" class="searchinputNew" id="global_filterDashTools" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_global_filterDashTools" /></a>
                    </div>
                </div>
            </div>
            <div class="userHead" style="height: 30px;">
            </div>
            <div id="Toolstab" class="tabContener">
                <div id="dvToolsGrid" class="userContent" style="float: left; width: 100%;">
                    <table id="myToolsMaintenanceDataTable" class="display" style="width: 561px; overflow: auto;">
                        <thead>
                            <tr>
                                <th>@eTurns.DTO.ResToolsMaintenance.MaintenanceName
                                </th>
                                <th>@eTurns.DTO.ResToolsMaintenance.ScheduleDate
                                </th>
                                <th>@eTurns.DTO.ResToolsMaintenance.TrackingMeasurement
                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div id="dvToolsChart" style="float: left; width: 100%;">
                    
                </div>
            </div>
        </div>
    </div>

    <div id="divMainAssetsTab" style="float: left; width: 100%;">
        <div class="viewBlock gridchartclass" >
            <span class="label">View:</span>  <a class="view" href="javascript:void(0);" onclick="ShowHideDiv('Assets','Chart');">
                    <img alt="" id="imgAChart" src="/content/images/chart-view-active.png"></a>
                    <a class="view" href="javascript:void(0);" onclick="ShowHideDiv('Assets','Grid');">
                <img alt="" id="imgAGrid" src="/content/images/list-view-inactive.png"></a>
        </div>
        <div style="float: left; padding-top: 4px;">
            <ul>
                <li style="border-right: none; float: left; padding-right: 5px;">
                    <label for="label" style="float: left; padding: 1.3% 2px;">
                        @Html.Label("Days")
                    </label>
                    @Html.TextBox("txtAssetsDays", "", new { @class = "importtext-box", id = "txtAssetsDays", @style = "width:30px;background:white", maxlength = 3 })
                </li>
                <li style="border-right: none; float: left; padding-right: 5px;">
                    <div class="BtnBlockform" style="margin: 0px 0px 0px 5px;">
                        <input type="button" value="GO" id="btnAssetsgo" name="btnAssetsgo" class="CreateBtn"
                            style="float: left;" />
                    </div>
                </li>
            </ul>
        </div>
        <div id="dvAssettab" class="tabContener">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
                    <div class="searchinputBNew">
                        <input type="text" class="searchinputNew" id="global_filterDashAssets" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_global_filterDashAssets" /></a>
                    </div>
                </div>
            </div>
            <div class="userHead" style="height: 30px;">
            </div>
            <div id="Assetstab" class="tabContener">
                <div id="dvAssetsGrid" class="userContent" style="float: left; width: 100%;">
                    <table id="myAssetsMaintenanceDataTable" class="display" style="width: 561px; overflow: auto;">
                        <thead>
                            <tr>
                                <th>@eTurns.DTO.ResToolsMaintenance.MaintenanceName
                                </th>
                                <th>@eTurns.DTO.ResToolsMaintenance.ScheduleDate
                                </th>
                                <th>@eTurns.DTO.ResToolsMaintenance.TrackingMeasurement
                                </th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div id="dvAssetsChart" style="float: left; width: 100%;">
                    Chart
                </div>
            </div>
        </div>
    </div>
</div>
<script language="javascript" type="text/javascript">

    function ShowHideDiv(strdv, str) {
        if (strdv == 'Tools') {
            if (str == 'Grid') {
                $("#dvToolsGrid").show();
                $("#dvToolsChart").hide();
                ChangeImgSRC('Grid', 'imgTOGrid', 'imgTOChart');
                oTableTools.fnDraw();
            }
            else {
                $("#dvToolsGrid").hide();
                $("#dvToolsChart").show();
                ChangeImgSRC('Chart', 'imgTOGrid', 'imgTOChart');
                $('#dvToolsChart').empty();
                $('#dvToolsChart').load('/ToolChart/LoadChart', function () { });
            }
        }
        else {
            if (str == 'Grid') {
                $("#dvAssetsGrid").show();
                $("#dvAssetsChart").hide();
                ChangeImgSRC('Grid', 'imgAGrid', 'imgAChart');
                oTableAssets.fnDraw();
            }
            else {
                $("#dvAssetsGrid").hide();
                $("#dvAssetsChart").show();
                ChangeImgSRC('Chart', 'imgAGrid', 'imgAChart');
                $('#dvAssetsChart').empty();
                $('#dvAssetsChart').load('/AssetChart/LoadChart', function () { });
            }
        }

    }

    $(document).ready(function () {

        $("#lnkTools").addClass("lava");
        $("#lnkTools").removeClass("liahover");

        $("#lnkAssets").addClass("liahover");
        $("#lnkAssets").removeClass("lava");

        $("#divMainAssetsTab").show();
        $("#divMainToolsTab").hide();
        ShowHideDiv('Assets', 'Chart');

        //BindGrid('lnkTools', 'Tools');
        GetDaysValue();
        GenerateAssetsGrid();

        $('#dvToolsChart').empty();
        $('#dvToolsChart').load('/ToolChart/LoadChart', function () { });
        $('#dvAssetsChart').empty();
        $('#dvAssetsChart').load('/AssetChart/LoadChart', function () { });

    });

    function GetDaysValue() {
        //  alert($("#hdnstatusProject").val());
        $.ajax({ url: '@Url.Content("~/InventoryDashboard/GetCompanyConfig")'
                        , type: 'POST'
                        , data: { 'CompanyID': '@eTurnsWeb.Helper.SessionHelper.CompanyID', 'Status': 'ScheduleDays' }
                        , cache: false
                        , success: function (response) {
                            $("#txtAssetsDays").val(response.StatusValue);
                            $("#txtToolsDays").val(response.StatusValue);
                            $("#global_filterDashAssets").val("");
                            $("#global_filterDashAssets").change();

                            FilterRecordsByStatusAssets();
                            //$('.DTTT_container').css('z-index', '-1');
                        }
                        , error: function (message) {
                            $("#txtAssetsDays").val(0);
                            $("#txtToolsDays").val(0);
                        }
        });

    }

    function BindGrid(id, str) {
        if (id == "lnkAssets") {


            $("#lnkTools").addClass("lava");
            $("#lnkTools").removeClass("liahover");

            $("#lnkAssets").addClass("liahover");
            $("#lnkAssets").removeClass("lava");

            $("#divMainAssetsTab").show();
            $("#divMainToolsTab").hide();
            ShowHideDiv('Assets', 'Chart');

            FilterRecordsByStatusAssets();

        }
        else if (id == "lnkTools") {
            $("#lnkAssets").addClass("lava");
            $("#lnkAssets").removeClass("liahover");

            $("#lnkTools").addClass("liahover");
            $("#lnkTools").removeClass("lava");

            $("#divMainToolsTab").show();
            $("#divMainAssetsTab").hide();
            ShowHideDiv('Tools', 'Chart');

            FilterRecordsByStatusTools();
        }

    }

    $('#btnAssetsgo').click(function () {
        BindGrid('lnkAssets', 'Assets');u
    });

    $('#btnToolsgo').click(function () {
        BindGrid('lnkTools', 'Tools');
    });

    function FilterRecordsByStatusTools() {
        //var searchtext = "";
        var globalSearch = $("#global_filterDashTools").val().replace(/'/g, "''");
        if (globalSearch == '')
            ProjectTabFilter = "[####]";
        else {
            ProjectTabFilter = globalSearch + "[####]";
        }
        $('#myToolsMaintenanceDataTable').dataTable().fnFilter(
                            ProjectTabFilter,
                            null,
                            null,
                            null
                        );
        $('.DTTT_container').css('z-index', '-1');
    }

    function FilterRecordsByStatusAssets() {
        var globalSearch = $("#global_filterDashAssets").val().replace(/'/g, "''");
        //alert(globalSearch);
        if (globalSearch == '')
            ProjectTabFilter = "[####]";
        else {
            ProjectTabFilter = globalSearch + "[####]";
        }
        $('#myAssetsMaintenanceDataTable').dataTable().fnFilter(
                            ProjectTabFilter,
                            null,
                            null,
                            null
                        );

        $('.DTTT_container').css('z-index', '-1');
    }

    function GenerateAssetsGrid() {

        oTableAssets = $('#myAssetsMaintenanceDataTable').dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "bAutoWidth": false,
            //"sScrollX": "150%",
            "sScrollX": "100%",
            "sDom": 'R<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "aaSorting": [[1, "asc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bDestroy": true,
            //"bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                if (aData.IsDeleted == true && aData.IsArchived == true)
                    nRow.className = "GridDeleatedArchivedRow";
                else if (aData.IsDeleted == true)
                    nRow.className = "GridDeletedRow";
                else if (aData.IsArchived == true)
                    nRow.className = "GridArchivedRow";

                return nRow;
            },
            "bServerSide": true,
            "sAjaxSource": '@Url.Content("~/InventoryDashboard/AssetsMaintenanceListAjax")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                //PostCount = PostCount + 1;
                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;
                for (var i = 0; i <= objCols.length - 1; i++) {
                    arrCols.push(objCols[i].mDataProp);
                }
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }
                if (oSettings.aaSorting.length != 0)
                    aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                else
                    aoData.push({ "name": "SortingField", "value": "0" });

                aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });
                aoData.push({ "name": "Days", "value": $('#txtAssetsDays').val() });


                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    cache: false,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback,
                    beforeSend: function () {
                        $('#myAssetsMaintenanceDataTable td').removeHighlight();
                        $('#myAssetsMaintenanceDataTable_wrapper .dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    complete: function () {
                        $('#myAssetsMaintenanceDataTable_wrapper .dataTables_scroll').css({ "opacity": 1 });
                        if ($("#global_filterDashAssets").val() != '') {
                            $('#myAssetsMaintenanceDataTable td').highlight($("#global_filterDashAssets").val());
                        }
                        CallShowHideData();
                        //CallNarrowfunctions();
                    }
                })
            },
            "fnInitComplete": function () {
                $('.ColVis').detach().appendTo(".setting-arrow");
                GenerateToolsGrid();
            },
            "aoColumns": [
                            {
                                "mDataProp": "MaintenanceName",
                                "sClass": "read_only",
                                "sDefaultContent": '',
                                "bSortable": true,
                                "bSearchable": false,
                                "fnRender": function (obj, val) {
                                    //return "" + obj.aData.MaintenanceName + "";
                                    return "<a id='aEditLink' onclick='return OpenAssetsEdit(&quot;" + obj.aData.AssetGUID + "&quot;)' href='JavaScript:void(0);'>" + obj.aData.MaintenanceName + "</a>";
                                }
                            },
                             { "mDataProp": "ScheduleDate", "sClass": "read_only",
                                 "fnRender": function (obj, val) {
                                     return GetDateInFullFormat(val);
                                 }
                             },
                            { "mDataProp": "TrackngMeasurement", "sClass": "read_only",
                                "fnRender": function (obj, val) {
                                    return "" + obj.aData.TrackngMeasurement + "";
                                }
                            }


		    ]
        });
        $('.DTTT_container').css('z-index', '-1');

        function OpenAssetsEdit(GUID) {
            var url = '@Url.Action("AssetList", "Assets")';
            url = url + '?fromdashboard=' + 'yes' + '&AssetGUID=' + GUID;
            window.location.href = url;
            return false;
        }
    }



    function GenerateToolsGrid() {

        oTableTools = $('#myToolsMaintenanceDataTable').dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "bAutoWidth": false,
            //"sScrollX": "150%",
            "sScrollX": "100%",
            "sDom": 'R<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "aaSorting": [[1, "asc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bDestroy": true,
            //"bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                if (aData.IsDeleted == true && aData.IsArchived == true)
                    nRow.className = "GridDeleatedArchivedRow";
                else if (aData.IsDeleted == true)
                    nRow.className = "GridDeletedRow";
                else if (aData.IsArchived == true)
                    nRow.className = "GridArchivedRow";

                return nRow;
            },
            "bServerSide": true,
            "sAjaxSource": '@Url.Content("~/InventoryDashboard/ToolsMaintenanceListAjax")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                //PostCount = PostCount + 1;
                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;
                for (var i = 0; i <= objCols.length - 1; i++) {
                    arrCols.push(objCols[i].mDataProp);
                }
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }
                if (oSettings.aaSorting.length != 0)
                    aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                else
                    aoData.push({ "name": "SortingField", "value": "0" });

                aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });
                aoData.push({ "name": "Days", "value": $('#txtToolsDays').val() });


                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    cache: false,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback,
                    beforeSend: function () {
                        $('#myToolsMaintenanceDataTable td').removeHighlight();
                        $('#myToolsMaintenanceDataTable_wrapper .dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    complete: function () {
                        $('#myToolsMaintenanceDataTable_wrapper .dataTables_scroll').css({ "opacity": 1 });
                        if ($("#global_filterDashAssets").val() != '') {
                            $('#myToolsMaintenanceDataTable td').highlight($("#global_filterDashAssets").val());
                        }
                        CallShowHideData();
                        //CallNarrowfunctions();
                    }
                })
            },
            "fnInitComplete": function () {
                $('.ColVis').detach().appendTo(".setting-arrow");
                //                GenerateProjectGrid();
                //                BindPercentageValue();
            },
            "aoColumns": [
                            {
                                "mDataProp": "MaintenanceName",
                                "sClass": "read_only",
                                "sDefaultContent": '',
                                "bSortable": true,
                                "bSearchable": false,
                                "fnRender": function (obj, val) {
                                    //return "" + obj.aData.MaintenanceName + "";
                                    return "<a id='aEditLink' onclick='return OpenToolsEdit(&quot;" + obj.aData.ToolGUID + "&quot;)' href='JavaScript:void(0);'>" + obj.aData.MaintenanceName + "</a>";
                                }
                            },
                             { "mDataProp": "ScheduleDate", "sClass": "read_only",
                                 "fnRender": function (obj, val) {
                                     return GetDateInFullFormat(val);
                                 }
                             },
                            { "mDataProp": "TrackngMeasurement", "sClass": "read_only",
                                "fnRender": function (obj, val) {
                                    return "" + obj.aData.TrackngMeasurement + "";
                                }
                            }


		    ]
        });
        $('.DTTT_container').css('z-index', '-1');


        function OpenToolsEdit(GUID) {
            var url = '@Url.Action("ToolList", "Assets")';
            url = url + '?fromdashboard=' + 'yes' + '&ToolGUID=' + GUID;
            window.location.href = url;
            return false;
        }
    }



    /* Global filter JS FOR Project Spend */

    var timeoutsc1;
    $('#global_filterDashAssets').bind('textchange', function () {
        clearTimeout(timeoutsc1);
        var self = this;
        timeoutsc1 = setTimeout(function () {
            fnFilterAssetsGlobal();
        }, 200);
    });
    $("#global_filterDashAssets").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var searchtext = $("#global_filterDashAssets").val().replace(/'/g, "''");

            FilterRecordsByStatusAssets();


            //HideOtherTabs();

            return false;
        }
    });

    function fnFilterAssetsGlobal() {
        //set filter only if more than 2 characters are pressed
        if (typeof $("#global_filterDashAssets") != 'undefined' && ($("#global_filterDashAssets").val().length > 2 || $("#global_filterDashAssets").val().length == 0)) {

            var searchtext = $("#global_filterDashAssets").val().replace(/'/g, "''");
            FilterRecordsByStatusAssets();

        }
        else {
            $('#myAssetsMaintenanceDataTable td').removeHighlight();
            $('#myAssetsMaintenanceDataTable td').highlight($("#global_filterDashAssets").val());
        }
    }
    $("#clear_global_filterDashAssets").click(function () {
        if ($("#global_filterDashAssets").val().length > 0) {
            $("#global_filterDashAssets").val("");
            $("#global_filterDashAssets").change();
        }
        return false;
    });

    /* Global filter JS */

    /* Global filter JS FOR Project Spend */

    var timeoutsc1;
    $('#global_filterDashTools').bind('textchange', function () {
        clearTimeout(timeoutsc1);
        var self = this;
        timeoutsc1 = setTimeout(function () {
            fnFilterToolsGlobal();
        }, 200);
    });
    $("#global_filterDashTools").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var searchtext = $("#global_filterDashTools").val().replace(/'/g, "''");

            FilterRecordsByStatusTools();


            //HideOtherTabs();

            return false;
        }
    });

    function fnFilterToolsGlobal() {
        //set filter only if more than 2 characters are pressed
        if (typeof $("#global_filterDashTools") != 'undefined' && ($("#global_filterDashTools").val().length > 2 || $("#global_filterDashTools").val().length == 0)) {

            var searchtext = $("#global_filterDashTools").val().replace(/'/g, "''");
            FilterRecordsByStatusTools();

        }
        else {
            $('#myToolsMaintenanceDataTable td').removeHighlight();
            $('#myToolsMaintenanceDataTable td').highlight($("#global_filterDashTools").val());
        }
    }
    $("#clear_global_filterDashTools").click(function () {
        if ($("#global_filterDashTools").val().length > 0) {
            $("#global_filterDashTools").val("");
            $("#global_filterDashTools").change();
        }
        return false;
    });

    /* Global filter JS */
</script>
