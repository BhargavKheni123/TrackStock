@{
    string LoadDataCount = eTurns.DTO.SiteSettingHelper.LoadNarrowDataCount != string.Empty ? Convert.ToString(eTurns.DTO.SiteSettingHelper.LoadNarrowDataCount) : "0";
}
<div class="leftopenContent" style="display: none;">
    <a class="openBtn" id="ExpandNarrowSearchSC">
        <img src="~/Content/images/open.png" />
    </a>
</div>
<div class="IteamBlock">
    <a class="closedBtn" id="CollapseNarrowSearchSC">
        <img src="~/Content/images/closed.png" />
    </a>
    <h2>@eTurns.DTO.Resources.ResNarrowSearch.NarrowSearchHeader2</h2>
    <ul id="NarrowUL">
        <li>
            <select id="ScheduleFor" multiple="multiple" name="example-basic" size="5"></select>
            <div class="accordion">
                <a href='#' class='downarrow'>
                    <img src="~/Content/images/down-arrow.gif" alt="" height="24">
                </a>
                <div class='dropcontent' id="ScheduleForCollapse">
                </div>
            </div>
        </li>
        <li>
            <select id="ToolAssetName" multiple="multiple" name="example-basic" size="5"></select>
            <div class="accordion">
                <a href='#' class='downarrow'>
                    <img src="~/Content/images/down-arrow.gif" alt="" height="24">
                </a>
                <div class='dropcontent' id="ToolAssetNameCollapse">
                </div>
            </div>
        </li>

        <li style="display:none;">
            <select id="ScheduleItem" multiple="multiple" name="example-basic" size="5"></select>
            <div class="accordion">
                <a href='#' class='downarrow'>
                    <img src="~/Content/images/down-arrow.gif" alt="" height="24">
                </a>
                <div class='dropcontent' id="ScheduleItemCollapse">
                </div>
            </div>
        </li>
        @*<li>
                <select id="ScheduleType" multiple="multiple" name="example-basic" size="5">
                </select>
                <div class="accordion">
                    <a href='#' class='downarrow'>
                        <img src="~/Content/images/down-arrow.gif" alt="" height="24"></a>
                    <div class='dropcontent' id="ScheduleTypeCollapse">
                    </div>
                </div>
            </li>*@
        <li>
            <select id="SchedulerName" multiple="multiple" name="example-basic" size="5"></select>
            <div class="accordion">
                <a href='#' class='downarrow'>
                    <img src="~/Content/images/down-arrow.gif" alt="" height="24">
                </a>
                <div class='dropcontent' id="SchedulerNameCollapse">
                </div>
            </div>
        </li>
        <li>
            <select id="ScheduleCreatedBy" multiple="multiple" name="example-basic" size="5"></select>
            <div class="accordion" id="accordion4">
                <a href='#' class='downarrow'>
                    <img src="~/Content/images/down-arrow.gif" alt="" height="24" />
                </a>
                <div class='dropcontent' id="ScheduleCreatedByCollapse">
                </div>
            </div>
        </li>
        <li>
            <select id="ScheduleUpdatedBy" multiple="multiple" name="example-basic" size="5"></select>
            <div class="accordion" id="accordion5">
                <a href='javascript:void(0);' class='downarrow'>
                    <img src="~/Content/images/down-arrow.gif" alt="" height="24">
                </a>
                <div class='dropcontent' id="ScheduleUpdatedByCollapse">
                </div>
            </div>
        </li>
        <li style="float: left;">
            <div class="dateForm">
                <span class="dateText">@eTurns.DTO.Resources.ResNarrowSearch.DateCreated</span>
                <div style="float: right; margin-top: -24px; cursor: pointer;">
                    <img id="ScheduleDateCreatedClear" src="~/Content/images/XClear.png" alt="@ResNarrowSearch.Clear" />
                </div>
                <div class="divLabel" style="padding-bottom: 4px;">
                    <label for="From" class="labelText">
                        @eTurns.DTO.Resources.ResNarrowSearch.From
                    </label>
                    <input id="ScheduleDateCFrom" type="text" value="" name="From" data-val-length-max="20"
                           data-val="true" class="text-box" />
                    <a href="javascript:void(0);" title="" class="datePicker" id="ancScheduleDateCFrom">
                        <img src="~/Content/images/date-picker-icon.png" alt="" title="" />
                    </a>
                </div>
                <div class="divLabel">
                    <label for="To" class="labelText">
                        @eTurns.DTO.Resources.ResNarrowSearch.To
                    </label>
                    <input id="ScheduleDateCTo" type="text" value="" name="To" data-val-length-max="20"
                           data-val="true" class="text-box" />
                    <a href="javascript:void(0);" title="" class="datePicker" id="ancScheduleDateCTo">
                        <img src="~/Content/images/date-picker-icon.png" alt="" title="" />
                    </a>
                </div>
            </div>
        </li>
        <li style="float: left;">
            <div class="dateForm">
                <span class="dateText">@eTurns.DTO.Resources.ResNarrowSearch.DateUpdated</span>
                <div style="float: right; margin-top: -24px; cursor: pointer;">
                    <img id="ScheduleDateUpdatedClear" src="~/Content/images/XClear.png" alt="@ResNarrowSearch.Clear" />
                </div>
                <div class="divLabel" style="padding-bottom: 4px;">
                    <label for="From" class="labelText">
                        @eTurns.DTO.Resources.ResNarrowSearch.From
                    </label>
                    <input id="ScheduleDateUFrom" type="text" value="" name="From" data-val-length-max="20"
                           data-val="true" class="text-box" />
                    <a href="javascript:void(0);" title="" class="datePicker" id="ancScheduleDateUFrom">
                        <img src="~/Content/images/date-picker-icon.png" alt="" title="" />
                    </a>
                </div>
                <div class="divLabel">
                    <label for="To" class="labelText">
                        @eTurns.DTO.Resources.ResNarrowSearch.To
                    </label>
                    <input id="ScheduleDateUTo" type="text" value="" name="To" data-val-length-max="20"
                           data-val="true" class="text-box" />
                    <a href="javascript:void(0);" title="" class="datePicker" id="ancScheduleDateUTo">
                        <img src="~/Content/images/date-picker-icon.png" alt="" title="" />
                    </a>
                </div>
            </div>
        </li>
        @Html.RenderUDFForNarrowSearch("toolschedulemapping")
    </ul>
    <input id="NarroSearchClearSC" type="button" value="@ResNarrowSearch.Clear" class="CreateBtn" />
</div>
<script type="text/javascript">

    var selected = '@eTurns.DTO.Resources.ResNarrowSearch.selected';
    var MapScheduleFor = "Schedule For";
    var MapToolAssetName = "Tool/Asset"
    var MapScheduleItem = "Schedule Item";
    var MapScheduleType = "Schedule Type";
    var MapSchedulerName = "Scheduler Name";
    var PageName = '@Model.PageName';
    var CreatedBy = "@eTurns.DTO.Resources.ResCommon.CreatedBy";
    var UpdatedBy = "@eTurns.DTO.Resources.ResCommon.UpdatedBy";
    var Check = '@eTurns.DTO.Resources.ResNarrowSearch.Check';
    var UnCheck = '@eTurns.DTO.Resources.ResNarrowSearch.UnCheck';
    var Filter = '@eTurns.DTO.Resources.ResNarrowSearch.Filter';
    var Enterkeywords = '@eTurns.DTO.Resources.ResNarrowSearch.Enterkeywords';



    var ToolAssetNameNarroValues = "";
    var ScheduleForNarroValues = "";

    var ScheduleItemNarroValues = "";
    var ScheduleTypeNarroValues = "";
    var SchedulerNameNarroValues = "";

    var ScheduleCreatedByNarroValues = "";
    var ScheduleUpdatedByNarroValues = "";
    var loadNarrowSearchDataCount = '@LoadDataCount';

    $(document).ready(function () {
        var _IsArchived = false;
        var _IsDeleted = false;

        $('#ScheduleDateCFrom').blur(function () {
        }).datepicker({changeMonth:true,changeYear:true, dateFormat: RoomDateJSFormat });
        $('#ScheduleDateCTo').blur(function () {
        }).datepicker({changeMonth:true,changeYear:true, dateFormat: RoomDateJSFormat });
        $('#ScheduleDateUFrom').blur(function () {
        }).datepicker({changeMonth:true,changeYear:true, dateFormat: RoomDateJSFormat });
        $('#ScheduleDateUTo').blur(function () {
        }).datepicker({ changeMonth:true,changeYear:true,dateFormat: RoomDateJSFormat });

        $('#ancScheduleDateCFrom').click(function () {
            $('#ScheduleDateCFrom').focus();
        });
        $('#ancScheduleDateCTo').click(function () {
            $('#ScheduleDateCTo').focus();
        });
        $('#ancScheduleDateUFrom').click(function () {
            $('#ScheduleDateUFrom').focus();
        });
        $('#ancScheduleDateUTo').click(function () {
            $('#ScheduleDateUTo').focus();
        });
        GetScheduleNarrowSearches('ToolScheduleMapping', _IsArchived, _IsDeleted);
        GetNarroHTMLForUDF('toolschedulemapping', '@eTurnsWeb.Helper.SessionHelper.CompanyID', '@eTurnsWeb.Helper.SessionHelper.RoomID', _IsArchived, _IsDeleted, RequisitionCurrentTab);


        $('a.downarrow').click(function (e) {
            e.preventDefault();
            $(this).closest('.accordion').find('.dropcontent').slideToggle();
        });

    });



    $('#NarroSearchGo').click(function () {
        DoNarrowSearchSC();
    });
    $('#ScheduleDateCFrom,#ScheduleDateCTo').change(function () {

        var DateCFromValid = true;// Date.isValid($('#ScheduleDateCFrom').val(),format);
        var DateCToValid =true;//  Date.isValid($('#ScheduleDateCTo').val(),format);


        try {
            $.datepicker.parseDate(RoomDateJSFormat, $('#ScheduleDateCFrom').val());
            DateCFromValid = true;
        } catch (e) {
            DateCFromValid = false;
        }

        try {
            $.datepicker.parseDate(RoomDateJSFormat, $('#ScheduleDateCTo').val());
            DateCToValid = true;
        } catch (e) {
            DateCToValid = false;
        }
        if (DateCFromValid && DateCToValid) {
            DoNarrowSearchSC();
        }
        else {
            if (!DateCFromValid)
                $('#ScheduleDateCFrom').val('');
            if (!DateCToValid)
                $('#ScheduleDateCTo').val('');
        }
    });

    $('#ScheduleDateUFrom,#ScheduleDateUTo').change(function () {
        var format = '@eTurnsWeb.Helper.SessionHelper.RoomDateJSFormat';
        if ($("#hdDateFormat") != undefined && $("#hdDateFormat").val() != "")
            format = $("#hdDateFormat").val();
        else
            format = "m/d/yy";
        var DateUFromValid =true;// Date.isValid($('#ScheduleDateUFrom').val(),format);
        var DateUToValid =true;// Date.isValid($('#ScheduleDateUTo').val(),format);

        try {
            $.datepicker.parseDate(RoomDateJSFormat, $('#ScheduleDateUFrom').val());
            DateUFromValid = true;
        } catch (e) {
            DateUFromValid = false;
        }

        try {
            $.datepicker.parseDate(RoomDateJSFormat, $('#ScheduleDateUTo').val());
            DateUToValid = true;
        } catch (e) {
            DateUToValid = false;
        }
        if (DateUFromValid && DateUToValid) {
            DoNarrowSearchSC();
        }
        else {
            if (!DateUFromValid)
                $('#ScheduleDateUFrom').val('');
            if (!DateUToValid)
                $('#ScheduleDateUTo').val('');
        }
    });
    $('#ScheduleDateCreatedClear').click(function () {
        if ($('#ScheduleDateCFrom').val() != '' || $('#ScheduleDateCTo').val() != '') {
            $('#ScheduleDateCFrom').val('');
            $('#ScheduleDateCTo').val('');
            //NarrowSearchInGrid('');
            DoNarrowSearchSC();
        }
    });
    $('#ScheduleDateUpdatedClear').click(function () {
        if ($('#ScheduleDateUFrom').val() != '' || $('#ScheduleDateUTo').val() != '') {
            $('#ScheduleDateUFrom').val('');
            $('#ScheduleDateUTo').val('');
            //NarrowSearchInGrid('');
            DoNarrowSearchSC();
        }
    });
    //CLEAR NARROW SEARCH
    $('#NarroSearchClearSC').click(function () {

        if (typeof ($("#ScheduleItem").multiselect("getChecked").length) != undefined && $("#ScheduleItem").multiselect("getChecked").length > 0) {
            $("#ScheduleItem").multiselect("uncheckAll");
            $("#ScheduleItemCollapse").html('');
        }
        if (typeof ($("#ScheduleFor").multiselect("getChecked").length) != undefined && $("#ScheduleFor").multiselect("getChecked").length > 0) {
            $("#ScheduleFor").multiselect("uncheckAll");
            $("#ScheduleForCollapse").html('');
        }
        if (typeof ($("#ToolAssetName").multiselect("getChecked").length) != undefined && $("#ToolAssetName").multiselect("getChecked").length > 0) {
            $("#ToolAssetName").multiselect("uncheckAll");
            $("#ToolAssetNameCollapse").html('');
        }
        if (typeof ($("#ScheduleType").multiselect("getChecked").length) != undefined && $("#ScheduleType").multiselect("getChecked").length > 0) {
            $("#ScheduleType").multiselect("uncheckAll");
            $("#ScheduleTypeCollapse").html('');
        }
        if (typeof ($("#SchedulerName").multiselect("getChecked").length) != undefined && $("#SchedulerName").multiselect("getChecked").length > 0) {
            $("#SchedulerName").multiselect("uncheckAll");
            $("#SchedulerNameCollapse").html('');
        }
        if (typeof ($("#ScheduleCreatedBy").multiselect("getChecked").length) != undefined && $("#ScheduleCreatedBy").multiselect("getChecked").length > 0) {
            $("#ScheduleCreatedBy").multiselect("uncheckAll");
            $("#ScheduleCreatedByCollapse").html('');
        }
        if (typeof ($("#ScheduleUpdatedBy").multiselect("getChecked").length) != undefined && $("#ScheduleUpdatedBy").multiselect("getChecked").length > 0) {
            $("#ScheduleUpdatedBy").multiselect("uncheckAll");
            $("#ScheduleUpdatedByCollapse").html('');
        }

        if ($('#ScheduleDateCFrom').val() != '') $('#ScheduleDateCFrom').val('');
        if ($('#ScheduleDateCTo').val() != '') $('#ScheduleDateCTo').val('');
        if ($('#ScheduleDateUFrom').val() != '') $('#ScheduleDateUFrom').val('');
        if ($('#ScheduleDateUTo').val() != '') $('#ScheduleDateUTo').val('');
        if ($('#global_filter').val() != '') $('#global_filter').val('');
        $('input[type="search"]').val('').trigger('keyup');
        
        $("select[name='udflist']").each(function (index) {
            var elememtID = this.getAttribute('id');
            if (typeof ($("#" + elememtID).multiselect("getChecked").length) != undefined && $("#" + elememtID).multiselect("getChecked").length > 0) {
                var UDFUniqueID = this.getAttribute('UID');
                $(this).multiselect("uncheckAll");
                $('#' + UDFUniqueID + 'Collapse').html('');
                $('#' + UDFUniqueID + 'Collapse').hide('');
            }
        });

        //if ($("select[name=udflist]").length > 0) {
        //    $("select[name=udflist]").multiselect("uncheckAll");
        //}
        $('#myDataTable tbody tr').removeClass('row_selected');
        ShowHideChangeLog();
        NarrowSearchInGridSC('');
    });



    function GetScheduleNarrowSearches(_TableName, _IsArchived, _IsDeleted) {
        var iscloseorder = true;

        if ($('#tab4').hasClass('selected'))
            iscloseorder = false;


        $.ajax({ 'url': '/Master/GetNarrowDDData',
            data: { TableName: _TableName, TextFieldName: 'ScheduleFor', IsArchived: _IsArchived, IsDeleted: _IsDeleted, IsIncludeClosedOrder: iscloseorder },
            success: function (response) {
                var s = '';

                $.each(response.DDData, function (ValData, ValCount) {
                    var ArrData = ValData.toString().split('[###]');
                    s += '<option value="' + ArrData[1] + '">' + ArrData[0] + ' (' + ValCount + ')' + '</option>';
                });


                //Destroy widgets before reapplying the filter
                $("#ScheduleFor").empty();
                $("#ScheduleFor").multiselect('destroy');
                $("#ScheduleFor").multiselectfilter('destroy');

                $("#ScheduleFor").append(s);
                $("#ScheduleFor").multiselect
            (
                { noneSelectedText: MapScheduleFor, selectedList: 5,
                    selectedText: function (numChecked, numTotal, checkedItems) {
                        return MapScheduleFor + ' ' + numChecked + ' ' + selected;
                    }
                },
                {
                    checkAll: function (ui) {
                        $("#ScheduleForCollapse").html('');
                        for (var i = 0; i <= ui.target.length - 1; i++) {
                            if ($("#ScheduleForCollapse").text().indexOf(ui.target[i].text) == -1) {
                                $("#ScheduleForCollapse").append("<span>" + ui.target[i].text + "</span>");
                            }
                        }
                        $("#ScheduleForCollapse").show();
                    }
                }
            )
            .unbind("multiselectclick multiselectcheckall multiselectuncheckall")
            .bind("multiselectclick multiselectcheckall multiselectuncheckall", function (event, ui) {
                if (ui.checked) {
                    if ($("#ScheduleForCollapse").text().indexOf(ui.text) == -1) {
                        $("#ScheduleForCollapse").append("<span>" + ui.text + "</span>");
                    }
                }
                else {
                    if (ui.checked == undefined) {
                        $("#ScheduleForCollapse").html('');
                    }
                    else if (!ui.checked) {
                        var text = $("#ScheduleForCollapse").html();
                        text = text.replace("<span>" + ui.text + "</span>", '');
                        $("#ScheduleForCollapse").html(text);
                    }
                    else
                        $("#ScheduleForCollapse").html('');
                }
                ScheduleForNarroValues = $.map($(this).multiselect("getChecked"), function (input) {
                    return input.value;
                })

                if ($("#ScheduleForCollapse").text().trim() != '')
                    $("#ScheduleForCollapse").show();
                else
                    $("#ScheduleForCollapse").hide();


                if ($("#ScheduleForCollapse").find('span').length <= 2) {
                    $("#ScheduleForCollapse").scrollTop(0).height(50);
                }
                else {
                    $("#ScheduleForCollapse").scrollTop(0).height(100);
                }
                clearGlobalIMIfNotInFocus();
                DoNarrowSearchSC();
            }).multiselectfilter();
            },
            error: function (response) {
                // through errror message
            }
        });
        $.ajax({ 'url': '/Master/GetNarrowDDData',
            data: { TableName: _TableName, TextFieldName: 'ToolAssetName', IsArchived: _IsArchived, IsDeleted: _IsDeleted, IsIncludeClosedOrder: iscloseorder },
            success: function (response) {
                
                var s = '';

                $.each(response.DDData, function (ValData, ValCount) {
                    var ArrData = ValData.toString().split('[###]');
                    s += '<option value="' + ArrData[1] + '">' + ArrData[0] + ' (' + ValCount + ')' + '</option>';
                });


                //Destroy widgets before reapplying the filter
                $("#ToolAssetName").empty();
                $("#ToolAssetName").multiselect('destroy');
                $("#ToolAssetName").multiselectfilter('destroy');

                $("#ToolAssetName").append(s);
                $("#ToolAssetName").multiselect
            (
                { noneSelectedText: MapToolAssetName, selectedList: 5,
                    selectedText: function (numChecked, numTotal, checkedItems) {
                        return MapToolAssetName + ' ' + numChecked + ' ' + selected;
                    }
                },
                {
                    checkAll: function (ui) {
                        $("#ToolAssetNameCollapse").html('');
                        for (var i = 0; i <= ui.target.length - 1; i++) {
                            if ($("#ToolAssetNameCollapse").text().indexOf(ui.target[i].text) == -1) {
                                $("#ToolAssetNameCollapse").append("<span>" + ui.target[i].text + "</span>");
                            }
                        }
                        $("#ToolAssetNameCollapse").show();
                    }
                }
            )
            .unbind("multiselectclick multiselectcheckall multiselectuncheckall")
            .bind("multiselectclick multiselectcheckall multiselectuncheckall", function (event, ui) {
                if (ui.checked) {
                    if ($("#ToolAssetNameCollapse").text().indexOf(ui.text) == -1) {
                        $("#ToolAssetNameCollapse").append("<span>" + ui.text + "</span>");
                    }
                }
                else {
                    if (ui.checked == undefined) {
                        $("#ToolAssetNameCollapse").html('');
                    }
                    else if (!ui.checked) {
                        var text = $("#ToolAssetNameCollapse").html();
                        text = text.replace("<span>" + ui.text + "</span>", '');
                        $("#ToolAssetNameCollapse").html(text);
                    }
                    else
                        $("#ToolAssetNameCollapse").html('');
                }
                ToolAssetNameNarroValues = $.map($(this).multiselect("getChecked"), function (input) {
                    return input.value;
                })

                if ($("#ToolAssetNameCollapse").text().trim() != '')
                    $("#ToolAssetNameCollapse").show();
                else
                    $("#ToolAssetNameCollapse").hide();


                if ($("#ToolAssetNameCollapse").find('span').length <= 2) {
                    $("#ToolAssetNameCollapse").scrollTop(0).height(50);
                }
                else {
                    $("#ToolAssetNameCollapse").scrollTop(0).height(100);
                }
                clearGlobalIMIfNotInFocus();
                DoNarrowSearchSC();
            }).multiselectfilter();
            },
            error: function (response) {
                // through errror message
            }
        });
        $.ajax({ 'url': '/Master/GetNarrowDDData',
            data: { TableName: _TableName, TextFieldName: 'ScheduleFor', IsArchived: _IsArchived, IsDeleted: _IsDeleted, IsIncludeClosedOrder: iscloseorder },
            success: function (response) {
                var s = '';
                $.each(response.DDData, function (ValData, ValCount) {
                    var ArrData = ValData.toString().split('[###]');
                    s += '<option value="' + ArrData[1] + '">' + ArrData[0] + ' (' + ValCount + ')' + '</option>';
                });


                //Destroy widgets before reapplying the filter
                $("#ScheduleItem").empty();
                $("#ScheduleItem").multiselect('destroy');
                $("#ScheduleItem").multiselectfilter('destroy');

                $("#ScheduleItem").append(s);
                $("#ScheduleItem").multiselect
            (
                { noneSelectedText: MapScheduleFor, selectedList: 5,
                    selectedText: function (numChecked, numTotal, checkedItems) {
                        return MapScheduleFor + ' ' + numChecked + ' ' + selected;
                    }
                },
                {
                    checkAll: function (ui) {
                        $("#ScheduleItemCollapse").html('');
                        for (var i = 0; i <= ui.target.length - 1; i++) {
                            if ($("#ScheduleItemCollapse").text().indexOf(ui.target[i].text) == -1) {
                                $("#ScheduleItemCollapse").append("<span>" + ui.target[i].text + "</span>");
                            }
                        }
                        $("#ScheduleItemCollapse").show();
                    }
                }
            )
            .unbind("multiselectclick multiselectcheckall multiselectuncheckall")
            .bind("multiselectclick multiselectcheckall multiselectuncheckall", function (event, ui) {
                if (ui.checked) {
                    if ($("#ScheduleItemCollapse").text().indexOf(ui.text) == -1) {
                        $("#ScheduleItemCollapse").append("<span>" + ui.text + "</span>");
                    }
                }
                else {
                    if (ui.checked == undefined) {
                        $("#ScheduleItemCollapse").html('');
                    }
                    else if (!ui.checked) {
                        var text = $("#ScheduleItemCollapse").html();
                        text = text.replace("<span>" + ui.text + "</span>", '');
                        $("#ScheduleItemCollapse").html(text);
                    }
                    else {
                        $("#ScheduleItemCollapse").html('');
                    }
                }
                ScheduleItemNarroValues = $.map($(this).multiselect("getChecked"), function (input) {
                    return input.value;
                })

                if ($("#ScheduleItemCollapse").text().trim() != '')
                    $("#ScheduleItemCollapse").show();
                else
                    $("#ScheduleItemCollapse").hide();


                if ($("#ScheduleItemCollapse").find('span').length <= 2) {
                    $("#ScheduleItemCollapse").scrollTop(0).height(50);
                }
                else {
                    $("#ScheduleItemCollapse").scrollTop(0).height(100);
                }
                clearGlobalIMIfNotInFocus();
                DoNarrowSearchSC();
            }).multiselectfilter();
            },
            error: function (response) {
                // through errror message
            }
        });

        $.ajax({ 'url': '/Master/GetNarrowDDData',
            data: { TableName: _TableName, TextFieldName: 'SchedulerName', IsArchived: _IsArchived, IsDeleted: _IsDeleted, IsIncludeClosedOrder: iscloseorder },
            success: function (response) {
                var s = '';
                $.each(response.DDData, function (ValData, ValCount) {
                    var ArrData = ValData.toString().split('[###]');
                    s += '<option value="' + ArrData[1] + '">' + ArrData[0] + ' (' + ValCount + ')' + '</option>';
                });


                //Destroy widgets before reapplying the filter
                $("#SchedulerName").empty();
                $("#SchedulerName").multiselect('destroy');
                $("#SchedulerName").multiselectfilter('destroy');

                $("#SchedulerName").append(s);
                $("#SchedulerName").multiselect
            (
                { noneSelectedText: MapSchedulerName, selectedList: 5,
                    selectedText: function (numChecked, numTotal, checkedItems) {
                        return MapSchedulerName + ' ' + numChecked + ' ' + selected;
                    }
                },
                {
                    checkAll: function (ui) {
                        $("#SchedulerNameCollapse").html('');
                        for (var i = 0; i <= ui.target.length - 1; i++) {
                            if ($("#SchedulerNameCollapse").text().indexOf(ui.target[i].text) == -1) {
                                $("#SchedulerNameCollapse").append("<span>" + ui.target[i].text + "</span>");
                            }
                        }
                        $("#SchedulerNameCollapse").show();
                    }
                }
            )
             .unbind("multiselectclick multiselectcheckall multiselectuncheckall")
             .bind("multiselectclick multiselectcheckall multiselectuncheckall", function (event, ui) {
                if (ui.checked) {
                    if ($("#SchedulerNameCollapse").text().indexOf(ui.text) == -1) {
                        $("#SchedulerNameCollapse").append("<span>" + ui.text + "</span>");
                    }
                }
                else {
                    if (ui.checked == undefined) {
                        $("#SchedulerNameCollapse").html('');
                    }
                    else if (!ui.checked) {
                        var text = $("#SchedulerNameCollapse").html();
                        text = text.replace("<span>" + ui.text + "</span>", '');
                        $("#SchedulerNameCollapse").html(text);
                    }
                    else {
                        $("#SchedulerNameCollapse").html('');
                    }
                }
                SchedulerNameNarroValues = $.map($(this).multiselect("getChecked"), function (input) {
                    return input.value;
                })

                if ($("#SchedulerNameCollapse").text().trim() != '')
                    $("#SchedulerNameCollapse").show();
                else
                    $("#SchedulerNameCollapse").hide();


                if ($("#SchedulerNameCollapse").find('span').length <= 2) {
                    $("#SchedulerNameCollapse").scrollTop(0).height(50);
                }
                else {
                    $("#SchedulerNameCollapse").scrollTop(0).height(100);
                }
                clearGlobalIMIfNotInFocus();
                DoNarrowSearchSC();
            }).multiselectfilter();
            },
            error: function (response) {
                // through errror message
            }
        });
        $.ajax({ 'url': '/Master/GetNarrowDDData',
            data: { TableName: _TableName, TextFieldName: 'CreatedBy', IsArchived: _IsArchived, IsDeleted: _IsDeleted, IsIncludeClosedOrder: iscloseorder },
            success: function (response) {
                var s = '';
                $.each(response.DDData, function (ValData, ValCount) {
                    var ArrData = ValData.toString().split('[###]');
                    s += '<option value="' + ArrData[1] + '">' + ArrData[0] + ' (' + ValCount + ')' + '</option>';
                });


                //Destroy widgets before reapplying the filter
                $("#ScheduleCreatedBy").empty();
                $("#ScheduleCreatedBy").multiselect('destroy');
                $("#ScheduleCreatedBy").multiselectfilter('destroy');

                $("#ScheduleCreatedBy").append(s);
                $("#ScheduleCreatedBy").multiselect
            (
                { noneSelectedText: CreatedBy, selectedList: 5,
                    selectedText: function (numChecked, numTotal, checkedItems) {
                        return CreatedBy + ' ' + numChecked + ' ' + selected;
                    }
                },
                {
                    checkAll: function (ui) {
                        $("#ScheduleCreatedByCollapse").html('');
                        for (var i = 0; i <= ui.target.length - 1; i++) {
                            if ($("#ScheduleCreatedByCollapse").text().indexOf(ui.target[i].text) == -1) {
                                $("#ScheduleCreatedByCollapse").append("<span>" + ui.target[i].text + "</span>");
                            }
                        }
                        $("#ScheduleCreatedByCollapse").show();
                    }
                }
            )
             .unbind("multiselectclick multiselectcheckall multiselectuncheckall")
             .bind("multiselectclick multiselectcheckall multiselectuncheckall", function (event, ui) {
                if (ui.checked) {
                    if ($("#ScheduleCreatedByCollapse").text().indexOf(ui.text) == -1) {
                        $("#ScheduleCreatedByCollapse").append("<span>" + ui.text + "</span>");
                    }
                }
                else {
                    if (ui.checked == undefined) {
                        $("#ScheduleCreatedByCollapse").html('');
                    }
                    else if (!ui.checked) {
                        var text = $("#ScheduleCreatedByCollapse").html();
                        text = text.replace("<span>" + ui.text + "</span>", '');
                        $("#ScheduleCreatedByCollapse").html(text);
                    }
                    else {
                        $("#ScheduleCreatedByCollapse").html('');
                    }
                }
                ScheduleCreatedByNarroValues = $.map($(this).multiselect("getChecked"), function (input) {
                    return input.value;
                })

                if ($("#ScheduleCreatedByCollapse").text().trim() != '')
                    $("#ScheduleCreatedByCollapse").show();
                else
                    $("#ScheduleCreatedByCollapse").hide();


                if ($("#ScheduleCreatedByCollapse").find('span').length <= 2) {
                    $("#ScheduleCreatedByCollapse").scrollTop(0).height(50);
                }
                else {
                    $("#ScheduleCreatedByCollapse").scrollTop(0).height(100);
                }
                clearGlobalIMIfNotInFocus();
                DoNarrowSearchSC();
            }).multiselectfilter();
            },
            error: function (response) {
                // through errror message
            }
        });
        $.ajax({ 'url': '/Master/GetNarrowDDData',
            data: { TableName: _TableName, TextFieldName: 'UpdatedBy', IsArchived: _IsArchived, IsDeleted: _IsDeleted, IsIncludeClosedOrder: iscloseorder },
            success: function (response) {
                var s = '';
                $.each(response.DDData, function (ValData, ValCount) {
                    var ArrData = ValData.toString().split('[###]');
                    s += '<option value="' + ArrData[1] + '">' + ArrData[0] + ' (' + ValCount + ')' + '</option>';
                });


                //Destroy widgets before reapplying the filter
                $("#ScheduleUpdatedBy").empty();
                $("#ScheduleUpdatedBy").multiselect('destroy');
                $("#ScheduleUpdatedBy").multiselectfilter('destroy');

                $("#ScheduleUpdatedBy").append(s);
                $("#ScheduleUpdatedBy").multiselect
            (
                { noneSelectedText: UpdatedBy, selectedList: 5,
                    selectedText: function (numChecked, numTotal, checkedItems) {
                        return UpdatedBy + ' ' + numChecked + ' ' + selected;
                    }
                },
                {
                    checkAll: function (ui) {
                        $("#ScheduleUpdatedByCollapse").html('');
                        for (var i = 0; i <= ui.target.length - 1; i++) {
                            if ($("#ScheduleUpdatedByCollapse").text().indexOf(ui.target[i].text) == -1) {
                                $("#ScheduleUpdatedByCollapse").append("<span>" + ui.target[i].text + "</span>");
                            }
                        }
                        $("#ScheduleUpdatedByCollapse").show();
                    }
                }
            )
             .unbind("multiselectclick multiselectcheckall multiselectuncheckall")
             .bind("multiselectclick multiselectcheckall multiselectuncheckall", function (event, ui) {
                if (ui.checked) {
                    if ($("#ScheduleUpdatedByCollapse").text().indexOf(ui.text) == -1) {
                        $("#ScheduleUpdatedByCollapse").append("<span>" + ui.text + "</span>");
                    }
                }
                else {
                    if (ui.checked == undefined) {
                        $("#ScheduleUpdatedByCollapse").html('');
                    }
                    else if (!ui.checked) {
                        var text = $("#ScheduleUpdatedByCollapse").html();
                        text = text.replace("<span>" + ui.text + "</span>", '');
                        $("#ScheduleUpdatedByCollapse").html(text);
                    }
                    else {
                        $("#ScheduleUpdatedByCollapse").html('');
                    }
                }
                ScheduleUpdatedByNarroValues = $.map($(this).multiselect("getChecked"), function (input) {
                    return input.value;
                })

                if ($("#ScheduleUpdatedByCollapse").text().trim() != '')
                    $("#ScheduleUpdatedByCollapse").show();
                else
                    $("#ScheduleUpdatedByCollapse").hide();


                if ($("#ScheduleUpdatedByCollapse").find('span').length <= 2) {
                    $("#ScheduleUpdatedByCollapse").scrollTop(0).height(50);
                }
                else {
                    $("#ScheduleUpdatedByCollapse").scrollTop(0).height(100);
                }
                clearGlobalIMIfNotInFocus();
                DoNarrowSearchSC();
            }).multiselectfilter();
            },
            error: function (response) {
                // through errror message
            }
        });
    }



</script>
<script type="text/javascript">

    /* COMMON FUNCTION TO NARROW SEARCH HIDE/SHOW ALONG WITH STATE SAVED : Dec 24, 2012 : IJ */


    $(document).ready(function () {
        $('#ExpandNarrowSearchSC').click(function (e) {
            ExpandNarrowSearchSC();
        });
        $('#CollapseNarrowSearchSC').click(function (e) {
            CollapseNarrowSearchSC();
        });
        var NarrowSearchStateSC = getCookieIM('NarrowSearchStateSC');

        if (NarrowSearchStateSC == 'Expanded') {
            CollapseNarrowSearchSC();
        }
        else {
            ExpandNarrowSearchSC();
        }

        //        GetNarroHTMLForItemTypeIM();
    });

    function ExpandNarrowSearchSC() {
        var w = $('.IteamBlock').css("width");
        $('.IteamBlock').show();
        $('.IteamBlock').stop().animate({
            width: "18%"
        }, 0, function () {
            $('.userContent').css({ "width": "80.5%", "margin": "0" });
            $('#myDataTable_length').css({ "left": "0px" });
            $('#myDataTable_paginate').css({ "left": "145px" });
            $('.leftopenContent').css({ "display": "none" });
            setCookie('NarrowSearchStateSC', 'Collapsed');
        });
    }

    function CollapseNarrowSearchSC() {

        $('.IteamBlock').stop().animate({
            width: "0%"
        }, 0, function () {
            $('.IteamBlock').hide();
            $('.userContent').css({ "width": "98.5%", margin: "0 0.4% 1%" });
            //var Left = $('.viewBlock').css("width");
            var Left = '270px';
            $('#myDataTable_length').css({ "left": Left });
            var LeftW = 145 + parseInt(Left);
            $('#myDataTable_paginate').css({ "left": LeftW + 'px' });
            if (typeof(oTable) != "undefined") {
                oTable.fnAdjustColumnSizing();
            }
            
            $('.leftopenContent').css({ "display": "" });
            setCookie('NarrowSearchStateSC', 'Expanded');
        });
    }

    function getCookieIM(name) {
        var arg = name + "=";
        var alen = arg.length;
        var clen = document.cookie.length;
        var i = 0;
        while (i < clen) {
            var j = i + alen;
            if (document.cookie.substring(i, j) == arg) {
                return getCookieValIM(j);
            }
            i = document.cookie.indexOf(" ", i) + 1;
            if (i == 0) break;
        }
        return null;
    }

    function getCookieValIM(offset) {
        var endstr = document.cookie.indexOf(";", offset);
        if (endstr == -1) { endstr = document.cookie.length; }
        return unescape(document.cookie.substring(offset, endstr));
    }

    function setCookieIM(name, value, days) {
        if (typeof days != "undefined") { //if set persistent cookie
            var expireDate = new Date();
            expireDate.setDate(expireDate.getDate() + days);
            document.cookie = name + "=" + value + "; path=/; expires=" + expireDate.toGMTString() + " ;SameSite=Strict;";
        }
        else //else if this is a session only cookie
            document.cookie = name + "=" + value + "; path=/ ;SameSite=Strict;";
    }

    /* COMMON FUNCTION TO NARROW SEARCH HIDE/SHOW ALONG WITH STATE SAVED : Dec 24, 2012 : IJ */

    /* CLEAR NARROW SEARCH - START */
    function clearNarrowSearchFilterIM() {

        if (typeof ($("#ScheduleFor").multiselect("getChecked").length) != undefined && $("#ScheduleFor").multiselect("getChecked").length > 0) {
            $("#ScheduleFor").multiselect("uncheckAll");
            $("#ScheduleForCollapse").html('');
        }


        if (typeof ($("#ScheduleItem").multiselect("getChecked").length) != undefined && $("#ScheduleItem").multiselect("getChecked").length > 0) {
            $("#ScheduleItem").multiselect("uncheckAll");
            $("#ScheduleItemCollapse").html('');
        }
        if (typeof ($("#ScheduleType").multiselect("getChecked").length) != undefined && $("#ScheduleType").multiselect("getChecked").length > 0) {
            $("#ScheduleType").multiselect("uncheckAll");
            $("#ScheduleTypeCollapse").html('');
        }


        if (typeof ($("#SchedulerName").multiselect("getChecked").length) != undefined && $("#SchedulerName").multiselect("getChecked").length > 0) {
            $("#SchedulerName").multiselect("uncheckAll");
            $("#SchedulerNameCollapse").html('');
        }
        if (typeof ($("#ScheduleCreatedBy").multiselect("getChecked").length) != undefined && $("#ScheduleCreatedBy").multiselect("getChecked").length > 0) {
            $("#ScheduleCreatedBy").multiselect("uncheckAll");
            $("#ScheduleCreatedByCollapse").html('');
        }
        if (typeof ($("#ScheduleUpdatedBy").multiselect("getChecked").length) != undefined && $("#ScheduleUpdatedBy").multiselect("getChecked").length > 0) {
            $("#ScheduleUpdatedBy").multiselect("uncheckAll");
            $("#ScheduleUpdatedByCollapse").html('');
        }

        if ($('#ScheduleDateCFrom').val() != '') $('#ScheduleDateCFrom').val('');
        if ($('#ScheduleDateCTo').val() != '') $('#ScheduleDateCTo').val('');
        if ($('#ScheduleDateUFrom').val() != '') $('#ScheduleDateUFrom').val('');
        if ($('#ScheduleDateUTo').val() != '') $('#ScheduleDateUTo').val('');

    }
    /* CLEAR NARROW SEARCH - END */

    /* CLEAR GLOBAL FILTER IF NOT IN FOCUS - START */
    function clearGlobalIMIfNotInFocus() {
        if ($(document.activeElement).attr('id') != 'FilterSupplierCatalogItems')
            $("#FilterSupplierCatalogItems").val('');
    }
    /* CLEAR GLOBAL FILTER IF NOT IN FOCUS - END */
    function DoNarrowSearchSC() {
        var narrowSearchFields = '';
        var narrowSearchValues = '';
        var narrowSearchItem = '';



        if (ScheduleForNarroValues != undefined && ScheduleForNarroValues.length > 0) {
            narrowSearchFields += "ScheduleFor" + ",";
            narrowSearchValues += ScheduleForNarroValues + '@("@")';
        }
        else {
            narrowSearchFields += "ScheduleFor" + ",";
            narrowSearchValues += '@("@")';
        }


        if (ScheduleItemNarroValues != undefined && ScheduleItemNarroValues.length > 0) {
            narrowSearchFields += "ScheduleItem" + ",";
            narrowSearchValues += ScheduleItemNarroValues + '@("@")';
        }
        else {
            narrowSearchFields += "ScheduleItem" + ",";
            narrowSearchValues += '@("@")';
        }

        if (ScheduleTypeNarroValues != undefined && ScheduleTypeNarroValues.length > 0) {
            narrowSearchFields += "ScheduleType" + ",";
            narrowSearchValues += ScheduleTypeNarroValues + '@("@")';
        }
        else {
            narrowSearchFields += "ScheduleType" + ",";
            narrowSearchValues += '@("@")';
        }

        if (SchedulerNameNarroValues != undefined && SchedulerNameNarroValues.length > 0) {
            narrowSearchFields += "SchedulerName" + ",";
            narrowSearchValues += SchedulerNameNarroValues + '@("@")';
        }
        else {
            narrowSearchFields += "SchedulerName" + ",";
            narrowSearchValues += '@("@")';
        }

        if (ScheduleUpdatedByNarroValues != undefined && ScheduleUpdatedByNarroValues.length > 0) {
            narrowSearchFields += "UpdatedBy" + ",";
            narrowSearchValues += ScheduleUpdatedByNarroValues + '@("@")';
        }
        else {
            narrowSearchFields += "UpdatedBy" + ",";
            narrowSearchValues += '@("@")';
        }

        if (ScheduleCreatedByNarroValues != undefined && ScheduleCreatedByNarroValues.length > 0) {
            narrowSearchFields += "CreatedBy" + ",";
            narrowSearchValues += ScheduleCreatedByNarroValues + '@("@")';
        }
        else {
            narrowSearchFields += "CreatedBy" + ",";
            narrowSearchValues += '@("@")';
        }
      
        ///////////////////////////////////////////////////////////////////////////////////////////////
        if ($('#ScheduleDateCFrom').val() != '' && $('#ScheduleDateCTo').val() != '') {

            narrowSearchFields += "DateCreatedFrom" + ",";
            narrowSearchValues += ($('#ScheduleDateCFrom').val()) + "," + ($('#ScheduleDateCTo').val()) + '@("@")';
        }
        else {
            narrowSearchFields += "DateCreatedFrom" + ",";
            narrowSearchValues += '@("@")';
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////
        if ($('#ScheduleDateUFrom').val() != '' && $('#ScheduleDateUTo').val() != '') {

            narrowSearchFields += "DateUpdatedFrom" + ",";
            narrowSearchValues += ($('#ScheduleDateUFrom').val()) + "," + ($('#ScheduleDateUTo').val()) + '@("@")';
        }
        else {
            narrowSearchFields += "DateUpdatedFrom" + ",";
            narrowSearchValues += '@("@")';
        }
        //narrowSearch = 'STARTWITH#' + narrowSearchItem;
        if (ToolAssetNameNarroValues != undefined && ToolAssetNameNarroValues.length > 0) {
            narrowSearchFields += "ToolAssetName" + ",";
            narrowSearchValues += ToolAssetNameNarroValues + '@("@")';
        }
        else {
            narrowSearchFields += "ToolAssetName" + ",";
            narrowSearchValues += '@("@")';
        }
        
        /////////////////////////////////////////////////////////////////////////////////////////////////
        if (UserUDF1NarrowValues != undefined && UserUDF1NarrowValues.length > 0) {
            narrowSearchFields += "UDF1" + ",";
            narrowSearchValues += UserUDF1NarrowValues + '@("@")';
        }
        else {
            narrowSearchFields += "UDF1" + ",";
            narrowSearchValues += '@("@")';
        }

        if (UserUDF2NarrowValues != undefined && UserUDF2NarrowValues.length > 0) {
            narrowSearchFields += "UDF2" + ",";
            narrowSearchValues += UserUDF2NarrowValues + '@("@")';
        }
        else {
            narrowSearchFields += "UDF2" + ",";
            narrowSearchValues += '@("@")';
        }

        if (UserUDF3NarrowValues != undefined && UserUDF3NarrowValues.length > 0) {
            narrowSearchFields += "UDF3" + ",";
            narrowSearchValues += UserUDF3NarrowValues + '@("@")';
        }
        else {
            narrowSearchFields += "UDF3" + ",";
            narrowSearchValues += '@("@")';
        }

        if (UserUDF4NarrowValues != undefined && UserUDF4NarrowValues.length > 0) {
            narrowSearchFields += "UDF4" + ",";
            narrowSearchValues += UserUDF4NarrowValues + '@("@")';
        }
        else {
            narrowSearchFields += "UDF4" + ",";
            narrowSearchValues += '@("@")';
        }

        if (UserUDF5NarrowValues != undefined && UserUDF5NarrowValues.length > 0) {
            narrowSearchFields += "UDF5" + ",";
            narrowSearchValues += UserUDF5NarrowValues + '@("@")';
        }
        else {
            narrowSearchFields += "UDF5" + ",";
            narrowSearchValues += '@("@")';
        }

        var vsearchtext = '';
        if ($("#global_filter").val() != '')
            vsearchtext = $("#global_filter").val().replace(/'/g, "''").replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;");


        if (narrowSearchValues.replace(/@("@")/g, '') == '' && vsearchtext == '')
            NarrowSearchInGridSC('');
        else {
           
            narrowSearch = narrowSearchFields + "[###]" + narrowSearchValues + "[###]" + vsearchtext;

        if (narrowSearch.length > 10)
            NarrowSearchInGridSC(narrowSearch);
        else if (UserCreatedNarroValues == undefined || UserCreatedNarroValues.length == 0 ||
         UserUpdatedNarroValues == undefined || UserUpdatedNarroValues.length == 0)
            NarrowSearchInGridSC(narrowSearch);
    }

    }
    function NarrowSearchInGridSC(searchstr) {

        $('#myDataTable').dataTable().fnFilter(searchstr, null, null, null)

    }
</script>
