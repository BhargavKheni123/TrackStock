@model IEnumerable<eTurns.DTO.ToolWrittenOffDTO>

@{
        ViewBag.Title = ResToolMaster.PageTitle;
        var settings = new GridHeaderSettings()
        {
            DisplaySaveButton = false,
            DisplayRefreshButton = false,
            ShowDelete = true,            
            ShowSelectAll = true,
            DisplayUDFButton = false,   
            DisplayDeleteButton = true,
            DisplaySettings = false,
            DisplayColumnSetupButton = true,
            DisplayGoToPage = false,
            DisplayPrintBlock = false,
            ShowReorder = false,
            ColumnSetupFor = "WrittenOffToolDetail"
    };
}

<div class="innerGrid" style="background: none repeat scroll 0 0 #F8F8F8; padding: 10px 0 0 28px">
    <table width="100%">
        <tr>
            <td class="BtnBlock" style="float: none; border: 1px solid #F8F8F8; height: 2px;">
                <div class="innerHeadSec">
                    <div style="position: absolute; left: 400px; top: -9px; width: 350px; z-index: 10;">                       
                        @Html.GridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.AllowToolWrittenOff)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top: 14px; padding-bottom: 10px; border: 1px solid #F8F8F8;">
                <div class="userContentInnerGrid">
                    <table id="writtenOffToolDetailTable@(ViewBag.ToolGUID)" class="display">
                        <thead>
                            <tr>
                                <th>
                                    @ResCommon.RowNo
                                </th>
                                <th>
                                    @ResCommon.ID
                                </th>
                                <th>
                                    @ResToolMaster.ToolName
                                </th>
                                <th>
                                    @ResToolMaster.Serial
                                </th>
                                <th>
                                    @ResToolMaster.Quantity
                                </th>
                                <th>
                                    @ResToolMaster.WrittenOffCategory
                                </th>
                                <th>
                                    @ResToolMaster.WrittenOffDescription
                                </th>
                                <th>
                                    @ResCommon.CreatedOn
                                </th>
                                <th>
                                    @ResCommon.UpdatedOn
                                </th>
                                <th>
                                    @ResCommon.CreatedBy
                                </th>
                                <th>
                                    @ResCommon.UpdatedBy
                                </th>
                                <th>
                                    @ResCommon.AddedFrom
                                </th>
                                <th>
                                    @ResCommon.EditedFrom
                                </th>
                                <th>
                                    @ResCommon.ReceivedOnDate
                                </th>
                                <th>
                                    @ResCommon.ReceivedOnWebDate
                                </th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </td>
        </tr>
    </table>
</div>
<input type="hidden" id="hdnListName" value="WrittenOffToolDetail" />
<input type="hidden" id="hdnGuid" value="@ViewBag.ToolGUID" />
<script language="javascript" type="text/javascript">
    var writtenOffToolDetailTable;

    $(document).ready(function () {

        var ArrWrittenOffToolColumns = new Array();
        ArrWrittenOffToolColumns.push({ mDataProp: null, sClass: "read_only center NotHide RowNo", "bSortable": false, sDefaultContent: '' });
        ArrWrittenOffToolColumns.push({ mDataProp: "ID", sClass: "read_only" });
        ArrWrittenOffToolColumns.push({ mDataProp: "ToolName", sClass: "read_only" });
        ArrWrittenOffToolColumns.push({ mDataProp: "Serial", sClass: "read_only" });
        ArrWrittenOffToolColumns.push({
            mDataProp: "Quantity", sClass: "read_only numericalign",
            sDefaultContent: '',
            fnRender: function (obj, val) {
                return FormatedCostQtyValues((obj.aData.Quantity), 2);
            }
        });
        ArrWrittenOffToolColumns.push({ mDataProp: "WrittenOffCategory", sClass: "read_only" });
        ArrWrittenOffToolColumns.push({ mDataProp: "Details", sClass: "read_only" });
        ArrWrittenOffToolColumns.push({
            mDataProp: "Created", sClass: "read_only",
            fnRender: function (obj, val) {
                return obj.aData.CreatedDate;
            }
        });
        ArrWrittenOffToolColumns.push({
            mDataProp: "LastUpdated", sClass: "read_only",
            fnRender: function (obj, val) {
                return obj.aData.UpdatedDate;
            }
        });
        ArrWrittenOffToolColumns.push({ mDataProp: "CreatedByName", sClass: "read_only" });
        ArrWrittenOffToolColumns.push({ mDataProp: "UpdatedByName", sClass: "read_only" });
        ArrWrittenOffToolColumns.push({ mDataProp: "AddedFrom", sClass: "read_only" });
        ArrWrittenOffToolColumns.push({ mDataProp: "EditedFrom", sClass: "read_only" });
        ArrWrittenOffToolColumns.push({
            mDataProp: "ReceivedOn", sClass: "read_only",
            fnRender: function (obj, val) {
                return obj.aData.ReceivedOnDate;
            }
        });
        ArrWrittenOffToolColumns.push({
            mDataProp: "ReceivedOnWeb", sClass: "read_only",
            fnRender: function (obj, val) {
                return obj.aData.ReceivedOnDateWeb;
            }
        });

        writtenOffToolDetailTable = $("#" + "writtenOffToolDetailTable" + '@ViewBag.ToolGUID').dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "sScrollX": "100%",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "aaSorting": [[2, "asc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                if (aData.IsDeleted == true && aData.IsArchived == true)
                    // nRow.className = "GridDeleatedArchivedRow";
                    $(nRow).css('background-color', '#B9BCBF');
                else if (aData.IsDeleted == true)
                    //nRow.className = "GridDeletedRow";
                    $(nRow).css('background-color', '#FFCCCC');
                else if (aData.IsArchived == true)
                    // nRow.className = "GridArchivedRow";
                    $(nRow).css('background-color', '#CCFFCC');
                $("td.RowNo:first", nRow).html(this.fnSettings()._iDisplayStart + iDisplayIndex + 1);
                return nRow;
            },
            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
                //if (PostCount > 1) {
                $.ajax({
                    "url": '@Url.Content("~/Master/SaveGridState")',
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: 'WrittenOffToolDetail' },
                    "async": false,
                    "dataType": "json",
                    "success": function (json) {
                        o = json;
                    }
                });
                //}
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'WrittenOffToolDetail' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            },
            "bServerSide": true,
            "sAjaxSource": '@Url.Content("~/Assets/GetWrittenOffToolDetail")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                //PostCount = PostCount + 1;
                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;
                for (var i = 0; i <= objCols.length - 1; i++) {
                    arrCols.push(objCols[i].mDataProp);
                }
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }
                if (oSettings.aaSorting.length != 0)
                    aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                else
                    aoData.push({ "name": "SortingField", "value": "0" });

                aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });
                aoData.push({ "name": "ToolGUID", "value": '@ViewBag.ToolGUID' });

                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    cache: false,
                    "url": sSource,
                    "data": aoData,
                    "headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback,
                    beforeSend: function () {
                        $("#" + "writtenOffToolDetailTable" + '@ViewBag.ToolGUID').removeHighlight();
                        $('.dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    complete: function () {
                        $('.dataTables_scroll').css({ "opacity": 1 });
                        if ($("#WOT_filter").val() != '') {
                            $("#" + "writtenOffToolDetailTable" + '@ViewBag.ToolGUID').highlight($("#WOT_filter").val());
                        }
                        $("input[type='radio']").filter('[value=ci]').attr('checked', 'checked');

                        if ($("#WOT_filter").val().length > 0) {
                            if ($("#" + "writtenOffToolDetailTable" + '@ViewBag.ToolGUID').dataTable().fnGetData().length <= 0) {
                            }
                        }
                    },
                    error: function () {
                        $('.dataTables_scroll').css({ "opacity": 1 });
                        $("#" + "writtenOffToolDetailTable" + '@ViewBag.ToolGUID').removeHighlight();
                    }
                })
            },
            "fnInitComplete": function () {
                $('.ColVis').detach().appendTo(".setting-arrow");
            },
            "aoColumns": ArrWrittenOffToolColumns
    }).makeEditable();
        $('.DTTT_container').css('z-index', '-1');

        $('#undeleteRows').click(function () {
            /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
            if ($("body").hasClass('DTTT_Print')) {
                return false;
            }
            deleteURL = "/Assets/DeleteWrittenOffToolRecordsByIds";
            /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
            var anSelectedWOT = fnGetSelected(writtenOffToolDetailTable);
            var stringIDs = "";
            for (var i = 0; i <= anSelectedWOT.length - 1; i++) {
                stringIDs = stringIDs + $(anSelectedWOT[i]).find('#hdnWOTTooGUID')[0].value + ",";
            }
            if (stringIDs.length > 0) {
                $('#basic-Undelmodal-content').modal();
                IsDeletePopupOpen = true;
            }
            else {
                return false;
            }
        });
    });

    $('#InnerGridGobtn').unbind("click");
    $('#InnerGridPageNumber').unbind("keydown");

    $('#InnerGridPageNumber').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#InnerGridGobtn").click();
            return false;
        }
    });

    $("#InnerGridGobtn").click(function () {
        var pval = $('#InnerGridPageNumber').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }
        if (pval == 0)
            return;
        $("#" + "writtenOffToolDetailTable" + '@ViewBag.ToolGUID').dataTable().fnPageChange(Number(pval - 1));
        $('#InnerGridPageNumber').val('');
    });

    var dTableId = "#" + "writtenOffToolDetailTable" + '@ViewBag.ToolGUID';
    var lastChecked;

    $(dTableId).on("tap click", "tbody tr", function (e) {
        if (e.target.type == "checkbox" || e.target.type == "select" || e.target.type == "radio" || e.target.type == "button") {
            e.stopPropagation();
        } else {
            if (IsDeleteItemPictureViewRecord)
                $(this).parent().parent().parent().parent().parent().toggleClass('row_selected');
            else {

                if (!lastChecked) {
                    lastChecked = this;
                }

                if (e.shiftKey) {
                    var start = $(dTableId+ ' tbody tr').index(this);
                    var end = $(dTableId + ' tbody tr').index(lastChecked);

                    for (i = Math.min(start, end) ; i <= Math.max(start, end) ; i++) {
                        if (!$(dTableId + ' tbody tr').eq(i).hasClass('row_selected')) {
                            $(dTableId + ' tbody tr').eq(i).addClass("row_selected");
                        }
                    }
                    if (window.getSelection) {
                        if (window.getSelection().empty) {  // Chrome
                            window.getSelection().empty();
                        } else if (window.getSelection().removeAllRanges) {  // Firefox
                            window.getSelection().removeAllRanges();
                        }
                    } else if (document.selection) {  // IE?
                        document.selection.empty();
                    }
                } else if ((e.metaKey || e.ctrlKey)) {
                    $(this).toggleClass('row_selected');
                } else {
                    $(this).toggleClass('row_selected');
                }
                lastChecked = this;
            }
            return false;
        }
    });

    function SelectWrittenOffToolDetail(toolGuid) {
        if (toolGuid !== undefined && toolGuid != null && toolGuid != "" && toolGuid.length > 0) {
            toolGuid = toolGuid.trim();
        }
        $("#" + "writtenOffToolDetailTable" + toolGuid).find("tbody tr").removeClass("row_selected").addClass("row_selected");
        $(this).next("a.WOTDetailclsactionDeSelectAll").css('display', '');
        $(this).css('display', 'none');

        $("#" + "writtenOffToolDetailTable" + toolGuid + " tbody tr").each(function () {
            if ($(this).find("input#notselectRow").length > 0) {
                $(this).toggleClass('row_selected');
            }
        });
    }

    function DeselectWrittenOffToolDetail(toolGuid) {
        if (toolGuid !== undefined && toolGuid != null && toolGuid != "" && toolGuid.length > 0) {
            toolGuid = toolGuid.trim();
        }
        $("#" + "writtenOffToolDetailTable" + toolGuid).find("tbody tr").removeClass("row_selected");
        $(this).prev("a.WOTDetailclsactionSelectAll").css('display', '');
        $(this).css('display', 'none');
    }

    function deleteWrittenOffToolDetail(toolGuid) {
        if (toolGuid !== undefined && toolGuid != null && toolGuid != "" && toolGuid.length > 0)
        {
            toolGuid = toolGuid.trim();
        }

        /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
        if ($("body").hasClass('DTTT_Print')) {
            return false;
        }
        deleteURL = "/Assets/DeleteWrittenOffToolRecordsByIds";
        /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
        writtenOffToolDetailTable = $("#" + "writtenOffToolDetailTable" + toolGuid).dataTable();
        var anSelectedWOTDetail = fnGetSelected(writtenOffToolDetailTable);
        var ids = "";
        for (var i = 0; i <= anSelectedWOTDetail.length - 1; i++) {
            var aData = writtenOffToolDetailTable.fnGetData(anSelectedWOTDetail[i]);
            ids = ids + aData.ID + ",";
        }
        if (ids.length > 0) {
            $('#basic-modal-content').modal();
            IsDeletePopupOpen = true;
        }
        else {
            $("#spanGlobalMessage").html('@ResMessage.SelectRowToDelete');
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            return false;
        }
    }

    $("div.userListBlock a.WOTDetailclsactionSelectAll").click(function () {
        var tmpToolGuid = $(this)[0].dataset["wotdtoolguid"];
        $("#" + "writtenOffToolDetailTable" + tmpToolGuid).find("tbody tr").removeClass("row_selected").addClass("row_selected");
        $(this).next("a.WOTDetailclsactionDeSelectAll").css('display', '');
        $(this).css('display', 'none');
    });

    $(document).on("click", "a.WOTDetailclsactionSelectAll", function () {
        var tmpToolGuid = $(this)[0].dataset["wotdtoolguid"];
        $("#" + "writtenOffToolDetailTable" + tmpToolGuid).find("tbody tr").removeClass("row_selected").addClass("row_selected");
        $(this).next("a.WOTDetailclsactionDeSelectAll").css('display', '');
        $(this).css('display', 'none');
        $("#" + "writtenOffToolDetailTable" + tmpToolGuid +" tbody tr").each(function () {
            if ($(this).find("input#notselectRow").length > 0) {
                $(this).toggleClass('row_selected');
            }
        });
    });

    $("div.userListBlock a.WOTDetailclsactionDeSelectAll").click(function () {
        var tmpToolGuid = $(this)[0].dataset["wotdtoolguid"];
        $("#" + "writtenOffToolDetailTable" + tmpToolGuid).find("tbody tr").removeClass("row_selected");
        $(this).prev("a.WOTDetailclsactionSelectAll").css('display', '');
        $(this).css('display', 'none');
    });

    $(document).on("click", "a.WOTDetailclsactionDeSelectAll", function () {
        var tmpToolGuid = $(this)[0].dataset["wotdtoolguid"];
        $("#" + "writtenOffToolDetailTable" + tmpToolGuid).find("tbody tr").removeClass("row_selected");
        $(this).prev("a.WOTDetailclsactionSelectAll").css('display', '');
        $(this).css('display', 'none');
    });

</script>
