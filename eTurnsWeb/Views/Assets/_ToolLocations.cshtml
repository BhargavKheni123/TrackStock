@model IEnumerable<eTurns.DTO.ToolLocationDetailsDTO>
<script type="text/javascript" src="@Url.Content("~/Scripts/DynemicDataTable.js?v=" + eTurnsWeb.Helper.CommonUtility.GetReleaseNumber())"></script>
@{
    bool isUpdate;
    bool isInsert;
    bool isDelete;
    bool onlyView = false;

    isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.ItemMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.ItemMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    isDelete = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.ItemMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Delete);

    if ((isUpdate == false) && (isInsert == false))
    {
        onlyView = true;
    }

}
<div class="innerGrid" style="background: none repeat scroll 0 0 #F8F8F8; padding: 10px 0 0 28px">
    <table style="width: 880px;">
        <tr>
            <td class="BtnBlock" style="float: none; border: 1px solid #F8F8F8; height: 2px;">
                <div class="innerHeadSec">
                    <div style="position: absolute; left: 470px; top: -11px; width: 350px; z-index: 10;">
                        @if (isDelete == true)
                        {
                            <a href="javascript:void(null);" title="@ViewBag.ToolGUID" id="btnDeleteRecords@(ViewBag.ToolGUID)" style="float:right">
                                <img src="~/Content/images/delete.png" />
                            </a>
                        }
                        <input type="button" id="InnerGridGobtn" class="go" value=@eTurns.DTO.Resources.ResGridHeader.Go />
                        <input type="text" id="InnerGridPageNumber" class="inputNum" />
                        <span class="label">@eTurns.DTO.Resources.ResGridHeader.GoToPage</span>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top: 14px; padding-bottom: 35px; border: 1px solid #F8F8F8;">
                <div class="userContentInnerGrid">
                    <table id="ToolLocationTable@(ViewBag.LocationID)" class="display">
                        <thead>
                            <tr>
                                @*<th>
                                        @eTurns.DTO.ResItemMaster.ItemNumber
                                    </th>*@ @*<th>
                                        Move button
                                    </th>*@
                                    <th>
                                    </th>
                                    <th>
                                        @eTurns.DTO.Resources.ResCommon.RowNo
                                    </th>
                                    
                                    @if (ViewBag.IsSerialNumberTracking)
                                    {
                                        <th>
                                            @eTurns.DTO.ResItemLocationDetails.SerialNumber
                                        </th>
                                    }
                                    <th>
                                        Quantity
                                    </th>
                                   
                                    
                                    <th>
                                        @eTurns.DTO.ResToolMaster.Cost
                                    </th>
                                    
                                    <th>
                                        @eTurns.DTO.ResItemLocationDetails.Created
                                    </th>
                                    <th>
                                        @eTurns.DTO.ResItemLocationDetails.Updated
                                    </th>
                                    <th>
                                        @eTurns.DTO.ResItemLocationDetails.CreatedBy
                                    </th>
                                    <th>
                                        @eTurns.DTO.ResItemLocationDetails.LastUpdatedBy
                                    </th>
                                    <th>
                                        @eTurns.DTO.Resources.ResCommon.AddedFrom
                                    </th>
                                    <th>
                                        @eTurns.DTO.Resources.ResCommon.EditedFrom
                                    </th>
                                    <th>
                                        @eTurns.DTO.Resources.ResCommon.ReceivedOnDate
                                    </th>
                                    <th>
                                        @eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate
                                    </th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <div id="LocationDetails@(ViewBag.ToolGUID)">
    </div>
    <script type="text/javascript">
        $(function (event) {

            AllowDeletePopup = false;

            function OpenLocationDetailPopUP() {
                $("#btnNewLocations@(ViewBag.ToolGUID)").click();
                return false;
            }


            var ColumnObject = new Array();
            ColumnObject.push({
                mDataProp: null, "bSortable": false, sClass: "read_only controlHistory NotHide", sDefaultContent: "",
                fnRender: function (obj, val) {
                    return "<input type='hidden' name='hdnGUID' value='" + obj.aData.ID + "' />" + "<img  src='/Content/images/history.png' alt='no' style='cursor:pointer;'/>"
                }
            });
            ColumnObject.push({ mDataProp: null, sClass: "read_only center NotHide RowNo", "bSortable": false, sDefaultContent: '' });
             

            if ('@ViewBag.IsSerialNumberTracking' == 'True') {
                ColumnObject.push({ mDataProp: "SerialNumber", sClass: "read_only" });
            }


            ColumnObject.push({ mDataProp: "Quantity", sClass: "read_only" });


            ColumnObject.push({
                mDataProp: "Cost", sClass: "read_only", "fnRender": function (obj, val) {

                    if (obj.aData.Cost != null && obj.aData.Cost != NaN)
                        return "<span>" + FormatedCostQtyValues(obj.aData.Cost, 1) + "</span>";
                    else
                        return "<span>" + FormatedCostQtyValues(0, 1) + " </span>";

                }
            });

            ColumnObject.push({
                mDataProp: "Created",
                sClass: "read_only",
                fnRender: function (obj, val) {
                    return obj.aData.CreatedDt;
                }
            });
            ColumnObject.push({ mDataProp: "Updated", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.UpdatedDt; } });
            ColumnObject.push({ mDataProp: "CreatedByName", sClass: "read_only" });
            ColumnObject.push({ mDataProp: "UpdatedByName", sClass: "read_only" });
            ColumnObject.push({ mDataProp: "AddedFrom", sClass: "read_only" });
            ColumnObject.push({ mDataProp: "EditedFrom", sClass: "read_only" });
            ColumnObject.push({ mDataProp: "ReceivedOn", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.ReceivedOnDate; } });
            ColumnObject.push({ mDataProp: "ReceivedOnWeb", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.ReceivedOnDateWeb; } });


            var paramsMS = [];
            paramsMS.push({ "name": "ToolGUID", "value": '@ViewBag.ToolGUID' });
            paramsMS.push({ "name": "LocationID", "value": '@ViewBag.LocationID' });
            var scrollx = "";

            PrepareMyDynatable("ToolLocationTable@(ViewBag.LocationID)", '@Url.Content("~/Assets/ToolLocationsListAjax")', 'ItemLocationList', ColumnObject, paramsMS, scrollx);

            $("#LocationDetails@(ViewBag.ToolGUID)").dialog({
                autoOpen: false,
                show: "blind",
                hide: "explode",
                height: 700,
                title: "Item Locations",
                width: 900,
                modal: true,
                beforeClose: function () {
                    if (isDirtyForm) {
                        if (confirm(SaveConfirmationMSG)) {
                            //isDirtyForm = false;
                            return false;
                        }
                        isDirtyForm = false;
                    }
                },
                close: function () {
                    $("#LocationDetails@(ViewBag.ToolGUID)").empty();
                    AllowDeletePopup = true;
                    $("#ToolLocationTable@(ViewBag.LocationID)").DataTable().fnDraw();
                    $('#DivLoading').hide();
                }
            });

            $("#btnNewLocations@(ViewBag.ToolGUID)").click(function () {
                $('#DivLoading').show();
                $('#LocationDetails@(ViewBag.LocationID)').load("@Url.Action("LocationDetailsNew", new { ItemID_ItemType = ViewBag.ToolGUID_ItemType })", function () {
                    $('#LocationDetails@(ViewBag.LocationID)').dialog('open');
                    $('#DivLoading').hide();
                });
                return false;
            });

            $("#aEditLocation@(ViewBag.ToolGUID)").click(function () {
                $("#btnNewLocations@(ViewBag.ToolGUID)").click();
                return false;
            });
            $("#btnDeleteRecords@(ViewBag.ToolGUID)").click(function () {

                DeleteDynemicTableData_New($("#ToolLocationTable@(ViewBag.LocationID)").DataTable(), '@Url.Content("~/Inventory/ItemLocationsDelete")', 'UpdateQtyDetailOfParentGrid');

                //setTimeout(function () { UpdateQtyDetailOfParentGrid(); }, 10000);

            });

            if ($('#IsDeletedRecords').is(':checked') || $('#IsArchivedRecords').is(':checked') || $("body").hasClass('DTTT_Print')) {
                $('#btnDeleteRecords@(ViewBag.ToolGUID)').css({ 'display': 'none' });
                $('#btnNewLocations@(ViewBag.ToolGUID)').css({ 'display': 'none' });
            }


            $("#ToolLocationTable@(ViewBag.LocationID)").on("click", "td.controlHistory img", function (event) {
                var nTrLocHistory = this.parentNode.parentNode;
                var oDataLocHistory = $("#ToolLocationTable@(ViewBag.LocationID)").DataTable().fnGetData(nTrLocHistory);
                //alert(oDataLocHistory.GUID);
                $('#divItemLocationHistoryView').data("cid", oDataLocHistory.GUID).dialog('open')
                //return false;
                event.preventDefault();
                return false;
            });

            $("#ToolLocationTable@(ViewBag.LocationID)").on("click", "a.controlEditLoc", function (event) {

                var LocGUID = $(this.parentNode).find("#LocationGUID")
                var strUrl = '@Url.Action("LocationDetailsEdit")';
                strUrl = strUrl + '?LocationGUID=' + $(LocGUID).val();

                $('#DivLoading').show();
                $('#LocationDetails@(ViewBag.ToolGUID)').load(strUrl, function () {
                    $('#LocationDetails@(ViewBag.ToolGUID)').dialog('open');
                    $('#DivLoading').hide();
                    //$("#frmLocationDetails").find("table tbody").find("input[type='text']")[0].focus();
                    //setTimeout('setTextboxFocus()',2000);
                });
                IsPopUpOpenOrNot = true;
                event.preventDefault();
                return false;
            });

            $("#divItemLocationHistoryView").dialog({
                autoOpen: false,
                modal: true,
                draggable: true,
                resizable: true,
                width: '95%',
                height: 720,
                title: 'Inventory Location History',
                open: function () {
                    $('#DivLoading').show();
                    $("#divItemLocationHistoryView").empty();
                    $.get('ItemLocationHistoryView', { LGUID: $(this).data("cid") }, function (data) {
                        $("#divItemLocationHistoryView").html(data);
                    });
                    $('#DivLoading').hide();
                },
                close: function () {
                    $("#divItemLocationHistoryView").empty();
                }
            });
        });
        //    function setTextboxFocus()
        //    {
        //        if ($("#frmLocationDetails").find("table tbody").find("input[type='text']:visible").length > 0) {
        //                $("#frmLocationDetails").find("table tbody td").find("input[type='text']:visible")[0].focus();
        //           }
        //    }
        function DeleteItemLocatino() {
            DeleteDynemicTableData_New($("#ToolLocationTable@(ViewBag.ToolGUID)").DataTable(), '@Url.Content("~/Inventory/ItemLocationsDelete")');
        }

        function UpdateQtyDetailOfParentGrid() {
            $.ajax({
                "url": '@Url.Content("~/Inventory/GetLatestQTYfromItem")',
                data: { ItemGUID: '@(ViewBag.ToolGUID)' },
                "async": false,
                cache: false,
                "dataType": "json",
                "success": function (response) {
                    if ($('#spnOnHand@(ViewBag.ToolGUID)') != undefined)
                        $('#spnOnHand@(ViewBag.ToolGUID)').text(response.OnHand);

                    if ($('#OnHandQuantityHidden@(ViewBag.ToolGUID)') != undefined)
                        $('#OnHandQuantityHidden@(ViewBag.ToolGUID)').val(response.OnHand);

                    if ($('#spnSuggested@(ViewBag.ToolGUID)') != undefined)
                        $('#spnSuggested@(ViewBag.ToolGUID)').text(response.SuggestedQTY);

                    if ($('#spnAverageCost@(ViewBag.ToolGUID)') != undefined)
                        $('#spnAverageCost@(ViewBag.ToolGUID)').text(response.AverageCost);

                    if ($('#spnExtendedCost@(ViewBag.ToolGUID)') != undefined)
                        $('#spnExtendedCost@(ViewBag.ToolGUID)').text(response.ExtendedCost);

                    if ($('#aOnOrderQty_@(ViewBag.ToolGUID)') != undefined)
                        $('#aOnOrderQty_@(ViewBag.ToolGUID)').text(response.OnOrderQty);

                    if ($('#spnAverageUsage@(ViewBag.ToolGUID)') != undefined)
                        $('#spnAverageUsage@(ViewBag.ToolGUID)').text(response.AverageUsage);

                    if ($('#myDataTable') != undefined) {

                        if (DrillDownItemGuid != null && DrillDownItemGuid != undefined)
                            DrillDownItemGuid = '@ViewBag.ToolGUID';

                        if (DrillDownBinId != null && DrillDownBinId != undefined)
                            DrillDownBinId = '@ViewBag.LocationID';

                        $("#myDataTable").DataTable().fnDraw();
                    }
                    else if ($('#ItemBinWiseSummaryTable@(ViewBag.ToolGUID)') != undefined)
                        $("#ItemBinWiseSummaryTable@(ViewBag.ToolGUID)").DataTable().fnDraw();

                    if ($('#spnUpdated@(ViewBag.ToolGUID)') != undefined)
                        $('#spnUpdated@(ViewBag.ToolGUID)').text(GetDateInFullFormat(response.UpdatedDate));
                },
                error: function (response) {
                    $("#spanGlobalMessage").text(response);
                }
            });
        }

    </script>
    <div id="divItemLocationHistoryView">
    </div>
    <script type="text/javascript">
        var objColumnsLocation = {
            '@MvcHtmlString.Create(eTurns.DTO.ResBin.BinNumber)': 1,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemLocationDetails.SerialNumber)': 2,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemLocationDetails.LotNumber)': 3,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemLocationDetails.ExpirationDate)': 4,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemLocationDetails.ReceivedDate)': 5,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemLocationDetails.CustomerOwnedQuantity)': 6,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemLocationDetails.ConsignedQuantity)': 7,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.MinimumQuantity)': 8,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.MaximumQuantity)': 9,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.CriticalQuantity)': 10,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemLocationDetails.Cost)': 11,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.Markup)': 12,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.SellPrice)': 13,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemLocationDetails.Created)': 14,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemLocationDetails.Updated)': 15,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemLocationDetails.CreatedBy)': 16,
            '@MvcHtmlString.Create(eTurns.DTO.ResItemLocationDetails.LastUpdatedBy)': 17,
            //        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.AddedFrom)': 18,
            //        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.EditedFrom)': 19,
            //        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.ReceivedOnDate)': 20,
            //        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate)': 21,
        };
    </script>
