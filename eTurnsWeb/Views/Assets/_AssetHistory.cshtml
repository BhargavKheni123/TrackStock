@using eTurns.DTO
@using eTurns.DTO.Resources
@{    
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplayDeleteButton = false, DataTableName = "HistoryTable", ColumnSetupFor = "AssetsChangeLog" };
    bool isCost = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.HideCostMarkUpSellPrice);
}
<script language="javascript" type="text/javascript">
    var oHistoryTable;

    $(document).ready(function () {
        oHistoryTable = $('#HistoryTable').dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "bAutoWidth": true,                        
            "sDom": 'R<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "sScrollX": "100%",
            "aaSorting": [[1, "asc"]],
            "oColReorder": {},
            "bSort": false,
            "sPaginationType": "full_numbers",
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries',
                "sLoadingRecords": '@eTurns.DTO.Resources.ResMessage.MsgLoading'
            },
            "sAjaxSource": '@Url.Content("~/Master/GetHistoryData")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                aoData.push({ "name": "PageType", "value": "AssetList" });
                aoData.push({ "name": "PageID", "value": SelectedHistoryRecordID });
                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback
                })
            },
            "fnInitComplete": function () {                     
                     compareHistoryRows(this);
            },
            "aoColumns": [                            
                            //{ "mDataProp": "ID", "sClass": "read_only" },    
                            //{ "mDataProp": "HistoryID", "sClass": "read_only" },
                            { "mDataProp": "Action", "sClass": "read_only" },
                            {
			                    "mDataProp": "AssetName",
			                    "sClass": "read_only",
			                    "sDefaultContent": '',
			                    "fnRender": function (obj, val) {
			                        return "<a onclick='return ShowViewTabForHistory(&quot;AssetEdit/" + obj.aData.HistoryID + "&quot;,&quot;frmAsset&quot;)' href='JavaScript:void(0);'>" + obj.aData.AssetName + "</a>";
			                    }
			                },
                            { "mDataProp": "Description", "sClass": "read_only" },
			                { "mDataProp": "Make", "sClass": "read_only" },
			                { "mDataProp": "Model", "sClass": "read_only" },
			                { "mDataProp": "Serial", "sClass": "read_only" },
			                { "mDataProp": "ToolCategory", "sClass": "read_only" },
			                { "mDataProp": "PurchaseDate", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                        return GetDateInFullFormat(val);
			                    }
			                },
			                { "mDataProp": "PurchasePrice", "sClass": "read_only isCost" },
			                { "mDataProp": "DepreciatedValue", "sClass": "read_only isCost" },
			                { "mDataProp": "SuggestedMaintenanceDate", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                        return GetDateInFullFormat(val);
			                    }
			                },
			                { "mDataProp": "RoomName", "sClass": "read_only" },
			                { "mDataProp": "Created", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                        //return GetDateInFullFormat(val);
                                     return obj.aData.CreatedDate;
 
			                    }
			                },
			                { "mDataProp": "Updated", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                       // return GetDateInFullFormat(val);
                                   return obj.aData.UpdatedDate;
			                    }
			                },
                            { "mDataProp": "UpdatedByName", "sClass": "read_only"},
                            { "mDataProp": "CreatedByName", "sClass": "read_only"},
                            { "mDataProp": "AddedFrom", "sClass": "read_only"},
                            { "mDataProp": "EditedFrom", "sClass": "read_only"},
                             { "mDataProp": "ReceivedOn", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                                                             return obj.aData.ReceivedOnDate;
 
			                    }
			                },
			                { "mDataProp": "ReceivedOnWeb", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                                                          return obj.aData.ReceivedOnDateWeb;
			                    }
			                }

//                            { "mDataProp": "ReceivedOnDate", "sClass": "read_only"},
//                            { "mDataProp": "ReceivedOnDateWeb", "sClass": "read_only"}
                            @Html.RenderColumnsArray("AssetMaster")
                    ]
        });
        //HIDE PRINT CONTAINER
        $('.DTTT_container').css('z-index', '-1');
         //HIDE PRINT CONTAINER
        
           if ('@isCost' == '@Boolean.FalseString') {
               HideColumnUsingClassName("HistoryTable");
                //ColumnsToHideinPopUp.push(12);
                //ColumnsToHideinPopUp.push(8);
               // ColumnsToHideinPopUp.push(9);
               
               // oTable.fnSetColumnVis(12, false);
               // oHistoryTable.fnSetColumnVis(8, false);
               // oHistoryTable.fnSetColumnVis(9, false);
              
            }
        $("#HistoryText").keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {                
                oHistoryTable.fnFilter(this.value);
            }
            else if (e.keyCode === 27 || e.key === "Escape" || e.key === "Esc") {
                $("#HistoryText").val("");
                $('#HistoryTable').dataTable().fnFilter('', null, null, null);
            }
        });
        $("#HistoryClear").click(function () {
            if ($("#HistoryText").val().length > 0) {
                $("#HistoryText").val("");
                oHistoryTable.fnFilter("");
            }
            return false;
        });

    });    
</script>
<div class="searchWrapper">
    <div class="searchBlock">
        <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
        <div class="searchinputB">
            <input type="text" class="searchinput" id="HistoryText" />
            <a href="javascript:void(0);" class="xclose">
                <img src="@Url.Content("~/Content/images/x.png")" alt="X" id="HistoryClear" /></a>
        </div>
    </div>
</div>
@Html.GridTopHeaderForHistory(settings)
<div style="margin: 0 0.4% 1%">
    <table id="HistoryTable" class="display">
        <thead>
            <tr>
                @*<th>@ResCommon.ID
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.HistoryID
                </th>*@
                <th>
                    @eTurns.DTO.Resources.ResCommon.HistoryAction
                </th>
                <th>@ResAssetMaster.AssetName
                </th>
                <th>@ResAssetMaster.Description
                </th>
                <th>@ResAssetMaster.Make
                </th>
                <th>@ResAssetMaster.Model
                </th>
                <th>@ResAssetMaster.Serial
                </th>
                <th>@ResToolCategory.ToolCategory
                </th>
                <th>@ResAssetMaster.PurchaseDate
                </th>
                <th>@ResAssetMaster.PurchasePrice
                </th>
                <th>@ResAssetMaster.DepreciatedValue
                </th>
                <th>@ResAssetMaster.SuggestedMaintenanceDate
                </th>
                <th>
                    @ResCommon.RoomName
                </th>
                <th>
                    @ResCommon.CreatedOn
                </th>
                <th>
                    @ResCommon.UpdatedOn
                </th>
                <th>
                    @ResCommon.UpdatedBy
                </th>
                <th>
                    @ResCommon.CreatedBy
                </th>
                <th>
                    @ResCommon.AddedFrom
                </th>
                <th>
                    @ResCommon.EditedFrom
                </th>
                <th>
                    @ResCommon.ReceivedOnDate
                </th>
                <th>
                    @ResCommon.ReceivedOnWebDate
                </th>
                @Html.RenderColumnsHeader("AssetMaster", typeof(eTurns.DTO.ResAssetMaster))
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
