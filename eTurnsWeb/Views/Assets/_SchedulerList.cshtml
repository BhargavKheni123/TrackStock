@model IEnumerable<eTurns.DTO.ToolsSchedulerMappingDTO>
@{
    GridHeaderSettings settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplaySaveButton = false, DisplayUDFButton = false, UDFSetupFor = "", DisplaySettings = true, DisplayColumnSetupButton = true, DisplayContextMenu = false, DisplayPrintBlock = false, DisplayDeleteButton = true,ColumnSetupFor = "ToolSchedulerList", DataTableName = "SchedulerListTable" };
    var version = eTurnsWeb.Helper.CommonUtility.GetReleaseNumber();
}
<script type='text/javascript' src="@Url.Content("~/Scripts/PageScripts/MaintananceScheduler.js?v=" + version)"></script>
<div class="">
    <div class="userListBlock">
        <div>
            <span style="font-size: larger; font-style: inherit; color: Navy;">
                @if (ViewBag.ToolAssetName != null)
                {
                    @Convert.ToString(ViewBag.ToolAssetName)@Html.Raw(" " + ResToolsScheduler.Scheduler)
                }
            </span>
            <hr />
        </div>
        <div id="tab7" class="" style="width: 99.5%">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search</span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="InnerItem_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_QLItem_filter" />
                        </a>
                    </div>
                </div>
                <input type="button" id="btnDiv" value="Div" style="visibility: hidden" />
            </div>
            @Html.QuickListItemsGridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.AssetMaintenance)
            <div class="userContentInnerGrid" style="width: 99% !important; margin-left: 5px !important;
                float: left;">
                <table id="SchedulerListTable" class="display">
                    <thead>
                        <tr>
                            <th>
                                @eTurns.DTO.ResToolsScheduler.SchedulerName
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsScheduler.ScheduleType
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsScheduler.TimeBased
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsScheduler.OperationalHours
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsScheduler.Mileage
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @item.ToolScheduleInfo.SchedulerName
                                        <input type="hidden" id="hdnID" value="@(item.GUID)" />
                                    </td>
                                    <td>
                                        @item.ToolScheduleInfo.ScheduleTypeName
                                    </td>
                                    <td>
                                        @item.ToolScheduleInfo.ScheduleFreqInWord

                                    </td>

                                    <td>
                                        @item.ToolScheduleInfo.OperationalHours
                                    </td>
                                    <td>
                                        @item.ToolScheduleInfo.Mileage
                                    </td>

                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="dialog" id="mdlQLYesNo" style="display: none;">
    <div class="inner">
        <p class="text">
            @eTurns.DTO.Resources.ResMessage.DeleteConfirm
        </p>
        <a href="JavaScript:void{}" id="btnQLModelYesSP" class="yes">
            <img src="~/Content/images/yes.png" alt="Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="javascript:void(0)" class="no"
               onclick="QLcloseModal()">
            <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div>
<script type="text/javascript">
    var oTableProjectItems;
    var deleteURL1 = "/Assets/DeleteScheduleRecords";
    var NotAllowedCharCodes = [9, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40];
    var DTName = 'SchedulerListTable';
    var bIsSchedulerFilter = false;
    objMaintananceColumn = GetGridHeaderColumnsObject(DTName);

    $(document).ready(function () {
        var gaiSelected = [];
        oTableProjectItems = $('#' + DTName).dataTable({
            "bJQueryUI": true,
            "bRetrieve": true,
            "bDestroy": true,
            "bScrollCollapse": true,
            "sScrollX": "100%",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>',
            "aaSorting": [],
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
                if (!bIsSchedulerFilter) {
                    $.ajax({
                        "url": '@Url.Content("~/Master/SaveGridState")',
                        "type": "POST",
                        data: { Data: JSON.stringify(oData), ListName: 'ScheduleList' },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        "success": function (json) {
                            o = json;
                        }
                    });
                }
                bIsSchedulerFilter = false;
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'ScheduleList' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            }
        });
        $('.DTTT_container').css('z-index', '-1');
    });

  //reorder popup update button 
    function UpdateColumnOrder1(_ListName) {
        var oTableReorder = $("#" + DTName).dataTable();
        $.ajax({
            "url": '/Master/LoadGridState',
            data: { ListName: 'ScheduleList' },
            cache: false,
            "dataType": "json",
            "success": function (json) {

                if (json.jsonData != '') {
                    o = JSON.parse(json.jsonData);
                    oTableReorder.fnSettings().oLoadedState = $.extend(true, {}, o);
                    //update the order of columns
                    var _Order = SortableArrayMaintanance($('#ColumnSortable1')); // $('#ColumnSortable').sortable("toArray");
                    var __Order = _Order.toString().split(",");

                    for (var i = 0; i < __Order.length; i++) {
                        __Order[i] = parseInt(__Order[i], 10);
                    }

                    oTableReorder.fnSettings().oLoadedState.ColReorder = __Order;

                    //update the visibility of columns
                    var _abVisCols = [];

                    for (i = 0, iLen = oTableReorder.fnSettings().aoColumns.length; i < iLen; i++) {
                        //var checked = $("#" + i + "_").is(":checked");
                        var checked = $('#ColumnSortable1').find('input.checkBox[id="' + i + '_"]').is(":checked");
                        _abVisCols.push(checked);
                    }

                    oTableReorder.fnSettings().oLoadedState.abVisCols = _abVisCols;

                    //update the state to the database
                    $.ajax({
                        "url": '/Master/SaveGridState',
                        "type": "POST",
                        //data: { Data: JSON.stringify(oTableReorder.fnSettings().oLoadedState), ListName: 'ToolList' },
                        data: { Data: JSON.stringify(oTableReorder.fnSettings().oLoadedState), ListName: 'ScheduleList' },
                        "dataType": "json",
                        cache: false,
                        "success": function (json) {

                            o = json;

                            //refresh the page
                            // window.location.reload(true);
                            $("#ColumnSortableModal1").dialog("close");
                            callbackSchedulerList();
                            //$('#CtabWrittenOffTool').empty();
                            //GetWrittenOffToolList();
                            ////$("#writtenOffToolTable").dataTable().fnDraw();
                        }
                    });


                }
            }
        });


    }

    $('#' + DTName + ' tbody tr').die('tap click');
    $('#deleteRows2').unbind("click");
    $('#Gobtn1').unbind("click");
    $('#clear_QLItem_filter').unbind("click");
    $('#PageNumber1').unbind("keydown");
    $('#btnModelYesInnerGrid').die('click');
    $(".ColVis_MasterButton").hide();

    // To adjust the print block next to colvis button
    $('#btnblockAsset').css({ 'margin-right': '45px' });

    $('#' + DTName + ' tbody tr').live('tap click', function () {
        $(this).toggleClass('row_selected');
        return false;
    });

    /* Add a click handler for the delete rows multiple rows */

    $('#deleteRows2').click(function () {
        /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
        if ($("body").hasClass('DTTT_Print')) {
            return false;
        }
        /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */


        var anSelected = fnGetSelected(oTableProjectItems);
        var stringIDs = "";
        for (var i = 0; i <= anSelected.length - 1; i++) {
            //anSelected[0].cells[0].innerHTML
            stringIDs = stringIDs + $(anSelected[i]).find("#hdnID").val() + ",";
        }
        if (anSelected.length !== 0) {
            $('#Inner-Grid-basic-modal-content').modal();
            IsDeletePopupOpen = false;
        }
    });

    $("#btnModelYesInnerGrid").live("click", function () {

        var anSelected = fnGetSelected(oTableProjectItems);
        var stringIDs = "";
        for (var i = 0; i <= anSelected.length - 1; i++) {
            stringIDs = stringIDs + $(anSelected[i]).find("#hdnID").val() + ",";
        }

        if (anSelected.length !== 0) {
            $.ajax({
                'url': deleteURL1,
                data: { ids: stringIDs },
                success: function (response) {
                    if (response == "ok") {
                        for (var i = 0; i <= anSelected.length - 1; i++) {
                            oTableProjectItems.fnDeleteRow(anSelected[i]);
                        }

                        if (anSelected.length > 0) {
                            $("#spanGlobalMessage").html('@ResCommon.RecordDeletedSuccessfully'.replace("{0}","(" + anSelected.length + ")"));
                        }
                        //$('div#target').fadeToggle();
                        //$("div#target").delay(2000).fadeOut(200);
                        showNotificationDialog();
                        //CallThisFunctionFromModel('success');
                        //oTableProjectItems.fnDraw();
                    }
                },
                error: function (response) {
                    // through errror message
                }
            });
            $.modal.impl.close();
        }
    });

    $('#PageNumber1').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#Gobtn1").click();
            return false;
        }
    });

    $("#Gobtn1").click(function () {
        var pval = $('#PageNumber1').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }
        if (pval == 0)
            return;
        $('#' + DTName).dataTable().fnPageChange(Number(pval - 1));
        $('#PageNumber1').val('');
    });

    /* global search function */
    function fnFilterGlobalPS() {
        //set filter only if more than 2 characters are pressed
        //if (typeof $("#InnerItem_filter") != 'undefined' && ($("#InnerItem_filter").val().length > 2 || $("#InnerItem_filter").val().length == 0)) {
        if (typeof $("#InnerItem_filter") != 'undefined') {
            bIsSchedulerFilter = true;
            var searchtext = $("#InnerItem_filter").val().replace(/'/g, "''");

            $('#' + DTName + ' td').removeHighlight();

            $('#' + DTName).dataTable().fnFilter(
                            searchtext,
                            null,
                            null,
                            null
                        );


            if (searchtext.length > 0)
                $('#' + DTName + ' td').highlight($("#InnerItem_filter").val());
        }
    }


    //Apply filter
    $("#InnerItem_filter").keyup(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        var index = $.inArray(code, NotAllowedCharCodes);
        if (code == 13) {
        }
        else {
            fnFilterGlobalPS();
        }
    });

    //Keydown event is required to handle ENTER KEY to work in IE
    $("#InnerItem_filter").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            fnFilterGlobalPS();
        }
    });

    //Clear Filter
    $("#clear_QLItem_filter").click(function () {
        $("#InnerItem_filter").val('');
        fnFilterGlobalPS();
        $("#InnerItem_filter").focus();
        return false;
    });

    var timeoutscheduler;
    $(document).on('propertychange input', "#InnerItem_filter", function () {
        clearTimeout(timeoutscheduler);
        var self = this;
        timeoutscheduler = setTimeout(function () {
            if (SearchPattern == 2 || SearchPattern == "2") {
                fnFilterGlobalPS();
            }
            else {
                $('#InnerItem_filter').unbind("keypress");
                $('#InnerItem_filter').keypress(function (event) {
                    var keycode = (event.keyCode ? event.keyCode : event.which);
                    if (keycode == 13) {
                        fnFilterGlobalPS();
                    }
                });
                if ($("#InnerItem_filter").val().length == 0) {
                    setTimeout(function () { fnFilterGlobalPS();; }, 200);
                }
            }

        }, 500);
    });
    function callPrint1(DataTableName) {
        var oConfig = {
            "sInfo": "<h6>Print view</h6><p>Please use your browser's print function to " + "print this table. Press escape when finished.",
            "sMessage": null,
            "bShowAll": false,
            "sToolTip": "View print view",
            "sButtonClass": "DTTT_button_print",
            "sButtonText": "Print"
        };
        if (typeof (TableTools) != undefined && typeof (TableTools) != 'undefined')
            TableTools.fnGetInstance(DataTableName).fnPrint(true, oConfig);
    }

    _Common.setGloblaSearch('InnerItem_filter', 'SchedulerListTable');
    /* DATA TABLE GRID COMMON FUNCTIONS END */

</script>
