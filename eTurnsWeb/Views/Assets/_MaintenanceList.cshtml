@model IEnumerable<eTurns.DTO.ToolsMaintenanceDTO>
@{
    GridHeaderSettings settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplaySaveButton = false, DisplayUDFButton = false, UDFSetupFor = "", DisplaySettings = true, DisplayColumnSetupButton = true, DisplayContextMenu = false, DisplayPrintBlock = false, DisplayDeleteButton = true, ColumnSetupFor= "MaintenanceList", DataTableName = "AssetsToolsMaintenanceDetails" };
    var version = eTurnsWeb.Helper.CommonUtility.GetReleaseNumber();
}
<script type='text/javascript' src="@Url.Content("~/Scripts/PageScripts/MaintananceScheduler.js?v=" + version)"></script>
<div class="">
    <div class="userListBlock">
        <div>
            <span style="font-size: larger; font-style: inherit; color: Navy;">
                @if (ViewBag.ToolAssetName != null)
                {
                    @Convert.ToString(ViewBag.ToolAssetName)@Html.Raw(ResToolMaintenanceDetails.Maintenance)
                }
            </span>
            <hr />
        </div>
        <div id="tab7" class="" style="width: 99.5%">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search</span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="InnerItem_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="@Url.Content("~/Content/images/x.png")" alt="X" id="clear_QLItem_filter" />
                        </a>
                    </div>
                </div>
                <input type="button" id="btnDiv" value="Div" style="visibility: hidden" />
            </div>
            @Html.QuickListItemsGridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.Assets)
            <div class="userContentInnerGrid" style="width: 99% !important; margin-left: 5px !important;
                float: left;">
                <table id="AssetsToolsMaintenanceDetails" class="display">
                    <thead>
                        <tr>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ExpandCollapse
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.Status
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsMaintenance.ID
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsMaintenance.MaintenanceName
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsMaintenance.MaintenanceDate
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsMaintenance.ScheduleDate
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsMaintenance.TrackingMeasurement
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsMaintenance.TrackingMeasurementValue
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsMaintenance.LastMaintenanceDate
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsMaintenance.LastMeasurementValue
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsMaintenance.WorkorderID
                            </th>
                            <th>
                                @eTurns.DTO.ResToolsMaintenance.RequisitionID
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <img src="~/Content/images/drildown_open.jpg" id="pullDrillDown" alt="Show/Hide Pull" />
                                    </td>
                                    <td>
                                        @if (item.Status == "start")
                                        {
                                            <a href="#" onclick="fnCreateReqWOFrmMaintainance('@item.GUID');">Start Maintenance</a>
                                        }
                                        else
                                        {
                                            if (item.Status.ToLower() == "started")
                                            {
                                                <a href="#" onclick="fnCloseMaintenance('@item.GUID');">Close</a>
                                            }
                                            else
                                            {
                                                if (item.Status.ToLower() == "close")
                                                {
                                                    @Html.Raw("Closed")
                                                }
                                            }
                                        }
                                    </td>
                                    <td>
                                        @item.ID
                                        <input type="hidden" id="hdnID" value="@(item.GUID)" />
                                    </td>
                                    <td>

                                        @item.MaintenanceName

                                    </td>
                                    <td>
                                        @item.MaintenanceDate
                                    </td>
                                    <td>
                                        @item.ScheduleDate
                                    </td>
                                    <td>

                                        @if (item.TrackngMeasurement == 1)
                                        {
                                            @ResToolsScheduler.TimeBased
                                        }
                                        else if (item.TrackngMeasurement == 2)
                                        {
                                            @ResToolsScheduler.OperationalHours
                                        }
                                        else if (item.TrackngMeasurement == 3)
                                        {
                                            @ResToolsScheduler.Mileage
                                        }
                                        else
                                        {

                                        }

                                    </td>
                                    <td class="numericalign">
                                        @item.TrackingMeasurementValue
                                    </td>
                                    <td>
                                        @item.LastMaintenanceDate
                                    </td>
                                    <td class="numericalign">
                                        @item.LastMeasurementValue
                                    </td>
                                    <td>
                                        @if (item.WorkorderGUID != Guid.Empty)
                                        {
                                            <a onclick="return popupModel('@item.WorkorderGUID');" href="javascript:void(0);">@item.WOName</a>
                                        }
                                    </td>
                                    <td>
                                        @if (item.RequisitionGUID != Guid.Empty)
                                        {
                                            <a onclick="return popupModelReq('@item.RequisitionGUID');" href="javascript:void(0);">@item.RequisitionName</a>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="dialog" id="mdlQLYesNo" style="display: none;">
    <div class="inner">
        <p class="text">
            @eTurns.DTO.Resources.ResMessage.DeleteConfirm
        </p>
        <a href="JavaScript:void{}" id="btnQLModelYesSP" class="yes">
            <img src="~/Content/images/yes.png" alt="Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="javascript:void(0)" class="no"
               onclick="QLcloseModal()">
            <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div>
<div class="dialog" id="OdometerEntry" style="display: none;">
    <div class="inner">
        <div class="">
            <ul>
                <li>
                    <div class="editor-label">
                        <b>Odometer Entry</b><em>*</em>
                    </div>
                </li>
                <li>
                    <div class="editor-field">
                        @Html.TextBox("txtOdometerEntry", "", "{0:0.00}", new { @class = "text-boxinner", id = "txtOdometerEntry", style = "padding-left:10px;", maxlength = 128 })
                    </div>
                </li>
                <li>&nbsp;</li>
                <li>
                    <p class="text" style="text-align:center;padding-left:10px;">
                        <a href="#" class="no" onclick="StartMaintenactClick()">
                            <img src="~/Content/images/yes.png" alt="ok" />Start Maintenance
                        </a>
                    </p>
                </li>
            </ul>

        </div>

    </div>
</div>
<script type="text/javascript">
    var oTableProjectItems;
    var deleteURL1 = "/Assets/DeleteMaintenanceRecords";
    var NotAllowedCharCodes = [9, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40];
    var DTName = 'AssetsToolsMaintenanceDetails';
    var bIsFilter = false;
    var anOpen = [];
    var sImageUrl1 = "/Content/images/";
    objMaintananceColumn = GetGridHeaderColumnsObject(DTName);

    $(document).ready(function () {
        var gaiSelected = [];

        oTableProjectItems = $('#' + DTName).dataTable({
            "bJQueryUI": true,
            "bRetrieve": true,
            "bDestroy": true,
            "bScrollCollapse": true,
            "sScrollX": "100%",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>',
            "aaSorting": [],
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "aoColumns": [
                { "bSearchable": false, "bSortable": false, aTargets: [0] },
                { "bSearchable": true, "bSortable": false, aTargets: [1] },
                { "bSearchable": true, "bSortable": false, aTargets: [2] },
                { "bSearchable": true, "bSortable": false, aTargets: [3] },
                { "bSearchable": true, "bSortable": false, aTargets: [4] },
                { "bSearchable": true, "bSortable": false, aTargets: [5] },
                { "bSearchable": true, "bSortable": false, aTargets: [6] },
                { "bSearchable": true, "bSortable": false, aTargets: [7] },
                { "bSearchable": true, "bSortable": false, aTargets: [8] },
                { "bSearchable": true, "bSortable": false, aTargets: [9] },
                { "bSearchable": true, "bSortable": false, aTargets: [10] },
                { "bSearchable": true, "bSortable": false, aTargets: [11] }                
            ],
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
               // if (!bIsFilter) {
                    $.ajax({
                        "url": '@Url.Content("~/Master/SaveGridState")',
                        "type": "POST",
                        data: { Data: JSON.stringify(oData), ListName: 'MaintenanceList' },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        "success": function (json) {
                            o = json;
                        }
                    });
               // }
                bIsFilter = false;
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'MaintenanceList' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            }
        });
        $('.DTTT_container').css('z-index', '-1');
    });


    $('#' + DTName + ' tbody tr').die('tap click');
    $('#deleteRows1').unbind("click");
    $('#Gobtn1').unbind("click");
    $('#clear_QLItem_filter').unbind("click");
    $('#PageNumber1').unbind("keydown");
    $('#btnModelYesInnerGrid').die('click');
    $('#pullDrillDown').die('click');
    $(".ColVis_MasterButton").hide();

    // To adjust the print block next to colvis button
    $('#btnblock').css({ 'margin-right': '45px' });

    $('#' + DTName + ' tbody tr').live('tap click', function () {
        $(this).toggleClass('row_selected');
        return false;
    });


    $('#' + DTName).on("click", "td", function (event) {
        event.preventDefault();
    });

    /* Add a click handler for the delete rows multiple rows */

    $('#deleteRows1').click(function () {

        /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
        if ($("body").hasClass('DTTT_Print')) {
            return false;
        }
        /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */


        var anSelected = fnGetSelected(oTableProjectItems);
        var stringIDs = "";
        if (anSelected.length == 0) {
            alert("Please select atleast one record to delete");
        }
        else {
            for (var i = 0; i <= anSelected.length - 1; i++) {
                //anSelected[0].cells[0].innerHTML
                stringIDs = stringIDs + $(anSelected[i]).find("#hdnID").val() + ",";
            }
            if (anSelected.length !== 0) {
                $('#Inner-Grid-basic-modal-content').modal();
                IsDeletePopupOpen = false;
            }
        }

    });

    $("#btnModelYesInnerGrid").live("click", function () {

        var anSelected = fnGetSelected(oTableProjectItems);
        var stringIDs = "";
        for (var i = 0; i <= anSelected.length - 1; i++) {
            stringIDs = stringIDs + $(anSelected[i]).find("#hdnID").val() + ",";
        }

        if (anSelected.length !== 0) {
            $.ajax({
                'url': deleteURL1,
                data: { ids: stringIDs },
                success: function (response) {
                    if (response == "ok") {
                        for (var i = 0; i <= anSelected.length - 1; i++) {
                            oTableProjectItems.fnDeleteRow(anSelected[i]);
                        }

                        if (anSelected.length > 0) {
                            $("#spanGlobalMessage").html('@ResCommon.RecordDeletedSuccessfully'.replace("{0}","(" + anSelected.length + ")"));
                        }
                        //$('div#target').fadeToggle();
                        //$("div#target").delay(2000).fadeOut(200);
                        showNotificationDialog();
                        //CallThisFunctionFromModel('success');
                        //oTableProjectItems.fnDraw();
                    }
                },
                error: function (response) {
                    // through errror message
                }
            });
            $.modal.impl.close();
        }
    });

    $('#PageNumber1').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#Gobtn1").click();
            return false;
        }
    });

    $("#Gobtn1").click(function () {
        var pval = $('#PageNumber1').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }
        if (pval == 0)
            return;
        $('#' + DTName).dataTable().fnPageChange(Number(pval - 1));
        $('#PageNumber1').val('');
    });

    /* global search function */
    function fnFilterGlobalPS() {
        //set filter only if more than 2 characters are pressed
        //if (typeof $("#InnerItem_filter") != 'undefined' && ($("#InnerItem_filter").val().length > 2 || $("#InnerItem_filter").val().length == 0)) {
        if (typeof $("#InnerItem_filter") != 'undefined') {
            bIsFilter = true;
            var searchtext = $("#InnerItem_filter").val().replace(/'/g, "''");

            $('#' + DTName + ' td').removeHighlight();

            $('#' + DTName).dataTable().fnFilter(
                            searchtext,
                            null,
                            false,
                            false
                        );


            if (searchtext.length > 0)
                $('#' + DTName + ' td').highlight($("#InnerItem_filter").val());
        }
    }


    ////Apply filter
    //$("#InnerItem_filter").keyup(function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    var index = $.inArray(code, NotAllowedCharCodes);
    //    if (code == 13) {
    //    }
    //    else {
    //        fnFilterGlobalPS();
    //    }
    //});

    ////Keydown event is required to handle ENTER KEY to work in IE
    //$("#InnerItem_filter").keydown(function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    if (code == 13) {
    //        fnFilterGlobalPS();
    //    }
    //});

    //Clear Filter
    $("#clear_QLItem_filter").click(function () {
        $("#InnerItem_filter").val('');
        fnFilterGlobalPS();
        $("#InnerItem_filter").focus();
        return false;
    });
    $(document).on("click", "#pullDrillDown", function () {

        var nTr = this.parentNode.parentNode;
        var i = $.inArray(nTr, anOpen);
        if (i === -1) {
            $(this).attr('src', sImageUrl1 + "drildown_close.jpg");
            $('#' + DTName).dataTable().fnOpen(nTr, fnFormatDetails($('#' + DTName).dataTable(), nTr), '');
            anOpen.push(nTr);
            $('#' + DTName).dataTable().fnDraw();
        }
        else {
            $(this).attr('src', sImageUrl1 + "drildown_open.jpg");
            $('#' + DTName).dataTable().fnClose(nTr);
            anOpen.splice(i, 1);
        }
    });

    //$('#pullDrillDown').live('click', function (event) {


    //});

    @*$("#ColumnSortableModalIM").dialog({
        autoOpen: false,
        modal: true,
        width: 500,
        title: '@eTurns.DTO.Resources.ResCommon.ReorderColumnPopupHeader',
        draggable: false,
        resizable: false,
        open: function () {
            GenerateColumnSortableIM();
            $("#ColumnSortableIM").sortable({ axis: "y", containment: "parent" });
        }
    });*@



    function fnFormatDetails(oTableProjectItems, nTr) {
        var sOut = '';
        var hdnID = $(nTr).find('#hdnID').val();
        $('#DivLoading').show();
        $.ajax({
            "url": '@Url.Content("~/Assets/MaintenanceItems")',
            data: { MaintenanceGUID: hdnID },
            "async": false,
            cache: false,
            "dataType": "text",
            "success": function (json) {
                sOut = json;
                $('#DivLoading').hide();
            },
            error: function (response) {
                //;
            }
        });
        return sOut;
    }
    _Common.setGloblaSearch('InnerItem_filter', 'AssetsToolsMaintenanceDetails', function (txtSearch) {        
        fnFilterGlobalPS();
    }, function (txtSearch, keycode) {        
        if (keycode == 13)
            fnFilterGlobalPS();
    });
    /* DATA TABLE GRID COMMON FUNCTIONS END */

    
    //reorder popup update button 
    function UpdateColumnOrder1(_ListName) {
        var oTableReorder = $("#" + DTName).dataTable();
        $.ajax({
            "url": '/Master/LoadGridState',
            data: { ListName: 'MaintenanceList' },
            cache: false,
            "dataType": "json",
            "success": function (json) {

                if (json.jsonData != '') {
                    o = JSON.parse(json.jsonData);
                    oTableReorder.fnSettings().oLoadedState = $.extend(true, {}, o);
                    //update the order of columns
                    var _Order = SortableArrayMaintanance($('#ColumnSortable1')); // $('#ColumnSortable').sortable("toArray");
                    var __Order = _Order.toString().split(",");

                    for (var i = 0; i < __Order.length; i++) {
                        __Order[i] = parseInt(__Order[i], 10);
                    }

                    oTableReorder.fnSettings().oLoadedState.ColReorder = __Order;

                    //update the visibility of columns
                    var _abVisCols = [];

                    for (i = 0, iLen = oTableReorder.fnSettings().aoColumns.length; i < iLen; i++) {
                        //var checked = $("#" + i + "_").is(":checked");
                        var checked = $('#ColumnSortable1').find('input.checkBox[id="' + i + '_"]').is(":checked");
                        _abVisCols.push(checked);
                    }

                    oTableReorder.fnSettings().oLoadedState.abVisCols = _abVisCols;

                    //update the state to the database
                    $.ajax({
                        "url": '/Master/SaveGridState',
                        "type": "POST",
                        //data: { Data: JSON.stringify(oTableReorder.fnSettings().oLoadedState), ListName: 'ToolList' },
                        data: { Data: JSON.stringify(oTableReorder.fnSettings().oLoadedState), ListName: 'MaintenanceList' },
                        "dataType": "json",
                        cache: false,
                        "success": function (json) {

                            o = json;

                            //refresh the page
                            // window.location.reload(true);
                            $("#ColumnSortableModal1").dialog("close");
                            callbackMaintenance();
                            //$('#CtabWrittenOffTool').empty();
                            //GetWrittenOffToolList();
                            ////$("#writtenOffToolTable").dataTable().fnDraw();
                        }
                    });


                }
            }
        });


    }


 

</script>
<script type="text/javascript">

    var vmaintenanceGUID = '';
    function fnCreateReqWOFrmMaintainance(maintenanceGUID) {
        vmaintenanceGUID = maintenanceGUID;
        $('#OdometerEntry').modal();
    }

    function fnCloseMaintenance(maintenanceGUID) {
        var result = confirm('Are you sure want to close this maintenance?');

        //
        if (result == true) {

            $.ajax({
                url: '@Url.Content("~/Assets/CloseMaintenance")',
                data: { 'MaintenanceGUID': maintenanceGUID },
                dataType: 'json',
                type: 'POST',
                async: false,
                cache: false,
                success: function (response) {
                    if (response.Status == "Ok") {
                        oTableProjectItems.fnDraw();
                        //alert('');
                    }
                },
                error: function (response) {
                    //
                    alert(response);
                }
            });

        }
        else {
            return false;
        }
    }


    function StartMaintenactClick() {

        if (!(parseFloat($("#txtOdometerEntry").val()) > 0)) {
            alert("Valid Odometer Entry is Mandatory.")
        }
        else {
            isDirtyForm = false;
            $.ajax({
                url: '@Url.Content("~/Master/CreateReqWOFrmMaintainance")',
                data: { 'MaintenanceGUID': vmaintenanceGUID, 'OdometerEntry': parseFloat($("#txtOdometerEntry").val()) },
                dataType: 'json',
                type: 'POST',
                async: false,
                cache: false,
                success: function (response) {
                    var url = '@Url.Action("RequisitionList", "Consume")';
                    url = url + '?fromMTN=' + 'yes' + '&ReqID=' + response.requisitionID;
                    window.location.href = url;
                }
            });
        }
    }


</script>

<div id="divWOLineItemHistory">
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#divWOLineItemHistory").dialog({
            autoOpen: false,
            modal: true,
            draggable: true,
            resizable: true,
            width: '95%',
            height: 720,
            title: 'Work Order List History',
            open: function () {
                $('#DivLoading').show();
                $("#divWOLineItemHistory").empty();
                $.get('/WorkOrder/WorkOrderLineItemsDetailsForReq', { GUID: $(this).data("cid") }, function (data) {
                    $("#divWOLineItemHistory").html(data);
                });
            },
            close: function () {
                $("#divWOLineItemHistory").empty();
            }
        });


    });

    function popupModel(id) {
        $('#divWOLineItemHistory').data("cid", id).dialog('open')
        return false;
    }
</script>

<div id="divRequisitionLineItemHistory">
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#divRequisitionLineItemHistory").dialog({
            autoOpen: false,
            modal: true,
            draggable: true,
            resizable: true,
            width: '95%',
            height: 720,
            title: 'Requisition History',
            open: function () {
                $('#DivLoading').show();
                $("#divRequisitionLineItemHistory").empty();
                $.get('/Consume/RequisitionEditMainatenance', { ID: $(this).data("cid") }, function (data) {
                    $("#divRequisitionLineItemHistory").html(data);
                });
            },
            close: function () {
                $("#divRequisitionLineItemHistory").empty();
            }
        });


        $("#txtOdometerEntry").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: 2
        });

    });

    function popupModelReq(id) {
        //$('#divRequisitionLineItemHistory').data("cid", id).dialog('open')
        var url = '@Url.Action("RequisitionList", "Consume")';
        url = url + '?fromMTN=' + 'yes' + '&ReqID=' + id;
        window.location.href = url;
        return false;
    }
</script>