@model eTurns.DTO.OrderMasterDTO
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
}
<div class="userHead">
    @using (Ajax.BeginForm("SaveOrder", "Order", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmOrderInHistory" }))
    {
        @Html.ValidationSummary(true)     
        if (Model.ID != 0)
        {
        <div class="infoBlock">
            <ul>
                <li>
                    <label for="RoomName">@Html.LabelFor(model => model.RoomName)
                    </label>
                    : <span>@(Model.RoomName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Created)
                    </label>
                    : <span>@(Model.ReceivedOnDateWeb)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.CreatedByName)
                    </label>
                    : <span>@(Model.CreatedByName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.LastUpdated)
                    </label>
                    : <span>@(Model.ReceivedOnDate)</span></li>
                <li style="border: none">
                    <label for="RoomName">
                        @Html.LabelFor(model => model.UpdatedByName)
                    </label>
                    : <span>@(Model.UpdatedByName)</span></li>
            </ul>
        </div>
        }
        <div style="clear: both; padding-top: 15px">
            <a id="ancHideShowContentInHistory" style="float: left; margin-top: 8px; margin-left: 10px">
                <img src="/Content/images/drildown_open.jpg" alt="" />
            </a>
            <div class="infoBlock" style="width: 95%; margin-left: 10px; background: none">
                <div id="CollapsedContentInHistory">
                    <ul>
                        <li style="border-right: none; padding: 0px">
                            <label for="label" style="width: 100px; float: left; padding: 1.3% 0;">
                                <em style="color: Red">*</em> @Html.LabelFor(model => model.OrderNumber)
                            </label>
                            @Html.TextBoxFor(model => model.OrderNumber, new { id = "txtOrderNumber", @class = "text-box", @style = "background:white", maxlength = 255 })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.OrderNumber)</span>
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 70px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.Supplier)
                            </label>
                            @Html.DropDownListFor(model => model.Supplier, new SelectList(ViewBag.SupplierList, "ID", "SupplierName", Model.Supplier), new { @class = "selectBox", @style = "width:120px" })
                            @Html.ValidationMessageFor(model => model.Supplier)
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 100px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.RequiredDate)
                            </label>
                            @Html.TextBoxFor(model => model.RequiredDate, new { @class = "text-box", id = "txtRequiredDate", @readonly = "readonly", @style = "background:white", maxlength = 128, @Value = Model.RequiredDate.ToString(eTurnsWeb.Helper.SessionHelper.RoomDateFormat) })
                            @Html.ValidationMessageFor(model => model.RequiredDate)
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 85px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.OrderStatus)
                            </label>
                            @Html.DropDownListFor(model => model.OrderStatus, new SelectList(ViewBag.OrderStatusList, "value", "Text", Model.OrderStatus), new { id = "ddlOrderStatus", @class = "selectBox", @style = "width:150px" })
                            @Html.ValidationMessageFor(model => model.OrderStatus)
                        </li>
                        <li style="border-right: none; padding: 0px">
                            @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                            @Html.HiddenFor(model => model.GUID)
                            @Html.HiddenFor(model => model.Created)
                            @Html.HiddenFor(model => model.LastUpdated)
                            @Html.HiddenFor(model => model.CreatedBy)
                            @Html.HiddenFor(model => model.LastUpdatedBy)
                            @Html.HiddenFor(model => model.CompanyID)
                            @Html.HiddenFor(model => model.Room)
                            @Html.HiddenFor(model => model.RoomName)
                            @Html.HiddenFor(model => model.CreatedByName)
                            @Html.HiddenFor(model => model.UpdatedByName)
                            @Html.HiddenFor(model => model.IsDeleted)
                            @Html.HiddenFor(model => model.IsArchived)
                            @Html.HiddenFor(model => model.IsRecordNotEditable)
                            @Html.HiddenFor(model => model.IsOnlyStatusUpdate)
                        </li>
                    </ul>
                </div>
            </div>
        </div> 
        
        <div id="ExpandedContentInHistory" style="display: none">
            <ul>
                <li style="border: none">
                    <div class="editorForm">
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Comment)
                                </div>
                                <div class="editor-field">
                                    @Html.TextAreaFor(model => model.Comment, new { @class = "text-box", maxlength = 1024 })
                                    @Html.ValidationMessageFor(model => model.Comment)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ReleaseNumber)
                                </div>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.ReleaseNumber)
                                    @Html.ValidationMessageFor(model => model.ReleaseNumber)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ShipVia)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.ShipVia, new SelectList(ViewBag.ShipViaList, "ID", "ShipVia", Model.ShipVia), new { id = "ddlShipVia", @class = "selectBox" })
                                    @Html.ValidationMessageFor(model => model.ShipVia)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.StagingID)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.StagingID, new SelectList(ViewBag.StagingList, "ID", "BinNumber", Model.StagingID), new { id = "ddlStaging", @class = "selectBox" })
                                    @Html.ValidationMessageFor(model => model.StagingID)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.CustomerName)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.CustomerGUID, new SelectList(ViewBag.CustomerList, "GUID", "Customer", Model.CustomerGUID), new { id = "ddlCustomerList", @class = "selectBox" })
                                    @Html.ValidationMessageFor(model => model.CustomerGUID)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.CheckBox("chkIsCustomerAddress", false)
                                </div>
                                <div class="editor-field">
                                    @Html.TextAreaFor(model => model.CustomerAddress, new { @class = "text-box", maxlength = 1024, @style = "display:none" })
                                    @Html.ValidationMessageFor(model => model.CustomerGUID)
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="editorForm padRightNone">
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.PackSlipNumber)
                                </div>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.PackSlipNumber)
                                    @Html.ValidationMessageFor(model => model.PackSlipNumber)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ShippingTrackNumber)
                                </div>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.ShippingTrackNumber)
                                    @Html.ValidationMessageFor(model => model.ShippingTrackNumber)
                                </div>
                            </li>
                            @Html.Partial("UDFLayout", new eTurns.DTO.ResOrder())
                            <li id="liReject" style="display: none;">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.RejectionReason)
                                </div>
                                <div class="editor-field">
                                    @Html.TextAreaFor(model => model.RejectionReason, new { @style = "-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px;behavior: url(/pie1.htc);background: #fff;border: 1px solid #dddddd;width: 34%;padding: 5px;" })
                                    @Html.ValidationMessageFor(model => model.RejectionReason)
                                </div>
                            </li>
                        </ul>
                    </div>
                </li>
            </ul>
        </div>
        
        <div class="editorForm" style="width: 98%">
            <ul>
                <li>
                    <div class="editor-label" style="width: 2%">
                        &nbsp;
                    </div>
                    <div class="BtnBlockform">
                        <input type="button" value="Close" id="btnCancelInHistory" class="CreateBtn" />
                    </div>
                </li>
            </ul>
        </div>
       
    }
</div>
<div id="ItemModel">
</div>
<div id="divOrderLineItemsHistory">
</div>
<script type="text/javascript">
    var HistoryID = '@Model.HistoryID';
    var OrderStatus = '@Model.OrderStatus';

    $('#ancHideShowContentInHistory').click(function () {
        if ($('#ExpandedContentInHistory').css('display') == 'none') {
            $('#ExpandedContentInHistory').css('display', '');
            $('#ancHideShowContentInHistory img').attr('src', '/Content/images/drildown_close.jpg');
        }
        else {
            $('#ExpandedContentInHistory').css('display', 'none');
            $('#ancHideShowContentInHistory img').attr('src', '/Content/images/drildown_open.jpg');
        }
    });


    $(document).ready(function () {

        $('#ExpandedContentInHistory').css('display', 'none');
        $('#ancHideShowContentInHistory').css('display', '');
        CallThisFunctionFromModel('success');


 

        if ('@Model.CustomerAddress'.length > 0) {
            $('#chkIsCustomerAddress').prop('checked', true);
            $('#chkIsCustomerAddress').change();
        }

    });

    function CallThisFunctionFromModel(msg) {
        if (msg == 'success') {
            $('#DivLoading').show();
            $('#divOrderLineItems').empty();
            var url = '@Url.Action("LoadOrderLineItemsHistory")'; // + '?orderID=' + OrderID;
            $.get(url, { 'historyID': HistoryID }, function (data) {
                $('#divOrderLineItemsHistory').html(data);
                $('#DivLoading').hide();
            });
        }
        else if (json.Status == 'fail') {
            alert(json.Message);
            return false;
        }
    }

    disableControls('frmOrderInHistory');
    $('#btnCancelInHistory').removeAttr('disabled');
    $('#btnCancelInHistory').unbind('click');
    $('#btnCancelInHistory').click(function (e) {
        $('#divOrderLineItemHistory').dialog('close');
    });
    
</script>
<script type="text/javascript">
     
</script>
