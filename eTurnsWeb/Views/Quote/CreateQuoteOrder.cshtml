@model IList<eTurns.DTO.OrderMasterDTO>
@{
    eTurns.DAL.SupplierMasterDAL suppDAL = new eTurns.DAL.SupplierMasterDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName);
    SupplierMasterDTO suppDTO = null;
    List<SelectListItem> orderStatusList = null;
    bool IsApprove = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.OrderApproval);
    bool isOrderUDF = new eTurns.DAL.UDFDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetNonDeletedUDFCountByUDFTableName("OrderMaster", eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID) > 0;
    string OrderAllowedFileExtension = eTurns.DTO.SiteSettingHelper.OrderAllowedFileExtension;
    //bool UDF1IsRequired = Html.GetUdfIsRequiredStatus("OrderMaster", "UDF1");
    //bool UDF2IsRequired = Html.GetUdfIsRequiredStatus("OrderMaster", "UDF2");
    //bool UDF3IsRequired = Html.GetUdfIsRequiredStatus("OrderMaster", "UDF3");
    //bool UDF4IsRequired = Html.GetUdfIsRequiredStatus("OrderMaster", "UDF4");
    //bool UDF5IsRequired = Html.GetUdfIsRequiredStatus("OrderMaster", "UDF5");
}
<table style="width: 100%" class="display" id="tableQuoteOrder">
    <thead>
        <tr>
            <th style="text-align: left;">
                <input type="checkbox" name="chkHeader" id="chkHeader" />
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResOrder.Supplier
            </th>
            <th style="text-align: left;width:11%;">
                @eTurns.DTO.ResOrder.OrderNumber
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResOrder.OrderStatus
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResOrder.ReleaseNumber
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResOrder.NoOfLineItems
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResOrder.Comment
            </th>
            <th style="text-align: left;width:8%;">
                @eTurns.DTO.ResOrder.RequiredDate
            </th>
            <th style="text-align: left;width:8%;">
                @eTurns.DTO.ResOrder.ShippingMethod
            </th>
            <th style="text-align: left;width:7%;">
                @eTurns.DTO.ResOrder.StagingName
            </th>
            <th style="text-align: left;width:7%;">
                @eTurns.DTO.ResOrder.Customer
            </th>
            <th style="text-align: left;width:7%;">
                @eTurns.DTO.ResOrder.ShippingVendor
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResOrder.ShippingTrackNumber
            </th>
            <th style="text-align: left;">
                @eTurns.DTO.ResOrder.SupplierAccountDetail
            </th>
            @if (isOrderUDF)
            {
            @Html.RenderColumnsHeaderByName("OrderMaster", typeof(eTurns.DTO.ResOrder))
            }
            <th>
                @ResCommon.FileAttachment
            </th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Count() > 0)
        {
            orderStatusList = ViewBag.OrderStatusList;
            string clasname = "";
            string suppIDs = string.Join(",", Model.Where(x => x.Supplier.GetValueOrDefault(0) > 0).Select(s => s.Supplier.GetValueOrDefault(0)).Distinct().ToArray());
            List<SupplierMasterDTO> lstSupplier = suppDAL.GetSupplierByIDsPlain(suppIDs, eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID);

            for (int i = 0; i < Model.Count(); i++)
            {
                suppDTO = lstSupplier.Where(x=>x.ID == Model[i].Supplier.GetValueOrDefault(0)).FirstOrDefault();
                if (suppDTO != null && orderStatusList != null && orderStatusList.Count > 0)
                {
                    if (suppDTO.IsSendtoVendor && orderStatusList.FindIndex(x => x.Value == "4") >= 0)
                    {
                        orderStatusList.RemoveAll(x => x.Value == "4");
                    }
                    else if (IsApprove && orderStatusList.FindIndex(x => x.Value == "4") < 0 && orderStatusList.FindIndex(x => x.Value == "3") >= 0)
                    {
                        orderStatusList.Add(new SelectListItem() { Text = ResOrder.GetOrderStatusText(OrderStatus.Transmitted.ToString()), Value = ((int)OrderStatus.Transmitted).ToString() });
                    }
                }
                if ((i + 1) % 2 == 0)
                {
                    clasname = "even";
                }
                else
                {
                    clasname = "odd";
                }
                <tr class="@clasname">
                    <td style="text-align: left;">
                        @Html.CheckBoxFor(m => Model[i].IsOrderSelected, new { @class = "check-box", @id = "chkOrder_" + i, @value = i })
                        @Html.HiddenFor(m => Model[i].Supplier, new { @id = "hdnSupplierId_" + i })
                        @Html.HiddenFor(m => Model[i].NoOfLineItems, new { @id = "hdnNoOfLineItems_" + i })
                        @Html.HiddenFor(m => Model[i].OrderLineItemsIds, new { @id = "hdnOrderLineItemsIds_" + i })
                        @Html.HiddenFor(m => Model[i].OrderLineItemUDF1, new { @id = "hdnOrderLineUDF1_" + i })
                        @Html.HiddenFor(m => Model[i].OrderLineItemUDF2, new { @id = "hdnOrderLineUDF2_" + i })
                        @Html.HiddenFor(m => Model[i].OrderLineItemUDF3, new { @id = "hdnOrderLineUDF3_" + i })
                        @Html.HiddenFor(m => Model[i].OrderLineItemUDF4, new { @id = "hdnOrderLineUDF4_" + i })
                        @Html.HiddenFor(m => Model[i].OrderLineItemUDF5, new { @id = "hdnOrderLineUDF5_" + i })
                        @Html.HiddenFor(m => Model[i].IsBlanketOrder, new { @id = "hdnIsBlanketOrder_" + i })
             
                    <td style="text-align: left;">
                        @*@Html.DisplayFor(m => Model[i].SupplierName)*@
                        @*<span id="spSupplierName" name="spSupplierName">@Model[i].SupplierName</span>*@
                        @if (ViewBag.DoGroupSupplierQuoteToOrder == true)
                        {
                            @Html.DropDownListFor(m => Model[i].Supplier, new SelectList(ViewBag.lstRoomSuppliers, "ID", "SupplierName", Model[i].Supplier), new { id = "ddlOrderSupplier_" + i, @class = "selectBox", @style = "width:120px;",@disabled = "disabled" })
                        }
                        else
                        {
                            @Html.DropDownListFor(m => Model[i].Supplier, new SelectList(ViewBag.lstRoomSuppliers, "ID", "SupplierName", Model[i].Supplier), new { id = "ddlOrderSupplier_" + i, @class = "selectBox", @style = "width:120px;" })
                        }
                    </td>
                    <td style="text-align: left;">
                        @if ((Model[i].AutoOrderNumber != null && Model[i].AutoOrderNumber.IsBlanketPO))
                        {
                            @Html.DropDownListFor(m => Model[i].BlanketOrderNumberID, new SelectList(Model[i].AutoOrderNumber.BlanketPOs, "ID", "BlanketPO", Model[i].BlanketOrderNumberID), new { @id = "ddlBlanketPO_" + i, @class = "selectBox", @style = "width:120px" })
                            @Html.TextBoxFor(m => Model[i].OrderNumber, new { id = "txtOrderNumber_" + i, @class = "text-box", @style = "background:white;display:none", maxlength = 22 })
                        }
                        else
                        {
                            @Html.DropDownListFor(m => Model[i].BlanketOrderNumberID, Enumerable.Empty<SelectListItem>(), new { @id = "ddlBlanketPO_" + i, @class = "selectBox", @style = "width:120px;display:none;" })
                            @Html.TextBoxFor(m => Model[i].OrderNumber, new { @class = "text-boxinner", @style = "width:100px;", @maxlength = 22, @id = "txtOrderNumber_" + i })
                        }

                    </td>
                    <td style="text-align: left;">
                        @*@Html.DropDownListFor(m => Model[i].OrderStatus, new SelectList(ViewBag.OrderStatusList, "value", "Text", Model[i].OrderStatus), new { id = "ddlOrderStatus_" + i, @class = "selectBox", @style = "width:120px" })*@
                        @Html.DropDownListFor(m => Model[i].OrderStatus, new SelectList(orderStatusList, "value", "Text", Model[i].OrderStatus), new { id = "ddlOrderStatus_" + i, @class = "selectBox", @style = "width:120px" })
                    </td>
                    <td style="text-align: left;" id="tdReleaseNo_@i">
                        <span id="ReleaseNumber_" + i>@Model[i].ReleaseNumber</span>
                        @*@Html.DisplayFor(m => Model[i].ReleaseNumber)*@
                    </td>
                    <td style="text-align: left;">
                        @Html.DisplayFor(m => Model[i].NoOfLineItems)
                    </td>
                    <td style="text-align: left;">
                        @Html.TextAreaFor(m => Model[i].Comment, new { @maxlength = 1024, @class = "text-boxinner", @style = "width:90%;", @cols = 20, @id = "txtComment_" + i })
                    </td>
                    <td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].RequiredDateString, new { @class = "text-boxinner", @style = "width:90%;", @id = "txtRequiredDate_" + i })
                    </td>
                    <td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].ShipViaName, new { @class = "AutoCompleteddl text-boxinner", @style = "width:90%;", @id = "txtShipViaName_" + i })
                    </td>
                    <td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].StagingName, new { @class = "AutoCompleteddl text-boxinner", @style = "width:90%;", @id = "txtStagingName_" + i })
                    </td>
                    <td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].CustomerName, new { @class = "AutoCompleteddl text-boxinner", @style = "width:90%;", @id = "txtCustomerName_" + i })
                    </td>
                    <td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].ShippingVendorName, new { @class = "AutoCompleteddl text-boxinner", @style = "width:90%;", @id = "txtVendorName_" + i })
                    </td>
                    <td style="text-align: left;">
                        @Html.TextBoxFor(m => Model[i].ShippingTrackNumber, new { @class = "text-boxinner", @style = "width:90%;", @id = "ShippingTrackNumber_" + i })
                    </td>
                    <td style="text-align: left;">
                        @Html.DropDownListFor(model => Model[i].SupplierAccountGuid, Enumerable.Empty<SelectListItem>(), new { @id = "ddlSupplierAccountt_" + i, @class = "selectBox", @style = "width:120px", autofocus = "autofocus" })
                        @Html.HiddenFor(model => Model[i].SupplierAccountGuid)
                    </td>
                    @if (isOrderUDF)
                    {
                    @Html.RenderColumnsArrayEditableObjectForDOMByName("OrderMaster", controlIDPostfix: "")
            }
        	<td>
            <input type='file' id="file_@Model[i].Supplier.ToString()" multiple />
            <span id="validFileList_file_@Model[i].Supplier.ToString()"></span>
        	</td>
        	</tr>
            }

        }
    </tbody>
</table>
<table style="width: 100%">
    <tr>
        <td>
            &nbsp;
        </td>
    </tr>
    <tr>
        <td style="text-align: right;">
            <input type="button" class="btnGeneral" value="@ResCommon.Save" id="btnSaveOrders" name="btnSaveOrders" />
            <input type="button" class="btnGeneral" value="@ResCommon.Cancel" id="btnCancel" name="btnCancel" />
        </td>
    </tr>
</table>
<script>
    $(document).ready(function () {
        var MsgInvalidFileSelected = '@ResWorkOrder.MsgInvalidFileSelected';
        var MsgvalidFileList = '@ResWorkOrder.MsgvalidFileList';
        var OrderAllowedFileExtension = '@OrderAllowedFileExtension';
        $("table#tableQuoteOrder tbody tr").each(function () {
            var currentTr = $(this);
            var ddlOrderSupplierValue = $(currentTr).find("select[id^='ddlOrderSupplier_']").val();
            var hdnSupplierId = $(currentTr).find("input[id^='hdnSupplierId_']").val();
            if (hdnSupplierId != ddlOrderSupplierValue) {
                $(currentTr).find("input[id^='hdnSupplierId_']").val(ddlOrderSupplierValue);
            }
            setSupplierAccountBySupplierID($(this));
        });

        $("#tableQuoteOrder").off("change", "[id^='ddlOrderSupplier']");
        $('#tableQuoteOrder').on('change', "[id^='ddlOrderSupplier']", function (e) {
            $(this).off('focus');
            var curRow = $(this).parent().parent();

            $(curRow).find("input[id^='hdnSupplierId_']").val($(this).val());

            var txtOrderNumber = $(curRow).find("input[type='text'][id^='txtOrderNumber_']");
            var OrderNumber = $(curRow).find("input[type='text'][id^='txtOrderNumber_']").val();

            var ReleaseNumber = $(curRow).find("[id^='ReleaseNumber_']");
            var ReleaseNumberValue = $(curRow).find("[id^='ReleaseNumber_']").val();

            var txtRequiredDate = $(curRow).find("[id^='txtRequiredDate_']");
            var RequiredDate = $(curRow).find("[id^='txtRequiredDate_']").val();

            var ddlOrderStatus = $(curRow).find("[id^='ddlOrderStatus_']");
            var ddlBlanketPO = $(curRow).find("[id^='ddlBlanketPO_']");
            var spId = $(this).val();

            if ($(this).val() != null && $(this).val() != "") {
                $('#DivLoading').show();
                $.ajax({
                    url: '@Url.Action("GetOrderDetailsBySupplier", "Quote")',
                    type: 'POST',
                    dataType: 'json',
                    data: "{SupplierID: '" + $(this).val() + "'}",
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        setSupplierAccountBySupplierID($(curRow));
                        $('#DivLoading').hide();
                        //if (result.OrderNumber != null
                        //    && result.OrderNumber != "") {
                        if (result.IsBlanketOrder == true)
                        {
                            ddlBlanketPO.show();
                            txtOrderNumber.hide().removeClass('text-boxinner');
                            $(curRow).find("input[type='hidden'][id^='hdnIsBlanketOrder']").val("True");
                            if (result.AutoOrderNumber != null) {
                                $(ddlBlanketPO).empty();
                                for (var i = 0; i < result.AutoOrderNumber.BlanketPOs.length; i++) { //"ID", "BlanketPO"
                                    var opt = new Option(result.AutoOrderNumber.BlanketPOs[i].BlanketPO, result.AutoOrderNumber.BlanketPOs[i].ID);
                                    $(ddlBlanketPO).append(opt);
                                }
                            }
                        }
                        else
                        {
                            txtOrderNumber.show().addClass('text-boxinner').css('width','100px');
                            ddlBlanketPO.hide();
                            $(curRow).find("input[type='hidden'][id^='hdnIsBlanketOrder']").val("False");
                            if (OrderNumber != result.OrderNumber) {
                                $(txtOrderNumber).val(result.OrderNumber);
                            }
                        }
                            
                        //}
                        if (result.ReleaseNo != null
                            && result.ReleaseNo != "") {
                            if (ReleaseNumberValue != result.ReleaseNo) {
                                $(ReleaseNumber).text(result.ReleaseNo);
                            }
                        }
                        if (result.OrderStatusList != null) {
                            $(ddlOrderStatus).empty();
                            for (var i = 0; i < result.OrderStatusList.length; i++) {
                                var opt = new Option(result.OrderStatusList[i].Text, result.OrderStatusList[i].Value);
                                $(ddlOrderStatus).append(opt);
                            }
                        }
                        if (result.SelectedOrderStatus != null
                            && result.SelectedOrderStatus != "") {
                            $(ddlOrderStatus).val(result.SelectedOrderStatus);
                        }
                        if (result.RequiredDate != null
                            && result.RequiredDate != "") {
                            if (RequiredDate != result.RequiredDate) {
                                $(txtRequiredDate).val(result.RequiredDate);
                            }
                        }
                    },
                    error: function (request, status, error) {
                    }
                });
            }
        });

        function setSupplierAccountBySupplierID(currentTr) {
            var supplierId = $(currentTr).find("input[id^='hdnSupplierId_']").val();
            $(currentTr).find("select[id^='ddlSupplierAccountt_']").empty();
            $(currentTr).find("select[id^='ddlSupplierAccountt_']").html('');
            if (supplierId != '' && supplierId != null) {
                $.ajax({
                    url: "/Order/ShowData",
                    data: { "SupplierID": supplierId },
                    type: "Get",
                    async: false,
                    success: function (data) {
                        for (var i = 0; i < data.length; i++) {
                            var opt = new Option(data[i].AccountNumnerMerge, data[i].GUID);
                            $(currentTr).find("select[id^='ddlSupplierAccountt_']").append(opt);

                        }
                        $.ajax({
                            url: "/Order/GetDefaultAccount",
                            data: { "SupplierID": supplierId },
                            type: "Get",
                            async: false,
                            success: function (data) {
                                $(currentTr).find("select[id^='ddlSupplierAccountt_']").val(data);

                            }
                        });

                    }
                });
            }
        }

        UDFfillEditableOptionsForGridTrnsAndOrd();

        $("#dvCreteQuoteToOrder").on("change", "select[id^='ddlBlanketPO']", function () {
            if (!isNaN(parseInt($(this).val())) && parseInt($(this).val()) > 0) {
                $('#DivLoading').show();
                var ddlBlanketPOID = $(this).attr('id');
                var rawNumber = ddlBlanketPOID.replace('ddlBlanketPO_', '');
                var orderNumber = $("#" + ddlBlanketPOID + ' option:selected').text();
                
                $.get("/Order/GetOrderReleaseNumberForCart", { 'OrderNumber': orderNumber, 'OrderType':  1 }, function (data) {
                    if (data.Success = "True") {
                        $('#tdReleaseNo_' + rawNumber).text(data.ReleaseNumber);
                    }
                    $('#DivLoading').hide();
                });
            }
            else {
                var ddlBlanketPOID = $(this).attr('id');
                var rawNumber = ddlBlanketPOID.replace('ddlBlanketPO_', '');
                $('#tdReleaseNo_' + rawNumber).text("");
                $('#DivLoading').hide();
                return false;
            }
        });

        $("table#tableQuoteOrder input[type='file']").change(function () {
            var strValidationMessage = "";
            $(this).parent().find("#validFileList_" + $(this).attr("id")).empty();
            var totalfiles = document.getElementById($(this).attr("id")).files.length;
            deleteFromArray(parseInt($(this).attr("id").split("_")[1]));
            //get filename from control
            //$($((document.getElementById("validFileList_252492"))).find("label"))
            for (var i = 0; i < totalfiles; i++) {
                var IsValidFile = true;
                var fileExt = document.getElementById($(this).attr("id")).files[i].name;
                fileExt = fileExt.substring(fileExt.lastIndexOf('.'));
                if (OrderAllowedFileExtension.indexOf(fileExt.toLowerCase()) <= -1) {
                    IsValidFile = false;
                    strValidationMessage = strValidationMessage + document.getElementById($(this).attr("id")).files[i].name + MsgInvalidFileSelected;
                } else {
                    if ($(this).parent().find("#validFileList_" + $(this).attr("id")).length > 0) {
                        var deletedID = "delete_" + $(this).attr("id");
                        $(this).parent().find("#validFileList_" + $(this).attr("id")).append("<label>" + document.getElementById($(this).attr("id")).files[i].name + "</label><image class='ordertoquotedelete' data-id=" + $(this).attr("id") +" data-filename=" + document.getElementById($(this).attr("id")).files[i].name+" id=" + deletedID + " src= '@Url.Content("/Content/images/delete.png")' alt='Delete'/>");
                       }
                }
            }
            if (strValidationMessage != "") {
                alert(strValidationMessage + MsgvalidFileList.replace("{0}", OrderAllowedFileExtension.toString()));
                $(this).attr("id").value = null;
            }
        });

        $("#dvCreteQuoteToOrder").on("click", ".ordertoquotedelete", function () {
            var ID = $(this).attr("data-id");
            if ($(this).attr("data-id").indexOf("_")) {
                var dataID = $(this).attr("data-id").split("_")[1].length;
                if (dataID > 0) {
                    ID = parseInt($(this).attr("data-id").split("_")[1]);
                }
            }
            var FILENAME = $(this).attr("data-filename");
            var isavailable = removedFileListName.filter(function (item) {
                return item.id == ID && item.fileName === FILENAME
            });
            if (isavailable.length == 0) {
                removedFileListName.push({
                    id: ID,
                    fileName: FILENAME
                });
            }
            $(this).prev().remove();
            $(this).remove();
        });

        @*$("#dvCreteQuoteToOrder").on("click", "#btnCancel", function () {
        //$("#dvCreteQuoteToOrder").empty();
        $("#dvCreteQuoteToOrder").dialog("close");
    });

        $("#btnModelYesCartAction").click(function () {
            var btnSave = $(this);
            closeModal();
            $('#DivLoading').show();
            var orderHeaders = new Array();
            var validationToken = true;
            if ($("#dvCreteQuoteToOrder").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").length > 0) {

                $("#dvCreteQuoteToOrder").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").each(function (indx, curchk) {
                    if ($(curRow).find("select[id^='ddlOrderStatus']").val() == 2) {

                    }
                    var vvUDF1 = '', vvUDF2 = '', vvUDF3 = '', vvUDF4 = '', vvUDF5 = '';
                    var curRow = $(curchk).parent().parent();

                    /// save UDF options for the editable dropdown start ////
                    if ($(curRow).find('.udf-editable-dropdownbox').length > 0) {
                        $(curRow).find('.udf-editable-dropdownbox').each(function () {
                            var _UDFID = $(this).prev().val();
                            var _UDFOption = $(this).val();
                            var _UDFColumnName = $(this).prop("name");
                            var actionURL;
                            var params;
                            var udftable = '';
                            if ($("input#UDFTableName").length > 0) {
                                udftable = $("input#UDFTableName").val();
                            }
                            if (_UDFID > 0) {
                                //Add Mode  - UDFOption
                                actionURL = '/UDF/InsertUDFOption';
                                params = { UDFID: _UDFID, UDFOption: _UDFOption, UDFTableName: udftable, UDFColumnName: _UDFColumnName }
                                $.ajax({
                                    'url': actionURL,
                                    data: params,
                                    success: function (response) {
                                    }
                                });
                            }
                        });
                    }
                    /// save UDF options for the editable dropdown end ////

                    var supplierId = $(curRow).find("input[type='hidden'][id^='hdnSupplierId']").val();
                    var lineItems = $(curRow).find("input[type='hidden'][id^='hdnNoOfLineItems']").val();
                    var orderLineItemsIds = $(curRow).find("input[type='hidden'][id^='hdnOrderLineItemsIds']").val();
                    var orderNumber = $(curRow).find("input[type='text'][id^='txtOrderNumber']").val();
                    var suplierName = $(curRow).find("select[id^='ddlOrderSupplier'] option:selected").text();
                    var orderStatus = $(curRow).find("select[id^='ddlOrderStatus']").val();
                    var comments = $(curRow).find("textarea[id^='txtComment']").val();
                    var requiredDate = $(curRow).find("input[type='text'][id^='txtRequiredDate']").val();
                    var shipViaName = $(curRow).find("input[type='text'][id^='txtShipViaName']").val();
                    var stagingName = $(curRow).find("input[type='text'][id^='txtStagingName']").val();
                    var customerName = $(curRow).find("input[type='text'][id^='txtCustomerName']").val();
                    var VendorName = $(curRow).find("input[type='text'][id^='txtVendorName']").val();
                    var ShippingTrackNumber = $(curRow).find("input[type='text'][id^='ShippingTrackNumber']").val();
                    var SupplierAccountGuid = $(curRow).find("select[id^='ddlSupplierAccountt_']").val();

                    var orderLineItemsUDF1 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF1']").val();
                    var orderLineItemsUDF2 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF2']").val();
                    var orderLineItemsUDF3 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF3']").val();
                    var orderLineItemsUDF4 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF4']").val();
                    var orderLineItemsUDF5 = $(curRow).find("input[type='hidden'][id^='hdnOrderLineUDF5']").val();

                    if ($(curRow).find('#UDF1').length > 0) {
                        if ($(curRow).find('#UDF1').attr("class") == 'selectBox') {
                            vvUDF1 = $(curRow).find('#UDF1 option:selected').text();
                        }
                        else {
                            vvUDF1 = $(curRow).find('#UDF1').val();
                        }
                    }

                    if ($(curRow).find('#UDF2').length > 0) {
                        if ($(curRow).find('#UDF2').attr("class") == 'selectBox') {
                            vvUDF2 = $(curRow).find('#UDF2 option:selected').text();
                        }
                        else {
                            vvUDF2 = $(curRow).find('#UDF2').val();
                        }
                    }

                    if ($(curRow).find('#UDF3').length > 0) {
                        if ($(curRow).find('#UDF3').attr("class") == 'selectBox') {
                            vvUDF3 = $(curRow).find('#UDF3 option:selected').text();
                        }
                        else {
                            vvUDF3 = $(curRow).find('#UDF3').val();
                        }
                    }

                    if ($(curRow).find('#UDF4').length > 0) {
                        if ($(curRow).find('#UDF4').attr("class") == 'selectBox') {
                            vvUDF4 = $(curRow).find('#UDF4 option:selected').text();
                        }
                        else {
                            vvUDF4 = $(curRow).find('#UDF4').val();
                        }
                    }

                    if ($(curRow).find('#UDF5').length > 0) {
                        if ($(curRow).find('#UDF5').attr("class") == 'selectBox') {
                            vvUDF5 = $(curRow).find('#UDF5 option:selected').text();
                        }
                        else {
                            vvUDF5 = $(curRow).find('#UDF5').val();
                        }
                    }

                    orderHeaders.push({
                        ID: 0, OrderNumber: orderNumber, Supplier: supplierId, Comment: comments, RequiredDateString: requiredDate, ShipViaName: shipViaName,
                        StagingName: stagingName, CustomerName: customerName, ShippingVendorName: VendorName, ShippingTrackNumber: ShippingTrackNumber,
                        OrderLineItemsIds: orderLineItemsIds, OrderStatus: orderStatus, IsOnlyFromUI: true, SupplierAccountGuid: SupplierAccountGuid,
                        OrderLineItemUDF1: orderLineItemsUDF1, OrderLineItemUDF2: orderLineItemsUDF2, OrderLineItemUDF3: orderLineItemsUDF3,
                        OrderLineItemUDF4: orderLineItemsUDF4, OrderLineItemUDF5: orderLineItemsUDF5,
                        UDF1: vvUDF1, UDF2: vvUDF2, UDF3: vvUDF3, UDF4: vvUDF4, UDF5: vvUDF5,
                        SupplierName: suplierName
                    });

                    if ($.trim(orderNumber) == "") {
                        $(curRow).css("background-color", "#FFA17F");
                        if (validationToken == true) {
                            validationToken = false;
                        }
                    }
                });

                if (validationToken == true)
                {
                    var quoteGuid = '@ViewBag.QuoteGuid';

                    var dataToSend = JSON.stringify({ "lstOrders": orderHeaders, "QuoteGuid": quoteGuid });
                    //var dataToSend = JSON.stringify({ "lstOrders": orderHeaders, "QuoteGuid": $('select#ddlQuotes').val() });
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("CreateOrdersfromQuoteItems", "Quote")',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: dataToSend, //{ "lstOrders": orderHeaders, QuoteGuid: $('select#ddlQuotes').val() },
                        success: function (retdt) {
                            $.modal.close();
                            $('#DivLoading').hide();
                            if (retdt.Status == "ok") {
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                $("#spanGlobalMessage").text(retdt.Message);
                                $('div#target').css("z-index", 100000);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');

                                //RefressFilterCart("CartItemList");
                                oTable.fnDraw();
                                //$("#dvCreteQuoteToOrder").empty();
                                $("#dvCreteQuoteToOrder").dialog("close");
                                if (typeof (CallBackAfterOrderCreate) != "undefined" && typeof (CallBackAfterOrderCreate) == "function")
                                {
                                    CallBackAfterOrderCreate();
                                }
                            }
                            else {
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime + 3000).fadeOut(FadeOutTime + 1000);
                                $("#spanGlobalMessage").html(retdt.Message);
                                $('div#target').css("z-index", 100000);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('errorIcon');
                            }
                        },
                        error: function (err) {
                            alert("There is some Error");
                        }
                    });
                }
                else {
                    $('div#target').fadeToggle();
                    $('#DivLoading').hide();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $('div#target').css("z-index", 100000);
                    $("#spanGlobalMessage").text("Correct error(s) to proceed further");
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                }
            }
        });

        $("#dvCreteQuoteToOrder").on("focus", "input[id^='txtRequiredDate']", function () {
            $(this).datepicker(
                {
                    dateFormat: RoomDateJSFormat,
                    showButtonPanel: true,
                    clearText: 'Clear',
                    onClose: function () {
                        this.focus();
                    }
                });

        });

        //// Order Save start ///
        $("#dvCreteQuoteToOrder").off('click', '#btnSaveOrders');
        $("#dvCreteQuoteToOrder").on("click", "#btnSaveOrders", function () {
            var validationToken = true;
            var errMsg = '';
            var vSupplierName = '';
            var orderHeaders = new Array();
            var orderSelected = $("#dvCreteQuoteToOrder").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").length;
            if (orderSelected > 0) {
                $("#dvCreteQuoteToOrder").find("table.display").find("input[type='checkbox'][id^='chkOrder']:checked").each(function (indx, curchk) {
                    var vUDF1 = '', vUDF2 = '', vUDF3 = '', vUDF4 = '', vUDF5 = '';
                    var curRow = $(curchk).parent().parent();
                    var supplierId = $(curRow).find("input[type='hidden'][id^='hdnSupplierId']").val();
                    var lineItems = $(curRow).find("input[type='hidden'][id^='hdnNoOfLineItems']").val();
                    var orderLineItemsIds = $(curRow).find("input[type='hidden'][id^='hdnOrderLineItemsIds']").val();
                    var orderNumber = $(curRow).find("input[type='text'][id^='txtOrderNumber']").val();
                    var orderStatus = $(curRow).find("select[id^='ddlOrderStatus']").val();
                    var comments = $(curRow).find("textarea[id^='txtComment']").val();
                    var requiredDate = $(curRow).find("input[type='text'][id^='txtRequiredDate']").val();
                    var shipViaName = $(curRow).find("input[type='text'][id^='txtShipViaName']").val();
                    var stagingName = $(curRow).find("input[type='text'][id^='txtStagingName']").val();
                    var customerName = $(curRow).find("input[type='text'][id^='txtCustomerName']").val();
                    var VendorName = $(curRow).find("input[type='text'][id^='txtVendorName']").val();
                    var ShippingTrackNumber = $(curRow).find("input[type='text'][id^='ShippingTrackNumber']").val();
                    var SupplierAccountGuid = $(curRow).find("select[id^='ddlSupplierAccountt_']").val();
                    vSupplierName = $(curRow).find('#ddlOrderSupplier').text();

                    if ($(curRow).find('#UDF1').length > 0) {
                        if ($(curRow).find('#UDF1').attr("class") == 'selectBox') {
                            vUDF1 = $(curRow).find('#UDF1 option:selected').text();
                        }
                        else {
                            vUDF1 = $(curRow).find('#UDF1').val();
                        }
                    }

                    if ($(curRow).find('#UDF2').length > 0) {
                        if ($(curRow).find('#UDF2').attr("class") == 'selectBox') {
                            vUDF2 = $(curRow).find('#UDF2 option:selected').text();
                        }
                        else {
                            vUDF2 = $(curRow).find('#UDF2').val();
                        }
                    }

                    if ($(curRow).find('#UDF3').length > 0) {
                        if ($(curRow).find('#UDF3').attr("class") == 'selectBox') {
                            vUDF3 = $(curRow).find('#UDF3 option:selected').text();
                        }
                        else {
                            vUDF3 = $(curRow).find('#UDF3').val();
                        }
                    }

                    if ($(curRow).find('#UDF4').length > 0) {
                        if ($(curRow).find('#UDF4').attr("class") == 'selectBox') {
                            vUDF4 = $(curRow).find('#UDF4 option:selected').text();
                        }
                        else {
                            vUDF4 = $(curRow).find('#UDF4').val();
                        }
                    }

                    if ($(curRow).find('#UDF5').length > 0) {
                        if ($(curRow).find('#UDF5').attr("class") == 'selectBox') {
                            vUDF5 = $(curRow).find('#UDF5 option:selected').text();
                        }
                        else {
                            vUDF5 = $(curRow).find('#UDF5').val();
                        }
                    }

                    var udfFlag = 0;
                    var udfReqMsg = '';
                    if ($.trim(vUDF1) == "" && '@UDF1IsRequired' == 'True') {
                        udfReqMsg += ' @ResOrder.UDF1' + ",";
                        udfFlag++;
                    }
                    if ($.trim(vUDF2) == "" && '@UDF2IsRequired' == 'True') {
                        udfReqMsg += ' @ResOrder.UDF2' + ",";
                        udfFlag++;
                    }
                    if ($.trim(vUDF3) == "" && '@UDF3IsRequired' == 'True') {
                        udfReqMsg += ' @ResOrder.UDF3' + ",";
                        udfFlag++;
                    }
                    if ($.trim(vUDF4) == "" && '@UDF4IsRequired' == 'True') {
                        udfReqMsg += ' @ResOrder.UDF4' + ",";
                        udfFlag++;
                    }
                    if ($.trim(vUDF5) == "" && '@UDF5IsRequired' == 'True') {
                        udfReqMsg += ' @ResOrder.UDF5' + ",";
                        udfFlag++;
                    }

                    if ($.trim(udfReqMsg) != '') {
                        errMsg += udfReqMsg.slice(0, -1) + ' ' + "is Required";
                    }
                    orderHeaders.push({
                        ID: 0, OrderNumber: orderNumber,
                        Supplier: supplierId,
                        Comment: comments,
                        RequiredDate: requiredDate, ShipViaName: shipViaName,
                        StagingName: stagingName, CustomerName: customerName, ShippingVendorName: VendorName,
                        ShippingTrackNumber: ShippingTrackNumber, OrderLineItemsIds: orderLineItemsIds,
                        OrderStatus: orderStatus, SupplierAccountGuid: SupplierAccountGuid,
                        UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5
                    });

                    if ($.trim(orderNumber) == "") {
                        $(curRow).css("background-color", "#FFA17F");
                        if (validationToken == true) {
                            validationToken = false;
                            errMsg += '@ResOrder.OrderNumber' + " is required";
                        }
                    }
                    else {
                        $(curRow).css("background-color", "");
                    }
                    if ($.trim(errMsg) != "" && udfFlag > 0) {
                        $(curRow).css("background-color", "#FFA17F");
                        if (validationToken == true) {
                            validationToken = false;
                        }
                    }
                    else {
                        $(curRow).css("background-color", "");
                    }
                });
                if (validationToken == true) {
                    $('#basic-modal-content-OrderAction').find("#ptextcart").text(orderSelected + " Order(s) will be created.");
                    $('#basic-modal-content-OrderAction').modal();
                    //$('#basic-modal-content-OrderAction').css("z-index", 100001);
                    $('#simplemodal-container').css("z-index", 100001);
                    //
                    IsDeletePopupOpen = true;
                }
                else {
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $('div#target').css("z-index", 100000);
                    $("#spanGlobalMessage").text(vSupplierName + ' ' + errMsg);
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                }
            }
            else {
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                $('div#target').css("z-index", 100000);
                $("#spanGlobalMessage").text("Please select order to create");
                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');

            }
        });
        /// Order Save End ///*@

    });
</script>