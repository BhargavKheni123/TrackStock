@model eTurns.DTO.ProjectMasterDTO
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
}
<div class="userHead">
    @{             
        bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.WorkOrders, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
        bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.WorkOrders, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    }
    @using (Ajax.BeginForm("ProjectSave", "Master", new AjaxOptions { HttpMethod = "Post", LoadingElementId = "DivLoading", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmProject" }))
    {        
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        if (Model.ID != 0)
        {        
        <div class="infoBlock">
            <ul>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.RoomName)
                    </label>
                    : <span>@(Model.RoomName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Created)
                    </label>
                    : <span>@(Model.ReceivedOnWebDate)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.CreatedByName)
                    </label>
                    : <span>@(Model.CreatedByName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Updated)
                    </label>
                    : <span>@(Model.ReceivedOnDate)</span></li>
                <li style="border: none">
                    <label for="RoomName">
                        @Html.LabelFor(model => model.UpdatedByName)
                    </label>
                    : <span>@(Model.UpdatedByName)</span></li>
            </ul>
        </div>
        } 
        
        <div class="mainForm">
            <div class="editorForm">
                <ul>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ProjectSpendName)<em> *</em>
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.ProjectSpendName, new { id = "ProjectSpendName", @class = "text-box", maxlength = 200 })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.ProjectSpendName)</span>
                            @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                            @Html.HiddenFor(model => model.GUID)
                            @Html.HiddenFor(model => model.Created)
                            @Html.HiddenFor(model => model.Updated)
                            @Html.HiddenFor(model => model.CreatedBy)
                            @Html.HiddenFor(model => model.LastUpdatedBy)
                            @Html.HiddenFor(model => model.CompanyID)
                            @Html.HiddenFor(model => model.Room)
                            @Html.HiddenFor(model => model.RoomName)
                            @Html.HiddenFor(model => model.CreatedByName)
                            @Html.HiddenFor(model => model.UpdatedByName)
                            @Html.HiddenFor(model => model.IsDeleted)
                            @Html.HiddenFor(model => model.IsArchived)
                            @Html.HiddenFor(model => model.ReceivedOn)
                            @Html.HiddenFor(model => model.ReceivedOnWeb)
                            @Html.HiddenFor(model => model.AddedFrom)
                            @Html.HiddenFor(model => model.EditedFrom)
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Description)
                        </div>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Description, new { id = "txtDescription", @class = "text-box", maxlength = 1024 })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Description)</span>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.DollarLimitAmount)<em> *</em>
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.DollarLimitAmount, new { id = "txtDollarLimitAmount", @class = "numericinput", @name = "costdata", maxlength = 10 })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.DollarLimitAmount)</span>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.DollarUsedAmount)
                        </div>
                        <div class="editor-field">
                            @Html.TextBox("txtDollarUsedAmount", Model.DollarUsedAmount, new { @disabled = "disabled", @class = "text-box numericinput", @style = "background-color:silver;" })
                            @Html.HiddenFor(model => model.DollarUsedAmount)
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.TrackAllUsageAgainstThis)
                        </div>
                        <div class="editor-field">
                            @Html.CheckBoxFor(model => model.TrackAllUsageAgainstThis, new { id = "chkTrackAllUsageAgainstThis", @class = "check-box" })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.TrackAllUsageAgainstThis)</span>
                        </div>
                    </li>
                    @if (Model.ID > 0)
                    {
                        if (ViewBag.AllowCloseProjectSpent == "1")
                        {
                        <li>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.IsClosed)
                            </div>
                            <div class="editor-field">
                                @*  @Html.DropDownListFor(model => model.IsClosed, ViewData["list"] as SelectList, new { id = "Closed", @class = "selectBox" })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.IsClosed)</span>*@
                                @Html.CheckBoxFor(model => model.IsClosed, new { @class = "check-box" })
                            </div>
                        </li>    
                        }
                        else
                        {
                        <li>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.IsClosed)
                            </div>
                            <div class="editor-field">
                                @(Model.IsClosed != true ? "No" : "Yes")
                            </div>
                        </li>
                        }
                    }
                    <li>
                        <div class="editor-label">
                            &nbsp;
                        </div>
                        <div class="BtnBlockform">
                            <input type="button" value="Close" id="btnCancelInHistory" class="CreateBtn" />
                        </div>
                    </li>
                </ul>
            </div>
            <div class="editorForm padRightNone">
                <ul>
                    @Html.Partial("UDFLayout", new eTurns.DTO.ResProjectMaster())
                </ul>
            </div>
        </div>     

    }
</div>
<div id="WOLineItemsHistory">
</div>
<div id="ItemModelTemp">
</div>
<script type="text/javascript">
    var HistoryID = '@Model.HistoryID';
    $(document).ready(function () {
        CallThisFunctionFromModel('success');
    });

    function CallThisFunctionFromModel(msg) {
        if (msg == 'success') {
            $('#DivLoading').show();
            $('#WOLineItemsHistory').empty();
            var url = '@Url.Action("LoadProjectSpendLineItemsHistory")'; // + '?orderID=' + OrderID;
            $.get(url, { 'historyID': HistoryID }, function (data) {
                $('#WOLineItemsHistory').html(data);
                $('#DivLoading').hide();
            });
        }
        else if (json.Status == 'fail') {
            alert(json.Message);
            return false;
        }
    }

    disableControls('frmProject'); 
    $('#btnCancelInHistory').removeAttr('disabled');
    $('#btnCancelInHistory').unbind('click');
    $('#btnCancelInHistory').click(function (e) {
        //$(".ui-dialog-titlebar-close").click();
        $('#divWOLineItemHistory').dialog('close');
        $('#HistoryText').val('');
        $('#HistoryTable').dataTable().fnFilter('', null, false, false);
    });
    
</script>