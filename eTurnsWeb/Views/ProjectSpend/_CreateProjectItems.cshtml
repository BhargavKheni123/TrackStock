@model IEnumerable<eTurns.DTO.ProjectSpendItemsDTO>
@{
    GridHeaderSettings settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplaySaveButton = true, DisplayUDFButton = false, UDFSetupFor = "", DisplaySettings = false, DisplayColumnSetupButton = true, DisplayContextMenu = false, DisplayPrintBlock = false, DisplayDeleteButton = true, DataTableName = "ProjectItemsTable" + ViewBag.ProjectGUID };
    var settings1 = new GridHeaderSettings() { DisplaySaveButton = false, DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "ProjectItemsList" };
    string costformat = "N";
    string qtyformat = "N";
    //if (eTurnsWeb.Helper.SessionHelper.CompanyConfig != null)
    //{
    //    costformat = "N" + eTurnsWeb.Helper.SessionHelper.CompanyConfig.CostDecimalPoints.GetValueOrDefault(0).ToString();
    //    qtyformat = "N" + eTurnsWeb.Helper.SessionHelper.CompanyConfig.QuantityDecimalPoints.GetValueOrDefault(0).ToString();
    //}
    if (!string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.CurrencyDecimalDigits))
    {
        costformat = "N" + eTurnsWeb.Helper.SessionHelper.CurrencyDecimalDigits;
    }
    if (!string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits))
    {
        qtyformat = "N" + eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits;
    }
    bool isCost = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.HideCostMarkUpSellPrice);
}
<div class="userListingWrapper">
    <div class="userListBlock">
        <div id="tab7" class="tabContener" style="width: 99.5%">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search</span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="InnerItem_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_QLItem_filter" /></a>
                    </div>
                </div>
                <input type="button" id="btnDiv" value="Div" style="visibility: hidden" />
            </div>
            @Html.QuickListItemsGridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.ProjectMaster)
            @Html.GridChildGridTopHeader(settings1);
            <div class="userContentInnerGrid" style="width: 99% !important; margin-left: 5px !important;
                float: left;">
                <table id="ProjectItemsTable@(ViewBag.ProjectGUID)" class="display">
                    <thead>
                        <tr>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.RowNo
                            </th>
                            <th>
                                @eTurns.DTO.ResProjectSpendItems.ID
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ItemNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Description
                            </th>
                            <th>
                                @eTurns.DTO.ResProjectSpendItems.QuantityLimit
                            </th>
                            <th>
                                @eTurns.DTO.ResProjectSpendItems.QuantityUsed
                            </th>
                            <th>
                                @eTurns.DTO.ResProjectSpendItems.DollarLimitAmount
                            </th>
                            <th>
                                @eTurns.DTO.ResProjectSpendItems.DollarUsedAmount
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Cost
                            </th>
                            <th>
                                @ResCommon.CreatedOn
                            </th>
                            <th>
                                @ResCommon.CreatedBy
                            </th>
                            <th>
                                @ResCommon.UpdatedOn
                            </th>
                            <th>
                                @ResCommon.UpdatedBy
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            { 
                        <tr>
                            <td></td>
                            <td>
                                @item.ID
                            </td>
                            <td>
                                @item.ItemNumber
                            </td>
                            <td>
                                @item.Description<input id="hdnDescription" type="hidden" value="@item.Description" />
                            </td>
                            <td>
                                @if (item.SerialNumberTracking)
                                {
                                    @Html.TextBox("txtQuantityLimit", item.QuantityLimit, "{0:0}", new { @style = "width:93%;", @maxlength = "10", @class = "text-boxQuantityFormatSR text-boxinner numericalign" })
                                }
                                else
                                {
                                    @Html.TextBox("txtQuantityLimit", item.QuantityLimit, eTurnsWeb.Helper.SessionHelper.QuantityFormat, new { @style = "width:93%;", @maxlength = "10", @class = "numericinput text-boxinner numericalign" })
                                }
                                @*<input id="txtQuantityLimit" value="@item.QuantityLimit" style="width:50px;" maxlength="10" class="text-boxPriceFormat text-boxinner"/>*@
                                <input id="hdnID" type="hidden" value="@item.GUID" />
                                <input id="hdnItemNumber" type="hidden" value="@item.ItemNumber" />
                                <input id="hdnItemGUID" type="hidden" value="@item.ItemGUID" />
                                <input id="hdnProjectGUID" type="hidden" value="@item.ProjectGUID" />
                            </td>
                            <td class="numericalign">
                                @item.QuantityUsed.GetValueOrDefault(0).ToString(qtyformat)
                            </td>
                            <td>
                                @Html.TextBox("txtDollarLimitAmount", item.DollarLimitAmount, new { @style = "width:93%;", @class = "numericinput text-boxinner numericalign" })
                                @*<input id="txtDollarLimitAmount" value="@item.DollarLimitAmount" style="width:50px;" maxlength="10" class="text-boxPriceFormat text-boxinner"/>*@
                            </td>
                            <td class="numericalign">
                                @item.DollarUsedAmount.GetValueOrDefault(0).ToString(costformat)
                            </td>
                            <td class="numericalign">
                                @item.ItemCost.GetValueOrDefault(0).ToString(costformat)
                            </td>
                            <td>@item.CreatedDate</td>
                            <td>@item.CreatedByName</td>
                            <td>@item.UpdatedDate</td>
                            <td>@item.UpdatedByName</td>
                        </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="dialog" id="mdlQLYesNo" style="display: none;">
    <div class="inner">
        <p class="text">
            @eTurns.DTO.Resources.ResMessage.DeleteConfirm</p>
        <a href="JavaScript:void{}" id="btnQLModelYesSP" class="yes">
            <img src="~/Content/images/yes.png" alt="Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes</a><a href="javascript:void(0)" class="no"
                onclick="QLcloseModal()">
                <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo</a>
    </div>
</div>
<script type="text/javascript">
    var oTableProjectItems;
    var deleteURL1 = "/ProjectSpend/ProjectItemsDelete";
    var NotAllowedCharCodes = [9, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40];
    var DTName = 'ProjectItemsTable' + '@ViewBag.ProjectGUID';
    var bIsFilter = false;
    var ProjectItemGridColumns;

    function SaveAllClick() {

        var arrItems = new Array();
        var ValidationMessage = "";
        $('#' + DTName + ' tbody tr').each(function () {

            var txtDollarLimitAmount = $(this).find('#txtDollarLimitAmount').val();

            var x = parseInt(txtDollarLimitAmount, 10) // its the value from the input box;
            if (isNaN(x) || x < 0 || x > 9999999999) {
                ValidationMessage = '@ResProjectSpendItems.NumberValidation';
                return false;
            }

            var txtQuantityLimit = $(this).find('#txtQuantityLimit').val();
            var hdnID = $(this).find('#hdnID').val();
            var hdnItemNumber = $(this).find('#hdnItemNumber').val();
            var hdnItemGUID = $(this).find('#hdnItemGUID').val();
            var hdnProjectGUID = $(this).find('#hdnProjectGUID').val();

            var hdnDescription = $(this).find('#hdnDescription').val();
            if (txtQuantityLimit != undefined) {
                var data = { "GUID": hdnID, "ItemGUID": hdnItemGUID, "ProjectGUID": hdnProjectGUID, "ItemNumber": hdnItemNumber, "QuantityLimit": txtQuantityLimit, "DollarLimitAmount": txtDollarLimitAmount, "Description": hdnDescription };
                arrItems.push(data);
            }
        });

        if (ValidationMessage != "")
        {
            $("#spanGlobalMessage").html(ValidationMessage);
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            return false;
        }

        if (arrItems.length > 0) {
            $('#DivLoading').show();

            $.ajax({
                url: '@Url.Content("~/ProjectSpend/AddItemToDetailTable")',
                data: { 'para': JSON.stringify(arrItems) },
                dataType: 'json',
                type: 'POST',
                async: false,
                cache: false,
                success: function (response) {
                    $('#DivLoading').hide();
                    if (response.Status == "ok") {
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").html(response.Message);
                        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                    }
                    else {
                        $("#spanGlobalMessage").html(response.Message);
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    }
                }
            });
        }
        else {
            $("#spanGlobalMessage").html('@ResCommon.NoChanges');
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
        }
    }

    function OpenItemModel() {
        $('#ItemModel').load('@Url.Action("LoadItemMasterModel", new { ParentId = ViewBag.ProjectGUID })', function () {
            $('#ItemModel').modal();
        });
        return false;
    }


    function CallThisFunctionFromModel(msg) {
        if (msg == 'success') {
            $('#DivLoading').show();
            $('#divProjectSpendItems').load('@Url.Action("LoadProjectItems", new { ProjectGUID = ViewBag.ProjectGUID })', function () {
                $('#DivLoading').hide();
            });
        }
    }



    $(document).ready(function () {
        ProjectItemGridColumns = GetGridHeaderColumnsObject('ProjectItemsTable' + '@(ViewBag.ProjectGUID)');
        $('form').areYouSure({ 'message': 'You have unsaved changes.  Do you want to leave this page and lose your changes?' });
        $(".text-boxPriceFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdCostcentsLimit').val(), 10)
        });
        $(".text-boxQuantityFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdQuantitycentsLimit').val(), 10)
        });

        $(".text-boxQuantityFormatSR").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: 0
        });


        $("#saveRows").click(function () {
            SaveAllClick();
        });


        var gaiSelected = [];
        oTableProjectItems = $('#' + DTName).dataTable({
            "bJQueryUI": true,
            "bRetrieve": true,
            "bDestroy": true,
            "bScrollCollapse": true,
            "sScrollX": "90%",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>',
            "oColVis": {},
            //"aaSorting": [],
            "aaSorting": [[1, "desc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries',
                "sZeroRecords": MsgNoDataAvailableInTable,
                "sInfoFiltered": ""
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                $("td.RowNo:first", nRow).html(this.fnSettings()._iDisplayStart + iDisplayIndex + 1);
                return nRow;
            },
            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
                if (!bIsFilter) {
                    $.ajax({
                        "url": '@Url.Content("~/Master/SaveGridState")',
                        "type": "POST",
                        data: { Data: JSON.stringify(oData), ListName: 'ProjectItemsList' },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        "success": function (json) {
                            o = json;
                        }
                    });
                }
                bIsFilter = false;
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'ProjectItemsList' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            },
            "aoColumns": [
            { mDataProp: null, sClass: "read_only center NotHide RowNo", "bSortable": false, sDefaultContent: '' },
            { "bSortable": true },
            { "bSortable": true },
            { "bSortable": true },
            { "bSortable": false },
            { "bSortable": true },
            { "bSortable": false },
            { "bSortable": true },
            { sClass: "isCost", "bSortable": true },
            { "bSortable": true },
            { "bSortable": true },
            { "bSortable": true },
            { "bSortable": true }]
        });
        $('.DTTT_container').css('z-index', '-1');

        if ('@isCost' == '@Boolean.FalseString') {
            HideColumnUsingClassName(DTName);
        }
        $('.ColVis_MasterButton').hide();
        $('#divProjectSpendItems .refresh').css('margin-top', '-32px');
        $('#divProjectSpendItems .refresh').css('left', '-8px');
    });


    $('#' + DTName + ' tbody tr').die('tap click');
    $('#deleteRows1').unbind("click");
    $('#Gobtn1').unbind("click");
    $('#clear_QLItem_filter').unbind("click");
    $('#saveRows').die('click');
    $('#PageNumber1').unbind("keydown");
    $('#btnModelYesInnerGrid').die('click');

    // To adjust the print block next to colvis button
    $('#btnblock').css({ 'margin-right': '45px' });

    //$('#' + DTName + ' tbody tr').live('tap click', function () {
    //    $(this).toggleClass('row_selected');
    //    return false;
    //});

    var lastChecked1;
    var starttrvalue1 = "";
    $('#' + DTName + ' tbody tr').live('tap click', function (e) {
        
        if ($(e.target).hasClass("control") == true || e.target.nodeName.toLowerCase() == "img" || e.target.type == "checkbox" || e.target.type == "radio" || e.target.type == "text" || e.target.type == "button" || $(e.target).is('a') == true || $(e.target).is('span') == true
            || $(e.target).hasClass("selectBox")
        ) {
            e.stopPropagation();
        }
        else {
            if (lastChecked1 !== undefined && lastChecked1 != null && !lastChecked1) {
                lastChecked1 = this;
            }

            if (e.shiftKey) {
                var start = $('#' + DTName + ' tbody tr').index(this);
                var end = $('#' + DTName + ' tbody tr').index(lastChecked1);

                var stringval1 = readCookieforshift("selectstartindex");
                if (stringval1 != null) {
                    var endindex = $(this).closest('tr').attr('id');
                    createCookieforshift("selectendindex", endindex, 1);
                    if ($("#hdnPageName").val() !== undefined) {
                        var pagename = '';
                        pagename = $("#hdnPageName").val();
                        GetOnlyIdsForPassPagesForshift(pagename, true);
                    }
                }

                for (i = Math.min(start, end); i <= Math.max(start, end); i++) {
                    if (!$('#' + DTName + ' tbody tr').eq(i).hasClass('row_selected')) {
                        $('#' + DTName + ' tbody tr').eq(i).addClass("row_selected");
                    }
                }
                if (window.getSelection) {
                    if (window.getSelection().empty) {  // Chrome
                        window.getSelection().empty();
                    } else if (window.getSelection().removeAllRanges) {  // Firefox
                        window.getSelection().removeAllRanges();
                    }
                } else if (document.selection) {  // IE?
                    document.selection.empty();
                }
            } else if ((e.metaKey || e.ctrlKey)) {
                $(this).toggleClass('row_selected');
            } else {
                $(this).toggleClass('row_selected');


                if ($(this).hasClass('row_selected')) {
                    (starttrvalue1 == "") ? starttrvalue1 = $(this).closest('tr').attr('id') : starttrvalue1 = starttrvalue1 + "," + $(this).closest('tr').attr('id');
                    createCookieforshift("selectstartindex", starttrvalue1, 1);
                } else {

                    var stringval = readCookieforshift("selectstartindex");
                    if (stringval != "undefined") {
                        if (stringval != null) {
                            var tmp = stringval.split(',');
                            var index = tmp.indexOf($(this).closest('tr').attr('id'));
                            if (index !== -1) {
                                tmp.splice(index, 1);
                                stringval = tmp.join(',');
                                createCookieforshift("selectstartindex", stringval, 1);
                            }
                        }
                    }

                }
            }

            lastChecked1 = this;
        }

    });

    /* Add a click handler for the delete rows multiple rows */

    $('#deleteRows1').click(function () {
        /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
        if ($("body").hasClass('DTTT_Print')) {
            return false;
        }
        /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */


        var anSelected = fnGetSelected(oTableProjectItems);
        var stringIDs = "";
        for (var i = 0; i <= anSelected.length - 1; i++) {
            //anSelected[0].cells[0].innerHTML
            stringIDs = stringIDs + $(anSelected[i]).find("#hdnID").val() + ",";
        }
        if (anSelected.length !== 0) {
            $('#Inner-Grid-basic-modal-content').modal();
            IsDeletePopupOpen = false;
        }


    });

    $("#btnModelYesInnerGrid").live("click", function () {

        var anSelected = fnGetSelected(oTableProjectItems);
        var stringIDs = "";
        for (var i = 0; i <= anSelected.length - 1; i++) {
            stringIDs = stringIDs + $(anSelected[i]).find("#hdnID").val() + ",";
        }

        if (anSelected.length !== 0) {
            $.ajax({ 'url': deleteURL1,
                data: { ids: stringIDs },
                success: function (response) {

                    if (response == "ok") {


                        for (var i = 0; i <= anSelected.length - 1; i++) {
                            oTableProjectItems.fnDeleteRow(anSelected[i]);
                        }

                        if (anSelected.length > 0) {
                            $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                            $("#spanGlobalMessage").html("@ResCommon.RecordDeletedSuccessfully".replace("{0}", "(" + anSelected.length + ")"));
                            
                        }
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        //CallThisFunctionFromModel('success');
                        //oTableProjectItems.fnDraw();
                    }
                },
                error: function (response) {
                    // through errror message
                }
            });
            $.modal.impl.close();
        }
    });

    $('#PageNumber1').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#Gobtn1").click();
            return false;
        }
    });

    $("#Gobtn1").click(function () {
        var pval = $('#PageNumber1').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }
        if (pval == 0)
            return;
        $('#' + DTName).dataTable().fnPageChange(Number(pval - 1));
        $('#PageNumber1').val('');
    });

    /* global search function */
    function fnFilterPSLineItem() {
        //set filter only if more than 2 characters are pressed
        //if (typeof $("#InnerItem_filter") != 'undefined' && ($("#InnerItem_filter").val().length > 2 || $("#InnerItem_filter").val().length == 0)) {
        if (typeof $("#InnerItem_filter") != 'undefined' && ($("#InnerItem_filter").val().length > 2 || $("#InnerItem_filter").val().length == 0)) {

            bIsFilter = true;
            var searchtext = $("#InnerItem_filter").val().replace(/'/g, "''");
            $('#' + DTName).dataTable().fnFilter(
                searchtext,
                null,
                null,
                null
            );

            $('#' + DTName + ' td').removeHighlight();           
            if (searchtext.length > 0)
                $('#' + DTName + ' td').highlight($("#InnerItem_filter").val());
        }        
    }

    $(".searchBlock").on({
        keyup: function (e) {

            var code = (e.keyCode ? e.keyCode : e.which);
            var index = $.inArray(code, NotAllowedCharCodes);
            if (index >= 0) return false;
            fnFilterPSLineItem();
        },
        keydown: function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                fnFilterPSLineItem();
            }
        },
        paste: function (e) {
            setTimeout(function () {
                fnFilterPSLineItem();
            }, 50);
        },
        drop: function (e) {
            setTimeout(function () {
                fnFilterPSLineItem();
            }, 50);
        }
    }, "#InnerItem_filter");

    //Apply filter
    //$("#InnerItem_filter").keyup(function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    var index = $.inArray(code, NotAllowedCharCodes);
    //    if (index >= 0) return false;
    //    fnFilterPSLineItem();
    //});

    ////Keydown event is required to handle ENTER KEY to work in IE
    //$("#InnerItem_filter").keydown(function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    if (code == 13) {
    //        fnFilterPSLineItem();
    //    }
    //});

    //Clear Filter
    $("#clear_QLItem_filter").click(function () {
        $("#InnerItem_filter").val('');
        fnFilterPSLineItem();
        $("#InnerItem_filter").focus();
        return false;
    });

    function callPrint1(DataTableName) {
        var oConfig = {
            "sInfo": "<h6>Print view</h6><p>Please use your browser's print function to " + "print this table. Press escape when finished.",
            "sMessage": null,
            "bShowAll": false,
            "sToolTip": "View print view",
            "sButtonClass": "DTTT_button_print",
            "sButtonText": "Print"
        };
        if (typeof (TableTools) != undefined && typeof (TableTools) != 'undefined')
            TableTools.fnGetInstance(DataTableName).fnPrint(true, oConfig);
    }
    $("#ColumnOrderSetupChildGrid").off('click')
    $("#ColumnOrderSetupChildGrid").on('click', function () {
        WOItemFlag = false;
        $("#divDetailGridReorderPopup").data({ 'DataTableName': DTName, 'ListName': 'ProjectItemsList', 'ColumnObjectName': 'ProjectItemGridColumns' }).dialog("open");
        return false;
    });

    function FillDetailGridDiv() {
            $('#divProjectSpendItems').empty();
                $('#DivLoading').show();
                $('#divProjectSpendItems').load('@Url.Action("LoadProjectItems", new { ProjectGUID = ViewBag.ProjectGUID })', function () {
                    $('#DivLoading').hide();
                    $("#divDetailGridReorderPopup").dialog("close");
                });
    }
    /* DATA TABLE GRID COMMON FUNCTIONS END */

</script>
