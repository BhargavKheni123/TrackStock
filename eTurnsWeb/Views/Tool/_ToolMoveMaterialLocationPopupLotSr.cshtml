@model eTurns.DTO.ToolAssetMoveMaterialDTO
@{
    List<LocationMasterDTO> lstBins = new List<LocationMasterDTO>();
    lstBins.Add(new LocationMasterDTO() { Location = "" });
    string viewRight = "ViewOnly";
    bool IsAllowOverwriteLotOrSerial = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.AllowOverwriteLotOrSerial, eTurnsWeb.Helper.SessionHelper.PermissionType.AllowPull);
    bool IsAllowToEnterLotOrSerialInBlankBox = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.AllowToEnterLotOrSerialInBlankBox, eTurnsWeb.Helper.SessionHelper.PermissionType.AllowPull);
    bool IsViewOnlyLotOrSerial = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.ViewOnlyLotOrSerial, eTurnsWeb.Helper.SessionHelper.PermissionType.AllowPull);

    if (IsAllowOverwriteLotOrSerial)
    {
        viewRight = "ViewOverwrite";
    }
    else if (IsAllowToEnterLotOrSerialInBlankBox)
    {
        viewRight = "NoRight";
    }
    else if (IsViewOnlyLotOrSerial)
    {
        viewRight = "ViewOnly";
    }

    bool HasOnTheFlyEntryRight = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.OnTheFlyEntry);
}

@if (Model != null && Model.ToolGUID != Guid.Empty)
{

    <div style="padding: 10px; margin-bottom: 10px; border: 1px solid red;" id="divItem_@(Model.ToolGUID)">
        <table style="width: 100%; float: left;">
            <tr>
                <td style="float: left; height: 25px; margin-top: 5px; text-align: left; width: 15%;">
                    @ResToolAssetMoveMaterial.LabelMoveType:
                </td>
                <td style="width: 80%; text-align: left; float: left">
                    @Html.DropDownListFor(model => model.MoveType, new SelectList(Model.MoveTypeList, "ID", "Text", Model.MoveType), new { @id = "ddlMoveTypePopup", @class = "selectBox", @style = "width:200px;" })
                </td>
            </tr>
        </table>
        <br />
        <div id="divInfo" style="width: 100%; float: left; text-align: left; margin-bottom: 10px;">
            <input type="hidden" id="hdnMoveMaterialDTO_@(Model.ToolGUID)" value="@Model" name="hdnMoveMaterialDTO" />
            <div class="infoBlock">
                <ul>
                    <li>
                        <label>@ResToolMaster.ToolName</label>: <span>@(Model.ToolName)</span>
                    </li>
                    <li>
                        <label>@ResToolMaster.Quantity</label>: <span>@(Model.ToolQuantity)</span>
                    </li>
                    <li>
                        <label>@ResToolMaster.TrackingDetails</label>:

                        @if (Model.LotNumberTracking)
                        {
                            <text>Lot Number Tracking</text>
                            <input type='hidden' id='hdnTrackingType_@(Model.ToolGUID)' value='LotNumberTracking' />
                        }
                        else if (Model.SerialNumberTracking)
                        {
                            <text>Serial Number Tracking</text>
                            <input type='hidden' id='hdnTrackingType_@(Model.ToolGUID)' value='SerialNumberTracking' />
                        }
                        else
                        {
                            <text>No tracking</text>
                            <input type='hidden' id='hdnTrackingType_@(Model.ToolGUID)' value='NoTracking' />
                        }

                    </li>
                </ul>
            </div>
        </div>

        <table style="width: 100%; float: left;">
            <thead>
                <tr style="height: 25px;">
                        <th style="text-align:left;">
                            @ResToolAssetMoveMaterial.LabelDestinationLocation
                        </th>
                </tr>
            </thead>
            <tbody>
                <tr style="height: 35px; vertical-align: top;">
                    <td>
                        @if (HasOnTheFlyEntryRight)
                        {
                            <span style='position:relative'>
                                @Html.TextBoxFor(x => x.DestinationLocation, new { @id = "txtDestinationLocation", @class = "text-box AutoCompleteddl", @style = "width:150px;background:white" })
                                <a id='lnkShowAllOptions' href='javascript:void(0);' style='position:absolute; right:5px; top:0px;' class="ShowAllOptions">
                                    <img src='/Content/images/arrow_down_black.png' alt='select' />
                                </a>
                            </span>
                        }
                        else
                        {
                            <span style='position:relative'>
                                @Html.TextBoxFor(x => x.DestinationLocation, new { @id = "txtDestinationLocation", @class = "text-box AutoCompleteddl", @style = "width:150px;background:white", @readonly = "readonly" })
                                <a id='lnkShowAllOptions' href='javascript:void(0);' style='position:absolute; right:5px; top:0px;' class="ShowAllOptions">
                                    <img src='/Content/images/arrow_down_black.png' alt='select' />
                                </a>
                            </span>
                        }
                    </td>
                </tr>
            </tbody>
        </table>
        <table>
            <tr>
                <td>
                    &nbsp;
                </td>
            </tr>
        </table>
        @{
            string htmltableName = "tblItemToMove_" + Model.ToolGUID;
        }
        <table style="width: 100%" class="display tbl-item-move" id="@htmltableName">
            <thead>
                <tr>
                    <th style="text-align: left;">
                        @if (Model.LotNumberTracking)
                        {
                            @eTurns.DTO.ResToolAssetQuantityDetail.LotNumber
                        }
                        else if (Model.SerialNumberTracking)
                        {
                            @eTurns.DTO.ResToolAssetQuantityDetail.SerialNumber
                        }
                    </th>
                    <th style="text-align: left;">
                        @eTurns.DTO.ResLocation.Location
                    </th>
                    <th style="text-align: left;">
                        Available Quantity
                    </th>
                    <th>
                        Quantity To Move
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>

        <div style="width: 100%; padding-top: 10px;">
            <input type="button" class="btnGeneral" value="Add" id="btnLoadMoreLots_@(Model.ToolGUID)" name="btnLoadMoreLots" />
            <input type="button" class="btnGeneral" value="Delete" id="btnDeleteLots_@(Model.ToolGUID)" name="btnDeleteLots" />
            <input type="button" class="btnGeneral" value="Move" id="btnMovePopup_@(Model.ToolGUID)" name="btnMovePopup" />

            <input type="hidden" name="hdnSelectedId" id="hdnSelectedId_@(Model.ToolGUID)" />
            <input type="hidden" name="hdnCurrentLoadedIds" id="hdnCurrentLoadedIds_@(Model.ToolGUID)" />

            @Html.HiddenFor(x => x.ToolGUID, new { @id = "hdnItemGuid" })
            @Html.HiddenFor(x => x.OpenFrom, new { @id = "hdnOpenFrom" })
            @Html.HiddenFor(x => x.DestToolBinID, new { @id = "hdnDestBinID" })
            @Html.HiddenFor(x => x.ToolQuantity)
            @Html.HiddenFor(x => x.IsOnlyFromToolUI)
        </div>
    </div>

    <div class="dialog" id="dlgCommonErrorMsgMovePopup" style="display: none; width: 600px;">
        <div class="inner" style="width: 600px; max-height: 300px; overflow: scroll;">
            <p class="text" id="pErrMessage" style="text-align: left; padding-left: 10px;">
            </p>
            <p id="pOkbtn" class="text" style="text-align: center; padding-left: 10px; display: none;">
                <a href="#" class="no" onclick="closeMessageModalInMovePopup()">
                    <img src="~/Content/images/yes.png" alt="@eTurns.DTO.Resources.ResMessage.InformOk" />@eTurns.DTO.Resources.ResMessage.InformOk
                </a>
            </p>
        </div>
    </div>

    <script type="text/javascript">

        var itmGuid = '';
        var movTyp = '';
        var openFrom = '';
        var IsLoadMoreLocations = false;
        var BoolTrueString = '@Boolean.TrueString';
        var isDeleteSrLotRow = false;
        var columnarrIL = new Array();

        columnarrIL.push({
            mDataProp: null, sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val) {
                
                if ('@viewRight' == "ViewOverwrite") {
                    var strReturn = "<span style='position:relative'>";
                    strReturn = strReturn + "<input type='text' value='" + obj.aData.LotOrSerailNumber + "' id='txtLotOrSerailNumber' name='txtLotOrSerailNumber' class='text-boxinner AutoSerialLot' />";
                    strReturn = strReturn + '<a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsSL" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                    return strReturn;
                }
                else if ('@viewRight' == "NoRight") // && IsCheckViewRight == false)
                {
                    var strReturn = "<span style='position:relative'>";
                    strReturn = strReturn + "<input type='text' value='" + obj.aData.LotOrSerailNumber + "' id='txtLotOrSerailNumberNoRight' name='txtLotOrSerailNumberNoRight' class='text-boxinner' />";
                    return strReturn;
                }
                else if ('@viewRight' == "ViewOnly") {
                    var strReturn = "<input type='text' value='" + obj.aData.LotOrSerailNumber + "' id='txtLotOrSerailNumberViewOnly' name='txtLotOrSerailNumberViewOnly' class='text-boxinner' />";
                    return strReturn;
                }
                else {
                    var strReturn = "<input type='text' value='" + obj.aData.LotOrSerailNumber + "' id='txtLotOrSerailNumberViewOnly' name='txtLotOrSerailNumberViewOnly' class='text-boxinner' />";
                    return strReturn;
                }

            }
        });
        columnarrIL.push({ mDataProp: "Location", sClass: "read_only" });
        columnarrIL.push({
            mDataProp: null, sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val) {
                var strReturn = "<span name='spnLotSerialQuantity' id='spnLotSerialQuantity_" + obj.aData.ID + "'>" + FormatedCostQtyValues(obj.aData.LotSerialQuantity, 2) + "</span>";
                return strReturn;
            }
        });
        columnarrIL.push({
            mDataProp: null, sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val) {
                var strReturn = "<input type='hidden' name='hdnRowUniqueId' value='" + obj.aData.ID + "_" + obj.aData.ToolGUID + "_" + obj.aData.BinID + "' />";
                strReturn = strReturn + "<input type='hidden' name='hdnLotNumberTracking' value='" + obj.aData.LotNumberTracking + "' />";
                strReturn = strReturn + "<input type='hidden' name='hdnSerialNumberTracking' value='" + obj.aData.SerialNumberTracking + "' />";
                strReturn = strReturn + "<input type='hidden' name='hdnBinNumber' value='" + obj.aData.Location + "' />";

                if ('@Model.SerialNumberTracking' == BoolTrueString) {
                    strReturn = strReturn + "<input type='text' value='" + FormatedCostQtyValues(obj.aData.QuantityToMove, 2) + "' id='txtQtyToMove' name='txtQtyToMove' class='text-boxinner move-quantity' readonly='readonly' />";
                }
                else {
                    strReturn = strReturn + "<input type='text' value='" + FormatedCostQtyValues(obj.aData.QuantityToMove, 2) + "' id='txtQtyToMove' name='txtQtyToMove' class='text-boxinner move-quantity' />";
                }
                return strReturn;
            }
        });

        var Curtable = $('#@htmltableName').dataTable({
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": false,
            "bSort": false,
            "bInfo": false,
            "bAutoWidth": false,
            "sScrollX": "100%",
            "bRetrieve": true,
            "bDestroy": true,
            "bProcessing": true,
            "bServerSide": true,
            "aoColumns": columnarrIL,
            "sAjaxSource": '@Url.Content("~/Tool/LotSrSelectionForMove")',
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                if (aData.IsConsignedLotSerial == true) {
                    nRow.className = "even trconsigned";
                }
            },
            "fnInitComplete": function (oSettings) {
                var strAllSelected = "";
                if ('@Model.LotNumberTracking' != BoolTrueString && '@Model.SerialNumberTracking' != BoolTrueString) {
                    $('#@htmltableName').dataTable().fnSetColumnVis(0, false);
                }
            },
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                aoData.push({ "name": "ToolGUID", "value": '@Model.ToolGUID' });
                aoData.push({ "name": "CurrentLoaded", "value": $("#hdnCurrentLoadedIds_" + '@Model.ToolGUID').val() });
                aoData.push({ "name": "IsDeleteRowMode", "value": isDeleteSrLotRow });
                aoData.push({ "name": "MoveType", "value": '@Model.MoveType' });
                oSettings.jqXHR = $.ajax({
                    dataType: 'json',
                    type: "POST",
                    url: sSource,
                    cache: false,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    success: fnCallback,
                    beforeSend: function () {
                        $('.dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    complete: function () {
                        $('.dataTables_scroll').css({ "opacity": 1 });
                        isDeleteSrLotRow = false;
                        $('.ShowAllOptionsSL').click(function () {
                            $(this).siblings('.AutoSerialLot').trigger("focus");
                            $(this).siblings(".AutoSerialLot").autocomplete("search", "");
                        });

                        if ('@viewRight' == "ViewOnly") {
                            $("input[type='text'][name='txtLotOrSerailNumberViewOnly']").keypress(function () {
                                return false;
                            });

                            $("#DivPullSelection input[type='text'][name='txtPullQty']").keypress(function () {
                                return false;
                            });
                        }
                    }
                });
            }
        });

        function closeMessageModalInMovePopup() {
            $.modal.impl.close();
        }

        $(document).ready(function () {

            $('#txtDestinationLocation').off("keypress");
            if ('@HasOnTheFlyEntryRight' == 'False') {
                $('#txtDestinationLocation').on("keypress", function () { return false; });
            }

            $('#txtDestinationStagingHeader').off("keypress");
            if ('@HasOnTheFlyEntryRight' == 'False') {
                $('#txtDestinationStagingHeader').on("keypress", function () { return false; });
            }

            itmGuid = $('#divMoveMaterialPopup').find('#hdnItemGuid').val();
            movTyp = $('#divMoveMaterialPopup').find('#ddlMoveTypePopup').val();
            openFrom = $('#divMoveMaterialPopup').find('#hdnOpenFrom').val();

            $("#divMoveMaterialPopup").off("click", ".ShowAllOptions");
            $("#divMoveMaterialPopup").on("click", ".ShowAllOptions", function () {
                $(this).siblings('.AutoCompleteddl').trigger("focus");
                $(this).siblings(".AutoCompleteddl").autocomplete("search", " ");
            });

            $("#divMoveMaterialPopup").off("click", "input[type='button'][name='btnLoadMoreLots']");
            $("#divMoveMaterialPopup").on("click", "input[type='button'][name='btnLoadMoreLots']", function () {

                var vItemGUID = $(this).prop("id").split('_')[1];
                var dtID = "#tblItemToMove_" + vItemGUID;
                var strIds = "";

                $(dtID).find("tbody").find("tr").each(function (index, tr) {

                    var hdnLotNumberTracking = $(tr).find("input[name='hdnLotNumberTracking']").val();
                    var hdnSerialNumberTracking = $(tr).find("input[name='hdnSerialNumberTracking']").val();
                    var txtMoveQty = $(tr).find("input[type='text'][name='txtQtyToMove']").val();
                    var hdnBinNumber = $(tr).find("input[name='hdnBinNumber']").val();

                    if (txtMoveQty == "") {
                        txtMoveQty = "0";
                    }

                    if (hdnLotNumberTracking == "true" || hdnSerialNumberTracking == "true") {
                        var txtLotOrSerailNumber = $(tr).find("input[type='text'][name^='txtLotOrSerailNumber']").val();
                        strIds = strIds + txtLotOrSerailNumber + "{|}" + txtMoveQty + "{|}" + hdnBinNumber + ",";
                    }
                    else {
                        strIds = strIds + hdnBinNumber + "{|}" + txtMoveQty + ",";
                    }

                });

                $("#hdnCurrentLoadedIds_" + vItemGUID).val(strIds);

                var dt = $(dtID).dataTable();
                dt.fnStandingRedraw();
            });

            $("#divMoveMaterialPopup").off("tap click", ".tbl-item-move tbody tr");
            $("#divMoveMaterialPopup").on("tap click", ".tbl-item-move tbody tr", function (e) {
                if (e.target.type == "checkbox" || e.target.type == "radio" || e.target.type == "text" || e.target.type == "a") {
                    e.stopPropagation();
                }
                else if (e.currentTarget.getElementsByTagName("input").btnLoad != undefined) {
                    e.stopPropagation();
                }
                else {
                    if ((e.metaKey || e.ctrlKey)) {
                        $(this).toggleClass('row_selected');
                    } else {
                        $(this).toggleClass('row_selected');
                    }
                }
                return false;
            });

            $("#divMoveMaterialPopup").off('click', "input[type='button'][name='btnDeleteLots']");
            $("#divMoveMaterialPopup").on('click', "input[type='button'][name='btnDeleteLots']", function (e) {

                var vItemGUID = $(this).prop("id").split('_')[1];
                var dtID = "#tblItemToMove_" + vItemGUID;
                if ($(dtID + ' tbody tr.row_selected').length <= 0) {
                    alert("Select at least one row to delete.");
                }
                else {
                    $(dtID).find("tbody").find("tr.row_selected").each(function (index, tr) {
                        $(tr).remove();
                    });

                    var strIds = "";
                    $(dtID).find("tbody").find("tr").each(function (index, tr) {

                        var hdnLotNumberTracking = $(tr).find("input[name='hdnLotNumberTracking']").val();
                        var hdnSerialNumberTracking = $(tr).find("input[name='hdnSerialNumberTracking']").val();
                        var txtQtyToMove = $(tr).find("input[type='text'][name='txtQtyToMove']").val();
                        var hdnBinNumber = $(tr).find("input[name='hdnBinNumber']").val();

                        if (txtQtyToMove == "")
                            txtQtyToMove = "0";

                        if (hdnLotNumberTracking == "true" || hdnSerialNumberTracking == "true") {
                            var txtLotOrSerailNumber = $(tr).find("input[type='text'][name^='txtLotOrSerailNumber']").val();
                            strIds = strIds + txtLotOrSerailNumber + "{|}" + txtMoveQty + "{|}" + hdnBinNumber + ",";
                        }
                        else {
                            strIds = strIds + hdnBinNumber + "{|}" + txtMoveQty + ",";
                        }
                    });

                    $("#hdnCurrentLoadedIds_" + vItemGUID).val(strIds);
                    isDeleteSrLotRow = true;
                    var dtThisItem = $(dtID).dataTable();
                    dtThisItem.fnStandingRedraw();
                }
            });

          
            $("#divMoveMaterialPopup").off('change', "input[type='text'][name^='txtLotOrSerailNumber']");
            $("#divMoveMaterialPopup").on('change', "input[type='text'][name^='txtLotOrSerailNumber']", function (e) {
                var objCurtxt = $(this);
                var oldValue = $(objCurtxt).val();
                var ids = $(this).parent().parent().parent().find("input[type='hidden'][name='hdnRowUniqueId']").val().split('_');
                var dtThisItem = $("#tblItemToMove_" + ids[1].toString()).dataTable();
                var currentTR = $(objCurtxt).parent().parent().parent()[0];
                var row_id = dtThisItem.fnGetPosition(currentTR);
                var currBinNumber = $(currentTR).find("input[type='hidden'][name='hdnBinNumber']").val();

                if ($.trim(oldValue) == '')
                    return;

                var isDuplicateEntry = false;
                $("#tblItemToMove_" + ids[1].toString() + " tbody tr").each(function (i) {
                    if (i != row_id) {
                        var tr = $(this);
                        var SerialOrLotNumber = $(tr).find('#' + objCurtxt.prop("id")).val();
                        var hdnBinNumber = $(tr).find("input[type='hidden'][name='hdnBinNumber']").val();
                        if (SerialOrLotNumber == $(objCurtxt).val() && hdnBinNumber == currBinNumber) {
                            isDuplicateEntry = true;
                        }
                        else {
                            var txtPullQty = $(tr).find("input[type='text'][name='txtPullQty']").val();
                        }
                    }
                });

                if (isDuplicateEntry == true) {

                    if ($("#hdnTrackingType_" + ids[1].toString()).val() == "LotNumberTracking")
                        alert("Duplicate lot number.");
                    else if ($("#hdnTrackingType_" + ids[1].toString()).val() == "SerialNumberTracking")
                        alert("Duplicate serial number.");
                    else
                        alert("Duplicate number.");

                    $(objCurtxt).val("");
                    $(objCurtxt).focus();
                }
                else {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("ValidateSerialLotNumberInMove", "Tool")',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: "{ ToolGuid: '" + ids[1].toString() + "', SerialOrLotNumber: '" + $(objCurtxt).val() + "',Location: '" + currBinNumber + "',intMoveType: @Model.MoveType }",
                        success: function (RetData) {
                            
                            dtThisItem.fnUpdate(RetData, row_id, undefined, false, false);

                            $('.ShowAllOptionsSL').click(function () {
                                $(this).siblings('.AutoSerialLot').trigger("focus");
                                $(this).siblings(".AutoSerialLot").autocomplete("search", "");
                            });

                            $(currentTR).removeClass("trconsigned");
                        },
                        error: function (err) {
                            alert(err);
                            console.log(err.ResponseText);
                        }
                    });
                }
            });

            $("#divMoveMaterialPopup").off('focus', "input[type='text'][name^='txtLotOrSerailNumber']");
            $("#divMoveMaterialPopup").on('focus', "input[type='text'][name^='txtLotOrSerailNumber']", function (e) {
                var objCurtxt = $(this);
                var ids = $(this).parent().parent().parent().find("input[type='hidden'][name='hdnRowUniqueId']").val().split('_');
                var aPos = $("#tblItemToMove_" + ids[1].toString()).dataTable().fnGetPosition($(this).parent().parent().parent()[0]);
                var aData = $("#tblItemToMove_" + ids[1].toString()).dataTable().fnGetData(aPos);
                if ($(this).hasClass("AutoSerialLot")) {
                    $(this).autocomplete({
                        source: function (request, response) {
                            $.ajax({
                                url: '/Tool/GetLotOrSerailNumberListForMove',
                                contentType: 'application/json',
                                dataType: 'json',
                                data: {
                                    maxRows: 1000,
                                    name_startsWith: request.term,
                                    ToolGuid: ids[1].toString(),
                                    intMoveType: '@Model.MoveType'
                                },
                                success: function (data) {
                                    response($.map(data, function (item) {
                                        return {
                                            label: item.DisplatText,
                                            value: item.LotOrSerailNumber,
                                            selval: item.LotOrSerailNumber,
                                            binval: item.Location
                                        }
                                    }));
                                },
                                error: function (err) {

                                }
                            });
                        },
                        autoFocus: false,
                        minLength: 0,
                        select: function (event, ui) {
                            $(objCurtxt).parent().parent().parent().find("input[type='hidden'][name='hdnBinNumber']").val(ui.item.binval);
                        },
                        open: function () {
                            $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                            $(this).autocomplete('widget').css('z-index', 9000);
                            $('ul.ui-autocomplete').css('overflow-y', 'auto');
                            $('ul.ui-autocomplete').css('max-height', '300px');
                        },
                        close: function () {
                            $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                            $(objCurtxt).trigger("change");
                        }
                    });
                }
            });


            $("#divMoveMaterialPopup").off('focus', "input.AutoCompleteddl");
            $("#divMoveMaterialPopup").on('focus', "input.AutoCompleteddl", function (e) {

                var ctrlID = $(this).attr('id');
                var locTyp = '';

                if (ctrlID === "txtSourceLocation") {
                    locTyp = "SL";
                }
                else if (ctrlID === "txtDestinationLocation") {
                    locTyp = "DL";
                }
                

                movTyp = $('#ddlMoveTypePopup').val();

                $(this).autocomplete({
                    source: function (request, response) {
                        $('#DivLoading').show();
                        $.ajax({
                            url: 'GetLocationByType',
                            contentType: 'application/json',
                            dataType: 'json',
                            data: { 'NameStartWith': request.term, 'ToolGuid': itmGuid, 'locType': locTyp, 'moveType': movTyp, 'IsLoadMoreLocations': IsLoadMoreLocations },
                            success: function (data) {
                                if (locTyp === 'DL') {
                                    $('#hdnDestBinID').val('');
                                }
                                response(
                            $.map(data, function (Items) {
                                return {
                                    label: Items.Key,
                                    value: Items.Value,
                                    qty: Items.Quantity,
                                    id: Items.ID,
                                    guid: Items.GUID
                                }
                            }));
                                $('#DivLoading').hide();
                            },
                            error: function (err) {
                                $('#DivLoading').hide();
                            }
                        });
                    },
                    autoFocus: false,
                    minLength: 1,
                    select: function (event, ui) {
                        $(this).val(ui.item.label);
                        if (locTyp === 'DL') {
                            $('#hdnDestBinID').val(ui.item.id);

                            if (ui.item.value == MoreLocation) {
                                IsLoadMoreLocations = true;
                                $(this).trigger("focus");
                                $(this).autocomplete("search", " ");
                                $(this).val("");
                                return false;
                            }
                        }
                        
                    },
                    open: function () {
                        $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                        $('ul.ui-autocomplete').css('overflow-y', 'auto');
                        $('ul.ui-autocomplete').css('max-height', '300px');
                    },
                    close: function () {
                        $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                        $('#DivLoading').hide();
                    },
                    change: function (event, ui) {

                        if ($.trim($(this).val()).length <= 0) {
                            if (locTyp === 'DL') {
                                $('#hdnDestBinID').val('');
                            }
                            
                        }
                    }
                }); //.bind('focus', function () { $(this).autocomplete("search", " ") });
            });

            $("#divMoveMaterialPopup").off('click', "input.AutoCompleteddl");
            $("#divMoveMaterialPopup").on('click', "input.AutoCompleteddl", function (e) {
                if ($(this).attr('readonly') != 'readonly') {
                    if ($(this).val().length > 0) {
                        $(this).autocomplete("search", $(this).val());
                    }
                    else {
                        $(this).autocomplete("search", " ");
                    }
                }
            });

            $("#divMoveMaterialPopup").off("click", "input[type='button'][name='btnMovePopup']");
            $("#divMoveMaterialPopup").on("click", "input[type='button'][name='btnMovePopup']", function () {

                var vItemGUID = $(this).prop("id").split('_')[1];
                var dtID = "#tblItemToMove_" + vItemGUID;

                var arrItemDetails;

                arrItemDetails = new Array();
                var ID = vItemGUID;

                var dt = $("#tblItemToMove_" + vItemGUID).dataTable();
                var currentData = dt.fnGetData();
                var vmovTyp = $('#ddlMoveTypePopup').val();
                var vDestBinID = $('#hdnDestBinID').val();
                var vDestLocation = $('#txtDestinationLocation').val();

                $("#tblItemToMove_" + vItemGUID).find("tbody").find("tr").each(function (index, tr) {
                    var txtQtyToMove = $(tr).find("input[type='text'][name='txtQtyToMove']").val();
                    var hdnLotNumberTracking = $(tr).find("input[name='hdnLotNumberTracking']").val();
                    var hdnSerialNumberTracking = $(tr).find("input[name='hdnSerialNumberTracking']").val();
                    var hdnBinNumber = $(tr).find("input[name='hdnBinNumber']").val();
                    var vSourceBinID = $(tr).find("input[type='hidden'][name='hdnRowUniqueId']").val().split('_')[2];
                    

                    if (txtQtyToMove != "") {
                        var txtLotOrSerailNumber = "";
                        if (hdnLotNumberTracking == "true" || hdnSerialNumberTracking == "true")
                            var txtLotOrSerailNumber = $(tr).find("input[type='text'][name^='txtLotOrSerailNumber']").val();

                        var vSerialNumber = "";
                        var vLotNumber = "";

                        if (hdnSerialNumberTracking == "true")
                            vSerialNumber = txtLotOrSerailNumber;
                        if (hdnLotNumberTracking == "true")
                            vLotNumber = txtLotOrSerailNumber;

                        var obj = {
                            "ToolGUID": vItemGUID, "MoveQuanity": parseFloat(txtQtyToMove.toString()), "MoveType": vmovTyp
                                    , "DestToolBinID": vDestBinID, "SourceLocation": hdnBinNumber, "DestinationLocation": vDestLocation
                                    , "OpenFrom": openFrom, "ToolName": '@Model.ToolName'
                                    , "ToolQuantity": '@Model.ToolQuantity', "SerialNumber": vSerialNumber
                                    , "SourceToolBinID": vSourceBinID, "LotNumberTracking": hdnLotNumberTracking, "SerialNumberTracking": hdnSerialNumberTracking
                        };

                        arrItemDetails.push(obj);
                    }
                });

                if (arrItemDetails.length > 0) {
                    MoveItemNew(arrItemDetails);
                }

            });

            $("#ddlMoveTypePopup").off("change");
            $('#ddlMoveTypePopup').on('change', function (e) {
                var movType = $('#ddlMoveTypePopup').val();
                var objData = { "ToolGUID": '@Model.ToolGUID', "MoveType": movType, "OpenFrom": '@Model.OpenFrom', "SerialNumberTracking": '@Model.SerialNumberTracking', "LotNumberTracking": '@Model.LotNumberTracking' };
                OpenMoveMaterialPopupByToolGuidForLotSerial(objData);
            });

        });

        function MoveItemNew(arrItemDetails) {
            $('#DivLoading').show();
            var errorMessage = "";

            $.ajax({
                type: "POST",
                url: '@Url.Action("MoveQuantitySourceToDestinationLotSr", "Tool")',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(arrItemDetails),
                success: function (response) {

                    if (!response.Status) {
                        var errors = '';
                        for (var i = 0; i < response.ErrorList.length; i++) {
                            errors = errors + response.ErrorList[i] + "<br/>";
                        }
                        $('#DivLoading').hide();
                        $.modal.impl.close();
                        errors = "<b>Tool(s) is(are) not able to Move Due to following reasons.</b><br /><br />" + errors;
                        $('#dlgCommonErrorMsgMovePopup').find("#pOkbtn").css('display', '');
                        $('#dlgCommonErrorMsgMovePopup').find("#pErrMessage").html(errors);
                        $('#dlgCommonErrorMsgMovePopup').modal();
                        $('#dlgCommonErrorMsgMovePopup').css("z-index", "1104");
                        $('#simplemodal-overlay').css("z-index", "1103");
                        $('#simplemodal-container').css("z-index", "1104");
                    }
                    else {
                        var movType = $('#ddlMoveTypePopup').val();
                        var objData = { "ToolGUID": '@Model.ToolGUID', "MoveType": movType, "OpenFrom": '@Model.OpenFrom', "SerialNumberTracking": '@Model.SerialNumberTracking', "LotNumberTracking": '@Model.LotNumberTracking' };
                        
                        $('#DivLoading').hide();
                        $.modal.impl.close();
                        var errors = "<b>Tool(s) is(are) Moved successfully.</b><br /><br />";
                        $('#dlgCommonErrorMsgMovePopup').find("#pOkbtn").css('display', '');
                        $('#dlgCommonErrorMsgMovePopup').find("#pErrMessage").html(errors);
                        $('#dlgCommonErrorMsgMovePopup').modal();
                        $('#dlgCommonErrorMsgMovePopup').css("z-index", "1104");
                        $('#simplemodal-overlay').css("z-index", "1103");
                        $('#simplemodal-container').css("z-index", "1104");
                        OpenMoveMaterialPopupByToolGuidForLotSerial(objData);
                    }
                },
                error: function (err) {
                    $('#DivLoading').hide();
                },
                complete: function () {
                }
            });

        }

    </script>

            }