@model eTurns.DTO.UserWiseRoomsAccessDetailsDTO
@using eTurns.DTO
@using eTurns.DTO.Resources
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    RoleWiseRoomsAccessDetailsDTO objRoleWiseDTO = new RoleWiseRoomsAccessDetailsDTO();
    EnterpriseDTO oEnt = null;
    RoomDTO Room = null;

    if (Model != null && Model.EnterpriseId > 0)
    {
        oEnt = new eTurnsMaster.DAL.EnterpriseMasterDAL().GetEnterprise(Model.EnterpriseId);
    }
    if (Model.RoleID.GetValueOrDefault(0) > 0)
    {
        objRoleWiseDTO = new eTurnsWeb.Helper.UserBAL().RoleWiseRoomAccessDetail(Model.RoleID.GetValueOrDefault(0), Model.UserType, Model.EnterpriseId, Model.CompanyId, Model.RoomID, oEnt != null ? oEnt.EnterpriseDBName : "");
    }
    List<SupplierMasterDTO> lstSuppliers = new List<SupplierMasterDTO>();
    if (Model.CompanyId > 0 && Model.RoomID > 0)
    {
        if (oEnt != null)
        {
            lstSuppliers = new eTurns.DAL.SupplierMasterDAL(oEnt.EnterpriseDBName).GetSupplierByRoomPlain(Model.RoomID, Model.CompanyId, false).OrderBy(t => t.SupplierName).ToList();
        }
        else
        {
            lstSuppliers = new eTurns.DAL.SupplierMasterDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetSupplierByRoomPlain(Model.RoomID, Model.CompanyId, false).ToList().OrderBy(t => t.SupplierName).ToList();
        }
    }

    if (Model.RoomID > 0)
    {
        Room = new eTurns.DAL.RoomDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetRoomByIDPlain(Model.RoomID);
    }
}
<style>
    #tblDefaultSetting button {
        width:200px !important;
    }
    #divTimebased table {
        border-spacing: 5px !important;
        border-collapse:separate !important;
    }
</style>
<div class="mainForm">
    <div class="container">
        <ul class="tabs">
            <li class="active"><a href="#Roomtab2">@ResRoleMaster.SupportTablesPermissions</a></li>
            <li><a href="#Roomtab3">@ResRoleMaster.ModulePermissions</a></li>
            <li><a href="#Roomtab4">@ResRoleMaster.AdminPermissions</a></li>
            <li><a href="#Roomtab5">@ResRoleMaster.DefaultSettings</a></li>
        </ul>
        <div id="Roomtab2" class="tab_content">
            <p>
                <div style="float: right">
                    @Html.CheckBox("chkSelectAllTab1", false, new { onclick = "javascript:return SelectAllTabChk(this,1);" })
                    @Html.Label(ResCommon.CheckALL)
                </div>
                <table>
                    <tr>
                        <th>
                            @ResRoleMaster.Permissions
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.All
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.View
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.Insert
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.Update
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.Delete
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.ShowDeleted
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.ShowArchived
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.ShowUDF
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.ShowChangeLog
                        </th>
                    </tr>
                    <tr>
                        <th>
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllView", new { @class = "check-box", id = "AllView$Tab2", onclick = "javascript:SelectRowColumnChk(this,1);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllInsert", new { @class = "check-box", id = "AllInsert$Tab2", onclick = "javascript:SelectRowColumnChk(this,1);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllUpdate", new { @class = "check-box", id = "AllUpdate$Tab2", onclick = "javascript:SelectRowColumnChk(this,1);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllDelete", new { @class = "check-box", id = "AllDelete$Tab2", onclick = "javascript:SelectRowColumnChk(this,1);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllShowDeleted", new { @class = "check-box", id = "AllShowDeleted$Tab2", onclick = "javascript:SelectRowColumnChk(this,1);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllShowArchived", new { @class = "check-box", id = "AllShowArchived$Tab2", onclick = "javascript:SelectRowColumnChk(this,1);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllShowUDF", new { @class = "check-box", id = "AllShowUDF$Tab2", onclick = "javascript:SelectRowColumnChk(this,1);" })
                        </th>
                        <th style="width: 5px"> </th>
                        <th>
                            @Html.CheckBox("AllShowChangeLog", new { @class = "check-box", id = "AllShowChangeLog$Tab2", onclick = "javascript:SelectRowColumnChk(this,1);" })
                        </th>

                    </tr>
                    @if (Model.ModuleMasterList != null)
                    {
                        foreach (eTurns.DTO.UserRoleModuleDetailsDTO item in Model.ModuleMasterList)
                        {
                            bool IsViewDifferent = false;
                            bool IsDeleteDifferent = false;
                            bool IsInsertDifferent = false;
                            bool IsUpdateDifferent = false;
                            bool IsShowArchivedDifferent = false;
                            bool IsShowDeletedDifferent = false;
                            bool IsShowUDFDifferent = false;
                            bool IsShowChangeLogDifferent = false;

                            if (objRoleWiseDTO != null && objRoleWiseDTO.ModuleMasterList != null)
                            {
                                //List<RoleModuleDetailsDTO> lst = objRoleWiseDTO.ModuleMasterList.Where(t => t.RoomId > 0).ToList();
                                //RoleModuleDetailsDTO objRoleModuleDetailsDTO = lst.FirstOrDefault(t => t.EnterpriseID == item.EnteriseId && t.CompanyID == item.CompanyId && t.RoomId == item.RoomId && t.ModuleID == item.ModuleID);

                                RoleModuleDetailsDTO objRoleModuleDetailsDTO = objRoleWiseDTO.ModuleMasterList.FirstOrDefault(t => t.ModuleID == item.ModuleID && t.RoomId == Model.RoomID && t.CompanyID == Model.CompanyId && t.EnterpriseID == Model.EnterpriseId);
                                if (objRoleModuleDetailsDTO != null)
                                {
                                    if (item.IsView != objRoleModuleDetailsDTO.IsView)
                                    {
                                        IsViewDifferent = true;
                                    }
                                    if (item.IsDelete != objRoleModuleDetailsDTO.IsDelete)
                                    {
                                        IsDeleteDifferent = true;
                                    }
                                    if (item.IsInsert != objRoleModuleDetailsDTO.IsInsert)
                                    {
                                        IsInsertDifferent = true;
                                    }
                                    if (item.IsUpdate != objRoleModuleDetailsDTO.IsUpdate)
                                    {
                                        IsUpdateDifferent = true;
                                    }

                                    if (item.ShowArchived != objRoleModuleDetailsDTO.ShowArchived)
                                    {
                                        IsShowArchivedDifferent = true;
                                    }
                                    if (item.ShowDeleted != objRoleModuleDetailsDTO.ShowDeleted)
                                    {
                                        IsShowDeletedDifferent = true;
                                    }
                                    if (item.ShowUDF != objRoleModuleDetailsDTO.ShowUDF)
                                    {
                                        IsShowUDFDifferent = true;
                                    }
                                    if (item.ShowChangeLog != objRoleModuleDetailsDTO.ShowChangeLog)
                                    {
                                        IsShowChangeLogDifferent = true;
                                    }

                                }
                                else
                                {
                                    if (item.IsView)
                                    {
                                        IsViewDifferent = true;
                                    }
                                    if (item.IsDelete)
                                    {
                                        IsDeleteDifferent = true;
                                    }
                                    if (item.IsInsert)
                                    {
                                        IsInsertDifferent = true;
                                    }
                                    if (item.IsUpdate)
                                    {
                                        IsUpdateDifferent = true;
                                    }

                                    if (item.ShowArchived)
                                    {
                                        IsShowArchivedDifferent = true;
                                    }
                                    if (item.ShowDeleted)
                                    {
                                        IsShowDeletedDifferent = true;
                                    }
                                    if (item.ShowUDF)
                                    {
                                        IsShowUDFDifferent = true;
                                    }
                                    if (item.ShowChangeLog)
                                    {
                                        IsShowChangeLogDifferent = true;
                                    }
                                }

                            }


                            <tr id="@item.ModuleID">
                                <td title="@item.ModuleToolTipFromResource">
                                    @Html.DisplayFor(t => item.ModuleNameFromResource)                                    
                                </td>
                                <td style="width: 5px"></td>
                                <td align="center">
                                    @Html.CheckBox(item.ModuleID + "_RowAll", new { @class = "check-box", id = item.ModuleID + "_RowAll", onclick = "javascript:SelectRowColumnChk(this,1);" })
                                </td>
                                <td style="width: 5px"></td>
                                @if (IsViewDifferent)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.IsView, new { @class = "check-box", id = item.ModuleID + "_View" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.IsView, new { @class = "check-box", id = item.ModuleID + "_View" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsInsertDifferent)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.IsInsert, new { @class = "check-box", id = item.ModuleID + "_Insert", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.IsInsert, new { @class = "check-box", id = item.ModuleID + "_Insert", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsUpdateDifferent)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.IsUpdate, new { @class = "check-box", id = item.ModuleID + "_Update", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.IsUpdate, new { @class = "check-box", id = item.ModuleID + "_Update", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsDeleteDifferent)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.IsDelete, new { @class = "check-box", id = item.ModuleID + "_Delete", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                else
                                {

                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.IsDelete, new { @class = "check-box", id = item.ModuleID + "_Delete", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsShowDeletedDifferent)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.ShowDeleted, new { @class = "check-box", id = item.ModuleID + "_ShowDeleted", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.ShowDeleted, new { @class = "check-box", id = item.ModuleID + "_ShowDeleted", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsShowArchivedDifferent)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.ShowArchived, new { @class = "check-box", id = item.ModuleID + "_ShowArchived", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.ShowArchived, new { @class = "check-box", id = item.ModuleID + "_ShowArchived", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsShowUDFDifferent)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.ShowUDF, new { @class = "check-box _ShowUDFAll", id = item.ModuleID + "_ShowUDF", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.ShowUDF, new { @class = "check-box _ShowUDFAll", id = item.ModuleID + "_ShowUDF", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsShowChangeLogDifferent)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.ShowChangeLog, new { @class = "check-box", id = item.ModuleID + "_ShowChangeLog", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.ShowChangeLog, new { @class = "check-box", id = item.ModuleID + "_ShowChangeLog", onclick = "javascript:SelectViewPermission(this,1);" })
                                    </td>
                                }

                            </tr>
                        }
                    }
                </table>
            </p>
        </div>
        <div id="Roomtab3" class="tab_content">
            <div style="float: right">
                @Html.CheckBox("chkSelectAllTab2", false, new { onclick = "javascript:return SelectAllTabChk(this,2);" })
                @Html.Label(ResCommon.CheckALL)
            </div>
            <p>
                <table>
                    <tr>
                        <th>
                            @ResRoleMaster.Permissions
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.All
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.View
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.Insert
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.Update
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.Delete
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.ShowDeleted
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.ShowArchived
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.ShowUDF
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.ShowChangeLog
                        </th>
                    </tr>
                    <tr>
                        <th>
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllView", new { @class = "check-box", id = "AllView$Tab3", onclick = "javascript:SelectRowColumnChk(this,2);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllInsert", new { @class = "check-box", id = "AllInsert$Tab3", onclick = "javascript:SelectRowColumnChk(this,2);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllUpdate", new { @class = "check-box", id = "AllUpdate$Tab3", onclick = "javascript:SelectRowColumnChk(this,2);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllDelete", new { @class = "check-box", id = "AllDelete$Tab3", onclick = "javascript:SelectRowColumnChk(this,2);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllShowDeleted", new { @class = "check-box", id = "AllShowDeleted$Tab3", onclick = "javascript:SelectRowColumnChk(this,2);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllShowArchived", new { @class = "check-box", id = "AllShowArchived$Tab3", onclick = "javascript:SelectRowColumnChk(this,2);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllShowUDF", new { @class = "check-box", id = "AllShowUDF$Tab3", onclick = "javascript:SelectRowColumnChk(this,2);" })
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @Html.CheckBox("AllShowChangeLog", new { @class = "check-box", id = "AllShowChangeLog$Tab3", onclick = "javascript:SelectRowColumnChk(this,2);" })
                        </th>
                    </tr>
                    @if (Model.OtherModuleList != null)
                    {
                        foreach (eTurns.DTO.UserRoleModuleDetailsDTO item in Model.OtherModuleList)
                        {

                            bool IsViewDiff = false;
                            bool IsDeleteDiff = false;
                            bool IsInsertDiff = false;
                            bool IsUpdateDiff = false;
                            bool IsShowArchivedDiff = false;
                            bool IsShowDeletedDiff = false;
                            bool IsShowUDFDiff = false;
                            bool IsShowLogDiff = false;

                            if (objRoleWiseDTO != null && objRoleWiseDTO.OtherModuleList != null)
                            {

                                RoleModuleDetailsDTO objRoleOtherModuleDetailsDTO = objRoleWiseDTO.OtherModuleList.FirstOrDefault(t => t.ModuleID == item.ModuleID && t.RoomId == Model.RoomID && t.CompanyID == Model.CompanyId && t.EnterpriseID == Model.EnterpriseId);
                                if (objRoleOtherModuleDetailsDTO != null)
                                {
                                    if (item.IsView != objRoleOtherModuleDetailsDTO.IsView)
                                    {
                                        IsViewDiff = true;
                                    }
                                    if (item.IsDelete != objRoleOtherModuleDetailsDTO.IsDelete)
                                    {
                                        IsDeleteDiff = true;
                                    }
                                    if (item.IsInsert != objRoleOtherModuleDetailsDTO.IsInsert)
                                    {
                                        IsInsertDiff = true;
                                    }
                                    if (item.IsUpdate != objRoleOtherModuleDetailsDTO.IsUpdate)
                                    {
                                        IsUpdateDiff = true;
                                    }

                                    if (item.ShowArchived != objRoleOtherModuleDetailsDTO.ShowArchived)
                                    {
                                        IsShowArchivedDiff = true;
                                    }
                                    if (item.ShowDeleted != objRoleOtherModuleDetailsDTO.ShowDeleted)
                                    {
                                        IsShowDeletedDiff = true;
                                    }
                                    if (item.ShowUDF != objRoleOtherModuleDetailsDTO.ShowUDF)
                                    {
                                        IsShowUDFDiff = true;
                                    }
                                    if (item.ShowChangeLog != objRoleOtherModuleDetailsDTO.ShowChangeLog)
                                    {
                                        IsShowLogDiff = true;
                                    }
                                }
                                else
                                {
                                    if (item.IsView)
                                    {
                                        IsViewDiff = true;
                                    }
                                    if (item.IsDelete)
                                    {
                                        IsDeleteDiff = true;
                                    }
                                    if (item.IsInsert)
                                    {
                                        IsInsertDiff = true;
                                    }
                                    if (item.IsUpdate)
                                    {
                                        IsUpdateDiff = true;
                                    }

                                    if (item.ShowArchived)
                                    {
                                        IsShowArchivedDiff = true;
                                    }
                                    if (item.ShowDeleted)
                                    {
                                        IsShowDeletedDiff = true;
                                    }
                                    if (item.ShowUDF)
                                    {
                                        IsShowUDFDiff = true;
                                    }
                                    if (item.ShowChangeLog)
                                    {
                                        IsShowLogDiff = true;
                                    }
                                }
                            }


                            <tr id="@item.ModuleID">
                                <td title="@item.ModuleToolTipFromResource">
                                    @Html.DisplayFor(t => item.ModuleNameFromResource)
                                </td>
                                <td style="width: 5px"></td>
                                <td align="center">
                                    @Html.CheckBox(item.ModuleID + "_RowAll", new { @class = "check-box", id = item.ModuleID + "_RowAll", onclick = "javascript:SelectRowColumnChk(this,2);" })
                                </td>
                                <td style="width: 5px"></td>
                                @if (IsViewDiff)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.IsView, new { @class = "check-box", id = item.ModuleID + "_View" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.IsView, new { @class = "check-box", id = item.ModuleID + "_View" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsInsertDiff)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.IsInsert, new { @class = "check-box", id = item.ModuleID + "_Insert", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>}
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.IsInsert, new { @class = "check-box", id = item.ModuleID + "_Insert", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsUpdateDiff)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.IsUpdate, new { @class = "check-box", id = item.ModuleID + "_Update", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.IsUpdate, new { @class = "check-box", id = item.ModuleID + "_Update", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsDeleteDiff)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.IsDelete, new { @class = "check-box", id = item.ModuleID + "_Delete", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.IsDelete, new { @class = "check-box", id = item.ModuleID + "_Delete", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsShowDeletedDiff)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.ShowDeleted, new { @class = "check-box", id = item.ModuleID + "_ShowDeleted", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>}
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.ShowDeleted, new { @class = "check-box", id = item.ModuleID + "_ShowDeleted", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsShowArchivedDiff)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.ShowArchived, new { @class = "check-box", id = item.ModuleID + "_ShowArchived", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.ShowArchived, new { @class = "check-box", id = item.ModuleID + "_ShowArchived", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsShowUDFDiff)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.ShowUDF, new { @class = "check-box _ShowUDFAll", id = item.ModuleID + "_ShowUDF", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.ShowUDF, new { @class = "check-box _ShowUDFAll", id = item.ModuleID + "_ShowUDF", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>
                                }
                                <td style="width: 5px"></td>
                                @if (IsShowLogDiff)
                                {
                                    <td align="center" style="background-color: Yellow;">
                                        @Html.CheckBoxFor(t => item.ShowChangeLog, new { @class = "check-box", id = item.ModuleID + "_ShowChangeLog", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>
                                }
                                else
                                {
                                    <td align="center">
                                        @Html.CheckBoxFor(t => item.ShowChangeLog, new { @class = "check-box", id = item.ModuleID + "_ShowChangeLog", onclick = "javascript:SelectViewPermission(this,2);" })
                                    </td>
                                }
                            </tr>
                        }
                    }
                </table>
            </p>
        </div>
        <div id="Roomtab4" class="tab_content">
            <div style="float: right">
                @Html.CheckBox("chkSelectAllTab3", false, new { onclick = "javascript:return SelectAllTabChk(this,3);" })
                @Html.Label(ResCommon.CheckALL)
            </div>
            <p>
                <table>
                    <tr>
                        <th>
                        </th>
                        <th style="width: 5px">
                        </th>
                        <th>
                            @ResRoleMaster.Permissions
                        </th>
                    </tr>
                    @if (Model.NonModuleList != null)
                    {
                        string DisplayName = "";
                        foreach (eTurns.DTO.UserRoleModuleDetailsDTO item in Model.NonModuleList)
                        {
                            bool IsCheckedDiff = false;

                            if (objRoleWiseDTO != null && objRoleWiseDTO.NonModuleList != null)
                            {

                                RoleModuleDetailsDTO objRoleNoneModuleDetailsDTO = objRoleWiseDTO.NonModuleList.FirstOrDefault(t => t.ModuleID == item.ModuleID && t.RoomId == Model.RoomID && t.CompanyID == Model.CompanyId && t.EnterpriseID == Model.EnterpriseId);
                                if (objRoleNoneModuleDetailsDTO != null)
                                {
                                    if (item.IsChecked != objRoleNoneModuleDetailsDTO.IsChecked)
                                    {
                                        IsCheckedDiff = true;
                                    }
                                }
                            }

                            if (item.DisplayOrderName != null && DisplayName != item.DisplayOrderName)
                            {
                                <tr>
                                    <td>
                                        <b><u> @Html.DisplayFor(t => item.DisplayOrderName) </u></b>
                                    </td>
                                    <td style="width: 5px"></td>
                                    <td></td>
                                </tr>
                                DisplayName = item.DisplayOrderName;
                            }

                            if (item.ModuleID == (int)eTurnsWeb.Helper.SessionHelper.ModuleList.AllowOverwriteLotOrSerial
                                || item.ModuleID == (int)eTurnsWeb.Helper.SessionHelper.ModuleList.AllowToEnterLotOrSerialInBlankBox
                                || item.ModuleID == (int)eTurnsWeb.Helper.SessionHelper.ModuleList.ViewOnlyLotOrSerial)
                            {
                                <tr>
                                    @if (IsCheckedDiff)
                                    {
                                        <td align="center" style="background-color: Yellow;">
                                            @Html.CheckBoxFor(t => item.IsChecked, new { @class = "check-box pull-permision", id = item.ModuleID + "_IsChecked" })
                                        </td>
                                    }
                                    else
                                    {
                                        <td align="center">
                                            @Html.CheckBoxFor(t => item.IsChecked, new { @class = "check-box pull-permision", id = item.ModuleID + "_IsChecked" })
                                        </td>
                                    }
                                    <td style="width: 5px"></td>
                                    <td title ="@item.ModuleToolTipFromResource">
                                        @Html.DisplayFor(t => item.ModuleNameFromResource)
                                    </td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    @if (IsCheckedDiff)
                                    {
                                        <td align="center" style="background-color: Yellow;">
                                            @Html.CheckBoxFor(t => item.IsChecked, new { @class = "check-box", id = item.ModuleID + "_IsChecked" })
                                        </td>
                                    }
                                    else
                                    {
                                        <td align="center">
                                            @Html.CheckBoxFor(t => item.IsChecked, new { @class = "check-box", id = item.ModuleID + "_IsChecked" })
                                        </td>
                                    }
                                    <td style="width: 5px"></td>
                                    <td title="@item.ModuleToolTipFromResource">
                                        @Html.DisplayFor(t => item.ModuleNameFromResource)
                                    </td>
                                </tr>
                            }
                        }
                    }
                </table>
            </p>
        </div>
        <div id="Roomtab5" class="tab_content">
            <p>
                <table  id="tblDefaultSetting">
                    @if (Model.OtherDefaultSettings != null)
                    {
                        foreach (eTurns.DTO.UserRoleModuleDetailsDTO item in Model.OtherDefaultSettings)
                        {
                            <tr>
                                   @if (item.ModuleID != 25)
                                    {
                                        <td title="@item.ModuleToolTipFromResource">
                                            @if (item.ModuleID != 25)
                                            {
                                                @Html.DisplayFor(t => item.ModuleNameFromResource)
                                            }
                                        </td>
                                    }
                                    else
                                    {
                                        <td></td>
                                    }
                                <td style="width: 5px"></td>
                                <td>
                                    @if (item.ModuleID == 25)
                                    {

                                    }
                                    else if (item.ModuleID == 99)
                                    {
                                        if ((eTurnsWeb.Helper.SessionHelper.RoleID == -1) || (Room != null && (!Room.ForceSupplierFilter)))
                                        {
                                            @Html.DropDownListFor(t => item.ModuleID, new SelectList(lstSuppliers, "ID", "SupplierName", item.ModuleValue), string.Empty, new { id = item.ModuleID, @class = "text-box", @multiple = "multiple", @size = "5" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(t => item.ModuleID, new SelectList(lstSuppliers, "ID", "SupplierName", item.ModuleValue), string.Empty, new { id = item.ModuleID, @class = "text-box", @multiple = "multiple", @size = "5" , @Disabled = "disabled" })
                                        }
                                        <input type="hidden" value="@item.ModuleValue" id="hdnSupplierIds" />
                                        @*<div class="accordion" id="accordion">
                                            <a href='#' class='downarrow'>
                                                <img src="~/Content/images/down-arrow.gif" alt="" height="24">
                                            </a>
                                            <div class='dropcontent' id="SupplierCollapseIM">
                                            </div>
                                        </div>*@
                                    }
                                    else if (item.ModuleID == 125)
                                    {
                                        string timeFrequency = "0";
                                        string timeBasedUnit = "0";
                                        string orderDollerLimit = "0";
                                        string orderUsedLimit = "0";
                                        string chkDisplay = "display:none;";
                                        string rdoSetLimit = "";
                                        string rdoNoLimit = "checked='checked'";
                                        string ItemorderQuantityLimit = "0";

                                        if (!string.IsNullOrWhiteSpace(item.ModuleValue))
                                        {
                                            if (item.ModuleValue != "NoLimit" && item.ModuleValue.Contains("|"))
                                            {
                                                timeFrequency = item.ModuleValue.Split('|')[0];
                                                timeBasedUnit = item.ModuleValue.Split('|')[1];
                                                orderDollerLimit = item.ModuleValue.Split('|')[2];
                                                orderUsedLimit = item.ModuleValue.Split('|')[3];
                                                
                                                if (item.ModuleValue.Split('|').Length > 5)
                                                { 
                                                    ItemorderQuantityLimit = item.ModuleValue.Split('|')[5];
                                                }
                                                
                                                chkDisplay = "display:;";
                                                rdoSetLimit = "checked='checked'";
                                                rdoNoLimit = "";
                                            }                                            
                                        }

                                        <fieldset id="divTimebased">
                                            <table cellpadding="2" cellspacing="2" border="1" style="width:700px;">
                                                <tr>
                                                    <td>
                                                        <input type="hidden" name="@item.ModuleID" id="hiddenModuleID" value="@item.ModuleValue" />
                                                        <input id="rdoSetLimit" @rdoSetLimit name="OrderLimitOption" onchange="ShowLimitOption(this);" type="radio" value="SetLimit">
                                                        <label for="SetLimit">@eTurns.DTO.Resources.ResCommon.OrderLimit_SetLimit</label>
                                                        <input @rdoNoLimit id="rdoNoLimit" name="OrderLimitOption" onchange="ShowLimitOption(this);" type="radio" value="NoLimit">
                                                        <label for="NoLimit">@eTurns.DTO.Resources.ResCommon.OrderLimit_NoLimit</label>
                                                    </td>
                                                    <td colspan="4">

                                                    </td>
                                                </tr>
                                                <tbody id="trSetLimit" style="@chkDisplay">
                                                    <tr>
                                                        <td>@eTurns.DTO.ResSchedulerReportList.Every :<input type="text" style="width:85px;" class="text-box numericinput" id="txtTimeFrequency" name="txtTimeFrequency" value="@timeFrequency" onkeypress='return isNumberKey(event);' /></td>
                                                        <td>
                                                            <select id="ddlTimeBasedUnit" class="selectBox">
                                                                <option value="0"></option>
                                                                <option value="1">Days</option>
                                                                <option value="2">Weeks</option>
                                                                <option value="3">Months</option>
                                                                <option value="4">Years</option>
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <select id="ddlOrderLimitType" class="selectBox">
                                                                <option value="1">@eTurns.DTO.Resources.ResCommon.OrderLimitType_AllOrder</option>
                                                                <option value="2">@eTurns.DTO.Resources.ResCommon.OrderLimitType_PerOrder</option>
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <span>@eTurns.DTO.Resources.ResCommon.DollarLimit</span>
                                                        </td>
                                                        <td>
                                                            <input type="text" style="width:100px;background-color:#fff !important;" class="text-box numericDecimalinput" id="txtorderDollerLimit" name="txtorderDollerLimit" value="@orderDollerLimit" />
                                                        </td>
                                                       
                                                    </tr>                                                  
                                                    <tr>
                                                        <td>&nbsp;</td>
                                                        <td>
                                                            <span>@eTurns.DTO.Resources.ResCommon.DollarUsed</span>
                                                        </td>
                                                        <td>
                                                            <input type="text" style="width:100px;background-color:#fff;" class="text-box numericDecimalinput" id="txtorderUsedLimit" name="txtorderUsedLimit" value="@orderUsedLimit" />
                                                        </td>
                                                        <td>
                                                            <span>@eTurns.DTO.Resources.ResCommon.ItemOrderQuantityLimit</span>
                                                        </td>
                                                        <td>
                                                            @if (item.ModuleValue == "NoLimit")
                                                            {
                                                                <input type="text" style="width:100px;background-color:#fff;" readonly="readonly" class="text-box numericDecimalinput disableBack" id="txtItemOrderQuantityLimit" name="txtItemOrderQuantityLimit" value="0" />
                                                            }
                                                            else
                                                            {
                                                                <input type="text" style="width:100px;background-color:#fff;" class="text-box numericDecimalinput" id="txtItemOrderQuantityLimit" name="txtItemOrderQuantityLimit" value="0" />
                                                            }
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </fieldset>
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(t => item.ModuleValue, new { id = item.ModuleID, @class = "text-box", maxlength = 128, onkeypress = "javascript:return numberOnly();" })
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td style="height: 5px">
                                    &nbsp;
                                </td>
                            </tr>
                        }
                    }
                </table>
            </p>
        </div>
    </div>
</div>
@*<div style="float: left; margin-left: 35px;">
    @Html.Label("Note: Yellow background checkbox is differ from base role permission")
</div>*@
<script language="javascript" type="text/javascript">
    //    var SelectedModuleList = new Array();
    //    var SelectedNonModuleList = new Array();

    //    var hdnSelectedModuleList = $("#hdnSelectedModuleList");
    //    var hdnSelectedNonModuleList = $("#hdnSelectedNonModuleList");

    var vhiddenModuleID = '';
    var vtxtTimeFrequency = '0';
    var vddlTimeBasedUnit = '0';
    var vtxtorderDollerLimit = '0';
    var vtxtorderUsedLimit = '0';
    var vorderLimitType = '1';
    var vtxtItemOrderQuantityLimit = '0';

    function showHideUsedLimit(vOLT) {       
        if (vOLT == "2") {
        
            $('#txtorderUsedLimit').val("0");
            $('#txtorderUsedLimit').attr("readonly", "readonly");
            $('#txtorderUsedLimit').addClass("disableBack");

            $('#txtItemOrderQuantityLimit').removeAttr("readonly", "readonly");
            $('#txtItemOrderQuantityLimit').removeClass("disableBack");
        }
        else {
            $('#txtorderUsedLimit').removeAttr("readonly", "readonly");
            $('#txtorderUsedLimit').removeClass("disableBack");

            $('#txtItemOrderQuantityLimit').val("0");
            $('#txtItemOrderQuantityLimit').attr("readonly", "readonly");
            $('#txtItemOrderQuantityLimit').addClass("disableBack");
        }
    }


    function ShowLimitOption(currentLimitRadio) {
        var currentLRId = $(currentLimitRadio).attr("id");

        if (currentLRId == "rdoSetLimit") {
            $("#trSetLimit").show();
            
            if ($('#ddlOrderLimitType').val() == "2") {

                $('#txtorderUsedLimit').val("0");
                $('#txtorderUsedLimit').attr("readonly", "readonly");
                $('#txtorderUsedLimit').addClass("disableBack");

                $('#txtItemOrderQuantityLimit').removeAttr("readonly", "readonly");
                $('#txtItemOrderQuantityLimit').removeClass("disableBack");
            }
            else {
                $('#txtorderUsedLimit').removeAttr("readonly", "readonly");
                $('#txtorderUsedLimit').removeClass("disableBack");

                $('#txtItemOrderQuantityLimit').val("0");
                $('#txtItemOrderQuantityLimit').attr("readonly", "readonly");
                $('#txtItemOrderQuantityLimit').addClass("disableBack");
            }
        }
        else if (currentLRId == "rdoNoLimit") {
            $("#trSetLimit").hide();
            $('#hiddenModuleID').val("NoLimit");
        }
    }


    $(document).ready(function () {
        //FillSuppliers();
        bindSupplierMultiSelect();
        
        if ($('#hiddenModuleID').length > 0 && $('#hiddenModuleID').val().length > 0) {
            if ($('#hiddenModuleID').val() == "NoLimit" || $('#hiddenModuleID').val().indexOf("|") == -1) {
                $("#trSetLimit").hide();
                $('#txtTimeFrequency').val("0");
                $('#ddlTimeBasedUnit').val("0");
                $('#txtorderDollerLimit').val("0");
                $('#txtorderUsedLimit').val("0");
                $('#ddlOrderLimitType').val("1");
                $('#txtItemOrderQuantityLimit').val("0");
            }
            else {

                $("#trSetLimit").show();
                vhiddenModuleID = $('#hiddenModuleID').val().split('|');
                vtxtTimeFrequency = vhiddenModuleID[0];
                vddlTimeBasedUnit = vhiddenModuleID[1];
                vtxtorderDollerLimit = vhiddenModuleID[2];
                vtxtorderUsedLimit = vhiddenModuleID[3];
                vorderLimitType = vhiddenModuleID[4];
                if (vhiddenModuleID.length > 5)
                    vtxtItemOrderQuantityLimit = vhiddenModuleID[5];

                $('#txtTimeFrequency').val(vtxtTimeFrequency);
                $('#ddlTimeBasedUnit').val(vddlTimeBasedUnit);
                $('#txtorderDollerLimit').val(vtxtorderDollerLimit);
                $('#txtorderUsedLimit').val(vtxtorderUsedLimit);
                $('#ddlOrderLimitType').val(vorderLimitType);
                $('#txtItemOrderQuantityLimit').val(vtxtItemOrderQuantityLimit);
                showHideUsedLimit($('#ddlOrderLimitType').val());
            }
        }

        $('select#ddlOrderLimitType').change(function () {            
            showHideUsedLimit($(this).val());
        });



        var SupplierList = $("input#hdnSupplierIds").val().split(',');
        var valArr = Array();
        for (var i = 0; i < SupplierList.length; i++) {
            valArr.push(SupplierList[i]);
        }
        var size = valArr.length;
        for (var i = 0; i < size; i++) {
            //    alert(valArr[i]);
            //$("#99").multiselect("widget").find(":checkbox[value='" + valArr[i] + "']").attr("checked", "checked");
            //$("#99").find("option[value='" + valArr[i] + "']").attr("selected", "selected");
            //$("#99 option[value=" + valArr[i] + "]").attr("selected", 1);

            //$("#99").val(valArr[i]);
            $("#99").multiselect("widget").find(":checkbox").each(function () {

                var cid = $(this).attr("value");
                if (cid == valArr[i]) {
                    $(this).attr("checked", "checked");
                }

            });
            $("#99 option").each(function () {

                var cid = $(this).attr("value");
                if (cid == valArr[i]) {
                    $(this).attr("selected", 1);
                }
            });

        }

        $("#99").multiselect("refresh");
        $(".tab_content").hide(); //Hide all content
        $("ul.tabs li:first").addClass("active").show(); //Activate first tab
        $(".tab_content:first").show(); //Show first tab content
        if ($("#99").find("option").length > 0) {
            // $("#99 option:nth-child(1)").attr("value", "0");
        }
        //On Click Event
        $("ul.tabs li").click(function () {
            $("ul.tabs li").removeClass("active"); //Remove any "active" class
            $(this).addClass("active"); //Add "active" class to selected tab
            $(".tab_content").hide(); //Hide all tab content
            var activeTab = $(this).find("a").attr("href"); //Find the rel attribute value to identify the active tab + content
            $(activeTab).fadeIn(); //Fade in the active content
            return true;
        });

        $(".pull-permision").click(function () {

            var vModuleID = $(this).prop("id").split('_')[0]
            if ($(this).is(':checked')) {

                $(".pull-permision").each(function (index, itm) {
                    var vOtherModuleID = $(this).prop("id").split('_')[0]
                    if (vOtherModuleID != vModuleID) {
                        $(this).prop('checked', false);
                    }
                });

            }
            //            else {
            //                //$(this).prop('checked', true);
            //            }
        });


        //        $("#Roomtab5").on('focus', '#99', function (e) {

        //            $(this).autocomplete({
        //                source: function (request, response) {
        //                    $.ajax({
        //                        url: '@Url.Action("GetSuppliersByRoom", "Master")',
        //                        contentType: 'application/json',
        //                        dataType: 'json',
        //                        data: {
        //                            featureClass: "P",
        //                            style: "full",
        //                            maxRows: 1000,
        //                            name_startsWith: request.term,
        //                            RoomId: '@Model.RoomID',
        //                            CompanyId: '@Model.CompanyId'
        //                        },
        //                        success: function (data) {
        //                            response($.map(data, function (item) {
        //                                return {
        //                                    label: item.SupplierName,
        //                                    value: item.SupplierName,
        //                                    selval: item.ID
        //                                }
        //                            }));
        //                        },
        //                        error: function (err) {

        //                        }
        //                    });
        //                },
        //                autoFocus: true,
        //                minLength: 1,
        //                select: function (event, ui) {
        //                    alert(ui.item.selval);
        //                    $("#BinID").val(ui.item.selval);
        //                },
        //                open: function () {
        //                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");

        //                    $(this).autocomplete('widget').css('z-index', 100);
        //                },
        //                close: function () {
        //                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
        //                }
        //            });

        //        });


    });

    function bindSupplierMultiSelect()
    {
        $("#99").multiselect("refresh");
        $("#99").multiselect({            
            noneSelectedText: 'Supplier', selectedList: 5,
            selectedText: function (numChecked, numTotal, checkedItems) {
                return 'Supplier' + ' ' + numChecked + ' ' + selected;
            }
        }).unbind("multiselectclick multiselectcheckall multiselectuncheckall").bind("multiselectclick multiselectcheckall multiselectuncheckall", function (event, ui) {
            if (ui.checked) {
                $("#99").multiselect("widget").find(":checkbox[value='" + ui.value + "']").attr("checked", "checked");
                $("#99 option[value='" + ui.value + "']").attr("selected", 1);
                // SetLabelText('lblselectedRoom', 'ddlStatus');

                var SelectedStatusID = getSelectedID('99');
                $("body").find("input#hdnSupplierIds").val(SelectedStatusID);
            }
            else {
                var SelectedStatusID = getSelectedID('99');
                $("body").find("input#hdnSupplierIds").val(SelectedStatusID);
            }
        });
        //$("#99").multiselect("refresh");
    }

    function getSelectedID(objID) {
        var selectedlist = '';
        var selectedrecs = $("#" + objID).multiselect("getChecked");
        if (selectedrecs.length > 0) {
            $(selectedrecs).each(function (indx, obj) {
                selectedlist += obj.value + ',';
            });
        }

        return selectedlist;
    }

</script>
<style>
    .dropcontent span {
        display: block;
        color: #4d4d4d;
        font-size: 13px;
        line-height: 20px;
        font-weight: normal;
    }
</style>
