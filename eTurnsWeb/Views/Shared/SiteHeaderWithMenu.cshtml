@{
        

    eTurns.DAL.ModuleMasterDAL objModuleMaster = new eTurns.DAL.ModuleMasterDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName);




    string CompanyLogoName = Url.Content("~/Content/Images/CompanyLogo.jpg");
    string EnterpriseLogoName = Url.Content("~/Content/Images/EnterpariseLogo.jpg");
    if (eTurnsWeb.Helper.SessionHelper.EnterPriceID > 0)
    {
        if ((string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.EnterpriseLogoUrl)))
        {
            EnterpriseDTO objEnterpriseDTO = new eTurnsMaster.DAL.EnterpriseMasterDAL().GetEnterprise(eTurnsWeb.Helper.SessionHelper.EnterPriceID);
            if (objEnterpriseDTO != null && !string.IsNullOrWhiteSpace(objEnterpriseDTO.EnterpriseLogo))
            {
                EnterpriseLogoName = Url.Content("~/Uploads/EnterpriseLogos/" + eTurnsWeb.Helper.SessionHelper.EnterPriceID.ToString() + "/" + objEnterpriseDTO.EnterpriseLogo);
                eTurnsWeb.Helper.SessionHelper.EnterpriseLogoUrl = objEnterpriseDTO.EnterpriseLogo;
            }
            else
            {
                eTurnsWeb.Helper.SessionHelper.EnterpriseLogoUrl = EnterpriseLogoName;
            }
        }
        else
        {
            string _entLogo = HttpContext.Current.Server.MapPath(Url.Content("~/Uploads/EnterpriseLogos/" + eTurnsWeb.Helper.SessionHelper.EnterPriceID.ToString() + "/" + eTurnsWeb.Helper.SessionHelper.EnterpriseLogoUrl));
            if (File.Exists(_entLogo))
            {
                EnterpriseLogoName = Url.Content("~/Uploads/EnterpriseLogos/" + eTurnsWeb.Helper.SessionHelper.EnterPriceID.ToString() + "/" + eTurnsWeb.Helper.SessionHelper.EnterpriseLogoUrl);
            }

        }
    }
    if (eTurnsWeb.Helper.SessionHelper.CompanyID > 0 )
    {
        if ((string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.CompanyLogoUrl)))
        {
            CompanyMasterDTO objCompanyMasterDTO = new eTurns.DAL.CompanyMasterDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetCompanyByID(eTurnsWeb.Helper.SessionHelper.CompanyID);
            if (objCompanyMasterDTO != null && !string.IsNullOrWhiteSpace(objCompanyMasterDTO.CompanyLogo))
            {
                CompanyLogoName = Url.Content("~/Uploads/CompanyLogos/" + eTurnsWeb.Helper.SessionHelper.CompanyID.ToString() + "/" + objCompanyMasterDTO.CompanyLogo);
                eTurnsWeb.Helper.SessionHelper.CompanyLogoUrl = objCompanyMasterDTO.CompanyLogo;
            }
            else
            {
                eTurnsWeb.Helper.SessionHelper.CompanyLogoUrl = CompanyLogoName;
            }
        }
        else
        {
            // CompanyLogoName = Url.Content("~/Uploads/CompanyLogos/" + eTurnsWeb.Helper.SessionHelper.CompanyID.ToString() + "/" + eTurnsWeb.Helper.SessionHelper.CompanyLogoUrl);
            string _cmpLogo = HttpContext.Current.Server.MapPath(Url.Content("~/Uploads/CompanyLogos/" + eTurnsWeb.Helper.SessionHelper.CompanyID.ToString() + "/" + eTurnsWeb.Helper.SessionHelper.CompanyLogoUrl));
            if (File.Exists(_cmpLogo))
            {
                CompanyLogoName = Url.Content("~/Uploads/CompanyLogos/" + eTurnsWeb.Helper.SessionHelper.CompanyID.ToString() + "/" + eTurnsWeb.Helper.SessionHelper.CompanyLogoUrl);
            }

        }
    }

    bool AllowToolOrdering = eTurnsWeb.Helper.SessionHelper.AllowToolOrdering;

    bool IsFromSelectedDomain = eTurnsWeb.Helper.SessionHelper.IsFromSelectedDomain;

}
<div id="head">
    <h1 class="logo">
        @if (IsFromSelectedDomain)
        {
            <a id="aAllPageeTurnsLogo" href="https://vmi.borderstates.com/" target="_blank" title="@eTurns.DTO.Resources.ResLayout.LogoTitle">
                <img src="@EnterpriseLogoName" alt="@eTurns.DTO.Resources.ResLayout.OaLogoAlt"  width="247" height="51" />
            </a>
            <a id="aMinMaxeTurnsLogo" style="display:none" href="https://vmi.borderstates.com/" target="_blank" title="@eTurns.DTO.Resources.ResLayout.eTurnsTrackStockMMTLogoTitle">
                <img src="@EnterpriseLogoName" alt="@eTurns.DTO.Resources.ResLayout.OaLogoAlt"  width="247" height="51"/>
            </a>
        }
        else
        {
            <a id="aAllPageeTurnsLogo" href="https://www.eturns.com/" target="_blank" title="@eTurns.DTO.Resources.ResLayout.LogoTitle">
                <img src="~/Content/images/eturnslogo.png" width="162" height="55" alt="@eTurns.DTO.Resources.ResLayout.LogoImgAlt" />
            </a>
            <a id="aMinMaxeTurnsLogo" style="display:none" href="https://www.eturns.com/" target="_blank" title="@eTurns.DTO.Resources.ResLayout.eTurnsTrackStockMMTLogoTitle">
                <img src="~/Content/images/eturnslogo_minmax.jpg" width="162" height="55" alt="@eTurns.DTO.Resources.ResLayout.eTurnsTrackStockMMTLogoImgAlt" />
            </a>
        }

    </h1>
    <div class="oaLogo">
        @if (!IsFromSelectedDomain)
        {
            <img src="@EnterpriseLogoName" alt="@eTurns.DTO.Resources.ResLayout.OaLogoAlt" width="247" height="51" />
        }
    </div>
    <div class="headlinkslbl">
        <div class="firstRow">
            <a href="" id="lnkNgNLF" title="Toggle UI" style="display:none"><img src="~/Content/images/on.PNG" /> </a>
            @(eTurns.DTO.Resources.ResLayout.LogInUser + " " + eTurnsWeb.Helper.SessionHelper.UserName)
            | <a href="@Url.Action("MyProfile", "Master")">
                @eTurns.DTO.Resources.ResLayout.MyProfile
            </a>&nbsp;| <a href="@Url.Action("LogoutUser", "Master")">@eTurns.DTO.Resources.ResLayout.Logout</a>
            @*id="ancLogout"*@
        </div>
        @if (eTurnsWeb.Helper.SessionHelper.CurrentLoggedinUserName != null && (!string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.CurrentLoggedinUserName)))
        {
            <div class="firstRow">
                <a href="@Url.Action("PreviousUserLoggedIn", "Master")">
                    @eTurns.DTO.Resources.ResLayout.BackToPreviousUser
                </a>
            </div>
        }
        <div class="secondRow">
            <img src="@CompanyLogoName" width="100" height="33"  alt="@eTurns.DTO.Resources.ResLayout.CompanyLogoAlt" class="alc dynamiccompanylogo" />
        </div>
    </div>
    <div id="divTopNav" class="topNavWrap" ></div>
 
    <div class="topPart">
        <div class="stockroom">
            <div class="editor-field" id="divEnterPrise">
                <span>@ResCompany.Enterprise </span>
                @{
                    List<EnterpriseDTO> lstEnterPrises;
                    List<CompanyMasterDTO> lstCompanies;
                    List<RoomDTO> lstRooms;
                    if (eTurnsWeb.Helper.SessionHelper.EnterPriseList != null && eTurnsWeb.Helper.SessionHelper.EnterPriseList.Count > 0)
                    {
                        //lstEnterPrises = eTurnsWeb.Helper.SessionHelper.EnterPriseList.Where(t => t.IsActive == true).ToList();
                        lstEnterPrises = eTurnsWeb.Helper.SessionHelper.EnterPriseList.OrderBy(t => t.Name).ToList();

                    }
                    else
                    {
                        lstEnterPrises = new List<EnterpriseDTO>();
                    }
                    if (eTurnsWeb.Helper.SessionHelper.CompanyList != null && eTurnsWeb.Helper.SessionHelper.CompanyList.Count > 0)
                    {
                        //lstCompanies = eTurnsWeb.Helper.SessionHelper.CompanyList.Where(t => t.EnterPriseId == eTurnsWeb.Helper.SessionHelper.EnterPriceID && t.IsActive == true).ToList();
                        lstCompanies = eTurnsWeb.Helper.SessionHelper.CompanyList.Where(t => t.EnterPriseId == eTurnsWeb.Helper.SessionHelper.EnterPriceID).ToList();
                    }
                    else
                    {
                        lstCompanies = new List<CompanyMasterDTO>();
                    }
                    if (eTurnsWeb.Helper.SessionHelper.RoomList != null && eTurnsWeb.Helper.SessionHelper.RoomList.Count > 0)
                    {
                        //lstRooms = eTurnsWeb.Helper.SessionHelper.RoomList.Where(t => t.EnterpriseId == eTurnsWeb.Helper.SessionHelper.EnterPriceID && t.CompanyID == eTurnsWeb.Helper.SessionHelper.CompanyID && t.IsRoomActive == true).ToList();
                        lstRooms = eTurnsWeb.Helper.SessionHelper.RoomList.Where(t => t.EnterpriseId == eTurnsWeb.Helper.SessionHelper.EnterPriceID && t.CompanyID == eTurnsWeb.Helper.SessionHelper.CompanyID).ToList();
                    }
                    else
                    {
                        lstRooms = new List<RoomDTO>();
                    }
                }
                @if (lstEnterPrises.Any())
                {@Html.DropDownList("ddlEnterprise", new SelectList(lstEnterPrises,
               "ID", "Name", eTurnsWeb.Helper.SessionHelper.EnterPriceID), new
               {
                   @class = "selectBox"
               }) }
            else
            { @Html.DropDownList("ddlEnterprise", new[] { new SelectListItem { Text
        = "No Enterprise" } }, new { @class = "selectBox" })}
                <span>@ResLayout.Company </span>
                @if
(lstCompanies.Any())
                {@Html.DropDownList("ddlCompany", new SelectList(lstCompanies,
           "ID", "Name", eTurnsWeb.Helper.SessionHelper.CompanyID), new
           {
               @class = "selectBox"
           }) }
            else
            { @Html.DropDownList("ddlCompany", new[] { new SelectListItem { Text =
        "No Company" } }, new { @class = "selectBox" })}
                <span>
                    @eTurns.DTO.Resources.ResLayout.StockRoom
                </span>
                @if (lstRooms.Any())
                {
                    @Html.DropDownList("ddlStockroom", new SelectList(lstRooms, "ID", "RoomName", eTurnsWeb.Helper.SessionHelper.RoomID), new { @class = "selectBox" })
                }
                else
                {
                    @Html.DropDownList("ddlStockroom", new[] { new SelectListItem { Text = "No Rooms" } }, new { @class = "selectBox" })
                }
            </div>
        </div>
        @*<div class="breadcrums">
                <ul>
                    <li><a href="javascript:void(0);">@eTurns.DTO.Resources.ResLayout.Consume <span>(2)</span></a></li>
                    <li><a href="javascript:void(0);">@eTurns.DTO.Resources.ResLayout.Requisitions <span>
                        (2)</span></a></li>
                    <li class="current">@eTurns.DTO.Resources.ResLayout.Item <span>(14)</span></li>
                </ul>
            </div>*@
        <div class="autoRefresh">
            <div class="editor-field">
                <span>@eTurns.DTO.Resources.ResLayout.Language </span>@Html.DropDownList("ddlCompanyLanguage", new[] { new SelectListItem { Text = "", Value = "" } }, new { @class = "selectBox" })
            </div>
        </div>
        @*<div class="autoRefresh">
                Auto-refresh:
                <input type="checkbox" id="GridAutoRefresh" />
            </div>*@
    </div>
</div>
<div id="divVideoPlayer">
</div>
<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.tinysort.js")"></script>
<script type="text/javascript">
    var isToolOrderAllowed = '@AllowToolOrdering';
    $("#divLnav").mouseenter(function () {
        $("#ddlEnterprise").blur();
        $("#ddlCompany").blur();
        $("#ddlStockroom").blur();
    })
    //$(document).ready(function () {
    //    $("li.sortthis").find('ul > li').tsort();

    //    if (isToolOrderAllowed !== undefined && isToolOrderAllowed != null && isToolOrderAllowed != '') {
    //        var url = window.location.href;
    //        if (url.toLowerCase().indexOf("tool/toollist") > -1 && isToolOrderAllowed.toLowerCase() === "false") {
    //            window.location.href = url.toLowerCase().replace('tool/toollist', 'Assets/ToolList')
    //        }
    //        else if (url.toLowerCase().indexOf("assets/toollist") > -1 && isToolOrderAllowed.toLowerCase() === "true") {
    //            window.location.href = url.toLowerCase().replace('assets/toollist', 'Tool/ToolList')
    //        }
    //    }

    //});
   

    function OpenInformationVideo(VideoName, Title) {

        setTimeout(function () {
            if (document.createElement('video').canPlayType) {
                $("#divVideoPlayer").html('<video width="99%" height="99%" controls autoplay><source src="/Content/HelpDoc/InformationVideos/' + VideoName + '" type="video/mp4"></video>');
            } else {
                $("#divVideoPlayer").html('<embed src="/Content/HelpDoc/InformationVideos/' + VideoName + '" autostart="true" height="99%" width="99%" allowfullscreen="true"/>');
            }
        }, 1000);

        $("#divVideoPlayer").dialog('option', 'title', Title);
        $("#divVideoPlayer").dialog('open');

        return false;
    }

    function OpenHelpVideo(VideoName, Title) {

        setTimeout(function () {
            if (document.createElement('video').canPlayType) {
                $("#divVideoPlayer").html('<video width="99%" height="99%" controls autoplay><source src="/Uploads/HelpVideo/' + VideoName + '" type="video/mp4"></video>');
            } else {
                $("#divVideoPlayer").html('<embed src="/Uploads/HelpVideo/' + VideoName + '" autostart="true" height="99%" width="99%" allowfullscreen="true"/>');
            }
        }, 1000);

        $("#divVideoPlayer").dialog('option', 'title', Title);
        $("#divVideoPlayer").dialog('open');

        return false;
    }

    function OpenHelpDocVideo(VideoName, Title) {

        setTimeout(function () {
            if (document.createElement('video').canPlayType) {
                $("#divVideoPlayer").html('<video width="99%" height="99%" controls autoplay><source src="/Uploads/HelpDoc/' + VideoName + '" type="video/mp4"></video>');
            } else {
                $("#divVideoPlayer").html('<embed src="/Uploads/HelpDoc/' + VideoName + '" autostart="true" height="99%" width="99%" allowfullscreen="true"/>');
            }
        }, 1000);

        $("#divVideoPlayer").dialog('option', 'title', Title, 'target', '_blank');
        $("#divVideoPlayer").dialog('open');

        return false;
    }

    $(document).ready(function () {
        var ActivePath = window.location.pathname.toLowerCase();
        if (ActivePath == "/master/inventoryanalysis"            
        ) {
            $("#aMinMaxeTurnsLogo").show();
            $("#aAllPageeTurnsLogo").hide();
        }
        else {
            $("#aMinMaxeTurnsLogo").hide();
            $("#aAllPageeTurnsLogo").show();
        }

        var winW = $(window).width() - 100;
        var winH = $(window).height() - 100;

        $("#divVideoPlayer").dialog(
            {
                autoOpen: false,
                show: "blind",
                hide: "explode",
                height: winH,
                width: winW,
                modal: true,
                title: 'Information Video',
                open: function () {

                },
                beforeClose: function () {
                    if (document.createElement('video').canPlayType) {
                        $("#divVideoPlayer").children().filter("video").each(function () {
                            this.pause();
                            delete this;
                            $(this).remove();
                        });
                        $("#divVideoPlayer").empty();
                    }
                    else {
                        $("#divVideoPlayer").empty();
                    }
                },
                close: function () {

                }
            });


    });
    $(function () {
        setInterval(function () {
            var divUtc = $('span#UTCTimeZoneTime');
            var divLocal = $('span#RoomTimeZoneTime');
            //put UTC time into divUTC
            var localTime = moment.utc(divUtc.text()).toDate();
            //localTime = moment(localTime).format('YYYY-MM-DD HH:mm:ss');
            var d1;
            var strDate1 = divUtc.text();
            d1 = new Date(strDate1.replace(" ", "T"));
            // alert(d.getMinutes() + ':' + d.getSeconds()); //11:55
            d1.setSeconds(d1.getSeconds() + 1);
            // alert(d.getMinutes() + ':0' + d.getSeconds()); //12:05
            var UTCTime = '';
            UTCTime = d1.getFullYear();
            if (parseInt(d1.getMonth() + 1) < 10)
                UTCTime += '-' + "0" + (d1.getMonth() + 1);
            else
                UTCTime += '-' + (d1.getMonth() + 1);
            if (parseInt(d1.getDate()) < 10)
                UTCTime += '-' + "0" + (d1.getDate());
            else
                UTCTime += '-' + (d1.getDate());
            if (parseInt(d1.getHours()) < 10)
                UTCTime += ' ' + "0" + (d1.getHours());
            else
                UTCTime += ' ' + (d1.getHours());
            if (parseInt(d1.getMinutes()) < 10)
                UTCTime += ':' + "0" + (d1.getMinutes());
            else
                UTCTime += ':' + (d1.getMinutes());
            if (parseInt(d1.getSeconds()) < 10)
                UTCTime += ':' + "0" + (d1.getSeconds());
            else
                UTCTime += ':' + (d1.getSeconds());
            //divLocal.text(d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate() + ' ' + d.getHours() + ':' + d.getMinutes() + ':' + d.getSeconds());
            divUtc.text(UTCTime);

            //get text from divUTC and conver to local timezone
            var localTime = moment.utc(divUtc.text()).toDate();
            //localTime = moment(localTime).format('YYYY-MM-DD HH:mm:ss');
            var d;
            var strDate = divLocal.text();
            d = new Date(strDate.replace(" ", "T"));
            // alert(d.getMinutes() + ':' + d.getSeconds()); //11:55
            d.setSeconds(d.getSeconds() + 1);
            // alert(d.getMinutes() + ':0' + d.getSeconds()); //12:05
            var localTime = '';
            localTime = d.getFullYear();
            if (parseInt(d.getMonth() + 1) < 10)
                localTime += '-' + "0" + (d.getMonth() + 1);
            else
                localTime += '-' + (d.getMonth() + 1);
            if (parseInt(d.getDate()) < 10)
                localTime += '-' + "0" + (d.getDate());
            else
                localTime += '-' + (d.getDate());
            if (parseInt(d.getHours()) < 10)
                localTime += ' ' + "0" + (d.getHours());
            else
                localTime += ' ' + (d.getHours());
            if (parseInt(d.getMinutes()) < 10)
                localTime += ':' + "0" + (d.getMinutes());
            else
                localTime += ':' + (d.getMinutes());
            if (parseInt(d.getSeconds()) < 10)
                localTime += ':' + "0" + (d.getSeconds());
            else
                localTime += ':' + (d.getSeconds());
            //divLocal.text(d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate() + ' ' + d.getHours() + ':' + d.getMinutes() + ':' + d.getSeconds());
            divLocal.text(localTime);


        }, 1000);

        _Common.loadHeader();
    });
</script>
