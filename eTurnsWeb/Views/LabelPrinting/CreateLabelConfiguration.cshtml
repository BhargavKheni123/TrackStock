@model eTurns.DTO.LabelPrinting.LabelFieldModuleTemplateDetailDTO
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";

}
<script src="@Url.Content("~/Scripts/RemoveOverflowContent.js?v=" + eTurnsWeb.Helper.CommonUtility.GetReleaseNumber())" type="text/javascript"></script>
<style type="text/css">
    .tdselect {
        background-color: #9BB3DA;
    }

    .nottdselect {
        height: auto;
    }
</style>
<div class="userHead">
    @{
        bool isUpdate;
        bool isInsert;
        if (ViewBag.ViewOnly == true)
        {
            isUpdate = false;
            isInsert = false;
        }
        else
        {

            isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.LabelPrinting, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
            isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.LabelPrinting, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
        }
    }
    @using (Ajax.BeginForm("LabelConfigurationSave", "LabelPrinting", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onBinSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmLabelConfiguration" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        if (Model.ID != 0)
        {
            <div class="infoBlock">
                <ul>
                    <li>
                        <label for="RoomName">
                            @Html.Label("")
                        </label>
                        <span></span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.CreatedOn)
                        </label>
                        : <span>@(Model.CreatedDate)</span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.CreatedByName)
                        </label>
                        : <span>@(Model.CreatedByName)</span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.UpdatedOn)
                        </label>
                        : <span>@(Model.UpdatedDate)</span>
                    </li>
                    <li style="border: none">
                        <label for="RoomName">
                            @Html.LabelFor(model => model.UpdatedByName)
                        </label>
                        : <span>@(Model.UpdatedByName)</span>
                    </li>
                </ul>
            </div>
        }
        <div class="editorForm" style="float: left; width: 35%;">
            <ul>
                <li>
                    <div class="editor-label">
                        @Html.Label(eTurns.DTO.LabelPrinting.ResLabelPrinting.CaptionTemplateDropdown)<em> *</em>
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(x => x.TemplateID, new SelectList(ViewBag.LabelTemplateList, "TemplateID", "TemplateNameWithSize", Model.TemplateID), new { id = "ddlLabelTemplateList", @class = "selectBox", @style = "width:190px;" })
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.TemplateID)</span>
                        @Html.HiddenFor(model => model.CreatedBy)
                        @Html.HiddenFor(model => model.UpdatedBy)
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Name)<em> *</em>
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Name, new { id = "NameNew", @class = "text-box", maxlength = 128, @style = "width:175px;" })
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Name)</span>
                        @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                        @Html.HiddenFor(model => model.CreatedOn)
                        @Html.HiddenFor(model => model.UpdatedOn)
                        @Html.HiddenFor(model => model.CreatedBy)
                        @Html.HiddenFor(model => model.UpdatedBy)
                        @Html.HiddenFor(model => model.CompanyID)
                        @Html.HiddenFor(model => model.CreatedByName)
                        @Html.HiddenFor(model => model.UpdatedByName)
                        @Html.HiddenFor(model => model.IsDeleted)
                        @Html.HiddenFor(model => model.IsArchived)
                        @Html.HiddenFor(model => model.IsSaveForEnterprise, new { @id = "hdnIsSaveForEnt" })
                        @Html.HiddenFor(model => model.LabelHTML, new { @id = "hdnHTML", @name = "hdnHTML" })
                        @Html.HiddenFor(model => model.LabelXML, new { @id = "hdnXML", @name = "hdnXML" })
                        @Html.HiddenFor(model => model.BaseLabelTemplateName, new { id = "hdnBaseLabelTemplateName" })
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.Label(eTurns.DTO.LabelPrinting.ResLabelPrinting.CaptionModuleDropdown)<em> *</em>
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(x => x.ModuleID, new SelectList(ViewBag.LabelModuleList, "ID", "ModuleName", Model.ModuleID), new { id = "ddlLabelModuleList", @class = "selectBox", @style = "width:190px;" })
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.ModuleID)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(x => x.FontSize)<em> *</em>
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.FontSize, "{0:0}", new { @id = "txtFontSize", @class = "text-boxPriceFormat", @style = "width:175px;" })
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.FontSize)</span>
                    </div>
                </li>
                <li style="display: none">
                    <div class="editor-label">
                        @Html.LabelFor(x => x.TextFont)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(x => x.TextFont, new SelectList(ViewBag.TextFontList, "Key", "Value", Model.TextFont), new { id = "ddlTextFont", @class = "selectBox", @style = "width:190px;" })
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.TextFont)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(x => x.BarcodeFont)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(x => x.BarcodeFont, new SelectList(ViewBag.BarcodeFontList, "Key", "Value", Model.BarcodeFont), new { id = "ddlBarcodeFont", @class = "selectBox", @style = "width:190px;" })
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.BarcodeFont)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(x => x.BarcodePattern)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(x => x.BarcodePattern, new SelectList(ViewBag.BarcodePatternList, "Key", "Value", Model.BarcodePattern), new { id = "ddlBarcodePattern", @class = "selectBox", @style = "width:190px;" })
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.BarcodePattern)</span>
                    </div>
                </li>
            </ul>
        </div>
        <div id="divFieldsDetails" class="editorForm padRightNone" style="width: 40%;">
        </div>
        <div id="divUnfitItems" class="editorForm padRightNone" style="width: 22%;">
            @Html.Label(eTurns.DTO.LabelPrinting.ResLabelPrinting.NoOfItemsTooLongForLabelSize)
            <br />
            <select id="lstunfitItems" name="lstunfitItems" multiple="multiple" size="10" style="width: 200px;
                height: 200px;"></select>
            <br />
            <label for="" style="float: left; text-align: justify;">
                @eTurns.DTO.LabelPrinting.ResLabelPrinting.ItemsToLongLine2<br />
                @eTurns.DTO.LabelPrinting.ResLabelPrinting.ItemsToLongLine2
            </label>
            <br />
            <input type="button" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ValidateLabelWidth" id="btnValidateSize" class="CreateBtn"
                   style="float: left;" />
        </div>
        <div style="width: 100%; float: left; text-align: center;">
            &nbsp;
        </div>
        <div style="width: 100%; float: left; text-align: center;">
            &nbsp;
        </div>
        <div id="divLabelDesingMain" style="width: 100%; float: left; text-align: center;">
            <div style="width: 100%; float: left; height: 25px; vertical-align: middle; text-align: center;">
                <input type="button" id="btnAddRow" name="btnAddRow" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonRowAdd" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px;" />
                <input type="button" id="btnAddCol" name="btnAddCol" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonColumnAdd " class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px;" />
                <input type="button" id="btnAddBarcode" name="btnAddBarcode" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonBarcodeAdd" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px;" />


                <input type="button" id="btnAddQRcode" name="btnAddQRcode" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonQRcodeAdd" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px;" />

                <input type="button" id="btnAddSrLtBarcode" name="btnAddSrLtBarcode" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonBarcodeSerialLotAdd" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px;display:none;" />
                <input type="button" id="btnAddSrLtQRcode" name="btnAddSrLtQRcode" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonQRcodeSerialLotAdd" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px;display:none" />


                <input type="button" id="btnRemoveRow" name="btnRemoveRow" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonRowRemove" class="CreateBtn"
                       style="float: none; margin:   0px 2px 0px 25px; padding: 3px;" />
                <input type="button" id="btnRemoveCol" name="btnRemoveCol" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonColumnRemove" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px;" />
                <input type="button" id="btnRemoveBarcodeRow" name="btnRemoveBarcodeRow" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonBarcodeRemove"
                       class="CreateBtn" style="float: none; margin: 0px 2px; padding: 3px;" />
                <input type="button" id="btnRemoveQRcode" name="btnRemoveQRcode" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonQRcodeRemove" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px;" />

                <input type="button" id="btnRemoveSrLtBarcodeRow" name="btnRemoveSrLtBarcodeRow" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonBarcodeSerialLotRemove"
                       class="CreateBtn" style="float: none; margin: 0px 2px; padding: 3px;display:none;" />
                <input type="button" id="btnRemoveSrLtQRcode" name="btnRemoveSrLtQRcode" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonQRcodeSerialLotRemove" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px;display:none;" />

            </div>
            <div style="clear:both">&nbsp;</div>
            <div id="divLabelDesing" style="float: left; text-align: center; width: 100%; height: auto;
                padding: 15px 0px;">
                <span id="spnLabelWidth" style="float: left; width: 100%; padding: 0px; margin: 0px;
                    font-weight: bold; font-family: Verdana; margin-bottom: 2px;"></span><span id="spnLabelHeight"
                                                                                               style="float: left; padding: 0px; margin: 25px 0px 0px 0px; font-weight: bold;
                        width: 1px; font-family: Verdana;" class="vertical-text-inner"></span>
                <div id="divDynamic" style="margin: 0px auto;">
                    <table id="tblDynamic" border="0" cellpadding="0" cellspacing="0" style="margin: 0px auto;
                        border: 1px solid Gray; background-color: White; border-collapse: collapse;">
                        <tbody style="table-layout: auto; height: 99%; width: 99%; float: left;"></tbody>
                    </table>
                </div>
            </div>
            <div style="width: 100%; float: left; text-align: center; margin-top: -30px;">
                @eTurns.DTO.LabelPrinting.ResLabelPrinting.Note
            </div>
            <div style="width: 100%; float: left; text-align: center;">
                &nbsp;
            </div>
            <div style="width: 100%; float: left; height: 25px; vertical-align: middle; text-align: center;">
                <input type="button" id="btnReset" name="btnReset" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonReset" class="CreateBtn"
                       style="float: none; margin: 0px 20px 0px 2px; padding: 3px;" />
                <input type="button" id="btnMerge" name="btnMerge" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonMergeCell" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px;" />
                @*<input type="button" id="btnSplit" name="btnSplit" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonSplitCell" class="CreateBtn"
                    style="float: none; margin: 0px 2px; padding: 3px;" />*@
                <input type="button" id="btnSplitH" name="btnSplitH" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.SplitHorizontal" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px;" />
                <input type="button" id="btnSplitV" name="btnSplitV" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.SplitVerticle" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px; display: inline;" />
                <input type="button" id="btnFBold" name="btnFBold" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.Bold" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px; font-weight: bold" />
                <input type="button" id="btnFItalic" name="btnFItalic" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.Italic" class="CreateBtn"
                       style="float: none; margin: 0px 2px; padding: 3px; font-style: italic" />
                <input type="button" id="btnFontSizeIncr" name="btnSetFontSizeIncr" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonFontSizeIncrease"
                       class="CreateBtn" style="float: none; margin: 0px 2px; padding: 3px;" />
                <input type="button" id="btnFontSizeDecr" name="btnSetFontSizeDecr" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonFontSizeDecrease"
                       class="CreateBtn" style="float: none; margin: 0px 2px; padding: 3px;" />
                <span id="spnFSize" style="background-color: lightgray; position: absolute;">&nbsp;</span>
            </div>
            <br />
            <div>
                <input type="button" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.Left" id="btnLeftAlignBottom" style="float: none; margin: 0px 2px;
                    padding: 3px;" name="btnLeftAlign" class="CreateBtn" />
                <input type="button" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.Center" id="btnCenterAlignBottom" style="float: none;
                    margin: 0px 2px; padding: 3px;" name="btnCenterAlign" class="CreateBtn" />
                <input type="button" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.Right" id="btnRightAlignBottom" style="float: none; margin: 0px 2px;
                    padding: 3px;" name="btnRightAlign" class="CreateBtn" />
                <input type="button" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.Justify" id="btnJustifyAlignBottom" style="float: none;
                    margin: 0px 2px; padding: 3px;" name="btnJustifyAlign" class="CreateBtn" />
            </div>
        </div>
        <div style="width: 100%; float: left; text-align: center;">
            &nbsp;
        </div>
        <div style="width: 100%; float: left; text-align: center;">
            &nbsp;
        </div>
        <div style="width: 100%; float: left; text-align: center;">
            @*@if (Model.IsSelectedInModuleConfig)
                {
                    @Html.CheckBoxFor(model => model.IsSelectedInModuleConfig, new { id = "checkMakeItDefault", @class = "check-box", @style = "width:20px;", @disabled = "disabled" })
                    <label>@eTurns.DTO.LabelPrinting.ResLabelPrinting.CheckBoxSetAsDefault</label>
                }
                else
                {*@
            @Html.CheckBoxFor(model => model.IsSelectedInModuleConfig, new { id = "checkMakeItDefault", @class = "check-box", @style = "width:20px;" })
            <label>@eTurns.DTO.LabelPrinting.ResLabelPrinting.CheckBoxSetAsDefault</label>
            @*}*@
        </div>
        <div class="editorForm" style="width: 100%; float: left; text-align: center;">
            <ul>
                <li>
                    @*<div class="editor-label">
                            &nbsp;
                        </div>*@
                    <div class="BtnBlockform" style="width: 50%;">
                        <input type="button" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonCancel" id="btnCancel" class="CreateBtn" />
                        @if (isInsert == true && Model.ID == 0)
                        {
                            <input type="submit" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonSave" id="btnSave" class="CreateBtn" />
                        }
                        else if (isUpdate == true)
                        {
                            if (Model.CompanyID > 0)
                            {
                                if (Model.IsBaseLabelEdit)
                                {
                                    <input type="submit" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonSaveAs" id="btnSaveAs" class="CreateBtn" />
                                }
                                else
                                {
                                    <input type="submit" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonSave" id="btnSave" class="CreateBtn" />
                                }
                            }
                            //else if (Model.CompanyID < 0 && eTurnsWeb.Helper.SessionHelper.UserType <= 2 )
                            if (eTurnsWeb.Helper.SessionHelper.UserType <= 2)
                            {
                                <input type="submit" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonSaveAsBase" style="display: block" id="btnSaveAsEnterprise"
                                       class="CreateBtn" />
                            }
                        }
                        else if (isUpdate == false && isInsert == false)
                        {
                            <script type="text/javascript">
                                disableControls('frmLabelConfiguration');
                                $('#btnCancel').removeAttr('disabled');
                            </script>
                        }
                        @if (eTurnsWeb.Helper.SessionHelper.UserType <= 2 && Model.ID <= 0)
                        {
                            <input type="submit" value="@eTurns.DTO.LabelPrinting.ResLabelPrinting.ButtonSaveAsBase" style="display: block" id="btnSaveAsEnterprise"
                                   class="CreateBtn" />
                        }
                    </div>
                </li>
            </ul>
        </div>
    }
</div>
<script type="text/javascript">

    $("form").submit(function (e) {
        $.validator.unobtrusive.parse("#frmLabelConfiguration");
        if ($(this).valid()) {

        }
        e.preventDefault();

        $('#hdnHTML').val($('#divLabelDesing').html());
        $('#hdnXML').val('');
        var xml = GetXML();
        
        if (xml === false || xml === '') {
            return false;
        }


        if ($("#ddlBarcodeKey").val() <= 0) {
            //$('div#target').fadeToggle();
            //$("div#target").delay(2000).fadeOut(200);
            showNotificationDialog();
            $("#spanGlobalMessage").html('@eTurns.DTO.LabelPrinting.ResLabelPrinting.ReqBarcodeKey');
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            return false;
        }

        $('#hdnXML').val(xml);
      
    });

    $('#btnSaveAsEnterprise').on('click', function () {
        $('#hdnIsSaveForEnt').val('true');
        $('#txtLPFilter').val('');
        fnFilterLPList('');
    });
  
    $('#btnSaveAs').on('click', function () {
        if ($('#NameNew').val() == $('#hdnBaseLabelTemplateName').val()) {
            var span = $('#NameNew').parent().find("span.ErrorMessage");
            //var str = '<span class="field-validation-error" for="NameNew" generated="true">Name "' + $('#NameNew').val() + '" is already exist.</span>';
            var strMsg = '@(string.Format(eTurns.DTO.LabelPrinting.ResLabelPrinting.ErrorMassageForBaseTemplateExist, Model.BaseLabelTemplateName))'
            var str = '<span class="field-validation-error" for="NameNew" generated="true">' + strMsg + '</span>';
            $('#NameNew').addClass('input-validation-error');
            $(span).children().html(str);
            $('#NameNew').focus();
            return false;
        }
        else {
            $('#hiddenID').val('0');
        }
        $('#txtLPFilter').val('');
        fnFilterLPList('');
    });
</script>
<script type="text/javascript">
    $(".text-boxPriceFormat").priceFormat({
        prefix: '',
        thousandsSeparator: '',
        centsLimit: parseInt('0')
    });


    function onBinSuccess(response) {
        IsRefreshGrid = true;
        showNotificationDialog();
        $("#spanGlobalMessage").html(response.Message);
        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
        var idValue = $("#hiddenID").val();
        $('#DivLoading').hide();
        if (response.Status == "fail") {
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            $("#NameNew").val("");
            $("#NameNew").focus();
        }
        else if (idValue == 0) {
            $("#NameNew").focus();
            if (response.Status == "duplicate")
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
            else {
                clearControls('frmLabelConfiguration');
                ShowNewTab('LabelConfigurationCreate', 'frmLabelConfiguration');
            }
        }
        else if (idValue > 0) {
            if (response.Status == "duplicate") {
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
                $("#NameNew").val("");
                $("#NameNew").focus();
            }
            else
                SwitchTextTab(0, 'LabelConfigurationCreate', 'frmLabelConfiguration');
        }
    }
    function onFailure(message) {

        $("#spanGlobalMessage").html(message.statusText);
        showNotificationDialog();
        $("#NameNew").focus();
    }

    $('#ddlBarcodePattern').on('change', function () {
        if ($(this).val() == 'UK') {
            $('#liIncludebin, #liIncludeQuantity, #liQuantityField').css('display', 'block');
        }
        else if ($('#ddlBarcodeFont').val() == '39') {
            $('#liIncludebin, #liIncludeQuantity, #liQuantityField').css('display', 'none');
        }
    });

    $('#ddlBarcodeFont').on('change', function () {
        if ($(this).val() == 39 && $('#ddlBarcodeFont').val() == 'UK') {
            if ($('#ddlLabelModuleList').val() != 2) {
                $('#ddlLabelModuleList').val(2);
                $('#ddlLabelModuleList').change();
            }
            $('#liIncludebin, #liIncludeQuantity, #liQuantityField').css('display', 'none');
        }
        else {
            $('#liIncludebin, #liIncludeQuantity, #liQuantityField').css('display', 'block');
        }
    });

    $('#ddlLabelModuleList').change(function () {

        $('#btnAddSrLtBarcode,#btnAddSrLtQRcode,#btnRemoveSrLtBarcodeRow,#btnRemoveSrLtQRcode').css('display', 'none');
        if ($(this).val() == 2) {
            if ($("#ddlBarcodeFont option[value='39']").length <= 0) {
                $('#ddlBarcodeFont').append($("<option></option>").attr("value", 39).text('Code 3 of 9'));
            }
            $('#btnAddSrLtBarcode,#btnAddSrLtQRcode,#btnRemoveSrLtBarcodeRow,#btnRemoveSrLtQRcode').css('display', '');
        }
            //else if ($(this).val() == 4 || $(this).val() == 6 || $(this).val() == 7 || $(this).val() == 9) {
            //    $('#btnAddSrLtBarcode,#btnAddSrLtQRcode,#btnRemoveSrLtBarcodeRow,#btnRemoveSrLtQRcode').css('display', '');
            //}
        else {
            $("#ddlBarcodeFont option[value='39']").remove();
        }

        $('#btnReset').click();
        GetFields($(this).val())
        showHideCustomizeFont();

        FillBarcodePattern($(this).val());

    });

    function FillBarcodePattern(moduleID) {
       $('#DivLoading').show();
        $.ajax({
            'url': 'GetBarcodePatternsByModuleID',
            'type': 'Get',
            'data': { "ModuleID": moduleID },
            'contentType': 'application/json',
            'dataType': 'json',
            'success': function (result) {
                if (result.BarcodePatterns.length > 0)
                    $('#ddlBarcodePattern').html('');

                for (var i = 0; i < result.BarcodePatterns.length; i++) {
                    $('#ddlBarcodePattern').append($("<option></option>").attr("value", result.BarcodePatterns[i].key).text(result.BarcodePatterns[i].value));
                    $('#DivLoading').hide();
                }
                $('#ddlBarcodePattern').trigger('change');
            },
            'error': function (xhr) {
                ShowNotificationMessage(xhr.status + ' ' + xhr.statusText + ' ' + xhr.responseText);
                $('#DivLoading').hide();
            }
        });
    }
    $('#btnCancel').click(function (e) {
        //isGridRefresh = true;
        SwitchTextTab(0, 'LabelConfigurationCreate', 'frmLabelConfiguration');
        //if (oTable !== undefined && oTable != null) {
        //    oTable.fnDraw();
        //}
        $('#txtLPFilter').val('');
        fnFilterLPList('');
    });
    function GetFields(val) {

        $('#divFieldsDetails').html('');
        if (val != '' && isNaN(parseInt(val)) == false && parseInt(val) > 0) {
            $('#DivLoading').show();
            var obj = { ID: '@Model.ID', ModuleID: val }
            $.ajax({
                'url': 'GetFieldsForModules',
                'type': 'Post',
                'data': JSON.stringify(obj),
                'contentType': 'application/json',
                'dataType': 'text',
                'success': function (result) {
                    $('#divFieldsDetails').html(result);
                    $('#spnBKErrorMsg').find('span').text('');
                    $("#divFieldList label").draggable({
                        appendTo: "body",
                        helper: "clone"
                    });
                    $('#DivLoading').hide();
                },
                'error': function (xhr) {
                    $('#DivLoading').hide();
                }
            });
            //            $.get('GetFieldsForModules', JSON.stringify($('#frmLabelConfiguration').serialize()), function (result) {
            //                $('#divFieldsDetails').html(result);
            //                $('#spnBKErrorMsg').find('span').text('')
            //                $("#divFieldList label").draggable({
            //                    appendTo: "body",
            //                    helper: "clone"
            //                });
            //                $('#DivLoading').hide();
            //            });
        }

    }

    $('#ddlLabelTemplateList').change(function () {
        $('#btnReset').click();
        GetTemplateDetail($(this).val())
        showHideCustomizeFont();

    });
    function GetTemplateDetail(val) {

        if (val != '' && isNaN(parseInt(val)) == false && parseInt(val) > 0) {
            $('#DivLoading').show();
            $('#divLabelDesingMain').show();
            $.get('GetTemplateDetailByID', { 'TemplateID': val }, function (result) {
                var width = result.TemplateDetail.LabelWidth + 'in';
                var height = result.TemplateDetail.LabelHeight + 'in';

                $('#divDynamic').css('width', width);
                $('#divDynamic').css('height', height);

                $('#tblDynamic tbody').css('width', width);
                $('#tblDynamic tbody').css('height', height);
                $('#spnLabelHeight').css('height', height);
                $('#spnLabelWidth').text(width);
                $('#spnLabelHeight').text(height);
                $("#spnLabelHeight").offset({ left: 0 });
                $("#spnLabelHeight").offset({ left: ($('#tblDynamic').offset().left) - 20 })
                $('#DivLoading').hide();
            });
        }
        else {
            $('#divLabelDesingMain').hide();
        }

    }



    $('#txtFontSize').blur(function () {
        if ($(this).val().length > 0) {
            $('#tblDynamic tr').find('td').each(function () {
                var fs = $.trim($('#txtFontSize').val());
                if (!isNaN(fs) && fs > 0) {
                    $(this).css('font-size', fs + 'pt');
                }
            });
            SetRowID();
        }

    });
    ////WI-2488
    //function SetRowID() {
    function SetRowID(IsEditMode) {
        var rowIndex = 1;
        var colIndex = 1;
        var maxCol = GetMaxColumns();
        var width = $('#tblDynamic tbody').css('width').replace('px', '');
        var fnSize = $('#txtFontSize').val();
        var rowH = ((fnSize * 16) / 9);
        $('#tblDynamic tr').each(function (i) {
            
            rowIndex = (i + 1);
            $(this).attr('id', 'tr_' + rowIndex);
            colIndex = 1;
            //if ($(this).find('#div_barcode').length <= 0 && $(this).find('#div_srltbarcode').length <= 0) {
                $(this).css('height', rowH + 'px');
            //}

            $(this).find('td').each(function (j) {
                
                colIndex = (j + 1);
                if ($(this).find('img').length == 0) {
                    $(this).attr('id', 'td_' + rowIndex + '_' + colIndex);
                    var colspn = $(this).attr('colspan');
                    if (isNaN(parseInt(colspn)) || parseInt(colspn) <= 0)
                        colspn = 1;

                    if (!isNaN(parseInt(width)) && parseInt(width) > 0) {
                        wd = (width / maxCol)
                        wd = (wd * parseInt(colspn));
                        $(this).css('width', wd + 'px');
                    }
                    $(this).attr('colspan', colspn);
                    var fs = 0;

                    if ($(this).attr('style').indexOf('font-size') > 0) {
                        fs = GetFontSizeInPT($(this).css('font-size'));
                    }
                    else {
                        fs = $.trim($('#txtFontSize').val());

                    }

                    if (!isNaN(fs) && fs > 0) {
                        $(this).css('font-size', fs + 'pt');
                    }
                    $(this).css('font-family', $.trim($('#ddlTextFont').val()));
                    $(this).css('border-collapse', 'collapse');
                    // $(this).css('text-align', 'left');
                    $(this).css('vertical-align', 'top');

                }
                else {
                    var maxwdth = $('#tblDynamic tbody').css('width').replace('px', '');
                    var maxHght = $('#tblDynamic tbody').css('height').replace('px', '');
                    var minwdth = $(this).css('width').replace('px', '');
                    var minhght = $(this).css('height').replace('px', '');
                    maxHght = parseInt(maxHght) - 2;
                    minhght = parseInt(minhght)
                    var trother = $(this).parent();
                    var trHight = 0;
                    var nooftr = $('#tblDynamic tr').length - 1;
                    $('#tblDynamic tr').each(function () {
                        //if ($(this).find('#div_barcode').length <= 0 && $(this).find('#div_srltbarcode').length <= 0) {
                            trHight += parseFloat($(this).css('height').replace('px', ''));
                        //}
                    });
                    maxHght = maxHght - (trHight + 2);
                    //$('#div_barcode').find('.ui-resizable-handle').remove();
                    if ($(this).find('#div_barcode').length > 0) {

                        //$(this).attr('colspan', maxCol);
                        //if (!isNaN(parseInt(width)) && parseInt(width) > 0) {
                        //    $(this).css('width', width + 'px');                            
                        //}
                        $('#div_barcode').resizable({
                            maxHeight: maxHght,
                            maxWidth: minwdth,
                            minHeight: 25,
                            minWidth: minwdth,
                            alsoResize: "#imgBrc"
                        });
                    }
                    if ($(this).find('#div_srltbarcode').length > 0) {
                        //$(this).attr('colspan', maxCol);
                        //if (!isNaN(parseInt(width)) && parseInt(width) > 0) {
                        //    $(this).css('width', width + 'px');
                        //}
                        $('#div_srltbarcode').resizable({
                            maxHeight: maxHght,
                            maxWidth: minwdth,
                            minHeight: 25,
                            minWidth: minwdth,
                            alsoResize: "#imgSrLtBrc"
                        });
                    }

                    if ($(this).find('#div_qrcode').length > 0) {
                        var imgName = '#' + $(this).find("div[id*='div_qrcode']").find('img').attr('id');
                        $('#div_qrcode').resizable({
                            maxHeight: parseInt($(this).css('width').replace('px', '')),
                            maxWidth: parseInt($(this).css('width').replace('px', '')),
                            minHeight: 34,
                            minWidth: 34,
                            alsoResize: imgName,
                            aspectRatio: true,
                            resize: function (event, ui) {
                                ui.size.height = Math.round(ui.size.height / 34) * 34;
                                ui.size.width = Math.round(ui.size.width / 34) * 34;
                            }
                        });
                    }
                    if ($(this).find('#div_srltqrcode').length > 0) {
                        var imgName = '#' + $(this).find("div[id*='div_srltqrcode']").find('img').attr('id');
                        $('#div_srltqrcode').resizable({
                            maxHeight: parseInt($(this).css('width').replace('px', '')),
                            maxWidth: parseInt($(this).css('width').replace('px', '')),
                            minHeight: 34,
                            minWidth: 34,
                            alsoResize: imgName,
                            aspectRatio: true,
                            resize: function (event, ui) {
                                ui.size.height = Math.round(ui.size.height / 34) * 34;
                                ui.size.width = Math.round(ui.size.width / 34) * 34;
                            }
                        });
                    }
                    if ($(this).find("div[id*='div_ItemImg']").length === 1) {
                        var imgName = '#' + $(this).find("div[id*='div_ItemImg']").find('img').attr('id');
                        var maxNewImgHight = $(this).find("div[id*='div_ItemImg']").parent().css('height').replace('px', '');
                        $(this).find("div[id*='div_ItemImg']").resizable({
                            maxHeight: maxNewImgHight,
                            maxWidth: parseInt($(this).css('width').replace('px', '')),
                            minHeight: 25,
                            minWidth: 25,
                            alsoResize: imgName
                        });
                    }
                    if ($(this).find("div[id*='div_AssetImg']").length === 1) {
                        var imgName = '#' + $(this).find("div[id*='div_AssetImg']").find('img').attr('id');
                        var maxNewImgHight = $(this).find("div[id*='div_AssetImg']").parent().css('height').replace('px', '');
                        $(this).find("div[id*='div_AssetImg']").resizable({
                            maxHeight: maxNewImgHight,
                            maxWidth: parseInt($(this).css('width').replace('px', '')),
                            minHeight: 25,
                            minWidth: 25,
                            alsoResize: imgName
                        });
                    }
                    if ($(this).find("div[id*='div_ToolImg']").length === 1) {
                        var imgName = '#' + $(this).find("div[id*='div_ToolImg']").find('img').attr('id');
                        var maxNewImgHight = $(this).find("div[id*='div_ToolImg']").parent().css('height').replace('px', '');
                        $(this).find("div[id*='div_ToolImg']").resizable({
                            maxHeight: maxNewImgHight,
                            maxWidth: parseInt($(this).css('width').replace('px', '')),
                            minHeight: 25,
                            minWidth: 25,
                            alsoResize: imgName
                        });
                    }

                    if ($(this).find("div[id*='div_SupplierLogo']").length === 1) {
                        var imgName = '#' + $(this).find("div[id*='div_SupplierLogo']").find('img').attr('id');
                        var maxNewImgHight = $(this).find("div[id*='div_SupplierLogo']").parent().css('height').replace('px', '');
                        $(this).find("div[id*='div_SupplierLogo']").resizable({
                            maxHeight: maxNewImgHight,
                            maxWidth: parseInt($(this).css('width').replace('px', '')),
                            minHeight: 25,
                            minWidth: 25,
                            alsoResize: imgName
                        });
                    }

                    if ($(this).find("div[id*='div_EntLogo']").length === 1) {
                        var imgName = '#' + $(this).find("div[id*='div_EntLogo']").find('img').attr('id');
                        var maxNewEntHight = $(this).find("div[id*='div_EntLogo']").parent().css('height').replace('px', '');
                        $(this).find("div[id*='div_EntLogo']").resizable({
                            maxHeight: maxNewEntHight,
                            maxWidth: minwdth,
                            minHeight: 25,
                            minWidth: 25,
                            alsoResize: imgName
                        });
                    }

                    if ($(this).find("div[id*='div_CompLogo']").length === 1) {
                        var imgName = '#' + $(this).find("div[id*='div_CompLogo']").find('img').attr('id');
                        var maxNewCompHight = $(this).find("div[id*='div_CompLogo']").parent().css('height').replace('px', '');
                        $(this).find("div[id*='div_CompLogo']").resizable({
                            maxHeight: maxNewCompHight,
                            maxWidth: parseInt($(this).css('width').replace('px', '')),
                            minHeight: 25,
                            minWidth: 25,
                            alsoResize: imgName
                        });
                    }
                }

                //colIndex += 1;
            });
            //rowIndex += 1;

        });

        //WI-2488
        //$('#tblDynamic tbody').removeOverflow();
        if (!(IsEditMode !== undefined && IsEditMode)) {
            $('#tblDynamic tbody').removeOverflow();
        }

        $('.nottdselect').droppable({
            accept: ":not(.ui-sortable-helper)",
            drop: function (event, ui) {
                var chkID = $(ui.draggable).attr('for');
                var chk = $('#' + chkID);
                var id = $(chk).attr('value');
                //if ($(chk).attr('checked') == "checked") {
                $(this).html('');
                var id = $(chk).attr('value');
                if ((ui.draggable.text() === 'Item Image' || ui.draggable.text() === 'ItemImage') && $(chk).attr('checked') == "checked") {
                    if ($('#tblDynamic tbody').find("div[id*='div_ItemImg_']").length <= 0) {
                        var html = "<div class='ItemImg' id='div_ItemImg_" + id + "' style='text-align:left; width:auto; padding:0px;float:left;'> <img id='imgItem_" + id + "' src='../../Content/images/SampleItem.png' style='float:left;height:25px;width:40px;'  /> </div>";
                        $(this).append(html);
                        SetRowID();
                    }
                }
                else if ((ui.draggable.text() === 'Asset Image' || ui.draggable.text() === 'AssetImage') && $(chk).attr('checked') == "checked") {
                    if ($('#tblDynamic tbody').find("div[id*='div_AssetImg_']").length <= 0) {
                        var html = "<div class='AssetImg' id='div_AssetImg_" + id + "' style='text-align:left; width:auto; padding:0px;float:left;'> <img id='imgAsset_" + id + "' src='../../Content/images/SampleItem.png' style='float:left;height:25px;width:40px;'  /> </div>";
                        $(this).append(html);
                        SetRowID();
                    }
                }
                else if ((ui.draggable.text() === 'Tool Image' || ui.draggable.text() === 'ToolImage') && $(chk).attr('checked') == "checked") {
                    if ($('#tblDynamic tbody').find("div[id*='div_ToolImg_']").length <= 0) {
                        var html = "<div class='ToolImg' id='div_ToolImg_" + id + "' style='text-align:left; width:auto; padding:0px;float:left;'> <img id='imgTool_" + id + "' src='../../Content/images/SampleItem.png' style='float:left;height:25px;width:40px;'  /> </div>";
                        $(this).append(html);
                        SetRowID();
                    }
                }
                else if ((ui.draggable.text() === 'Supplier Logo' || ui.draggable.text() === 'SupplierLogo') && $(chk).attr('checked') == "checked") {
                    if ($('#tblDynamic tbody').find("div[id*='div_SupplierLogo_']").length <= 0) {
                        var html = "<div class='SupplierLogo' id='div_SupplierLogo_" + id + "' style='text-align:left; width:auto; padding:0px;float:left;'> <img id='imgSupplier_" + id + "' src='../../Content/images/SampleSupplier.png' style='float:left;height:25px;width:40px;'  /> </div>";
                        $(this).append(html);
                        SetRowID();
                    }
                }
                else if ((ui.draggable.text() === 'Enterprise Logo' || ui.draggable.text() === 'EnterpriseLogo') && $(chk).attr('checked') == "checked") {
                    if ($('#tblDynamic tbody').find("div[id*='div_EntLogo_']").length <= 0) {
                        var imgHrf = $('.oaLogo').find('img').attr('src');
                        var html = "<div class='EntLogo' id='div_EntLogo_" + id + "' style='text-align:left; width:auto; padding:0px;float:left;'> <img id='imgEntLogo_" + id + "' src='" + imgHrf + "' style='float:left;height:25px;width::40px;'  /> </div>";
                        $(this).append(html);
                        SetRowID();
                    }
                }
                else if ((ui.draggable.text() === 'Company Logo' || ui.draggable.text() === 'CompanyLogo') && $(chk).attr('checked') == "checked") {
                    if ($('#tblDynamic tbody').find("div[id*='div_CompLogo_']").length <= 0) {
                        var imgHrf = $('.secondRow').find('img.dynamiccompanylogo').attr('src');
                        var html = "<div class='CmpLogo' id='div_CompLogo_" + id + "' style='text-align:left; width:auto; padding:0px;float:left;'> <img id='imgCompLog_" + id + "' src='" + imgHrf + "' style='float:left;height:25px;width::40px;'  /> </div>";
                        $(this).append(html);
                        SetRowID();
                    }
                }
                else if (ui.draggable.text() !== 'Company Logo' && ui.draggable.text() !== 'Enterprise Logo' && ui.draggable.text() !== 'Item Image' && ui.draggable.text() !== 'Supplier Logo'
                    && ui.draggable.text() !== 'CompanyLogo' && ui.draggable.text() !== 'EnterpriseLogo' && ui.draggable.text() !== 'ItemImage' && ui.draggable.text() !== 'SupplierLogo' && ui.draggable.text() !== 'AssetImage' && ui.draggable.text() !== 'AssetImage') {
                    $(this).append("<span id='spnText_" + id + "' style='display:block;float:left;width:99%;'> " + ui.draggable.text() + "</span>");
                }
                //}
                tdContentToRemove();
                showHideCustomizeFont();
            }
        });
    }

    function tdContentToRemove() {
        $('#tblDynamic tbody').find('span[id^="spnText_"]').draggable({
            axis: "x",
            drag: function (event, ui) {
                $(this).parent().append("&nbsp;");
                $(this).remove();
            }
        });
    }

    function GetMaxColumns() {
        var maxCells = 1;
        $('#tblDynamic tr').each(function () {
            var noOfTd = 0;
            $(this).find('td').each(function () {
                var colspan = $(this).attr('colspan');
                if (isNaN(parseInt(colspan)) || parseInt(colspan) <= 0) {
                    colspan = 1;
                }
                noOfTd += parseInt(colspan);
            });

            if (parseInt(maxCells) < parseInt(noOfTd)) {
                maxCells = parseInt(noOfTd);
            }
        });
        return maxCells;
    }

    $('#btnRemoveCol').click(function () {
        $('.tdselect').each(function () {
            var id = $(this).attr('id');
            var colNo = id.split('_')[2];
            var rowi = 1;
            $('#tblDynamic tbody tr').each(function () {
                var colj = 1;
                $(this).find('td').each(function () {
                    var colspan = $(this).attr('colspan');
                    if (colspan > 0) {
                        colspan -= 1;
                        $(this).attr('colspan', colspan);
                    }

                    if (colNo == colj) {
                        $(this).remove();
                        SetRowID();
                    }
                    colj += 1;
                });
                rowi += 1;
            });
        });
        SetRowID();

    });

    $('#btnAddCol').click(function () {
        var maxCol = GetMaxColumns() + 1;
        var rowi = 1;
        $('#tblDynamic tbody tr').each(function () {
            if ($(this).find('#div_barcode').length == 0 && $(this).find('#div_srltbarcode').length == 0) {
                var td = "<td class='nottdselect' rowspan='1' colspan='1' style='width:50px;border:solid 1px Gray;text-align:left;' id='tdTemp'>&nbsp;</td>"
                $(this).append(td);
            }
            else

                rowi += 1;
        });
        SetRowID();
    });
    $('#btnAddRow').click(function () {
        $('#spnLabelHeight').css('position', '');

        var maxCol = GetMaxColumns();
        var tr = "<tr id='trTemp' class='dropble' style='width:100%;' ></tr>";
        $('#tblDynamic tbody').append(tr);
        for (var i = 0; i < maxCol; i++) {
            var td = "<td class='nottdselect' rowspan='1' colspan='1' style='width:50px;border:solid 1px Gray;text-align:left;' id='tdTemp" + i + "'>&nbsp;</td>"
            $('#trTemp').append(td);
        }
        $('#tblDynamic tbody').removeOverflow();
        SetRowID();
        $('#spnLabelHeight').css('position', 'relative');
    });
    $('#btnLeftAlign').click(function () {

        $('#tblDynamic tbody tr').each(function () {
            $(this).find("td").each(function () {
                if ($(this).attr("class").indexOf(" tdselect") >= 0) {
                    $(this).css("text-align", "left");
                }
            });
        });
    });
    $('#btnLeftAlignBottom').click(function () {

        $('#tblDynamic tbody tr').each(function () {
            $(this).find("td").each(function () {
                if ($(this).attr("class").indexOf(" tdselect") >= 0) {
                    $(this).css("text-align", "left");
                }
            });
        });
    });

    //$('#btnCenterAlign').click(function () {

    //    $('#tblDynamic tbody tr').each(function () {
    //        $(this).find("td").each(function () {

    //            if ($(this).attr("class").indexOf(" tdselect") >= 0) {
    //                $(this).css("text-align", "center");
    //            }
    //        });
    //    });
    //});
    $('#btnCenterAlignBottom').click(function () {

        $('#tblDynamic tbody tr').each(function () {
            $(this).find("td").each(function () {

                if ($(this).attr("class").indexOf(" tdselect") >= 0) {
                    $(this).css("text-align", "center");
                }
            });
        });
    });
    //$('#btnRightAlign').click(function () {

    //    $('#tblDynamic tbody tr').each(function () {
    //        $(this).find("td").each(function () {
    //            if ($(this).attr("class").indexOf(" tdselect") >= 0) {
    //                $(this).css("text-align", "right");
    //            }
    //        });
    //    });
    //});
    $('#btnRightAlignBottom').click(function () {

        $('#tblDynamic tbody tr').each(function () {
            $(this).find("td").each(function () {
                if ($(this).attr("class").indexOf(" tdselect") >= 0) {
                    $(this).css("text-align", "right");
                }
            });
        });
    });
    //$('#btnJustifyAlign').click(function () {

    //    $('#tblDynamic tbody tr').each(function () {
    //        $(this).find("td").each(function () {
    //            if ($(this).attr("class").indexOf(" tdselect") >= 0) {
    //                $(this).css("text-align", "justify");
    //            }
    //        });
    //    });
    //});
    $('#btnJustifyAlignBottom').click(function () {

        $('#tblDynamic tbody tr').each(function () {
            $(this).find("td").each(function () {
                if ($(this).attr("class").indexOf(" tdselect") >= 0) {
                    $(this).css("text-align", "justify");
                }
            });
        });
    });

    $('#btnRemoveRow').click(function () {
        $('.tdselect').parent().remove();
        SetRowID();
    });


    $('#btnAddBarcode').click(function () {
        
        if ($('#div_barcode').length == 0) {
            @*var trheight = GetCurrentLableHeight() + 25;
            if (ValidateLabelHeight(trheight)) {
                var maxCells = GetMaxColumns();
                var tr = "<tr id='trBarcode' style='width:100%;' ><td colspan='" + maxCells + "'  rowspan='1' id='BarcodeTD' style='width:99%;border:solid 1px Gray;'></td></tr>";
                $('#tblDynamic tbody').append(tr);
                var html = "<div class='bstileone' id='div_barcode' style='text-align:left; width:99%; padding:0px;float:left;'> <img id='imgBrc' src='../../Content/images/SampleBarcodeImage.jpg' style='width:100%;float:left;height:25px;'  /> </div>";
                $('#BarcodeTD').append(html);
                SetRowID();
            }
            else {
                ShowNotificationMessage('@eTurns.DTO.LabelPrinting.ResLabelPrinting.msgBarcodenotAdded');
            }*@
            if ($('#tblDynamic .tdselect').length === 1) {
            $('#tblDynamic .tdselect').each(function () {
                
                    //var maxCells = GetMaxColumns();
                var html = "<div class='bstileone' id='div_barcode' style='text-align:left; width:50%; padding:0px;float:left;'> <img id='imgBrc' src='../../Content/images/SampleBarcodeImage.jpg' style='width:100%;float:left;height:25px;'  /> </div>";
                    $(this).append(html);
                    $(this).removeClass('tdselect');
                    SetRowID();                               

            });
            }
        }
        else {
            ShowNotificationMessage('@eTurns.DTO.LabelPrinting.ResLabelPrinting.DuplicateBarcode');
        }
    });


    $('#btnAddSrLtBarcode').click(function () {

        if ($('#div_srltbarcode').length == 0) {
            //var maxCells = GetMaxColumns();
            //var tr = "<tr id='trSrLtBarcode' style='width:100%;' ><td colspan='" + maxCells + "'  rowspan='1' id='SrLtBarcodeTD' style='width:99%;border:solid 1px Gray;'></td></tr>";
            //$('#tblDynamic tbody').append(tr);
            //var html = "<div class='bstileone' id='div_srltbarcode' style='text-align:left; width:99%; padding:0px;float:left;'> <img id='imgSrLtBrc' src='../../Content/images/SampleSRLTBarcodeImage.jpg' style='width:100%;float:left;height:25px;'  /> </div>";
            //$('#SrLtBarcodeTD').append(html);
            //SetRowID();

            if ($('#tblDynamic .tdselect').length === 1) {
                $('#tblDynamic .tdselect').each(function () {
                    
                    var html = "<div class='bstileone' id='div_srltbarcode' style='text-align:left; width:50%; padding:0px;float:left;'> <img id='imgSrLtBrc' src='../../Content/images/SampleSRLTBarcodeImage.jpg' style='width:100%;float:left;height:25px;'  /> </div>";
                    $(this).append(html);
                    $(this).removeClass('tdselect');
                    SetRowID();

                });
            }
        }
        else {
            ShowNotificationMessage('@eTurns.DTO.LabelPrinting.ResLabelPrinting.DuplicateBarcode');
        }
    });

    $('#btnAddQRcode').click(function () {
        if ($('#tblDynamic .tdselect').length === 1) {
            $('#tblDynamic .tdselect').each(function () {
                if ($('#div_qrcode').length == 0) {
                    var maxCells = GetMaxColumns();
                    var html = "<div class='bstileone' id='div_qrcode' style='text-align:center; width:35px; padding:0px;float:left;'> <img id='imgQR' src='../../Content/images/QRSampleImages.png' style='width:34px;float:left;height:34px;'  /> </div>";
                    $(this).append(html);
                    $(this).removeClass('tdselect');
                    SetRowID();

                }
                else {
                    ShowNotificationMessage('@eTurns.DTO.LabelPrinting.ResLabelPrinting.DuplicateQRCode');
                    return false;
                }

            });
        }
        else {
            ShowNotificationMessage('@eTurns.DTO.LabelPrinting.ResLabelPrinting.SelectSingleCell');
        }
    });

    $('#btnAddSrLtQRcode').click(function () {
        if ($('#tblDynamic .tdselect').length === 1) {
            $('#tblDynamic .tdselect').each(function () {
                if ($('#div_srltqrcode').length == 0) {
                    var maxCells = GetMaxColumns();
                    var html = "<div class='bstileone' id='div_srltqrcode' style='text-align:center; width:35px; padding:0px;float:left;'> <img id='imgSrLtQR' src='../../Content/images/QRSampleSRLTImages.png' style='width:34px;float:left;height:34px;'  /> </div>";
                    $(this).append(html);
                    $(this).removeClass('tdselect');
                    SetRowID();

                }
                else {
                    ShowNotificationMessage('@eTurns.DTO.LabelPrinting.ResLabelPrinting.DuplicateQRCode');
                    return false;
                }

            });
        }
        else {
            ShowNotificationMessage('@eTurns.DTO.LabelPrinting.ResLabelPrinting.SelectSingleCell');
        }
    });

    $('#btnRemoveBarcodeRow').click(function () {
        if ($('#div_barcode').length != 0) {
            //$('#div_barcode').parent().parent().remove();
            $('#div_barcode').parent().html('&nbsp;');
            SetRowID();
        }
    });
    $('#btnRemoveSrLtBarcodeRow').click(function () {
        if ($('#div_srltbarcode').length != 0) {
            //$('#div_srltbarcode').parent().parent().remove();
            $('#div_srltbarcode').parent().html('&nbsp;');
            SetRowID();
        }
    });
    $('#btnRemoveQRcode').click(function () {
        if ($('#div_qrcode').length != 0) {
            $('#div_qrcode').parent().html('&nbsp;');
            SetRowID();
        }
    });
    $('#btnRemoveSrLtQRcode').click(function () {
        if ($('#div_srltqrcode').length != 0) {
            $('#div_srltqrcode').parent().html('&nbsp;');
            SetRowID();
        }
    });



    $('#btnSplitH').click(function () {
        SplitHorizontalCells();
        $('#tblDynamic .tdselect').each(function () {
            $(this).removeClass('tdselect');
        });
        showHideCustomizeFont();
    });

    $('#btnSplitV').click(function () {
        SplitVerticleCells();
        $('#tblDynamic .tdselect').each(function () {
            $(this).removeClass('tdselect');
        });
        showHideCustomizeFont();
    });


    $('#btnSplit').click(function () {
        SplitHorizontalCells();
        SplitVerticleCells();
        $('#tblDynamic .tdselect').each(function () {
            $(this).removeClass('tdselect');
        });
        showHideCustomizeFont();
        return false;


        if ($('#tblDynamic .tdselect').length > 0) {
            $('#tblDynamic .tdselect').each(function () {
                var colspn = $(this).attr('colspan');
                if (colspn != null && colspn !== undefined && !isNaN(parseInt(colspn)) && parseInt(colspn) > 1) {
                    $(this).attr('colspan', (parseInt(colspn) - 1));
                    var td = "<td class='nottdselect' colspan='1'  style='width:50px;border:solid 1px Gray' id='tdTemp'>&nbsp;</td>"
                    $(this).parent().append(td);
                    SetRowID();
                }
            });
        }
    });

    function SplitHorizontalCells() {
        if ($('#tblDynamic .tdselect').length > 0) {
            $('#tblDynamic .tdselect').each(function () {
                var colspn = parseInt($(this).attr('colspan'));
                var rowspn = parseInt($(this).attr('rowspan'));
                if (isNaN(rowspn) || rowspn <= 0)
                    rowspn = 1;

                if (!isNaN(parseInt(colspn)) && parseInt(colspn) > 1) {
                    var CurrCellId = $(this).attr('id');
                    var CurrRowNo = parseInt(CurrCellId.split('_')[1]);
                    for (var i = CurrRowNo; i < (CurrRowNo + rowspn) ; i++) {
                        var nextRowTD = 'tr_' + i;
                        $(this).attr('colspan', (colspn - 1));
                        var td = "<td class='nottdselect' colspan='1' rowspan='1'  style='width:50px;border:solid 1px Gray' id='tdTemp'>&nbsp;</td>"
                        $('#' + nextRowTD).append(td);
                        SetRowID();
                        SplitHorizontalCells();
                    }

                }
            });
        }
    }

    function SplitVerticleCells() {
        if ($('#tblDynamic .tdselect').length > 0) {
            $('#tblDynamic .tdselect').each(function () {
                var CurrRowSpan = parseInt($(this).attr('rowspan'));
                var CurrColSpan = parseInt($(this).attr('colspan'));
                if (!isNaN(CurrRowSpan) && CurrRowSpan > 1) {
                    var CurrCellId = $(this).attr('id');
                    var CurrRowNo = parseInt(CurrCellId.split('_')[1]);
                    var nextRowTD = 'tr_' + (CurrRowNo + (CurrRowSpan - 1));
                    $(this).attr('rowspan', (CurrRowSpan - 1));
                    for (var i = 0; i < CurrColSpan; i++) {
                        var td = "<td class='nottdselect' rowspan='1' colspan='1'  style='width:50px;border:solid 1px Gray' id='tdTemp" + i + "'>&nbsp;</td>"
                        $('#' + nextRowTD).append(td);
                    }
                    SetRowID();
                    SplitVerticleCells();
                }
            });
        }
    }


    function MergeHorizontalCells() {
        if ($('#tblDynamic .tdselect').length > 1) {
            $('#tblDynamic tr').each(function () {
                if ($(this).find('td.tdselect').length > 1) {
                    $(this).find('td.tdselect').each(function () {
                        var CurrRowSpan = $(this).attr('rowspan');
                        var NextRowSpan = $(this).next().attr('rowspan');

                        if (isNaN(parseInt(CurrRowSpan)) || parseInt(CurrRowSpan) <= 0) {
                            CurrRowSpan = 1;
                        }

                        if (isNaN(parseInt(NextRowSpan)) || parseInt(NextRowSpan) <= 0) {
                            NextRowSpan = 1;
                        }

                        if (CurrRowSpan === NextRowSpan) {
                            var CurrCellId = $(this).attr('id');
                            var NextCellId = $(this).next().attr('id');
                            var CurrCellNo = CurrCellId.split('_')[2];
                            var NextCellNo = NextCellId.split('_')[2];
                            var CurrRowNo = CurrCellId.split('_')[1];

                            if ((parseInt(CurrCellNo) + 1) === parseInt(NextCellNo)) {
                                var CurrColSpan = $(this).attr('colspan');
                                var nextColSpan = $('#' + NextCellId).attr('colspan');
                                if (isNaN(parseInt(CurrColSpan)) || parseInt(CurrColSpan) <= 0) {
                                    CurrColSpan = 1;
                                }
                                if (isNaN(parseInt(nextColSpan)) || parseInt(nextColSpan) <= 0) {
                                    nextColSpan = 1;
                                }
                                CurrColSpan = parseInt(CurrColSpan) + parseInt(nextColSpan);

                                $(this).attr('colspan', CurrColSpan);
                                $(this).attr('rowspan', CurrRowSpan);
                                $(this).next().remove();
                                SetRowID();
                                MergeHorizontalCells();
                            }
                        }
                    });
                }
            });
        }
    }

    function MergeVerticleCells() {
        if ($('#tblDynamic .tdselect').length > 1) {
            $('#tblDynamic tr ').each(function () {
                if ($(this).find('td.tdselect').length > 0) {
                    $(this).find('td.tdselect').each(function () {
                        var CurrRowSpan = parseInt($(this).attr('rowspan'));
                        if (isNaN(parseInt(CurrRowSpan)) || parseInt(CurrRowSpan) <= 0) {
                            CurrRowSpan = 1;
                        }

                        var CurrCellId = $(this).attr('id');
                        var CurrRowNo = parseInt(CurrCellId.split('_')[1]);
                        var CurrCellNo = parseInt(CurrCellId.split('_')[2]);
                        var hasFound = false;
                        var currRowTDLen = parseInt($('#tr_' + CurrRowNo).find('td').length);
                        var nextRowTDLen = parseInt($('#tr_' + (CurrRowNo + CurrRowSpan)).find('td').length);
                        var nextCellNo = CurrCellNo - (currRowTDLen - nextRowTDLen)
                        var nextRowTD = 'td_' + (CurrRowNo + CurrRowSpan) + "_" + CurrCellNo; // nextCellNo;
                        if ($('#' + nextRowTD).hasClass('tdselect')) {
                            hasFound = true;
                        }
                        else {
                            nextRowTD = 'td_' + (CurrRowNo + CurrRowSpan) + "_" + nextCellNo;
                            if ($('#' + nextRowTD).hasClass('tdselect')) {
                                hasFound = true;
                            }
                            else if (nextRowTDLen == 1) {
                                nextRowTD = 'td_' + (CurrRowNo + CurrRowSpan) + "_1";
                                hasFound = true;
                            }
                        }
                        //alert("CurrRowNo=> " + CurrRowNo + "; CurrRowSpan => " + CurrRowSpan + "; nextCellNo => " + nextCellNo + "; CurrCellNo => " + CurrCellNo + "; nextRowTD=> " + nextRowTD + "; nextRowTDLen=> " + nextRowTDLen);
                        if (hasFound) {
                            var CurrColSpan = $(this).attr('colspan');
                            var NextColSpan = $('#' + nextRowTD).attr('colspan');
                            if (CurrColSpan === NextColSpan) {
                                CurrRowSpan = parseInt(CurrRowSpan) + 1;
                                $('#' + nextRowTD).remove();
                                $(this).attr('colspan', CurrColSpan);
                                $(this).attr('rowspan', CurrRowSpan);
                                SetRowID();
                                MergeVerticleCells();
                            }
                        }

                    });
                }
            });
        }
    }

    $('#btnMerge').click(function () {
        MergeHorizontalCells();
        MergeVerticleCells();
        $('#tblDynamic .tdselect').each(function () {
            $(this).removeClass('tdselect');
        });
        showHideCustomizeFont();
    });


    $('#btnReset').click(function () {
        $('#hdnHTML').val('');
        $('#hdnXML').val('');
        $('#tblDynamic tbody tr').each(function () {
            $(this).remove();
        });
    });
    $(document).ready(function () {
        GetFields($('#ddlLabelModuleList').val())
        var thml = $('#hdnHTML').val();
        if ($.trim(thml).length > 0) {
            $('#divLabelDesing').html('');
            $('#divLabelDesing').append(thml.toString());
            $('#div_barcode').find('.ui-resizable-handle').remove();
            $('#div_srltbarcode').find('.ui-resizable-handle').remove();
            $('#div_qrcode').find('.ui-resizable-handle').remove();
            $('#div_srltqrcode').find('.ui-resizable-handle').remove();
            $('#tblDynamic tbody').find("div[id*='div_ItemImg_']").find('.ui-resizable-handle').remove();
            $('#tblDynamic tbody').find("div[id*='div_AssetImg_']").find('.ui-resizable-handle').remove();
            $('#tblDynamic tbody').find("div[id*='div_ToolImg_']").find('.ui-resizable-handle').remove();
            $('#tblDynamic tbody').find("div[id*='div_SupplierLogo_']").find('.ui-resizable-handle').remove();
            $('#tblDynamic tbody').find("div[id*='div_EntLogo_']").find('.ui-resizable-handle').remove();
            $('#tblDynamic tbody').find("div[id*='div_CompLogo_']").find('.ui-resizable-handle').remove();

            //WI-2488
            //SetRowID();
            SetRowID(true);
        }
        else {
            GetTemplateDetail($('#ddlLabelTemplateList').val())
        }

        //  $(".oaLogo").find('img').draggable({
        //      appendTo: "body",
        //      helper: "clone"
        //  });

        if ($('#ddlLabelModuleList').val() == 2) {

            $('#btnAddSrLtBarcode,#btnAddSrLtQRcode,#btnRemoveSrLtBarcodeRow,#btnRemoveSrLtQRcode').css('display', '');
            if ($("#ddlBarcodeFont option[value='39']").length <= 0) {
                $('#ddlBarcodeFont').append($("<option></option>").attr("value", 39).text('Code 3 of 9'));
            }
        }
        else {
            $("#ddlBarcodeFont option[value='39']").remove();
            $('#btnAddSrLtBarcode,#btnAddSrLtQRcode,#btnRemoveSrLtBarcodeRow,#btnRemoveSrLtQRcode').css('display', 'none');
        }

        tdContentToRemove();
    });

    $("#btnFBold").click(function () {
        if ($('#tblDynamic .tdselect').length === 1) {
            $('#tblDynamic .tdselect').each(function () {
                if ($('#tblDynamic .tdselect').first().attr('style').indexOf('font-weight') > 0) {
                    $(this).css('font-weight', '');
                }
                else {
                    $(this).css('font-weight', 'bold');
                }
            });
        }
    });

    $("#btnFItalic").click(function () {
        if ($('#tblDynamic .tdselect').length === 1) {
            $('#tblDynamic .tdselect').each(function () {
                if ($('#tblDynamic .tdselect').first().attr('style').indexOf('font-style') > 0) {
                    $(this).css('font-style', '');
                }
                else {
                    $(this).css('font-style', 'italic');
                }
            });
        }
    });

    $("#btnFontSizeIncr").click(function () {
        if ($('#tblDynamic .tdselect').length === 1) {
            var fSize = GetFirstSelectedCellFontSize();
            fSize = parseInt(fSize) + 1;
            $('#tblDynamic .tdselect').each(function () {
                $(this).css('font-size', fSize + 'pt');
                $('#spnFSize').text(fSize + 'pt');
            });
        }

    });


    $("#btnFontSizeDecr").click(function () {
        if ($('#tblDynamic .tdselect').length === 1) {
            var fSize = GetFirstSelectedCellFontSize();
            fSize = parseInt(fSize) - 1;
            $('#tblDynamic .tdselect').each(function () {
                $(this).css('font-size', fSize + 'pt');
                $('#spnFSize').text(fSize + 'pt');
            });
        }

    });

    function GetFirstSelectedCellFontSize() {
        if ($('#tblDynamic .tdselect').length > 0) {
            if ($('#tblDynamic .tdselect').first().attr('style').indexOf('font-size') > 0) {
                var currFSize = $('#tblDynamic .tdselect').first().css('font-size');
                if (currFSize.length > 0) {
                    currFSize = ((parseInt(currFSize.replace('px', '')) * 72) / 96).toFixed(0);
                    return parseInt(currFSize);
                }
            }
            else {
                var fs = $.trim($('#txtFontSize').val());
                if (fs.length > 0) {
                    return parseInt(fs);
                }
            }
        }
    }

    function GetFontSizeInPT(fsize) {
        fsize = ((parseInt(fsize.replace('px', '')) * 72) / 96).toFixed(0);
        return parseInt(fsize);
    }

    function showHideCustomizeFont() {
        if ($('#tblDynamic .tdselect').length === 1) {
            $('#btnFontSizeIncr').css('disabled', false);
            $('#btnFontSizeDecr').css('disabled', false);
            $("#spnFSize").offset({ left: parseFloat($('#btnFontSizeDecr').offset().left) + 80, top: ($('#btnFontSizeDecr').offset().top) + 5 })
            $('#spnFSize').text(GetFirstSelectedCellFontSize() + 'pt');
        }
        else {
            $('#btnFontSizeIncr').css('disabled', true);
            $('#btnFontSizeDecr').css('disabled', true);

            $('#spnFSize').text('');
        }
    }


    function GetXML() {
        if ($('#tblDynamic tr').length <= 0) {
            $("#spanGlobalMessage").html("@eTurns.DTO.LabelPrinting.ResLabelPrinting.FillRequiredFields");
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            showNotificationDialog();
            return "";
        }
        else if ($('#tblDynamic').find("span").length <= 0 && $('#tblDynamic').find('#div_barcode').length <= 0) {
            $("#spanGlobalMessage").html("@eTurns.DTO.LabelPrinting.ResLabelPrinting.FillRequiredFields");
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            showNotificationDialog();
            return "";
        }
        else if ($('#tblDynamic').find("span").length <= 0 && $('#tblDynamic').find('#div_qrcode').length <= 0) {
            $("#spanGlobalMessage").html("@eTurns.DTO.LabelPrinting.ResLabelPrinting.FillRequiredFields");
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            showNotificationDialog();
            return "";
        }
        var ridx = 1;
        var xmlDocument = "<mytable>\n"
        var totalheight = 0;
        $('#tblDynamic tr').each(function () {
            // alert('Row:' + ridx);
            var cidx = 1;
            var xmlRow = "<row>\n";
            var noOfColumns = 0;
            $(this).find('td').each(function () {

                //alert('Row:' + ridx + ' Col:' + cidx);
                var innerText = '';
                var imgWidth = '';
                var imgHeight = '';
                var fontStyle = '';
                var italic = '';
                var fieldID = '';
                var colSpan = 1;
                var rowSpan = 1;
                var align = 'left';
                var fs = '';
                var fontFamily = '';
                var BarcodeFont = '';
                var QRcodeLevel = '1';

                if ($(this).attr('style').indexOf('font-family') > 0)
                    fontFamily = $(this).css('font-family');
                if ($(this).attr('style').indexOf('text-align') > 0)
                    align = $(this).css('text-align');
                if ($(this).attr('colspan').length > 0) {
                    colSpan = $(this).attr('colspan');
                }

                if ($(this).attr('rowspan').length > 0) {
                    rowSpan = $(this).attr('rowspan');
                }

                fs = GetFontSizeInPT($(this).css('font-size'));

                if ($(this).attr('style').indexOf('font-weight') > 0) {
                    fontStyle = 'B';
                }

                if ($(this).attr('style').indexOf('font-style') > 0) {
                    fontStyle = fontStyle + 'I';
                }

                if ($(this).find('#div_barcode').length == 1) {
                    innerText = 'Barcode_Row';
                    BarcodeFont = $('#ddlBarcodeFont').val();
                }
                else if ($(this).find('#div_srltbarcode').length == 1) {
                    innerText = 'SrLtBarcode_Row';
                    BarcodeFont = $('#ddlBarcodeFont').val();
                }
                else if ($(this).find('#div_qrcode').length == 1) {
                    innerText = 'QRcode_Cell';
                    QRcodeLevel = '1';
                    imgWidth = $(this).find("div[id*='div_qrcode']").find('img').css('width');
                    imgHeight = $(this).find("div[id*='div_qrcode']").find('img').css('height');
                }
                else if ($(this).find('#div_srltqrcode').length == 1) {
                    innerText = 'SrLtQRcode_Cell';
                    QRcodeLevel = '1';
                    imgWidth = $(this).find("div[id*='div_srltqrcode']").find('img').css('width');
                    imgHeight = $(this).find("div[id*='div_srltqrcode']").find('img').css('height');
                }
                else if ($(this).find("div[id*='div_ItemImg_']").length == 1) {
                    innerText = 'ItemImage_Cell';
                    imgWidth = $(this).find("div[id*='div_ItemImg_']").find('img').css('width');
                    imgHeight = $(this).find("div[id*='div_ItemImg_']").find('img').css('height');

                }
                else if ($(this).find("div[id*='div_AssetImg_']").length == 1) {
                    innerText = 'AssetImage_Cell';
                    imgWidth = $(this).find("div[id*='div_AssetImg_']").find('img').css('width');
                    imgHeight = $(this).find("div[id*='div_AssetImg_']").find('img').css('height');

                }
                else if ($(this).find("div[id*='div_ToolImg_']").length == 1) {
                    innerText = 'ToolImage_Cell';
                    imgWidth = $(this).find("div[id*='div_ToolImg_']").find('img').css('width');
                    imgHeight = $(this).find("div[id*='div_ToolImg_']").find('img').css('height');
                }
                else if ($(this).find("div[id*='div_SupplierLogo_']").length == 1) {
                    innerText = 'SupplierImage_Cell';
                    imgWidth = $(this).find("div[id*='div_SupplierLogo_']").find('img').css('width');
                    imgHeight = $(this).find("div[id*='div_SupplierLogo_']").find('img').css('height');

                }
                else if ($(this).find("div[id*='div_EntLogo_']").length == 1) {
                    imgWidth = $(this).find("div[id*='div_EntLogo_']").find('img').css('width');
                    imgHeight = $(this).find("div[id*='div_EntLogo_']").find('img').css('height');
                    innerText = 'EnterPriseLogo_Cell';
                }
                else if ($(this).find("div[id*='div_CompLogo_']").length == 1) {
                    innerText = 'CompanyLogo_Cell';
                    imgWidth = $(this).find("div[id*='div_CompLogo_']").find('img').css('width');
                    imgHeight = $(this).find("div[id*='div_CompLogo_']").find('img').css('height');
                }
                else if ($(this).find("span").length > 0) {
                    var spn = $(this).find("span");
                    innerText = $(spn).text();
                    fieldID = $(spn).attr('id').split('_')[1];
                }

                var xmlCol = "\t<column ";
                xmlCol += "\t id=\"" + $(this).attr('id') + "\" ";
                xmlCol += "\t colspan=\"" + colSpan + "\" ";
                xmlCol += "\t rowspan=\"" + rowSpan + "\" ";
                xmlCol += "\t width=\"" + $(this).css('width') + "\" ";
                xmlCol += "\t height=\"" + $(this).css('height') + "\" ";
                xmlCol += "\t fontName=\"" + fontFamily + "\" ";
                xmlCol += "\t fontSize=\"" + fs + "\" ";
                xmlCol += "\t fontstyle=\"" + fontStyle + "\" ";
                xmlCol += "\t cellalignment=\"" + align + "\" ";

                xmlCol += "\t ImageWidth=\"" + imgWidth + "\" ";
                xmlCol += "\t ImageHeight=\"" + imgHeight + "\" ";

                xmlCol += "\t FieldText=\"" + innerText + "\" ";
                xmlCol += "\t FieldID=\"" + fieldID + "\" ";

                if ($(this).find('#div_barcode').length == 1 || $(this).find('#div_srltbarcode').length == 1) {
                    xmlCol += "\t BarcodeFont=\"" + BarcodeFont + "\" ";
                }

                if ($(this).find('#div_qrcode').length == 1 || $(this).find('#div_srltqrcode').length == 1) {
                    xmlCol += "\t QRcodeLevel=\"" + QRcodeLevel + "\" ";
                }
                xmlCol += " >" + innerText + " </column>";

                xmlRow += xmlCol;
                cidx += 1;
            });

            totalheight = totalheight + parseInt(($(this).css('height')).replace("px",""));

            xmlRow += "\n</row>";
            xmlDocument += "\n" + xmlRow;
            ridx += 1;
        });

        xmlDocument += "\n</mytable>";
        var _tblHeight = parseFloat(($("#tblDynamic tbody").css('height')).replace("in", ""));
        if ((_tblHeight) < totalheight) {
            ShowNotificationMessage("@eTurns.DTO.LabelPrinting.ResLabelPrinting.DesignedLabelNotFitToActualSize");
            if ($('#div_qrcode').length != 0) {
                $('#btnRemoveQRcode').trigger("click");
            }
            return false;
        }
        return xmlDocument;
    }

    function GetCurrentLableHeight() {
        var totallblheight = 0;
        $('#tblDynamic tr').each(function () {
            $(this).find('td').each(function () {
                // alert($(this).css('height'));
            });
            totallblheight = totallblheight + parseInt(($(this).css('height')).replace("px", ""));
        });
        return totallblheight;
    }

    function ValidateLabelHeight(trheight) {
        var _tbllblHeight = parseFloat(($("#tblDynamic tbody").css('height')).replace("in", ""));
        if ((_tbllblHeight) < trheight) {
            //alert("Designed label not fitted in actual template size.");
            return false;
        }
        return true;
    }

    $('#btnValidateSize').click(function () {
        $('#lstunfitItems option').remove()
        GetListofUnfitItems();
    });
</script>
