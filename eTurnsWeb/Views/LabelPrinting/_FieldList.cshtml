@using MvcCheckBoxList.Model;
@model eTurns.DTO.LabelPrinting.LabelFieldModuleTemplateDetailDTO
@{
    var htmlListInfo = new HtmlListInfo(HtmlTag.vertical_columns, 3, new { @name = "chkField", }, TextLayout.Default, TemplateIsUsed.No);
}
<div>
    <ul>
        <li>
            @if (Model.lstModuleFields != null && Model.lstModuleFields.Count > 0)
            {
                <div class="editor-label" style="width: 18%; float: left;">
                    @Html.Label(eTurns.DTO.LabelPrinting.ResLabelPrinting.CaptionSelectField)
                </div>
                <div class="editor-field" id="divFieldList" style="width: 75%; float: left;">
                    @Html.CheckBoxListFor(x => x.arrFieldIds
                                          , x => x.lstModuleFields
                                          , Fields => Fields.ID
                                          , Fields => Fields.FieldDisplayName
                                          , x => x.lstSelectedModuleFields
                                          , htmlListInfo)
                </div>
            }
        </li>
        <li>
            <div style="width: 98%; float: left;">
            </div>
        </li>
        <li>
            <div class="editor-label" style="width: 18%; float: left;">
                @Html.LabelFor(x => x.BarcodeKey)<em> *</em>
            </div>
            <div class="editor-field" style="width: 75%; float: left;">
                @Html.DropDownListFor(x => x.BarcodeKey, new SelectList(Model.lstBarcodeKey, "ID", "FieldDisplayName", Model.BarcodeKey), new { id = "ddlBarcodeKey", @class = "selectBox", @style = "width:190px;" })
                @*<span class="ErrorMessage" id="spnBKErrorMsg">@Html.ValidationMessageFor(model => model.BarcodeKey)</span>*@
            </div>
        </li>
        @if (Model.ModuleID == 2 || Model.ModuleID == 4 || Model.ModuleID == 6 || Model.ModuleID == 7 || Model.ModuleID == 9)
        {
            <li id="liIncludebin">
                <div class="editor-label" style="width: 18%; float: left;">
                    @Html.LabelFor(x => x.IncludeBin)
                </div>
                <div class="editor-field" style="width: 75%; float: left;">
                    @Html.CheckBoxFor(x => x.IncludeBin, new { @id = "chkIncludeBin" })
                </div>
            </li>
            <li id="liIncludeQuantity">
                <div class="editor-label" style="width: 18%; float: left;">
                    @Html.LabelFor(x => x.IncludeQuantity)
                </div>
                <div class="editor-field" style="width: 75%; float: left;">
                    @Html.CheckBoxFor(x => x.IncludeQuantity, new { @id = "chkIncludeQty" })
                </div>
            </li>
            <li id="liQuantityField">
                <div class="editor-label" style="width: 18%; float: left;">
                    @Html.LabelFor(x => x.QuantityField)
                </div>
                <div class="editor-field" style="width: 75%; float: left;">
                    @Html.DropDownListFor(x => x.QuantityField, new SelectList(Model.lstQuantityFields, "Key", "Value", Model.QuantityField), new { id = "ddlQuantityField", @class = "selectBox", @style = "width:190px;" })
                </div>
            </li>
        }
    </ul>
</div>
<script type="text/javascript">
    if ('@Model.BarcodeFont' == '39') {
        $('#liIncludebin, #liIncludeQuantity, #liQuantityField').css('display', 'none');
    }
</script>
