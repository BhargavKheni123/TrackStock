@model eTurnsWeb.Models.ItemModelPerameter
@{
    string OrderGUID = ViewBag.OrderGUID;
    string OrderSupplier = ViewBag.OrderSupplier;
    bool ShowSupplierNarrowSearch = true;
    if (!string.IsNullOrWhiteSpace(OrderSupplier))
    {
        ShowSupplierNarrowSearch = false;
    }
    var settings = new GridHeaderSettings() { DisplayContextMenu = false, ShowSelectAll = true, DisplayPrintBlock = false, DisplayDeleteButton = false, dataViewType = DataViewType.None, DisplayUDFButton = false, UDFSetupFor = "", DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "BOMList" };
    var modelCommon = new eTurns.DTO.SupplierCatalogNS { PageName = "BOMList", ShowSupplirSearch = ShowSupplierNarrowSearch };
    string CallingFrom = Model.CallingFromPageName;
}
<style type="text/css">
    .paginationBlock {
        right: 84px !important;
    }
</style>
<div class="userListBlock">
    <div id="tab7" class="tabContener" style="width: 99%">
        <div class="searchWrapper">
            <div class="searchBlock">
                <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
                <div class="searchinputB">
                    <input type="text" class="searchinput" id="FilterSupplierCatalogItems" />
                    <a href="javascript:void(0);" class="xclose">
                        <img src="~/Content/images/x.png" alt="X" id="ClearFilterSupplierCatalogItems" />
                    </a>
                </div>
            </div>
        </div>
        @Html.BOMItemModelGridTopHeader(settings)
        @Html.Partial("NarrowSearchForCatalogItemModel", modelCommon)
        <div class="userContent">
            <table id="BOMItemDataTable" class="display dataTable">
                <thead>
                    <tr>
                        <th class="NotHide">
                            @eTurns.DTO.Resources.ResCommon.ID
                        </th>
                        @if (Model.CallingFromPageName == "CartItemMaster" || Model.CallingFromPageName == "OrderMaster" || Model.CallingFromPageName == "Kit")
                        {
                            <th>
                                Quantity
                            </th>
                        }
                        @if (Model.CallingFromPageName == "Kit")
                        {
                            <th>
                                Action
                            </th>
                        }
                        <th class="NotHide">
                            @eTurns.DTO.ResItemMaster.ItemNumber
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.UPC
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.Description
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.SellPrice
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.ManufacturerName
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.ManufacturerNumber
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.Supplier
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.SupplierPartNo
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.ItemType
                        </th>
                        <th>
                            @eTurns.DTO.ResCategoryMaster.Category
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.InventoryClassification
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.UNSPSC
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.LeadTimeInDays
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.SerialNumberTracking
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.LotNumberTracking
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.DateCodeTracking
                        </th>
                        <th>
                            @eTurns.DTO.ResGLAccount.GLAccount
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.Taxable
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.Consignment
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.ItemUniqueNumber
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.IsTransfer
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.IsPurchase
                        </th>
                        <th>
                            @eTurns.DTO.Resources.ResCommon.CreatedOn
                        </th>
                        <th>
                            @eTurns.DTO.Resources.ResCommon.UpdatedOn
                        </th>
                        <th>
                            @eTurns.DTO.Resources.ResCommon.UpdatedBy
                        </th>
                        <th>
                            @eTurns.DTO.Resources.ResCommon.CreatedBy
                        </th>
                        <th>
                            @eTurns.DTO.ResUnitMaster.Unit
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.LongDescription
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.EnrichedProductData
                        </th>
                        <th>
                            @eTurns.DTO.ResItemMaster.EnhancedDescription
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <div class="editorForm" style="width: 80%">
            @if (Model.CallingFromPageName == "Kit")
            {
                <input type="button" value="@ResCommon.Add" id="btnAddAllKit" class="CreateBtn" style="float: left;
                margin-left: 5px; margin-top: 1px;" />
                <input type="button" value="@ResCommon.Close" id="btnModelCancleKit" class="CreateBtn" style="float: left;
                margin-left: 5px; margin-top: 1px;" />
            }
            else
            {
                <input type="button" value="@ResCommon.Add" id="btnAddAll" class="CreateBtn" style="float: left;
                margin-left: 5px; margin-top: 1px;" />
                <input type="button" value="@ResCommon.Close" id="btnModelCancle" class="CreateBtn" style="float: left;
                margin-left: 5px; margin-top: 1px;" />
            }
        </div>
    </div>
</div>
<script type="text/javascript">

    var ItemResourceValue = '@ResItemMaster.Item';
    var KitResourceValue = '@ResItemMaster.Kit';
    var LaborResourceValue = '@ResItemMaster.Labor';

    var objColumnsMI = {};
    var oTableItemModelMS;
    var sImageUrl = "/Content/images/";
    var anOpen = [];
    var MSITEMColumnObject = new Array();
    //    MSITEMColumnObject.push({ "mDataProp": "ActionButton", "sClass": "read_only", "sDefaultContent": '', "fnRender": function (obj, val) {
    //        return "<input type='button' value='Select' onclick='return AddSingleItemFromBOM(this);' class='CreateBtn' style='float: none;padding: 2px 6px;margin-left: 5px;' />";
    //    }
    //    });
    MSITEMColumnObject.push({ "mDataProp": "ID", "sClass": "read_only" });
    if ('@Model.CallingFromPageName' == 'CartItemMaster' || '@Model.CallingFromPageName' == 'OrderMaster' || '@Model.CallingFromPageName' == 'Kit') {
        MSITEMColumnObject.push({ mDataProp: "inputQuantity", sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val) { return "<input type='text' value='' class='text-boxinner numericsonly' onkeydown='return isNumberKey(event)' name='txtQty' id='txtQty' style='width:30px;' />"; } });
    }

    if ('@Model.CallingFromPageName' == 'Kit') {
        MSITEMColumnObject.push({
            mDataProp: "",
            sClass: "read_only",
            sDefaultContent: '',
            fnRender: function (obj, val) {
                return "<input type='button' value='Add' onclick='return AddSingleItemToKitList(this)' id='btnAdd' class='CreateBtn' style='float: none;padding: 2px 6px;margin-left: 5px;' tabindex='-1'  />"
                                              + "<span id='spnItemID' style='display:none'>" + obj.aData.ID + "</span>"
                                              + "<span id='spnItemGUID' style='display:none'>" + obj.aData.GUID + "</span><span id='spnItemNumber' style='display:none'>"
                                              + obj.aData.ItemNumber + "</span><span id='spnDescription' style='display:none'>"
                                              + obj.aData.Description
                                              + "</span><span id='spnItemType' style='display:none'>" + obj.aData.ItemType + "</span>"
                                              + "<span id='spnSerialNumberTracking' style='display:none'>" + obj.aData.SerialNumberTracking + "</span>";

            }
        });
    }

    MSITEMColumnObject.push({ "mDataProp": "ItemNumber", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "UPC", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "Description", "sClass": "read_only" });
    MSITEMColumnObject.push({
        "mDataProp": "SellPrice", "sClass": "read_only", sDefaultContent: '',
        fnRender: function (obj, val) {
            if (val == null || val == "") {
                return 0;
            } else {
                return val;
            }
        }
    });
    MSITEMColumnObject.push({ "mDataProp": "ManufacturerName", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "ManufacturerNumber", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "SupplierName", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "SupplierPartNo", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "ItemType", "sClass": "read_only"
                                    , "sDefaultContent": '', "fnRender": function (obj, val) {
                                        if (val == 1)
                                            return ItemResourceValue;
                                        else if (val == 3)
                                            return KitResourceValue;
                                        else if (val == 4)
                                            return LaborResourceValue;
                                        else
                                            return "";
                                    }
    });
    MSITEMColumnObject.push({ "mDataProp": "CategoryName", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "InventoryClassificationName", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "UNSPSC", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "LeadTimeInDays", "sClass": "read_only" });
    MSITEMColumnObject.push({
        "mDataProp": "SerialNumberTracking", "sClass": "read_only"
                                 , "fnRender": function (obj, val) {
                                     return GetBoolInFormat(obj, val);
                                 }
    });
    MSITEMColumnObject.push({
        "mDataProp": "LotNumberTracking", "sClass": "read_only"
                                , "fnRender": function (obj, val) {
                                    return GetBoolInFormat(obj, val);
                                }
    });
    MSITEMColumnObject.push({
        "mDataProp": "DateCodeTracking", "sClass": "read_only"
                                , "fnRender": function (obj, val) {
                                    return GetBoolInFormat(obj, val);
                                }
    });

    MSITEMColumnObject.push({ "mDataProp": "GLAccount", "sClass": "read_only" });

    MSITEMColumnObject.push({
        "mDataProp": "Taxable", "sClass": "read_only"
                                , "fnRender": function (obj, val) {
                                    return GetBoolInFormat(obj, val);
                                }
    });
    MSITEMColumnObject.push({
        "mDataProp": "Consignment", "sClass": "read_only"
                                , "fnRender": function (obj, val) {
                                    return GetBoolInFormat(obj, val);
                                }
    });

    MSITEMColumnObject.push({ "mDataProp": "ItemUniqueNumber", "sClass": "read_only" });
    MSITEMColumnObject.push({
        "mDataProp": "IsTransfer", "sClass": "read_only"
                                 , "fnRender": function (obj, val) {
                                     return GetBoolInFormat(obj, val);
                                 }
    });
    MSITEMColumnObject.push({
        "mDataProp": "IsPurchase", "sClass": "read_only"
                                 , "fnRender": function (obj, val) {
                                     return GetBoolInFormat(obj, val);
                                 }
    });

    MSITEMColumnObject.push({
        "mDataProp": "Created", "sClass": "read_only",
        "fnRender": function (obj, val) {
            return obj.aData.CreatedDate;
            //return GetDateInFullFormat(val);
        }
    });
    MSITEMColumnObject.push({
        "mDataProp": "Updated", "sClass": "read_only",
        "fnRender": function (obj, val) {
            //return GetDateInFullFormat(val);
            return obj.aData.UpdatedDate;
        }
    });
    MSITEMColumnObject.push({ "mDataProp": "UpdatedByName", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "CreatedByName", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "Unit", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "LongDescription", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "EnrichedProductData", "sClass": "read_only" });
    MSITEMColumnObject.push({ "mDataProp": "EnhancedDescription", "sClass": "read_only" });



    $(document).ready(function () {

        objColumnsMI = GetIMGridHeaderColumnsObject('BOMItemDataTable');

        fillItemMaster(false);
        setTimeout(function () {

            $.ajax({
                type: "POST",
                url: '@Url.Action("ClearBomSession", "BOM")',
                contentType: 'application/json',
                dataType: 'json',
                success: function (retdt) {
                },
                error: function (err) {
                    alert("There is some Error");
                }
            });

        }, 2000);
        $('#DivLoading').hide();

        $("#BOMItemDataTable").on("change", "input[type='text'][name='txtQty']", function () {
            var aPos = $("#BOMItemDataTable").dataTable().fnGetPosition($(this).parent()[0]);
            var aData = $("#BOMItemDataTable").dataTable().fnGetData(aPos[0]);
            $("#BOMItemDataTable").dataTable().fnGetData(aPos[0]).Quantity = $(this).val();
        });

        SetShiftSelectTblItemsBin();

    });

    var BOMItemDataTableLastChecked;



    function SetShiftSelectTblItemsBin() {

        //$('#tblItemsBin tbody').on('click', 'tr', function () {
        //    if ($(this).hasClass('row_selected')) {
        //        $(this).removeClass('row_selected');
        //    }
        //    else {
        //        $(this).addClass('row_selected');
        //    }
        //});

        $("#BOMItemDataTable tbody").on("tap click", "tbody tr", function (e) {
            if (e.target.type == "checkbox" || e.target.type == "select" || e.target.type == "radio" || e.target.type == "button") {
                e.stopPropagation();
            } else {
                if (IsDeleteItemPictureViewRecord)
                    $(this).parent().parent().parent().parent().parent().toggleClass('row_selected');
                else {

                    if (!BOMItemDataTableLastChecked) {
                        BOMItemDataTableLastChecked = this;
                    }



                    if (e.shiftKey) {
                        var start = $('#BOMItemDataTable tbody tr').index(this);
                        var end = $('#BOMItemDataTable tbody tr').index(BOMItemDataTableLastChecked);

                        for (i = Math.min(start, end) ; i <= Math.max(start, end) ; i++) {
                            if (!$('#BOMItemDataTable tbody tr').eq(i).hasClass('row_selected')) {
                                $('#BOMItemDataTable tbody tr').eq(i).addClass("row_selected");
                            }
                        }
                        if (window.getSelection) {
                            if (window.getSelection().empty) {  // Chrome
                                window.getSelection().empty();
                            } else if (window.getSelection().removeAllRanges) {  // Firefox
                                window.getSelection().removeAllRanges();
                            }
                        } else if (document.selection) {  // IE?
                            document.selection.empty();
                        }
                    } else if ((e.metaKey || e.ctrlKey)) {
                        $(this).toggleClass('row_selected');
                    } else {
                        $(this).toggleClass('row_selected');
                    }

                    BOMItemDataTableLastChecked = this;
                }



                return false;
            }
        });

    }

    $('#BOMDateCFrom').blur(function () {
    }).datepicker({ dateFormat: 'm/d/yy' });
    $('#BOMDateCTo').blur(function () {
    }).datepicker({ dateFormat: 'm/d/yy' });
    $('#BOMDateUFrom').blur(function () {
    }).datepicker({ dateFormat: 'm/d/yy' });
    $('#BOMDateUTo').blur(function () {
    }).datepicker({ dateFormat: 'm/d/yy' });

    $('#ancBOMDateCFrom').click(function () {
        $('#BOMDateCFrom').focus();
    });
    $('#ancBOMDateCTo').click(function () {
        $('#BOMDateCTo').focus();
    });
    $('#ancBOMDateUFrom').click(function () {
        $('#BOMDateUFrom').focus();
    });
    $('#ancBOMDateUTo').click(function () {
        $('#BOMDateUTo').focus();
    });






    function AddSingleItemFromBOM(Curobj) {
        var aPos = $("#BOMItemDataTable").dataTable().fnGetPosition($(Curobj).parent()[0]);
        var aData = $("#BOMItemDataTable").dataTable().fnGetData(aPos[0]);
        aData.DestinationModule = '@Model.CallingFromPageName';
        aData.OrderGUID = '@OrderGUID';
        aData.OrderSupplier = '@OrderSupplier';
        var strjson = JSON.stringify(aData);
        $.ajax({
            type: "POST",
            url: '@Url.Action("AddItemFromBOM", "BOM")',
            contentType: 'application/json',
            dataType: 'json',
            data: strjson,
            success: function (retdt) {
                if ('@Model.CallingFromPageName' == 'ItemMaster') {
                    if (retdt.IsItemExist) {
                        ShowEditTab('@Url.Action("ItemEdit", "Inventory")/' + retdt.ItemID, 'frmItem');
                    }
                    else {
                        TabItemClickedWithData('@Url.Action("ItemCreate", "Inventory")', 'frmItemMaster', retdt.SupplierCatalogItem);
                    }
                    $('#divBOMItems').dialog('close');
                }
                else if ('@Model.CallingFromPageName' == 'CartItemMaster') {
                    retdt.SupplierCatalogItem.inputQuantity = '';
                    retdt.SupplierCatalogItem.ActionButton = '';
                    if (retdt.IsItemExist) {
                        //                        if ($("#Cart_ItemModel_filter") != undefined) {
                        //                            $("#Cart_ItemModel_filter").val(retdt.SupplierCatalogItem.UPC);
                        //                            fnFilterGlobalCIM();
                        //                        }

                        SwitchTextTab(0, '', '');
                        if (oTable !== undefined && oTable != null) {
                            oTable.fnDraw();
                        }

                        $("#divBOMItems").dialog("close");
                    }
                    else {
                        $('#DivLoading').show();
                        $("#divBOMItems").load('@Url.Action("ItemCreate", "Inventory")', { SupplierCatalogItemID: retdt.SupplierCatalogItem.SupplierCatalogItemID, ItemNumber: retdt.SupplierCatalogItem.ItemNumber, UPC: retdt.SupplierCatalogItem.UPC, Description: retdt.SupplierCatalogItem.Description, SellPrice: retdt.SupplierCatalogItem.SellPrice, PackingQantity: retdt.SupplierCatalogItem.PackingQantity, ManufacturerName: retdt.SupplierCatalogItem.ManufacturerName, ManufacturerPartNumber: retdt.SupplierCatalogItem.ManufacturerPartNumber, SupplierName: retdt.SupplierCatalogItem.SupplierName, SupplierPartNumber: retdt.SupplierCatalogItem.SupplierPartNumber, ImagePath: retdt.SupplierCatalogItem.ImagePath, SupplierID: retdt.SupplierCatalogItem.SupplierID, ManufacturerID: retdt.SupplierCatalogItem.ManufacturerID, Quantity: retdt.SupplierCatalogItem.Quantity, DestinationModule: retdt.SupplierCatalogItem.DestinationModule }, function () {
                            $('#DivLoading').hide();
                            $("#divBOMItems").dialog("option", "width", 1200);
                            $("#divBOMItems").dialog("option", "height", 800);
                            $("#divBOMItems").dialog('option', 'position', 'center');
                        });
                    }
                }
                else if ('@Model.CallingFromPageName' == 'OrderMaster') {

                    retdt.SupplierCatalogItem.inputQuantity = '';
                    retdt.SupplierCatalogItem.ActionButton = '';
                    if (retdt.IsItemExist) {
                        $("#divBOMItems").dialog("close");
                        //                        var strUrl = '@Url.Action("LoadItemMasterModel", "Order")';
                        //                        strUrl = strUrl + '?ParentId=' + OrderID;
                        //                        $('#ItemModel').data({ "url": strUrl, "strupc": retdt.SupplierCatalogItem.UPC }).dialog('open');
                        CallThisFunctionFromModel('success');
                    }
                    else {
                        $('#DivLoading').show();
                        $("#divBOMItems").load('@Url.Action("ItemCreate", "Inventory")', { SupplierCatalogItemID: retdt.SupplierCatalogItem.SupplierCatalogItemID, ItemNumber: retdt.SupplierCatalogItem.ItemNumber, UPC: retdt.SupplierCatalogItem.UPC, Description: retdt.SupplierCatalogItem.Description, SellPrice: retdt.SupplierCatalogItem.SellPrice, PackingQantity: retdt.SupplierCatalogItem.PackingQantity, ManufacturerName: retdt.SupplierCatalogItem.ManufacturerName, ManufacturerPartNumber: retdt.SupplierCatalogItem.ManufacturerPartNumber, SupplierName: retdt.SupplierCatalogItem.SupplierName, SupplierPartNumber: retdt.SupplierCatalogItem.SupplierPartNumber, ImagePath: retdt.SupplierCatalogItem.ImagePath, SupplierID: retdt.SupplierCatalogItem.SupplierID, ManufacturerID: retdt.SupplierCatalogItem.ManufacturerID, Quantity: retdt.SupplierCatalogItem.Quantity, DestinationModule: retdt.SupplierCatalogItem.DestinationModule, OrderGUID: retdt.SupplierCatalogItem.OrderGUID, OrderSupplier: retdt.SupplierCatalogItem.OrderSupplier }, function () {
                            $('#DivLoading').hide();
                            $("#divBOMItems").dialog("option", "width", 1200);
                            $("#divBOMItems").dialog("option", "height", 800);
                            $("#divBOMItems").dialog('option', 'position', 'center');
                        });
                    }
                }
            },
            error: function (err) {
                alert("There is some Error");
            }
        });


    }


    function GetObject(tr, PageName) {



        var txtQty = $(tr).find('#txtQty');
        var Qty = parseFloat($(txtQty).val());
        var IsQuantityValid = true;
        var ConsignedQtyVal = 0;
        var vLineItemComment = "";
        var itemType = 0;

        if (parseInt('@Model.PerentID') <= 0) {
            IsQuantityValid = false;
        }

        if ((isNaN(parseFloat(Qty)) || parseFloat(Qty) <= 0)) {
            $("#spanGlobalMessage").html('@ResItemMaster.QuantitygreaterthanZero');
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            showNotificationDialog();
            //$(this).find('#txtConsignedQty_' + ID).focus();
            $(txtQty).focus();
            allowSubmit = false;
            IsQuantityValid = false;
        }

        if (isNaN(parseFloat(Qty)) || parseFloat(Qty) <= 0)
            Qty = 0;

        if (isNaN(parseFloat(ConsignedQtyVal)) || parseFloat(ConsignedQtyVal) <= 0)
            ConsignedQtyVal = 0;

        if (IsQuantityValid == true) {
            var itemID = $(tr).find('#spnItemID').text();
            var itemGUID = $(tr).find('#spnItemGUID').text();
            var vItemNumber = $(tr).find('#spnItemNumber').text();
            var vDescription = $(tr).find('#spnDescription').text();
            var itemtype = $(tr).find('#spnItemType').text();
            var vSerialNumberTracking = $(tr).find('#spnSerialNumberTracking').text();
            var vUDF1 = ''; var vUDF2 = ''; var vUDF3 = ''; var vUDF4 = ''; var vUDF5 = '';
            var _RequiredDate = null;
            if ($(tr).find('#UDF1').length > 0) {
                if ($(tr).find('#UDF1').attr("class") == 'selectBox') {
                    vUDF1 = $(tr).find('#UDF1 option:selected').text();
                }
                else {
                    vUDF1 = $(tr).find('#UDF1').val();
                }
            }

            if ($(tr).find('#UDF2').length > 0) {
                if ($(tr).find('#UDF2').attr("class") == 'selectBox') {
                    vUDF2 = $(tr).find('#UDF2 option:selected').text();
                }
                else {
                    vUDF2 = $(tr).find('#UDF2').val();
                }
            }

            if ($(tr).find('#UDF3').length > 0) {
                if ($(tr).find('#UDF3').attr("class") == 'selectBox') {
                    vUDF3 = $(tr).find('#UDF3 option:selected').text();
                }
                else {
                    vUDF3 = $(tr).find('#UDF3').val();
                }
            }

            if ($(tr).find('#UDF4').length > 0) {
                if ($(tr).find('#UDF4').attr("class") == 'selectBox') {
                    vUDF4 = $(tr).find('#UDF4 option:selected').text();
                }
                else {
                    vUDF4 = $(tr).find('#UDF4').val();
                }
            }

            if ($(tr).find('#UDF5').length > 0) {
                if ($(tr).find('#UDF5').attr("class") == 'selectBox') {
                    vUDF5 = $(tr).find('#UDF5 option:selected').text();
                }
                else {
                    vUDF5 = $(tr).find('#UDF5').val();
                }
            }



            var vCost = $(tr).find('#spnCost').text();
            if (vCost == null || vCost == "null")
                vCost = 0;

            var DetailData = {};

            if (PageName == "Kit") {
                DetailData = { "ItemID": itemID, "ItemGUID": itemGUID, "QuantityPerKit": Qty, 'KitID': '@Model.PerentID', 'KitGUID': '@Model.PerentGUID', "ItemNumber": vItemNumber, "Description": vDescription, "ItemType": itemtype, "SerialNumberTracking": vSerialNumberTracking };
            }

            return DetailData;
        }

        return null;
    }



    function AddSingleItemToKitList(obj) {

        $('div#DivLoading').show();
        $(obj).attr("disabled", "disabled");
      if ('@Model.CallingFromPageName' == 'Kit') {
            AddItemToDetailTable(obj, '@Model.CallingFromPageName');
            return;
        }
    }


    function AddItemToDetailTable(btn, PageName) {

        //alert('hi 2');

        var arrItems = new Array();
        var arrRows = new Array();
        if (btn.id == 'btnAdd') {
            //alert('hi 3');
            var tr = $(btn).parent().parent();
            $(tr).toggleClass('row_selected');
            var obj = GetObject(tr, PageName);
            if (obj !== null) {
                arrItems.push(obj);
                UDFInsertNewForGrid(tr);
            }
        }
        else if (btn.id === 'btnAddAllKit') {
            $('#BOMItemDataTable tbody tr').each(function () {
                 if (PageName == 'Kit') {
                    if ($(this).attr('class').indexOf('row_selected') != -1) {
                        var obj = GetObject(this, PageName);
                        if (obj !== null) {
                            arrRows.push($(this));
                            arrItems.push(obj);
                        }
                    }

                }
            });
        }


        if (arrItems.length != undefined && arrItems.length > 0) {
            $.ajax({
                url: '@Url.Content(Model.AjaxURLAddMultipleItemToSession)',
                data: { 'para': JSON.stringify(arrItems) },
                dataType: 'json',
                type: 'POST',
                async: false,
                cache: false,
                success: function (json) {
                    var successMessage = (json.Message);
                    if (btn.id == 'btnAdd') {
                        if (json.Status == "success" || json.Status == "ok" || json.Status == "Ok" || json.Status == "OK") {
                            $(btn).parent().parent().find('#txtQty').val('');
                            $('#BOMItemDataTable').dataTable().fnDeleteRow($(btn).parent().parent());
                            $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('successIcon succesIcon');
                        }
                        else if (json.Status == "fail" || json.Status == "Error") {
                            $("#spanGlobalMessage").removeClass('successIcon succesIcon').addClass('errorIcon WarningIcon');
                        }
                    }
                    else if (btn.id === 'btnAddAllKit') {
                        $('#btnAddAllKit').removeAttr("disabled");
                        if (json.Status == "success" || json.Status == "ok" || json.Status == "Ok" || json.Status == "OK") {
                            $('#BOMItemDataTable tbody tr.row_selected').each(function () {
                                $(this).find('#txtQty').val('');
                            });
                            $('#BOMItemDataTable').dataTable().fnDeleteRow($(btn).parent().parent());
                            $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('successIcon succesIcon');
                        }
                        else {
                            $("#spanGlobalMessage").removeClass('successIcon succesIcon').addClass('errorIcon WarningIcon');
                        }
                    }
                    $(btn).removeAttr("disabled");
                    $("#spanGlobalMessage").html(successMessage);
                    showNotificationDialog();
                    $('#DivLoading').hide();
                },
                error: function (xhr) {
                    $('#DivLoading').hide();
                    $(btn).removeAttr("disabled");
                    $('#btnAddAllKit').removeAttr("disabled");
                }, complete: function () {

                }
            });
        }
        else {
            $("#DivLoading").hide();
            $(btn).removeAttr("disabled");
            $('#btnAddAllKit').removeAttr("disabled");
        }
    }


    function fillItemMaster(bDestroy) {
        var gaiSelected = [];
        oTableItemModelMS = $('#BOMItemDataTable').dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "bAutoWidth": false,
            "sScrollX": "1200px",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "aaSorting": [[3, "asc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "aLengthMenu": [[10, 25, 50, 100, 250, 500, 1000, 10000], [10, 25, 50, 100, 250, 500, 1000, "All"]],
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {

            },
            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
                $.ajax({
                    "url": '@Url.Content("~/Master/SaveGridState")',
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: 'BOMList' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = json;
                    }
                });
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'BOMList' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            },
            "bServerSide": true,
            "sAjaxSource": '@Url.Content(Model.AjaxURLToFillItemGrid)',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                //PostCount = PostCount + 1;
                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;
                for (var i = 0; i <= objCols.length - 1; i++) {
                    arrCols.push(objCols[i].mDataProp);
                }
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }
                if (oSettings.aaSorting != null && oSettings.aaSorting.length != 0)
                    aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                else
                    aoData.push({ "name": "SortingField", "value": "0" });
                aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });
                aoData.push({ "name": "OrderSupplier", "value": '@OrderSupplier' });
                aoData.push({ "name": "CallingFrom", "value": '@CallingFrom' });

                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    cache: false,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback,
                    beforeSend: function () {
                        $('#BOMItemDataTable td').removeHighlight();
                        $('.dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    complete: function () {
                        $('.dataTables_scroll').css({ "opacity": 1 });

                        if ($("#FilterSupplierCatalogItems").val() != '') {
                            $('#BOMItemDataTable td').highlight($("#FilterSupplierCatalogItems").val());
                        }

                    }
                })
            },
            "fnInitComplete": function () {
                $('.ColVis').detach().appendTo(".setting-arrow");
            },
            "aoColumns": MSITEMColumnObject

        });

        $('.DTTT_container').css('z-index', '-1');
        $('.paginationBlock').css({ 'right': '165px' });
    }

    function TabItemClickedWithData(action, formName, DataToPass) {
        if (IsEditMode) {
            IsEditMode = false;
            return;
        }
        AllowDeletePopup = false;
        $('#DivLoading').show();
        $(formName).append($('#CtabNew').load(action, { SupplierCatalogItemID: DataToPass.SupplierCatalogItemID, ItemNumber: DataToPass.ItemNumber, UPC: DataToPass.UPC, Description: DataToPass.Description, SellPrice: DataToPass.SellPrice, PackingQantity: DataToPass.PackingQantity, ManufacturerName: DataToPass.ManufacturerName, ManufacturerPartNumber: DataToPass.ManufacturerPartNumber, SupplierName: DataToPass.SupplierName, SupplierPartNumber: DataToPass.SupplierPartNumber, ImagePath: DataToPass.ImagePath, SupplierID: DataToPass.SupplierID, ManufacturerID: DataToPass.ManufacturerID, Quantity: DataToPass.Quantity, DestinationModule: DataToPass.DestinationModule }, function () { $('#DivLoading').hide(); $("#" + formName + " :input:text:visible:first").focus(); }));
        $.validator.unobtrusive.parseDynamicContent('#' + formName + ' input:last');


        //        if (IsEditMode) {
        //            IsEditMode = false;
        //            return;
        //        }
        //        AllowDeletePopup = false;
        //        $('#DivLoading').show();
        //        $(formName).append($('#CtabNew').load(action, function () { $('#DivLoading').hide(); $("#" + formName + " :input:text:visible:first").focus(); }));
        //        $.validator.unobtrusive.parseDynamicContent('#' + formName + ' input:last');
    }
    function fnFilterGlobalSC() {
        //set filter only if more than 2 characters are pressed
        if (typeof $("#FilterSupplierCatalogItems") != 'undefined' && ($("#FilterSupplierCatalogItems").val().length > 2 || $("#FilterSupplierCatalogItems").val().length == 0)) {
            BindBOMItemDataTable();
        }
        else {
            $('#BOMItemDataTable td').removeHighlight();
            $('#BOMItemDataTable td').highlight($("#FilterSupplierCatalogItems").val());
        }
    }

    function BindBOMItemDataTable() {
        clearNarrowSearchFilterIM();
        var searchtext = $("#FilterSupplierCatalogItems").val().replace(/'/g, "''");
        $('#BOMItemDataTable').dataTable().fnFilter(
                        searchtext,
                        null,
                        null,
                        null
                    );
    }

    var timeoutsc;
    $('#FilterSupplierCatalogItems').bind('textchange', function () {
        clearTimeout(timeoutsc);
        var self = this;
        timeoutsc = setTimeout(function () {
            fnFilterGlobalSC();
        }, 200);
    });
    $("#FilterSupplierCatalogItems").keypress(function (e) {
        if (e.which == 13 && $("#FilterSupplierCatalogItems").val().length >= 2) {
            BindBOMItemDataTable();
        }
    });
    //    $("#FilterSupplierCatalogItems").keyup(function (e) {
    //        var code = (e.keyCode ? e.keyCode : e.which);
    //        if (code == 13) {
    //        }
    //        else {
    //            fnFilterGlobalSC();
    //        }
    //    });


    //    $("#FilterSupplierCatalogItems").keydown(function (e) {
    //        var code = (e.keyCode ? e.keyCode : e.which);
    //        if (code == 13) {
    //            var searchtext = $("#FilterSupplierCatalogItems").val().replace(/'/g, "''");
    //            $('#BOMItemDataTable').dataTable().fnFilter(
    //                            searchtext,
    //                            null,
    //                            null,
    //                            null
    //                        );
    //            return false;
    //        }
    //    });


    $("#ClearFilterSupplierCatalogItems").click(ClearFilterSC);

    function ClearFilterSC() {
        //Check length first
        if ($("#FilterSupplierCatalogItems").val().length > 0) {
            $("#FilterSupplierCatalogItems").val('');
            $('#BOMItemDataTable').dataTable().fnFilter(
                            $("#FilterSupplierCatalogItems").val(),
                            null,
                            null,
                            null
                        );
        }
        $("#FilterSupplierCatalogItems").focus();
        return false;
    }

    $('#PageNumberIM').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#GobtnIM").click();
            return false;
        }
    });

    $("#GobtnIM").click(function () {
        var pval = $('#PageNumberIM').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }

        if (pval == 0)
            return;

        oTableItemModelMS.fnPageChange(Number(pval - 1));
        $('#PageNumberIM').val('');
    });

    //$('#BOMItemDataTable td.control input[type="button"]').click(function () {
    function AddSingleItemToQuickList(obj) {
        var txxt = $(obj).parent().parent().find('#txtQty');
        var txtQty = txxt.val();
        if (txtQty != 'undefined' && txtQty.length > 0) {
            var trimtxtVal = txtQty.replace(/ /g, '');
            if (trimtxtVal.length > 0) {
                var ItemID = $(obj).parent().find('#spnItemID').text();
                var ItemGUID = $(obj).parent().find('#spnItemGUID').text();

                $.ajax({
                    url: '@Url.Content(Model.AjaxURLAddItemToSession)',
                    data: { 'pItemID': ItemID, 'pItemGUID': ItemGUID, 'pQuentity': trimtxtVal },
                    dataType: 'json',
                    type: 'POST',
                    async: false,
                    cache: false,
                    success: function (json) {
                        txxt.val('');
                        oTableItemModelMS.fnDraw();
                        CallThisFunctionFromModel(json.Status);
                    }
                });
            }
        }
    }

    $('#btnAddAll').click(function () {

        var arrItems = new Array();
        $('#BOMItemDataTable tbody tr.row_selected').each(function () {
            var aPos = $("#BOMItemDataTable").dataTable().fnGetPosition($(this).find("td")[0]);
            var aData = $("#BOMItemDataTable").dataTable().fnGetData(aPos[0]);
            //            var itemID = aData.ID;
            //            var itemGUID = aData;
            //            var data = { "ID": itemID, "GUID": itemGUID, "Qty": trimtxtVal };
            arrItems.push(aData);
        });
        if (arrItems.length > 0) {


            $.ajax({
                url: '@Url.Content(Model.AjaxURLAddMultipleItemToSession)',
                data: JSON.stringify(arrItems),
                contentType: 'application/json',
                dataType: 'json',
                type: 'POST',
                async: false,
                cache: false,
                success: function (json) {
                    var errorMessage = json.Message;
                    if (json.Status == "warning") {
                        $("#spanGlobalMessage").removeClass('successIcon succesIcon errorIcon').addClass('WarningIcon');
                        $("#spanGlobalMessage").html(errorMessage);
                        showNotificationDialog();
                    }
                    //oTableItemModelMS.fnDraw();
                    SetItemCountInMenu();
                    $('#NarroSearchClearSC').trigger('click');
                    //if (oTable != undefined) {
                    //    oTable.fnDraw();
                    //}

                    GetbomNarrowSearches('BOMList', false, false);
                }
            });
        }

    });

    $('.ui-dialog-titlebar-close').click(function () {

        //alert('test close');
        //$('.modalCloseImg').click();
        //$('.ui-dialog-titlebar-close').click();
        if ($('#ItemModelPS') != undefined && $('#ItemModelPS').length == 1 && $('#ItemModelPS').parent().css('display') == "block") {
            $("#ItemModelPS").dialog('close');
            //  CallThisFunctionFromModel('success');
        }
    else{
        $('#divBOMItems').dialog('close');
    }
        if ('@CallingFrom' == "ItemMaster") {
            CallThisFunctionFromModel('success');
        }
    });

    $("#btnModelCancle").click(function () {
        //alert('test cancel');
        //$('.modalCloseImg').click();
        //$('.ui-dialog-titlebar-close').click();
        $('#divBOMItems').dialog('close');
        if ('@CallingFrom' == "ItemMaster") {
            CallThisFunctionFromModel('success');
        }
    });


    $('#btnAddAllKit').click(function () {
        //alert("hi 5");
        $("#DivLoading").show();
        $('#btnAddAllKit').attr("disabled", "disabled");
        if ($('#BOMItemDataTable tbody tr.row_selected').length == 0) {
            var errorMessage = ("Please select Atleast one record");
            $("#spanGlobalMessage").removeClass('successIcon succesIcon').addClass('errorIcon WarningIcon');
            $("#spanGlobalMessage").html(errorMessage);
            showNotificationDialog();
            $('#btnAddAllKit').removeAttr("disabled");
            $("#DivLoading").hide();
            return false;
        }
        var btn = this;

        if ('@Model.CallingFromPageName' == 'Kit') {
            AddItemToDetailTable(btn, '@Model.CallingFromPageName');

            return;
        }
    });

    $("#btnModelCancleKit").click(function () {
        //$('.modalCloseImg').click();

        if ($('#ItemModelPS') != undefined && $('#ItemModelPS').length == 1 && $('#ItemModelPS').parent().css('display') == "block") {
            $("#ItemModelPS").dialog('close');
          //  CallThisFunctionFromModel('success');
        }
        else {
            $('.ui-dialog-titlebar-close').click();
        }

    });


    // used for refresh the grid manually...
    $('#refreshGridIM').live('click', function () {
        if ($("#divRefreshBlockIM").css("display").toUpperCase() == 'BLOCK')
            $("#divRefreshBlockIM").toggle();

        oTableItemModelMS.fnDraw();

        //fillItemMaster(false);

    });


    //**************************** Not used Code *************************//

    $("#reordersettingIM").click(function () {
        $("#divRefreshBlockIM").toggle();
    });

    $("#ColumnSortableModalIM").dialog({
        autoOpen: false,
        modal: true,
        width: 500,
        title: '@eTurns.DTO.Resources.ResCommon.ReorderColumnPopupHeader',
        draggable: false,
        resizable: false,
        open: function () {
            GenerateColumnSortableIM();
            $("#ColumnSortableIM").sortable({ axis: "y", containment: "parent" });
            $("#ShowAllHidden").focus();
        }
    });

    $("#ColumnOrderSetupIM").click(function () {
        $("#ColumnSortableModalIM").dialog("open");
        return false;
    });
    function GenerateColumnSortableIM() {
        $('#ColumnSortableIM li').each(function (index) {
            $(this).remove();
        });
        var div = document.createElement('div');
        div.id = "CheckAll";
        div.innerHTML = "<input type='hidden' value ='ColumnSortableIM' id='hiddenDivName' /><a href='javascript:;' onclick='CheckAll(this);'  id='CheckAll' >CheckAll</a>&nbsp;<a href='javascript:;' onclick='UnCheckAll(this);' id='UnCheckAll' >UnCheckAll</a>" +
                        "&nbsp;&nbsp;&nbsp;<input type='checkbox' onclick='ShowAllHidden(this);' id='ShowAllHidden' checked='checked' />Show All Hidden";
        $('div.sortableContainer').find("div#CheckAll").remove();
        $('div.sortableContainer').prepend(div);


        for (i = 0, iLen = oTableItemModelMS.fnSettings().aoColumns.length; i < iLen; i++) {
            var oColumn = oTableItemModelMS.fnSettings().aoColumns[i];
            var li = document.createElement('li');
            li.id = GetColumnIndex1(oColumn.sTitle.trim());
            li.className = 'ui-state-default';
            li.innerHTML = oColumn.sTitle.trim();
            var style = '';
            var LiStyle = 'display:block';
            var LiClassName = 'ui-state-default'
            if (oColumn.sClass.indexOf('NotHide') >= 0 || (oColumn.nTh != null && oColumn.nTh.className.indexOf('NotHide') >= 0)) {
                //style = ' style="display:none" ';
                style = ' disabled="disabled" ';
                //LiStyle = 'display:none';
                LiClassName = LiClassName + ' HiddenLi';
            }
            li.style = LiStyle;
            li.className = LiClassName;
            if (oColumn.bVisible) {
                li.innerHTML = '<input type="checkbox" ' + style + ' class="checkBox" checked="checked" id="' + GetColumnIndex1(oColumn.sTitle.trim()) + '_" />' + oColumn.sTitle.trim();
            }
            else
                li.innerHTML = '<input type="checkbox" ' + style + ' class="checkBox" id="' + GetColumnIndex1(oColumn.sTitle.trim()) + '_" />' + oColumn.sTitle.trim();
            $('#ColumnSortableIM').append(li);
        }
    }

    var GetColumnIndex1 = function (ColumnName) {
        return objColumnsMI[ColumnName];
    };

    @*function UpdateColumnOrderIM(_ListName) {

        if ($("#divRefreshBlockIM").css("display").toUpperCase() == 'BLOCK')
            $("#divRefreshBlockIM").toggle();

        var _Order = $('#ColumnSortableIM').sortable("toArray");
        var __Order = _Order.toString().split(",");
        for (var i = 0; i < __Order.length; i++) {
            __Order[i] = parseInt(__Order[i], 10);
        }

        oTableItemModelMS.fnSettings().oLoadedState.ColReorder = __Order;

        var _abVisCols = [];
        for (i = 0, iLen = oTableItemModelMS.fnSettings().aoColumns.length; i < iLen; i++) {
            var checked = $("#" + i + "_").is(":checked");
            _abVisCols.push(checked);
        }
        oTableItemModelMS.fnSettings().oLoadedState.abVisCols = _abVisCols;

        $.ajax({
            "url": '@Url.Content("~/Master/SaveGridState")',
            data: { Data: JSON.stringify(oTableItemModelMS.fnSettings().oLoadedState), ListName: _ListName },
            "dataType": "json",
            cache: false,
            "async": false,
            "success": function (json) {
                o = json;
                oTableItemModelMS.fnDraw();
                $('.ui-dialog-titlebar-close').click();
            }
        });
    }*@

    function UpdateColumnOrderIM(_ListName) {
        debugger
        var _Order = $('#ColumnSortableIM').sortable("toArray");
        var __Order = _Order.toString().split(",");
        for (var i = 0; i < __Order.length; i++) {
            __Order[i] = parseInt(__Order[i], 10);
        }
        oTableItemModelMS.fnSettings().oLoadedState.ColReorder = __Order;

        var _abVisCols = [];
        for (i = 0, iLen = oTableItemModelMS.fnSettings().aoColumns.length; i < iLen; i++) {
            var checked = $("#" + i + "_").is(":checked");
            _abVisCols.push(checked);
        }
        oTableItemModelMS.fnSettings().oLoadedState.abVisCols = _abVisCols;
                   $.ajax({
                            "url": '@Url.Content("~/Master/SaveGridState")',
                            //data: { Data: JSON.stringify($('#ItemModeDataTable').dataTable().fnSettings().oLoadedState), ListName: _ListName },
                            data: { Data: JSON.stringify($('#BOMItemDataTable').dataTable().fnSettings().oLoadedState), ListName: "BOMList" },
                            "dataType": "json",
                            'cache': false,
                            "async": false,
                            "type": "POST",
                            "success": function (json) {
                                o = json;
                                $("#ColumnSortableModalIM").dialog("close");
                                $("#ItemModelPS").dialog("close");
                                AddNewKitComponent(this);
                                //oTableItemModelMS.fnDraw();
                                //$('#BOMItemDataTable').dataTable().fnDraw(false);
                                // aoTempData = $('#ItemModeDataTable').dataTable().fnSettings().oLoadedState;
                                //$('#ItemModeDataTable').dataTable().fnDraw(false);
                                //  alert(gblActionName);
                            }
                    });
        //$.ajax({
        //    "url": '/Master/LoadGridState',
        //    data: { ListName: "BOMList" },
        //    cache: false,
        //    "dataType": "json",
        //    "success": function (json) {

        //        if (json.jsonData != '') {
        //            o = JSON.parse(json.jsonData);
        //            $('#BOMItemDataTable').dataTable().fnSettings().oLoadedState = $.extend(true, {}, o);
        //            $('#BOMItemDataTable').dataTable().fnSettings().oLoadedState.ColReorder = __Order;

        //            var _abVisCols = [];
        //            for (i = 0, iLen = $('#BOMItemDataTable').dataTable().fnSettings().aoColumns.length; i < iLen; i++) {
        //                var checked = $("#" + i + "_").is(":checked");
        //                _abVisCols.push(checked);
        //            }
        //            $('#BOMItemDataTable').dataTable().fnSettings().oLoadedState.abVisCols = _abVisCols;
        //        }


        //    }
        //});


    }

    @*function OpenBOMPopupNew(curobj) {
    if ('@Model.OpenPopup' == '@Boolean.TrueString') {
        if ('@Model.SourcePageName' == 'OrderMaster') {
            $("#ItemModel").dialog("close");
        }
        $('#divBOMItems').data("data", { SourcePageName: '@Model.SourcePageName', OrderId: '@Model.OrderGUID', OrderSupplier: escape('@Model.OrderSupplier') }).dialog('open');
    }
    else {

    }
}*@
    $("#BOMItemDataTable").on("tap click", "tbody tr", function (e) {
        if (e.target.type == "checkbox" || e.target.type == "radio" || e.target.type == "text" || e.target.type == "button") {
            e.stopPropagation();
        }
        else {
            $(this).toggleClass('row_selected');
            return false;
        }
    });
    $("#actionSelectAll").click(function () {

        $("#BOMItemDataTable").find("tbody tr").removeClass("row_selected").addClass("row_selected");
        //        $("#BOMItemDataTable").find("tbody tr").toggleClass('row_selected');
    });
    //    $("#userHead").on("click", "#actionSelectAll", function () {
    //
    //    });

    $("#BOMItemDataTable").on("click", "td.control", function (event) {
        var nTr = this.parentNode;
        var staLocId = $(nTr).parent().parent().find("input[type='hidden'][name='hdnStagingBin']").val();
        var staLocName = $(nTr).parent().parent().find("input[type='hidden'][name='hdnStagingBinName']").val();
        if ((staLocId != undefined && staLocId != "") || (staLocName != undefined && staLocName != "")) {
            var i = $.inArray(nTr, anOpenMS);
            if (i === -1) {
                $('img', this).attr('src', sImageUrl + "drildown_close.jpg");
                oTableItemModelMS.fnOpen(nTr, fnFormatDetailsIM(oTableItemModelMS, nTr), '');
                anOpenMS.push(nTr);
            }
            else {
                $('img', this).attr('src', sImageUrl + "drildown_open.jpg");
                oTableItemModelMS.fnClose(nTr);
                anOpenMS.splice(i, 1);
            }
        }
    });

    function setnametohiddenpop(curobj) {
        $(curobj).parent().find("input[type='hidden'][name='hdnStagingBinName']").val(curobj.value);
    }
    function fnFormatDetailsIM(oTable, nTr) {
        var staLocId = $(nTr).parent().parent().find("input[type='hidden'][name='hdnStagingBin']").val();
        var staLocName = $(nTr).parent().parent().find("input[type='hidden'][name='hdnStagingBinName']").val();
        var oData = oTableItemModelMS.fnGetData(nTr);
        var sOut = '';
        $('#DivLoading').show();
        $.ajax({
            "url": '@Url.Content("~/Inventory/ItemLocDet")',
            data: { ItemId: oData.ID, MsId: '@Model.PerentID', StageBinId: 0, staLocName: staLocName },
            "async": false,
            cache: false,
            "dataType": "text",
            "success": function (json) {
                sOut = json;
                $('#DivLoading').hide();
            },
            error: function (response) {
            }
        });

        return sOut;
    }


    //function CallThisFunctionFromModel(msg) {
    //    //alert('test');
    //    if (msg == 'success') {
    //        //alert('test');
    //        GetbomNarrowSearches('BOMList', false, false);

    //        if (oTableItemModelMS !== undefined && oTableItemModelMS != null) {
    //            oTableItemModelMS.fnDraw();
    //        }
    //    }
    //}


    $(document).ready(function () {

        $("#actionSelectAllBOM").click(function () {
            $("#BOMItemDataTable").find("tbody tr").removeClass("row_selected").addClass("row_selected");
            //$("#myDataTable").find("tbody tr").toggleClass('row_selected');
            $("#actionDeSelectAllBOM").css('display', '');
            $("#actionSelectAllBOM").css('display', 'none');

        });

        $("#actionDeSelectAllBOM").click(function () {

            $("#BOMItemDataTable").find("tbody tr").removeClass("row_selected");
            $("#actionDeSelectAllBOM").css('display', 'none');
            $("#actionSelectAllBOM").css('display', '');
        });

    });
    $('#BOMDateCFrom,#BOMDateCTo').change(function () {
        var BOMDateCFromValidIM = true;
        var BOMDateCToValidIM = true;
        try {
            $.datepicker.parseDate(RoomDateJSFormat, $('#BOMDateCFrom').val());
            BOMDateCFromValidIM = true;
        } catch (e) {
            BOMDateCFromValidIM = false;
        }

        try {
            $.datepicker.parseDate(RoomDateJSFormat, $('#BOMDateCTo').val());
            BOMDateCToValidIM = true;
        } catch (e) {
            BOMDateCToValidIM = false;
        }
        if (BOMDateCFromValidIM && BOMDateCToValidIM) {
            DoNarrowSearchSC();
        }
        else {
            if (!BOMDateCFromValidIM)
                $('#BOMDateCFrom').val('');
            if (!BOMDateCToValidIM)
                $('#BOMDateCTo').val('');
        }
    });
    $('#BOMDateUFrom,#BOMDateUTo').change(function () {

        var DateUFromValidIM = true;
        var DateUToValidIM = true;
        try {
            $.datepicker.parseDate(RoomDateJSFormat, $('#BOMDateUFrom').val());
            DateUFromValidIM = true;
        } catch (e) {
            DateUFromValidIM = false;
        }

        try {
            $.datepicker.parseDate(RoomDateJSFormat, $('#BOMDateUTo').val());
            DateUToValidIM = true;
        } catch (e) {
            DateUToValidIM = false;
        }
        if (DateUFromValidIM && DateUToValidIM) {
            DoNarrowSearchSC();
        }
        else {
            if (!DateUFromValidIM)
                $('#BOMDateUFrom').val('');
            if (!DateUToValidIM)
                $('#BOMDateUTo').val('');
        }
    });
</script>
<script type="text/javascript">
    @*var objColumns = {
        '@MvcHtmlString.Create("&nbsp;")': 0,
        '@MvcHtmlString.Create("Qty")': 1,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.ID)': 2,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.ItemNumber)': 3,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.ManufacturerID)': 4,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.ManufacturerNumber)': 5,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.SupplierID)': 6,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.SupplierPartNo)': 7,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.UPC)': 8,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.UNSPSC)': 9,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.Description)': 10,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.LongDescription)': 11,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.CategoryID)': 12,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.GLAccountID)': 13,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.UOMID)': 14,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.PricePerTerm)': 15,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.DefaultReorderQuantity)': 16,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.DefaultPullQuantity)': 17,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.Cost)': 18,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.Markup)': 19,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.SellPrice)': 20,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.ExtendedCost)': 21,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.LeadTimeInDays)': 22,
        //        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.Link1)': 23,
        //        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.Link2)': 24,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.Trend)': 25,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.Taxable)': 26,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.Consignment)': 27,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.StagedQuantity)': 28,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.InTransitquantity)': 29,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.OnOrderQuantity)': 30,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.OnTransferQuantity)': 31,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.SuggestedOrderQuantity)': 32,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.RequisitionedQuantity)': 33,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.AverageUsage)': 34,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.Turns)': 35,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.OnHandQuantity)': 36,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.CriticalQuantity)': 37,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.MinimumQuantity)': 38,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.MaximumQuantity)': 39,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.WeightPerPiece)': 40,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.ItemUniqueNumber)': 41,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.IsTransfer)': 42,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.IsPurchase)': 42.5,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.InventoryClassification)': 43,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.SerialNumberTracking)': 44,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.LotNumberTracking)': 45,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.DateCodeTracking)': 46,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.ItemType)': 47,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.ImagePath)': 48,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.UDF1)': 49,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.UDF2)': 50,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.UDF3)': 51,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.UDF4)': 52,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.UDF5)': 53,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.CreatedOn)': 54,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.UpdatedOn)': 55,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.CreatedBy)': 56,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.UpdatedBy)': 57,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.IsDeleted)': 58,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.IsArchived)': 59,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.RoomName)': 61,
        '@MvcHtmlString.Create(eTurns.DTO.ResItemMaster.IsLotSerialExpiryCost)': 62
    };*@

</script>
