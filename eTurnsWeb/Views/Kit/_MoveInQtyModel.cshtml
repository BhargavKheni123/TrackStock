@model eTurns.DTO.KitDetailDTO
@{
    string qtyFormat = "N" + eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits;
}
<div id="divMoveInTop" style="float: left; width: 99%">
    <div style="height: 40px; float: left; width: 99%; display: block">
        <div class="infoBlock">
            <ul>
                <li>
                    <label for="RoomName">@eTurns.DTO.ResItemMaster.ItemNumber</label>:<span> @Model.ItemDetail.ItemNumber</span>
                </li>
                <li style="border-right: 1px solid black;">
                    <label for="RoomName">@eTurns.DTO.ResItemMaster.OnHandQuantity</label>: <span id="spnMoveInOnHandQty">@Model.ItemDetail.OnHandQuantity.GetValueOrDefault(0).ToString(qtyFormat)</span>
                </li>
                <li style="border-right: 1px solid black;">
                    <label for="RoomName">@eTurns.DTO.ResKitMaster.QuantityPerKit</label>: <span id="spnQtyPerKit">@Model.QuantityPerKit.GetValueOrDefault(0).ToString(qtyFormat)</span>
                </li>
                <li style="border-right: 1px solid black;">
                    <label for="RoomName">QuentityNeededToMeetDemand</label>:
                    <span id="spnQtyMeetDemand">
                        @ViewBag.QtyToMeetDemand
                    </span></li>
                <li style="border-right: 1px solid black;">
                    <label for="RoomName">@eTurns.DTO.ResKitMaster.AvailableItemsInWIP</label>: <span
                        id="spnQtyAvailabelInWIP">
                        @Model.AvailableItemsInWIP.GetValueOrDefault(0).ToString(qtyFormat)
                    </span></li>
            </ul>
        </div>
    </div>
    <div style="height: 40px; float: left; width: 99%">
        <span style="float:left;margin-top: 3px; width: 80px;">Location:</span>&nbsp; @Html.DropDownList("ddlMoveInLocations", new SelectList(ViewBag.MoveInLocation, "ID", "Text", Model.ItemDetail.DefaultLocation), new { style = "width:150px;float:left;", @class = "selectBox" })
        <span style="float:left;margin-top: 3px;margin-left:20px; width: 80px;">Quantity:</span>&nbsp;
        @if (Model.ItemDetail.SerialNumberTracking)
        {
            @Html.TextBox("txtMoveInQty", "", "{0:0}", new { @style = "width:50px;float:left", @maxlength = "10", @class = "text-boxQuantityFormatSR text-boxinner" })
        }
        else
        {
            @Html.TextBox("txtMoveInQty", "", eTurnsWeb.Helper.SessionHelper.QuantityFormat, new { @style = "width:50px;float:left;", @maxlength = "10", @class = "text-boxQuantityFormat text-boxinner" })
        }
        @*<input type="text" id="txtMoveInQty" class="text-box" value="" onkeydown="return OnlyNumeric(event,this)" style="width: 50px; background: White;" />*@
        <div style="float: left;margin-left:15px;">
            <input type="button" id="btnMoveInDelete" value="Delete" class="CreateBtn" style="margin: 0px 5px 0px 5px" />
            <input type="button" id="btnMoveInAdd" value="Add" class="CreateBtn" style="margin: 0px 5px 0px 5px" />
        </div>
    </div>
    <div style="height: 200px; float: left; width: 80%; overflow: auto">
        <table class="display" id="MoveInItemWithQtyList">
        </table>
    </div>
    <div style="height: 50px; float: left; width: 80%;">
        <input type="button" id="btnMoveInCancel" value="@(eTurns.DTO.Resources.ResCommon.Cancel)" class="CreateBtn" />
        @*<input type="button" id="btnMoveIn" value="@(ResKitMaster.MoveIn)" class="CreateBtn" />*@
        <input type="button" id="btnMoveIn" value="@(eTurns.DTO.Resources.ResCommon.Save)" class="CreateBtn" />
    </div>
</div>
<script type="text/javascript">
    var oTableMoveInQty;
    $(document).ready(function () {

        $(".text-boxPriceFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdCostcentsLimit').val(), 10)
        });
        $(".text-boxQuantityFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdQuantitycentsLimit').val(), 10)
        });
        $(".text-boxQuantityFormatSR").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: 0
        });
        oTableMoveInQty = $('#MoveInItemWithQtyList').dataTable({
            "bPaginate": false,
            "bLengthChange": false,
            "bFilter": false,
            "bSort": false,
            "bInfo": false,
            "bAutoWidth": false,
            "aoColumns":
            [
                { "sTitle": "ID" },
                { "sTitle": "Location" },
                { "sTitle": "Quantity" },
            ]
        });

        $('#MoveInQtyModel').css('width', '99%');
        $('#txtMoveInQty').focus();
        $('#ui-dialog-title-MoveInQtyModel').parent().css('display', 'none');
        $('#ui-dialog-title-MoveInQtyModel').css('width', '97%');
        $('#ui-dialog-title-MoveInQtyModel').parent().css('display', 'inline');
    });


    $('#btnMoveInCancel').unbind('click');
    $('#btnMoveInCancel').click(function () {
        $("#MoveInQtyModel").dialog("close");
        //$('.ui-dialog-titlebar-close').click();

    });

    $('#btnMoveInAdd').unbind('click');
    $('#btnMoveInAdd').click(function () {
        var qty = $('#txtMoveInQty').val();
        var locID = $('#ddlMoveInLocations').val();

        if (parseFloat(qty) != NaN && parseFloat(qty) != undefined && parseFloat(qty) > 0) {
            if (parseInt(locID) != NaN && parseInt(locID) != undefined && parseInt(locID) > 0) {
                if (parseFloat(qty) <= parseFloat($('#spnMoveInOnHandQty').text())) {
                    var binID = parseInt(locID);
                    var itemGUID = '@Model.ItemGUID.GetValueOrDefault(Guid.Empty)';
                    var Quantity = parseFloat(qty);

                    $('#MoveInItemWithQtyList tbody tr').each(function () {
                        if ($(this).find('td')[0].innerHTML == binID && $(this).find('td').length > 1) {
                            var vals = parseFloat($(this).find('td')[2].innerHTML);
                            Quantity = Quantity + vals;
                        }
                    });

                    $.ajax({
                        url: '@Url.Content("~/Kit/CheckMoveInQuantity")',
                        data: { 'BinID': binID, 'ItemGUID': itemGUID, 'Qty': Quantity },
                        type: 'POST',
                        dataType: 'json',
                        success: function (response) {
                            if (response.Status == 'ok') {
                                var sum = 0;
                                var found = 0;

                                $('#MoveInItemWithQtyList tbody tr').each(function () {
                                    if ($(this).find('td')[2] != undefined && $(this).find('td').length > 1) {
                                        sum = parseFloat(sum, 10) + parseFloat($(this).find('td')[2].innerHTML);
                                    }
                                    if ($(this).find('td')[0].innerHTML == $('#ddlMoveInLocations').val() && $(this).find('td').length > 1) {
                                        found = 1;
                                        var vals = parseFloat($(this).find('td')[2].innerHTML) + parseFloat(qty)
                                        $(this).find('td')[2].innerHTML = vals;
                                    }
                                });


                                sum = sum + parseFloat($('#txtMoveInQty').val());
                                if (found === 0) {
                                    var locName = $("#ddlMoveInLocations option:selected").text();
                                    var indx = locName.indexOf(" (");
                                    locName = locName.substring(0, indx);

                                    $('#MoveInItemWithQtyList').dataTable().fnAddData([$('#ddlMoveInLocations').val(), locName, parseFloat(qty)]);
                                }
                                $('#MoveInItemWithQtyList tfoot tr:first').remove();
                                $('#MoveInItemWithQtyList').append('<tfoot><tr><th></th><th style="text-align:right">Total</th><th id="fthSum" style="text-align:left">' + sum + '</th></tr>');

                                $('#spnMoveInOnHandQty').text(parseFloat($('#spnMoveInOnHandQty').text()) - parseFloat(parseFloat(qty)))
                                $('#txtMoveInQty').val('')
                            }
                            else {
                                alert(response.Message);
                            }
                        },
                        error: function (xhr) {
                            alert('@ResCommon.ErrorInProcess');
                        }
                    });

                }
                else {
                    alert('@ResMessage.msgQtyMustlessthanOHQ');
                }
            }
            else {
                alert('@ResLocation.SelectLocation');
            }
        }
        else {
            alert('@ResCommon.ReqProperQuantity');
        }

    });

    $("#MoveInItemWithQtyList tbody").unbind('click');
    $("#MoveInItemWithQtyList tbody").click(function (event) {
        $(oTableMoveInQty.fnSettings().aoData).each(function () {
            $(this.nTr).removeClass('row_selected');
        });
        $(event.target.parentNode).addClass('row_selected');
    });

    $('#btnMoveInDelete').unbind('click');
    $('#btnMoveInDelete').click(function () {
        $('#DivLoading').show();
        var anSelectedMan = fnGetSelected(oTableMoveInQty);
        if (anSelectedMan.length > 0 && $(anSelectedMan[0]).find('td').length > 1) {
            $('#spnMoveInOnHandQty').text(parseFloat($('#spnMoveInOnHandQty').text()) + parseFloat($(anSelectedMan[0]).find('td')[2].innerHTML));
            oTableMoveInQty.fnDeleteRow(anSelectedMan[0]);
            var sum = 0;
            $('#MoveInItemWithQtyList tbody tr').each(function () {
                if ($(this).find('td').length > 1)
                    sum = parseFloat(sum, 10) + parseFloat($(this).find('td')[2].innerHTML);
            });

            if ($(anSelectedMan[0]).find('td').length > 1) {
                $('#MoveInItemWithQtyList tfoot tr:first').remove();
                $('#MoveInItemWithQtyList').append('<tfoot><tr><th></th><th style="text-align:right">Total</th><th id="fthSum" style="text-align:left">' + sum + '</th></tr>');
            }
            else {
                $('#MoveInItemWithQtyList tfoot tr:first').remove();
            }
            $('#DivLoading').hide();
        }
        else {
            $('#DivLoading').hide();
            alert('@ResMessage.msgSelectRecordForDelete');
        }
    });

    $('#btnMoveIn').unbind('click');
    $('#btnMoveIn').click(function () {
        if ($("#MoveInItemWithQtyList tfoot tr").find('th') !== undefined && $("#MoveInItemWithQtyList tfoot tr").find('th').length > 0) {
            $('#DivLoading').show();
            $(this).attr("disabled", "disabled");
            var totolQty = $("#MoveInItemWithQtyList tfoot tr").find('th')[2].innerHTML;
            if (parseFloat(totolQty) > 0) {
                var arrLocWiseQty = new Array();

                $('#MoveInItemWithQtyList tbody tr').each(function () {
                    if ($(this).find('td').length > 1) {
                        var locationID = parseInt($(this).find('td')[0].innerHTML);
                        var locationName = $(this).find('td')[1].innerHTML
                        var Qty = parseFloat($(this).find('td')[2].innerHTML);

                        var objLocWiseQty = { 'LocationID': locationID, 'Quantity': Qty, 'LocationName': locationName };
                        arrLocWiseQty.push(objLocWiseQty);
                    }
                    else
                        return false;
                });
                var obj = { 'BinWiseQty': arrLocWiseQty, 'TotalQty': totolQty, 'ItemGUID': '@Model.ItemGUID', 'KitDetailID': '@Model.ID', 'KitDetailGUID': '@Model.GUID' };
                $.ajax({
                    url: 'MoveQuantityInItemWIP',
                    data: JSON.stringify(obj),
                    type: 'POST',
                    contentType: "application/json",
                    dataType: "json",
                    success: function (response) {
                        if (response.Status == "ok") {
                            CallThisFunctionFromModel('success');
                            $("#MoveInQtyModel").dialog("close");
                            //$('.ui-dialog-titlebar-close').click();
                            $('#DivLoading').hide();
                        }
                        else {
                            $(this).removeAttr("disabled");
                            $('#DivLoading').hide();
                            alert(response.Message);
                        }
                    },
                    error: function (xhr) {
                        $('#DivLoading').hide();
                        alert('@ResCommon.ErrorInProcess');
                        $(this).removeAttr("disabled");
                    }

                });
            }
            else {
                $('#DivLoading').hide();
                alert('@ResKitMaster.ReqQuantityToSave');
            }
        }
        else {
            $('#DivLoading').hide();
            alert('@ResKitMaster.ReqQuantityToSave');
        }
    });


      
</script>
