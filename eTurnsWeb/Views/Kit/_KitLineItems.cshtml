@model eTurns.DTO.KitMasterDTO
@{
    GridHeaderSettings settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplaySaveButton = false, DisplayUDFButton = false, UDFSetupFor = "", DisplaySettings = true, DisplayColumnSetupButton = false, DisplayContextMenu = false, DisplayPrintBlock = false, DisplayDeleteButton = false, DataTableName = "KitLineItem" + Model.ID };
    bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Kits, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Kits, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool isCost = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.HideCostMarkUpSellPrice);
    string qtyFormat = "N";
    string costFormat = "N";

    if (!string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.CurrencyDecimalDigits))
    {
        costFormat = "N" + eTurnsWeb.Helper.SessionHelper.CurrencyDecimalDigits;
    }
    if (!string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits))
    {
        qtyFormat = "N" + eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits;
    }
}
<div class="userListingWrapper">
    <div class="userListBlock">
        <div id="tab7" class="tabContener" style="width: 99.5%">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search</span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="InnerItem_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_QLItem_filter" />
                        </a>
                    </div>
                </div>
                <input type="button" id="btnDiv" value="Div" style="visibility: hidden" />
            </div>
            @Html.QuickListItemsGridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.Kits)
            <div class="userContent" style="width: 99%; margin-left: 5px !important; float: left;">
                <table id="KitLineItem@(Model.GUID)" class="display">
                    <thead>
                        <tr>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.RowNo
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ID
                            </th>
                            <th class="NotHide">
                                @eTurns.DTO.ResItemMaster.ItemNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResKitMaster.QuantityPerKit
                            </th>
                            <th>
                                @if (Model.KitCategory.GetValueOrDefault(0) == 0)
                                {
                                    @eTurns.DTO.ResKitMaster.AvailableItemsInWIP
                                }
                                else
                                {
                                    @eTurns.DTO.ResKitMaster.QuantityToBuildKit
                                }
                            </th>
                            <th>
                                @eTurns.DTO.ResKitMaster.QuantityReadyForAssembly
                            </th>
                            <th class="NotHide">
                                @ResKitMaster.QuantityToMove
                            </th>
                            <th class="NotHide">
                                @ResKitMaster.Bin
                            </th>
                            <th class="NotHide">
                                @ResKitMaster.MoveIn
                            </th>
                            <th class="NotHide">
                                @ResKitMaster.MoveOut
                            </th>
                            <th>
                                @eTurns.DTO.ResKitMaster.QuantityNeededToMeetDemand
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Cost
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OnHandQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Description
                            </th>
                            <th>
                                @eTurns.DTO.ResCategoryMaster.Category
                            </th>
                            <th>
                                @eTurns.DTO.ResUnitMaster.Unit
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Markup
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.SellPrice
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Supplier
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.SupplierPartNo
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ManufacturerName
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ManufacturerNumber
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.KitItemList != null && Model.KitItemList.Count > 0)
                        {
                            foreach (var item in Model.KitItemList)
                            {
                                <tr id="@item.GUID">
                                    <td></td>
                                    <td>
                                        @item.ID
                                    </td>
                                    <td>
                                        @item.ItemNumber
                                        <input id="hdnID" type="hidden" value="@item.ID" />
                                        <input id="hdnGUID" type="hidden" value="@item.GUID" />
                                        <input id="hdnItemType" type="hidden" value="@item.ItemType" />
                                        <input id="hdnItemGUID" type="hidden" value="@item.ItemGUID" />
                                        <input id="hdnItemSRTrack" type="hidden" value="@(item.SerialNumberTracking.ToString())" />
                                        <input id="hdnItemLOTTrack" type="hidden" value="@(item.LotNumberTracking.ToString())" />
                                        <input id="hdnItemDOCTrack" type="hidden" value="@(item.DateCodeTracking.ToString())" />
                                        <input id="hdnItemNumber" type="hidden" value="@item.ItemNumber" />
                                        <input id="hdnKitGUID" type="hidden" value="@item.KitGUID" />

                                        <input id="hdnQtyOnDemand" type="hidden" value="@(((item.QuantityPerKit.GetValueOrDefault(0) * Model.KitDemand.GetValueOrDefault(0)) - item.AvailableItemsInWIP.GetValueOrDefault(0)) > 0 ? ((item.QuantityPerKit.GetValueOrDefault(0) * Model.KitDemand.GetValueOrDefault(0)) - item.AvailableItemsInWIP.GetValueOrDefault(0)) : 0)" />
                                        <input id="hdnMaximumQuantityForMoveOut" type="hidden" value="@item.AvailableItemsInWIP.GetValueOrDefault(0)" />
                                        <input id="hdnMaximumQuantityForMoveIn" type="hidden" value="@item.OnHandQuantity.GetValueOrDefault(0)" />
                                    </td>
                                    <td>
                                        @if (item.SerialNumberTracking)
                                        {
                                            @Html.TextBox("txtQtyPerKit", item.QuantityPerKit, "{0:0}", new { @id = "txtQtyPerKit" + item.ID.ToString(), @style = "width:50px;", @maxlength = "10", @class = "text-boxQuantityFormatSR text-boxinner disableBack numericalign", @readonly = "readonly" })
                                        }
                                        else
                                        {
                                            @Html.TextBox("txtQtyPerKit", item.QuantityPerKit, eTurnsWeb.Helper.SessionHelper.QuantityFormat, new { @id = "txtQtyPerKit" + item.ID.ToString(), @style = "width:50px;", @maxlength = "10", @class = "text-boxQuantityFormat text-boxinner disableBack numericalign", @readonly = "readonly" })
                                        }
                                    </td>
                                    <td class="numericalign">
                                        <span id="spnAvlItmInWIP">@item.AvailableItemsInWIP.GetValueOrDefault(0).ToString(qtyFormat)</span>
                                    </td>
                                    <td class="numericalign">
                                        @item.QuantityReadyForAssembly.GetValueOrDefault(0).ToString(qtyFormat)
                                    </td>
                                    <td>

                                        @Html.TextBox("txtQtyToMove", "", new { @id = "txtQtyToMove", @style = "width:50px;", @maxlength = "10", @class = "numericinput text-boxinner", })

                                    </td>
                                    <td>
                                        @if (item.ItemType != 4)
                                        {
                                            <span style='position: relative'>
                                                @Html.TextBox("txtItemLocations", @item.DefualtBinName, new { @id = "txtItemLocations", @style = "width:97%;", @maxlength = "10", @class = "text-boxinner ItemBinAuto", })
                                                <a id='lnkShowAllOptions' href='javascript:void(0);' style='position: absolute; right: 5px;
                                            top: 0px;' class="ShowAllOptions">
                                                    <img src='/Content/images/arrow_down_black.png' alt='select' />
                                                </a>
                                            </span>
                                            <input id="hdnBinName" type="hidden" value="" />
                                            <input id="hdnBinID" type="hidden" value="@item.DefaultBinID" />
                                        }
                                        else
                                        {
                                            @Html.Label("");
                                        }
                                    </td>
                                    <td>
                                        @if (Model.IsDeleted.GetValueOrDefault(false))
                                        {
                                            <input type="button" value="@ResKitMaster.MoveIn" id="btnMoveIn" class="GridBtnStyleDisable inLineBtn" />
                                        }
                                        else
                                        {
                                            <input type="button" value="@ResKitMaster.MoveIn" id="btnMoveIn" class="GridBtnStyle inLineBtn" />    
                                        }                                        
                                    </td>
                                    <td>
                                        @if (item.AvailableItemsInWIP > 0 && isUpdate)
                                        {
                                            if (item.SerialNumberTracking || item.LotNumberTracking || item.DateCodeTracking)
                                            {
                                                if (!Model.IsDeleted.GetValueOrDefault(false))
                                                {
                                                    <a href="javascript:void(0)" id="aMoveOut@(item.GUID)" onclick='return OpenMoveOutQtyModel("@item.GUID.ToString()")'>
                                                        <span>@ResKitMaster.MoveOut</span>
                                                    </a>    
                                                }                                                
                                            }
                                            else
                                            {
                                                if (Model.IsDeleted.GetValueOrDefault(false))
                                                {
                                                    <input type="button" value="@ResKitMaster.MoveOut" id="btnMoveOut" class="GridBtnStyleDisable inLineBtn" />
                                                }
                                                else
                                                {
                                                    <input type="button" value="@ResKitMaster.MoveOut" id="btnMoveOut" class="GridBtnStyle inLineBtn" />
                                                }
                                            }
                                        }
                                        else
                                        {
                                            @Html.Label("");
                                        }
                                    </td>
                                    <td class="numericalign">
                                        @(((item.QuantityPerKit.GetValueOrDefault(0) * Model.KitDemand.GetValueOrDefault(0)) - item.AvailableItemsInWIP.GetValueOrDefault(0)) > 0 ? ((item.QuantityPerKit.GetValueOrDefault(0) * Model.KitDemand.GetValueOrDefault(0)) - item.AvailableItemsInWIP.GetValueOrDefault(0)) : 0)
                                    </td>
                                    <td class="numericalign">
                                        <span id="spnItemCost">@item.Cost.GetValueOrDefault(0).ToString(costFormat)</span>
                                    </td>
                                    <td class="numericalign">
                                        @item.OnHandQuantity.GetValueOrDefault(0).ToString(qtyFormat)
                                    </td>
                                    <td>
                                        @item.Description
                                    </td>
                                    <td>
                                        @item.CategoryName
                                    </td>
                                    <td>
                                        @item.Unit
                                    </td>
                                    <td class="numericalign">
                                        @item.Markup
                                    </td>
                                    <td class="numericalign">
                                        @item.SellPrice.GetValueOrDefault(0).ToString(costFormat)
                                    </td>
                                    <td>
                                        @item.SupplierName
                                    </td>
                                    <td>
                                        @item.SupplierPartNo
                                    </td>
                                    <td>
                                        @item.ManufacturerName
                                    </td>
                                    <td>
                                        @item.ManufacturerNumber
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                @if (1 == 0)
                {
                    <input type="button" id="btnMoveInSelected" value="@ResKitMaster.MoveIn" class="GridBtnStyle inLineBtn" />
                    <input type="button" id="btnMoveOutSelected" value="@ResKitMaster.MoveOut" class="GridBtnStyle inLineBtn" />
                }
            </div>
        </div>
    </div>
</div>
<div id="MoveInQtyModel">
</div>
<div class="dialog" id="KitDetailConfirmationModel" style="display: none;">
    <div class="inner">
        <p class="text">
            @eTurns.DTO.Resources.ResMessage.DeleteConfirm
        </p>
        <a href="JavaScript:void{}" id="aKitDeleteYes" class="yes">
            <img src="~/Content/images/yes.png" alt="@eTurns.DTO.Resources.ResMessage.ConfirmYes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="javascript:void(0)" class="no"
               onclick="closeConfirmModal()">
            <img src="~/Content/images/no.png" alt="@eTurns.DTO.Resources.ResMessage.ConfirmNo" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div>
<script type="text/javascript">
    var KitID = '@Model.ID';
    var KitGUID = '@Model.GUID.ToString()';
    var NotAllowedCharCodes = [9, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40];
    var oTableKitLineItems;
    var bIsFilter = false;
    var modeltitle = '@ResKitMaster.TitleMoveitemquantity';
    var objKitDetailColumns = {};
    $(document).ready(function () {

        @*var ColumnObject = new Array();
        ColumnObject = GetGridHeaderColumnsObject('KitLineItem@(Model.GUID)');*@
        objKitDetailColumns = GetGridChildGridColumnsObject('KitLineItem@(Model.GUID)');
        $('.ShowAllOptions').off('click');
        $('.ShowAllOptions').on('click', function () {
            $(this).siblings(".ItemBinAuto").autocomplete("search", " ");
        });

        $('.userContent').find('input.ItemBinAuto').each(function (i) {
            var ajaxURL = '/Master/GetBinForAutocomplete';
            var itmGuid = $(this).parent().parent().parent().find('#hdnItemGUID').val();
            var obj = {};
            obj.IncludeQty = true;
            obj.ItemGuid = itmGuid;
            obj.GetAllBins = true;
            $(this).autocomplete("destroy");
            $(this).autocomplete({
                source: function (request, response) {
                    obj.NameStartWith = request.term;
                    $.ajax({
                        url: ajaxURL,
                        type: 'POST',
                        data: JSON.stringify({ 'InputPara': obj }),
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            response($.map(data, function (Items) {
                                return {
                                    label: Items.Key,
                                    value: Items.Value,
                                    id: Items.ID
                                }
                            }));
                        },
                        error: function (err) {
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    
                    $(this).val(ui.item.value);
                    $(this).parent().parent().find('#hdnBinName').val(ui.item.label);
                    //$(this).parent().parent().find('#hdnBinID').val('0');
                    $(this).parent().parent().find('#hdnBinID').val(ui.item.id);
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {
                }
            }).bind("focus", function () {
                //$(this).autocomplete("search", " ");
            });
        });


        if ('@Model.KitCategory.GetValueOrDefault(0)' == '0')
            modeltitle = '@ResKitMaster.TitleMoveitemquantity';
        else
            modeltitle = '@ResKitMaster.TitleAdditemquantity';

        var gaiSelected = [];

        oTableKitLineItems = $('#KitLineItem' + KitGUID).dataTable({
            "bJQueryUI": true,
            "bRetrieve": true,
            "bDestroy": true,
            "bScrollCollapse": true,
            "sScrollX": "200%",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "aaSorting": [[1, "desc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries',
                "sLoadingRecords": '@eTurns.DTO.Resources.ResMessage.MsgLoading',
                "sZeroRecords": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable'
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                $("td.RowNo:first", nRow).html(this.fnSettings()._iDisplayStart + iDisplayIndex + 1);
                return nRow;
            },
            "aoColumnDefs": [
		        { mDataProp: null, sClass: "read_only center NotHide RowNo", "bSortable": false, sDefaultContent: '', aTargets: [0] }
            ],
            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";

               // if (!bIsFilter) {
                    $.ajax({
                        "url": '@Url.Content("~/Master/SaveGridState")',
                        "type": "POST",
                        data: { Data: JSON.stringify(oData), ListName: 'KitLineItemList' },
                        "async": false,
                        "dataType": "json",
                        "success": function (json) {
                            if (json.jsonData != '')
                                o = json;
                        }
                    });
               // }
                bIsFilter = false;
            },
            "fnStateLoad": function (oSettings) {
                var o;

                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'KitLineItemList' },
                    "async": false,
                    "dataType": "json",
                    "success": function (json) {

                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            },
            "fnInitComplete": function (oSettings, json) {
                $('.ColVis').detach().appendTo(".setting-arrow");
            }
            // , "aoColumns": ColumnObject
        });

        $('.DTTT_container').css('z-index', '-1');

        if ('@isCost' == '@Boolean.FalseString') {
            HideColumnUsingClassName("KitLineItem" + KitGUID);
        }


        $('#btnblock').css({ 'margin-right': '45px' });

        $("#MoveInQtyModel").dialog({
            autoOpen: false, modal: true, draggable: true, resizable: true, width: '75%', height: 500, title: modeltitle,
            open: function () {
                $('#DivLoading').show();
                $("#MoveInQtyModel").empty();
                var kitDetailGUID = $(this).data("KitDetailGUID");
                $.ajax({
                    url: '@Url.Action("ShowMoveInQtyModel")',
                    type: 'POST',
                    data: { 'KitDetailGUID': kitDetailGUID },
                    success: function (r) {
                        $('#MoveInQtyModel').html(r);
                        $('#DivLoading').hide();
                    }
                });
            },
            close: function () {
                $("#MoveInQtyModel").empty();
                //ShowEditTabGUID("KitEdit?KitGUID=" + '@Model.GUID', "frmKitMaster");
            }
        });
        $('.DTTT_container').css('z-index', '-1');


        if ('@Model.IsDeleted' === "True" || '@Model.IsArchived' === "True") {
            $('#btnCancel').removeAttr('disabled');
            $('#saveRows,#deleteRows1').css('display', 'none');
        }
        else if ('@Convert.ToString(Session["IsInsert"])' != 'True' && '@isUpdate' != 'True') {
            $('#btnCancel').removeAttr('disabled');
            $('#saveRows,#deleteRows1').css('display', 'none');
        }

        $(".text-boxPriceFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdCostcentsLimit').val(), 10)
        });
        $(".text-boxQuantityFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdQuantitycentsLimit').val(), 10)
        });

        SetKitButtons();

    });

    function SetKitButtons() {

        if (parseInt('@Model.NoOfItemsInKit') > 0)
            $('#txtKitParts').val('@Model.NoOfItemsInKit');

        if ('@Model.SerialNumberTracking' == 'True') {
            $('#txtAQ').val(parseFloat('@Model.AvailableKitQuantity').toFixed(0));
            $('#txtAWIP').val(parseFloat('@Model.AvailableWIPKit').toFixed(0));
            $('#txtDQ').val(parseFloat('@Model.KitDemand').toFixed(0));
            $('#txtAQGI').val(parseFloat('@Model.AvailableInGeneralInventory').toFixed(0));
        }
        else {
            $('#txtAQ').val(parseFloat('@Model.AvailableKitQuantity').toFixed(parseInt($('#hdQuantitycentsLimit').val(), 10)));
            $('#txtAWIP').val(parseFloat('@Model.AvailableWIPKit').toFixed(parseInt($('#hdQuantitycentsLimit').val(), 10)));
            $('#txtDQ').val(parseFloat('@Model.KitDemand').toFixed(parseInt($('#hdQuantitycentsLimit').val(), 10)));
            $('#txtAQGI').val(parseFloat('@Model.AvailableInGeneralInventory').toFixed(0));
        }

        $('#btnBuild').css('display', 'none');
        $('#btnBreak').css('display', 'none');


        //$('#spnBuildBreakQty').css('display', 'none');
        if (parseFloat('@Model.AvailableWIPKit') > 0) {
            if ('@Model.SerialNumberTracking' == 'True') {
                $('#btnBuildSerial').css('display', '');
            }
            else {
                $('#btnBuild').css('display', '');
                $('#spnBuildBreakQty').css('display', '');
            }
        }
        if (parseFloat('@Model.AvailableKitQuantity') > 0) {
            $('#btnAddNewItem').css('display', 'none');
            $('#btnBreak').css('display', '');
            $('#spnBuildBreakQty').css('display', '');
        }
    }


    $('#KitLineItem' + KitGUID + ' tbody tr').die('tap click');
    $('#deleteRows1').unbind("click");
    $('#Gobtn1').unbind("click");
    $('#clear_QLItem_filter').unbind("click");
    $('#saveRows').die('click');
    $('#PageNumber1').unbind("keydown");
    $('#btnModelYesInnerGrid').die('click');
    var lastChecked1;
    var starttrvalue1 = "";
    $('#KitLineItem' + KitGUID + ' tbody tr').live('tap click', function (e) {
        //$(this).toggleClass('row_selected');
        //return false;

        if ($(e.target).hasClass("control") == true || e.target.nodeName.toLowerCase() == "img" || e.target.type == "checkbox" || e.target.type == "radio" || e.target.type == "text" || e.target.type == "button" || $(e.target).is('a') == true || $(e.target).is('span') == true
            || $(e.target).hasClass("selectBox")
        ) {
            e.stopPropagation();
        }
        else {
            if (lastChecked1 !== undefined && lastChecked1 != null && !lastChecked1) {
                lastChecked1 = this;
            }

            if (e.shiftKey) {
                var start = $('#KitLineItem' + KitGUID + ' tbody tr').index(this);
                var end = $('#KitLineItem' + KitGUID + ' tbody tr').index(lastChecked1);

                var stringval1 = readCookieforshift("selectstartindex");
                if (stringval1 != null) {
                    var endindex = $(this).closest('tr').attr('id');
                    createCookieforshift("selectendindex", endindex, 1);
                    if ($("#hdnPageName").val() !== undefined) {
                        var pagename = '';
                        pagename = $("#hdnPageName").val();
                        GetOnlyIdsForPassPagesForshift(pagename, true);
                    }
                }

                for (i = Math.min(start, end); i <= Math.max(start, end); i++) {
                    if (!$('#KitLineItem' + KitGUID + ' tbody tr').eq(i).hasClass('row_selected')) {
                        $('#KitLineItem' + KitGUID + ' tbody tr').eq(i).addClass("row_selected");
                    }
                }
                if (window.getSelection) {
                    if (window.getSelection().empty) {  // Chrome
                        window.getSelection().empty();
                    } else if (window.getSelection().removeAllRanges) {  // Firefox
                        window.getSelection().removeAllRanges();
                    }
                } else if (document.selection) {  // IE?
                    document.selection.empty();
                }
            } else if ((e.metaKey || e.ctrlKey)) {
                $(this).toggleClass('row_selected');
            } else {
                $(this).toggleClass('row_selected');


                if ($(this).hasClass('row_selected')) {
                    (starttrvalue1 == "") ? starttrvalue1 = $(this).closest('tr').attr('id') : starttrvalue1 = starttrvalue1 + "," + $(this).closest('tr').attr('id');
                    createCookieforshift("selectstartindex", starttrvalue1, 1);
                } else {

                    var stringval = readCookieforshift("selectstartindex");
                    if (stringval != "undefined") {
                        if (stringval != null) {
                            var tmp = stringval.split(',');
                            var index = tmp.indexOf($(this).closest('tr').attr('id'));
                            if (index !== -1) {
                                tmp.splice(index, 1);
                                stringval = tmp.join(',');
                                createCookieforshift("selectstartindex", stringval, 1);
                            }
                        }
                    }

                }
            }

            lastChecked1 = this;
        }

    });

    var InnerGrdArr = null;
    var InnerGrdRows = null;


    $('#deleteRows1').click(function () {
        InnerGrdArr = new Array();
        InnerGrdRows = new Array();

        if (parseInt('@Model.AvailableKitQuantity.GetValueOrDefault(0)') <= 0 && parseInt('@Model.AvailableWIPKit.GetValueOrDefault(0)') <= 0) {
            var anSelected = fnGetSelected(oTableKitLineItems);
            var stringIDs = "";
            for (var i = 0; i <= anSelected.length - 1; i++) {

                var avlWIP = $(anSelected[i]).find('#spnAvlItmInWIP').text();
                if (avlWIP != null && avlWIP != NaN && avlWIP != undefined && parseFloat(avlWIP) <= 0) {
                    var KDGUID = $(anSelected[i]).find("#hdnGUID").val();
                    InnerGrdRows.push(anSelected[i]);
                    stringIDs = stringIDs + KDGUID + ",";
                }
            }

            InnerGrdArr = stringIDs.split(',');

            if (InnerGrdArr.length > 0 && InnerGrdArr[InnerGrdArr.length - 1].length == 0) {
                InnerGrdArr.pop();
            }

            if (InnerGrdArr != undefined && InnerGrdArr != NaN && InnerGrdArr.length > 0) {
                $('#KitDetailConfirmationModel').modal();
            }
        }

    });

    $("#aKitDeleteYes").live("click", function () {

        if (InnerGrdArr != null && InnerGrdArr != undefined && InnerGrdArr.length > 0) {

            $.ajax({
                'url': '/Kit/KitLineItemsDelete',
                data: { ids: InnerGrdArr.join(',') },
                success: function (response) {
                    if (response == "ok") {
                        for (var i = 0; i <= InnerGrdArr.length - 1; i++) {
                            oTableKitLineItems.fnDeleteRow(InnerGrdRows[i]);
                        }
                        $("#spanGlobalMessage").html("@ResCommon.RecordDeletedSuccessfully".replace("{0}", "(" + InnerGrdArr.length + ")"));
                        showNotificationDialog();
                        InnerGrdArr = null;
                        UpdateLineItemGrid();
                    }
                },
                error: function (response) {

                }
            });
            $.modal.impl.close();
        }
    });

    function closeConfirmModal() {
        $.modal.impl.close();
    }


    $('#PageNumber1').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#Gobtn1").click();
            return false;
        }
    });

    $("#Gobtn1").click(function () {
        var pval = $('#PageNumber1').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }
        if (pval == 0)
            return;

        $('#KitLineItem' + KitGUID).dataTable().fnPageChange(Number(pval - 1));
        $('#PageNumber1').val('');
    });

    /* global search function */
    function fnFilterKitLineItem() {

        bIsFilter = true;
        var searchtext = $("#InnerItem_filter").val().replace(/'/g, "''");
        $('#KitLineItem' + KitGUID).dataTable().fnFilter(
                            searchtext,
                            null,
                            null,
                            null
                        );

        $('#KitLineItem' + KitGUID + ' td').removeHighlight();

        if (searchtext.length > 0)
            $('#KitLineItem' + KitGUID + ' td').highlight($("#InnerItem_filter").val());

    }


    $("#InnerItem_filter").on("keyup", function (e) {

        var code = (e.keyCode ? e.keyCode : e.which);
        var index = $.inArray(code, NotAllowedCharCodes);
        if (index >= 0) return false;

        fnFilterKitLineItem();

    });

    $("#InnerItem_filter").on("keydown", function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            fnFilterKitLineItem();
        }

    });


    $("#clear_QLItem_filter").click(function () {
        $("#InnerItem_filter").val('');
        fnFilterKitLineItem();
        $("#InnerItem_filter").focus();
        return false;
    });


    $('#saveRows').live("click", function () {
        var msg = UpdateLineItemGrid();
        if (msg.Status == "ok") {
            showNotificationDialog();
            $("#spanGlobalMessage").html(msg.Message);
            $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');

        }
        else if (msg.Status == 'No') {
            $('#DivLoading').hide();
            $("#spanGlobalMessage").html('@ResCommon.NoChanges');
            showNotificationDialog();
            $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
        }
        else {
            $('#DivLoading').hide();
            $("#spanGlobalMessage").html(msg.Message);
            showNotificationDialog();
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
        }

    });

    function UpdateLineItemGrid() {
        var arrItems = new Array();
        $('#KitLineItem' + KitGUID + ' tbody tr').each(function () {
            var ID = $(this).find('#hdnID').val();
            var GUID = $(this).find('#hdnGUID').val();
            var ItemID = $(this).find('#hdnItemID').val();
            var ItemGUID = $(this).find('#hdnItemGUID').val();
            var kitID = $(this).find('#hdnKitID').val();
            var kitGUID = $(this).find('#hdnKitGUID').val();
            var Qty = $(this).find('#txtQtyPerKit' + ID).val();
            var KitItemWIPQty = $(this).find('#spnAvlItmInWIP').text();
            var QtyOnDemand = $(this).find('#hdnQtyOnDemand').val();

            if (Qty !== undefined && Qty !== NaN && parseFloat(Qty) > 0) {
                var data = { "ID": ID, "ItemID": ItemID, "ItemGUID": ItemGUID, "KitID": kitID, "KitGUID": kitGUID, "QuantityPerKit": Qty, 'AvailableItemsInWIP': KitItemWIPQty, 'GUID': GUID, 'QtyToMeetDemand': QtyOnDemand };
                arrItems.push(data);
            }
        });
        return SaveLineItemsGrid(arrItems);

    }

    function SaveLineItemsGrid(arrItems) {
        var status = "No";
        var message = "@ResCommon.NoChanges"
        if (arrItems.length > 0) {
            $('#DivLoading').show();
            $.ajax({
                url: '@Url.Content("~/Kit/AddItemToDetailTable")',
                data: { 'para': JSON.stringify(arrItems) },
                dataType: 'json',
                type: 'POST',
                async: false,
                cache: false,
                success: function (response) {
                    if (response.Status == "ok") {
                        CallThisFunctionFromModel('success');
                    }
                    status = response.Status;
                    message = response.Message;
                }
            });
        }
        var obj = { 'Status': status, 'Message': message };
        return obj;
    }

    function OpenMoveInQtyModel(kitDetailGUID) {
        $('#MoveInQtyModel').data("KitDetailGUID", kitDetailGUID).dialog('open')
        return false;
    }
    function OpenMoveOutQtyModel(kitDetailGUID) {
        var tr = $('#KitLineItem' + KitGUID + ' tr[id=' + kitDetailGUID + ']');
        var AvWIP = parseFloat($(tr).find('#spnAvlItmInWIP').text());
        if (AvWIP != null && AvWIP != NaN && AvWIP != undefined && AvWIP > 0) {
            //$('#MoveOutQtyModel').data("KitDetailGUID", kitDetailGUID).dialog('open')
            $(".row_selected").removeClass('row_selected');
            $(tr).addClass('row_selected');
            $('#txtBuildBreakQty').val(1); //$('#txtBuildBreakQty').val($(tr).find('#txtQtyToMove').val());
            $('#hdnIsCalledFromSingleMoveOut').val(true);
            $('#hdnSingleMoveOutQty').val($(tr).find('#txtQtyToMove').val());
            $("#btnMoveOutBulk").click();
        }
        else {
            $("#spanGlobalMessage").html('@ResKitMaster.QtyNotAvailableMoveOut');
            showNotificationDialog();
            $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
        }
        return false;
    }


    $('div.userContent').find('#btnMoveIn,#btnMoveOut').off('click');

    $('div.userContent').find('#btnMoveIn').on('click', function () {
        var hasPullPopup = false;
        var tr = $(this).parent().parent();
        var qtyToMove = $(tr).find('#txtQtyToMove').val();
        var binName = '';
        if (isNaN(parseFloat(qtyToMove)) || parseFloat(qtyToMove) <= 0) {
            //alert("@ResKitMaster.EnterQtyToMove");
            $("#spanGlobalMessage").html('@ResKitMaster.EnterQtyToMove');
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            showNotificationDialog();
            return false;
        }

        var itemType = $(tr).find('#hdnItemType').val();
        if (itemType != 4)
            binName = $(tr).find('#txtItemLocations').val().split(' (')[0];

        if (binName.length <= 0 && itemType != 4) {
            //alert('@ResKitMaster.SelectBin');
            $("#spanGlobalMessage").html('@ResKitMaster.SelectBin');
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            showNotificationDialog();
            return false;
        }
        var kitDetailGuid = $(tr).find('#hdnGUID').val();
        var isSerial = $(tr).find('#hdnItemSRTrack').val();
        var isLotTrack = $(tr).find('#hdnItemLOTTrack').val();
        var isDCT = $(tr).find('#hdnItemDOCTrack').val();
        if (isSerial == "True" || isLotTrack == "True" || isDCT == "True") {
            hasPullPopup = true;
        }


        if (hasPullPopup) {


            var kitDetailID = $(tr).find('#hdnID').val();
            var kitDetailGUID = $(tr).find('#hdnGUID').val();
            var vBinName = $(tr).find('#hdnBinName').val();
            var vBinId = $(tr).find('#hdnBinID').val();
            var vItemGUID = $(tr).find("#hdnItemGUID").val();
            if (vBinName.length <= 0) {
                vBinName = $(tr).find("#txtItemLocations").val();
            }
            var txtQtyPerKit = $(tr).find("input[name='txtQtyPerKit']").val();
            var qtyToMove = $(tr).find("#txtQtyToMove").val() * txtQtyPerKit;

            var kitNumber = '@Model.KitPartNumber';
            var kitGuid = '@Model.GUID';
            var itemNumber = $(tr).find('#hdnItemNumber').val();
            var ItemToMoveIn = new Array();
            ItemToMoveIn.push({
                ItemGUID: vItemGUID, KitDetailID: kitDetailID, BinID: vBinId, KitDetailGUID: kitDetailGUID, BinNumber: vBinName, BinName: binName,
                KitGuid: kitGuid, QtyToMoveIn: qtyToMove, KitPartNumber: kitNumber,
                IsLotTrack: isLotTrack, IsSRTrack: isSerial, IsDCTrack: isDCT, ItemNumber: itemNumber, ValidateOnHandQty: true, MoveType: 'IN'
            });
            if (ItemToMoveIn.length > 0) {
                $.ajax({
                    url: 'OpenPopupToMoveInItem',
                    type: 'Post',
                    data: JSON.stringify(ItemToMoveIn),
                    dataType: 'html',
                    contentType: 'application/json',
                    success: function (result) {
                        // closeOrdReceiveInfoModel();
                      if (result == 'false') {
                            $("#spanGlobalMessage").html('@ResKitMaster.ItemsHasNotEnoughQuantityToMoveIn');
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            showNotificationDialog();
                        } else {
                            $('#DivPullSelection').html(result);
                            $("#DivPullSelection").dialog('open');
                        }
                    },
                    error: function (xhr) {
                        $("#spanGlobalMessage").html(xhr.status + ' ' + xhr.statusText);
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        showNotificationDialog();
                        //alert(xhr.status + ' ' + xhr.statusText);
                    }
                })
            }

        }
        else {
            var tr = $(this).parent().parent();

            var arrObj = new Array();
            var obj = {};
            obj.KitDetailGUID = kitDetailGuid;
            obj.TotalQuantity = qtyToMove;
            obj.BinNumber = binName;
            obj.MoveInOut = "IN";
            arrObj.push(obj);
            MoveInOut(arrObj);
        }
    });

    $('div.userContent').find('#btnMoveOut').on('click', function () {
        var tr = $(this).parent().parent();
        var kitDetailGuid = $(tr).find('#hdnGUID').val();
        var qtyToMove = $(tr).find('#txtQtyToMove').val();
        var itemType = $(tr).find('#hdnItemType').val();
        var binName = '';
        if (itemType != 4)
            binName = $(tr).find('#txtItemLocations').val().split(' (')[0];
        if (isNaN(parseFloat(qtyToMove)) || parseFloat(qtyToMove) <= 0) {
            //alert("Please enter quantity to Move");
            $("#spanGlobalMessage").html('@ResKitMaster.EnterQtyToMove');
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            showNotificationDialog();
            return false;
        }

        if (binName.length <= 0 && itemType != 4) {
            //alert('@ResKitMaster.SelectBin');
            $("#spanGlobalMessage").html('@ResKitMaster.SelectBin');
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            showNotificationDialog();
            return false;
        }
        var arrObj = new Array();
        var obj = {};
        obj.KitDetailGUID = kitDetailGuid;
        obj.TotalQuantity = qtyToMove;
        obj.BinNumber = binName;
        if ($(this).attr('id') == 'btnMoveIn')
            obj.MoveInOut = "IN";
        else if ($(this).attr('id') == 'btnMoveOut')
            obj.MoveInOut = "OUT";

        arrObj.push(obj);
        MoveInOut(arrObj);
    });

    $('#btnMoveInSelected,#btnMoveOutSelected').off('click');

    $('#btnMoveInSelected,#btnMoveOutSelected').on('click', function () {
        var arrObj = new Array();
        var btnName = $(this).attr('id');
        $('#KitLineItem' + '@Model.GUID' + ' tbody tr.row_selected').each(function (i) {
            var ID = $(this).find('#hdnID').val();
            var GUID = $(this).find('#hdnGUID').val();
            var Qty = $(this).find('#txtQtyToMove').val();
            var binName = $(this).find('#txtItemLocations').val().split(' (')[0];

            if (isNaN(parseFloat(Qty)) || parseFloat(Qty) <= 0) {
                //alert("Please enter quantity to Move");
                $("#spanGlobalMessage").html('@ResKitMaster.EnterQtyToMove');
                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                showNotificationDialog();
                return false;
            }

            if (binName.length <= 0) {
                //alert('@ResKitMaster.SelectBin');
                $("#spanGlobalMessage").html('@ResKitMaster.SelectBin');
                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                showNotificationDialog();
                return false;
            }

            var obj = {};
            obj.KitDetailGUID = GUID;
            obj.TotalQuantity = Qty;
            obj.BinNumber = binName;

            if (btnName == 'btnMoveInSelected' && $(this).find('#btnMoveIn').length > 0) {
                obj.MoveInOut = "IN";
                arrObj.push(obj);
            }
            else if (btnName == 'btnMoveOutSelected' && $(this).find('#btnMoveOut').length > 0) {
                obj.MoveInOut = "OUT";
                arrObj.push(obj);
            }

        });

        if (arrObj != null && arrObj.length > 0) {
            MoveInOut(arrObj)
        }
        else {
            $("#spanGlobalMessage").html('@ResCommon.ReqProperDara');
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            showNotificationDialog();
            //alert('@ResCommon.ReqProperDara');
        }
    });

    $("#ColumnOrderSetup1").off('click')
    $("#ColumnOrderSetup1").on('click', function () {
        var dtName = 'KitLineItem' + KitGUID
        $("#divDetailGridReorderPopup").data({ 'DataTableName': dtName, 'ListName': 'KitLineItemList', 'ColumnObjectName': 'objKitDetailColumns' }).dialog("open");
        return false;
    });

    function FillDetailGridDiv() {
        $('#divKitLineItems').html('')
        $.ajax({
            url: '@Url.Action("LoadKitLineItemsByKitMasterDTO")',
            type: 'POST',
            data: { 'KitGUID': '@Model.GUID' },
            success: function (r) {
                $("#divDetailGridReorderPopup").dialog("close");
                $('#divKitLineItems').html(r);
                $('#DivLoading').hide();
            }
        });
    }


</script>
