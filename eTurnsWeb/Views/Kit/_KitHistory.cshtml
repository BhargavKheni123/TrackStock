@model eTurns.DTO.KitMasterDTO
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    if (Model != null)
    {
        KitMasterDTO objKitMasterDTO = Model;

    }
}
@using (Ajax.BeginForm("SaveKitHeader", "Kit", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmKitMasterHistory" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    if (Model.ID > 0)
    {
        <div class="infoBlock">
            <ul>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.RoomName)
                    </label>
                    : <span>@(Model.RoomName)</span>
                </li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Created)
                    </label>
                    : <span>@(Model.ReceivedOnWebDate)</span>
                </li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.CreatedByName)
                    </label>
                    : <span>@(Model.CreatedByName)</span>
                </li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Updated)
                    </label>
                    : <span>@(Model.ReceivedOnDate)</span>
                </li>
                <li style="border: none">
                    <label for="RoomName">
                        @Html.LabelFor(model => model.UpdatedByName)
                    </label>
                    : <span>@(Model.UpdatedByName)</span>
                </li>
            </ul>
        </div>
    }

    <div style="clear: both; padding-top: 15px">
        <a id="H_ancHideShowContent" style="float: left; margin-top: 8px; margin-left: 10px">
            <img src="/Content/images/drildown_open.jpg" alt="" />
        </a>
        <div class="infoBlock" style="width: 95%; margin-left: 10px; background: none">
            <div id="CollapsedContent" class="edtForm">
                <ul>
                    <li style="border-right: none;">
                        <label for="label" style="width: 100px; float: left; padding: 1.3% 0;">
                            @eTurns.DTO.ResKitMaster.KitPartNumber <em style="color: Red">*</em>
                        </label>
                        @Html.TextBoxFor(model => model.KitPartNumber, new { @id = "txtKitPartNumber", @class = "text-box", @style = "background:white" })
                        <br />
                        @Html.ValidationMessageFor(model => model.KitPartNumber)
                        <span>
                            @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                            @Html.HiddenFor(model => model.GUID)
                            @Html.HiddenFor(model => model.Created)
                            @Html.HiddenFor(model => model.Updated)
                            @Html.HiddenFor(model => model.CreatedBy)
                            @Html.HiddenFor(model => model.LastUpdatedBy)
                            @Html.HiddenFor(model => model.CompanyID)
                            @Html.HiddenFor(model => model.Room)
                            @Html.HiddenFor(model => model.RoomName)
                            @Html.HiddenFor(model => model.CreatedByName)
                            @Html.HiddenFor(model => model.UpdatedByName)
                            @Html.HiddenFor(model => model.IsDeleted)
                            @Html.HiddenFor(model => model.IsArchived)
                            @Html.HiddenFor(model => model.IsKitBuildAction)
                            @Html.HiddenFor(model => model.IsKitBreakAction)
                            @Html.HiddenFor(model => model.IsNotAbleToDelete)
                            @Html.HiddenFor(model => model.ReceivedOn)
                            @Html.HiddenFor(model => model.ReceivedOnWeb)
                            @Html.HiddenFor(model => model.AddedFrom)
                            @Html.HiddenFor(model => model.EditedFrom)
                        </span>
                    </li>
                </ul>
                @if (Model.ID > 0)
                {
                    <ul>
                        <li style="border-right: none;">
                            @*<label for="label" style="width: 90px; float: left; padding: 1.3% 0;">
                                @eTurns.DTO.ResKitMaster.AvailableKitQuentity
                            </label>
                            <span style="padding-left: 10px;">
                                @Html.TextBoxFor(model => model.AvailableKitQuentity, new { @id = "txtAQ", @readonly = "readonly", @class = "text-box", @style = "width: 50px;" })
                            </span>*@
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 90px; float: left; padding: 1.3% 0;">
                                @eTurns.DTO.ResKitMaster.KitDemand
                            </label>
                            <span>
                                @Html.TextBoxFor(model => model.KitDemand, new { @id = "txtDQ", @readonly = "readonly", @class = "text-box", @style = "width: 50px;" })
                            </span>
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 90px; float: left; padding: 1.3% 0;">
                                @if (Model.KitCategory.GetValueOrDefault(0) == 0)
                                {
                                    @eTurns.DTO.ResKitMaster.AvailableWIPKit
                                }
                                else
                                {
                                    @*@eTurns.DTO.ResKitMaster.QuentityToBuildKit*@
                                }
                            </label>
                            <span>
                                @Html.TextBoxFor(model => model.AvailableWIPKit, new { @id = "txtAWIP", @readonly = "readonly", @class = "text-box", @style = "width: 50px;" })
                            </span>
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 90px; float: left; padding: 1.3% 0;">
                                @eTurns.DTO.ResKitMaster.AvailableInGeneralInventory
                            </label>
                            <span>
                                @Html.TextBoxFor(model => model.AvailableInGeneralInventory, new { @id = "txtAQGI", @readonly = "readonly", @class = "text-box", @style = "width: 50px;" })
                            </span>
                        </li>
                    </ul>
                }
            </div>
        </div>
    </div>
    <div id="HExpandedContent" style="display: none">
        <ul>
            <li style="border: none">
                <div class="editorForm">
                    <ul>
                        <li>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Description)
                            </div>
                            <div class="editor-field">
                                @Html.TextAreaFor(model => model.Description, new { id = "txtDescription", @class = "text-box", maxlength = 1024 })
                                <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Description)</span>
                            </div>
                        </li>
                        <li>
                            @*<div class="editor-label">
                                @Html.LabelFor(model => model.MinimumKitQuentity)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.MinimumKitQuentity, new { id = "txtMinimumKitQuentity", onkeydown = "javascript:return OnlyNumeric(event,this);", @class = "text-box", maxlength = 5 })
                                <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.MinimumKitQuentity)</span>
                            </div>*@
                        </li>
                        <li>
                            @*<div class="editor-label">
                                @Html.LabelFor(model => model.MaximumKitQuentity)
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.MaximumKitQuentity, new { id = "txtMaximumKitQuentity", onkeydown = "javascript:return OnlyNumeric(event,this);", @class = "text-box", maxlength = 10 })
                                <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.MaximumKitQuentity)</span>
                            </div>*@
                        </li>
                        <li>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.ReOrderType) <em style="color: Red">*</em>
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.ReOrderType, new SelectList(ViewBag.ReOrderTypeList, "typeValue", "ReOrderType", Model.ReOrderType), new { style = "width:80px" })
                                <br />
                                @Html.ValidationMessageFor(model => model.ReOrderType)
                            </div>
                        </li>
                        <li>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.KitCategory)
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.KitCategory, new SelectList(ViewBag.KitCategoryList, "CategoryValue", "KitCategory", Model.KitCategory), new { style = "width:80px" })
                            </div>
                        </li>
                    </ul>
                </div>
                <div class="editorForm padRightNone">
                    <ul>
                        @Html.Partial("UDFLayout", new eTurns.DTO.ResKitMaster())
                    </ul>
                </div>
            </li>
        </ul>
    </div>
    <div class="editorForm" style="width: 98%">
        <ul>
            <li>
                <div class="editor-label" style="width: 2%">
                    &nbsp;
                </div>
                <div class="BtnBlockform" style="width: 35%">
                    <input type="button" value="@eTurns.DTO.Resources.ResCommon.Cancel" id="btnCloseKitHistory" class="CreateBtn" />
                </div>
                <div class="BtnBlockform" style="width: 36%; margin-left: 10px; background: none;
                    float: right; border: none;">
                    <ul>
                        <li style="border-right: none; width: 150px;">
                            <label for="label" style="width: 70px; float: left; padding: 1.3% 0; margin: 4% 2% 1% 0;">
                                @eTurns.DTO.ResKitMaster.NoOfItemsInKit
                            </label>
                            <span>
                                @Html.TextBoxFor(model => model.NoOfItemsInKit, new { @id = "txtKitParts", @readonly = "readonly", @class = "text-box", @style = "width: 50px;margin: 2% 2% 1% 0;padding: 5px;" })
                            </span>
                        </li>
                        <li style="border-right: none; width: 200px;">
                            <label for="label" style="width: 60px; float: left; padding: 1.3% 10px; margin: 3% 2% 1% 0;">
                                @eTurns.DTO.ResKitMaster.KitCost $
                            </label>
                            <span>
                                @*@Html.TextBoxFor(model => model.KitCost, new { @id = "txtKitCost", @readonly = "readonly", @class = "text-box", @style = "width: 80px;" })*@
                            @Html.TextBox("txtKitCost", Model.KitCost.GetValueOrDefault(0), "{0:0.00}", new { @readonly = "readonly", @class = "text-box", @style = "width: 80px;margin: 2% 2% 1% 0;padding: 5px;" })
                        </span>
                    </li>
                </ul>
            </div>
        </li>
    </ul>
</div>
}
<div id="divKitLineItemsHistory">
</div>
<script type="text/javascript">
    var KitHistoryID = '@Model.HistoryID';



    $(document).ready(function () {

        $('#HExpandedContent').css('display', 'none');
        $('#H_ancHideShowContent').css('display', '');

        $(':input[type="text"]', '#frmKitMasterHistory')
            .css('background', 'white');

        $(':input[type="text"]', '#frmKitMasterHistory').attr('disabled', 'disabled');
        $('select', '#frmKitMasterHistory').attr('disabled', 'disabled');
        $('textarea', '#frmKitMasterHistory').attr('disabled', 'disabled');
        $(':input[type="checkbox"]', '#frmKitMasterHistory').attr('disabled', 'disabled');
        HistoryCallThisFunctionFromModel('success');
    });

    $('#btnCloseKitHistory').unbind('click');
    $('#btnCloseKitHistory').click(function (e) {
        $(".ui-dialog-titlebar-close").click();
    });

    function onSuccess(response) {
    }

    function onFailure(message) {
    }

    function HistoryCallThisFunctionFromModel(msg) {
        if (msg == 'success') {
            $('#DivLoading').show();
            $('#divKitLineItemsHistory').empty();
            $.ajax({
                url: '@Url.Action("LoadKitLineItemHistory")',
                type: 'POST',
                data: { 'KitHistoryID': KitHistoryID },
                success: function (r) {
                    $('#divKitLineItemsHistory').html(r);
                    $('#DivLoading').hide();
                }
            });
        }
        else if (json.Status == 'fail') {
            //alert(json.Message);
            return false;
        }
    }

    $('#H_ancHideShowContent').unbind('click');
    $('#H_ancHideShowContent').click(function () {
        if ($('#HExpandedContent').css('display') == 'none') {
            $('#HExpandedContent').css('display', '');
            $('#H_ancHideShowContent img').attr('src', '/Content/images/drildown_close.jpg');
        }
        else {
            $('#HExpandedContent').css('display', 'none');
            $('#H_ancHideShowContent img').attr('src', '/Content/images/drildown_open.jpg');
        }
    });
</script>
