@model DashboardParameterDTO
@{
    List<SelectListItem> lstMeasureMentMethods = new List<SelectListItem>();

    SelectListItem objSelectListItem = new SelectListItem();
    objSelectListItem.Text = "Measurement Method";
    objSelectListItem.Value = "0";
    lstMeasureMentMethods.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResDashboard.MeasurementPullTransferValue;
    objSelectListItem.Value = "1";
    lstMeasureMentMethods.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResDashboard.MeasurementPullTransfer;
    objSelectListItem.Value = "2";
    lstMeasureMentMethods.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResDashboard.MeasurementOrders;
    objSelectListItem.Value = "3";
    lstMeasureMentMethods.Add(objSelectListItem);

    SelectList lstmeasureMethods = new SelectList(lstMeasureMentMethods, "Value", "Text");

    lstMeasureMentMethods = new List<SelectListItem>();
    for (int i = 1; i < 13; i++)
    {
        objSelectListItem = new SelectListItem();
        objSelectListItem.Text = i.ToString();
        objSelectListItem.Value = i.ToString();
        lstMeasureMentMethods.Add(objSelectListItem);
    }
    SelectList lstslMonths = new SelectList(lstMeasureMentMethods, "Value", "Text");

    lstMeasureMentMethods = new List<SelectListItem>();
    for (int i = eTurns.DAL.DateTimeUtility.DateTimeNow.Year - 4; i <= eTurns.DAL.DateTimeUtility.DateTimeNow.Year + 4; i++)
    {
        objSelectListItem = new SelectListItem();
        objSelectListItem.Text = i.ToString();
        objSelectListItem.Value = i.ToString();
        lstMeasureMentMethods.Add(objSelectListItem);
    }
    SelectList lstslYears = new SelectList(lstMeasureMentMethods, "Value", "Text");
    Model.AutoClassification = false;
}
<div class="dashboard" id="dvdashpara">
    <div class="row1">
        <div class="field">
            <div class="legend">
              @ResDashboard.TurnSetting</div>
            <table border="0" cellspacing="0" cellpadding="0" style="width:100%">
                <tr>
                    <td align="left" valign="top" height="10">
                        &nbsp;
                    </td>
                    <td align="left" valign="top" width="180px">
                        @ResDashboard.MeasurmentMethod
                    </td>
                    <td colspan="5" align="left" valign="top" width="196px">
                        @ResDashboard.NumberofDaysofUsagetoSample
                    </td>
                    <td align="left" valign="top">
                        @ResDashboard.Turns
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td width="20" align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        @Html.DropDownListFor(model => model.TurnsMeasureMethod, lstmeasureMethods, new { @class = "bdr" })
                    </td>
                    <td colspan="5" align="left" valign="top">
                        @Html.TextBoxFor(model => model.TurnsDaysOfUsageToSample, new { @class = "bdr",maxlength = 3 })
                    </td>
                    <td align="left" valign="top">
                        @*@Html.TextBoxFor(model => model.TurnsCalculatedStockRoomTurn, new { @class = "box", @readonly = "readonly" })*@
                    </td>
                    <td align="left" valign="top">
                        <input type="button" value="Recalculate" name="btnRecalculateTurn" id="btnRecalculateTurn"
                            class="recalculate" />
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td width="20" align="left" valign="top">
                        &nbsp;
                    </td>
                    <td colspan="5" align="right" valign="middle">
                        &nbsp;
                    </td>
                    <td colspan="2" align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="row2">
        <div class="field">
            <div class="legend">
                @ResDashboard.AverageUsageSetting</div>
            <table border="0" cellspacing="0" cellpadding="0" style="width:100%;">
                <tr>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        @ResDashboard.MeasurmentMethod
                    </td>
                    <td align="left" valign="top" width="10">
                        &nbsp;
                    </td>
                    <td width="240" align="left" valign="top">
                        @ResDashboard.DaysofUsagetoSample =
                    </td>
                    <td align="left" valign="top">
                        @Html.TextBoxFor(model => model.AUDayOfUsageToSample, new { @class = "bdr", @style = "width:25px;", maxlength = 3 })
                    </td>
                    <td width="240" align="left" valign="top">
                        @ResDashboard.DaysofUsagetoSampleInstock  =
                    </td>
                    <td align="left" valign="top">
                        @Html.TextBoxFor(model => model.MonthlyAverageUsage, new { @class = "bdr", @style = "width:25px;", maxlength = 3 })
                    </td>
                    <td align="left" valign="top">
                        <input type="button" name="btnRecalculateAvgUsage" id="btnRecalculateAvgUsage" value="Recalculate"
                            class="recalculate" />
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td align="left" valign="top" width="20">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        @Html.DropDownListFor(model => model.AUMeasureMethod, lstmeasureMethods, new { @class = "bdr" })
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp; @*Average Daily Usage Over Sample =*@
                    </td>
                    <td align="left" valign="top">
                        &nbsp;@* @Html.TextBoxFor(model => model.AUCalculatedDailyUsageOverSample, new { @class = "box", @readonly = "readonly" })*@
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="right" valign="top" colspan="2">
                        &nbsp;
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="row3">
        <div class="field">
            <div class="legend">
                @ResDashboard.MinimumandMaximumOptimizationSettings</div>
            <table border="0" cellspacing="0" cellpadding="0" style="width:100%;">
                <tr>
                    <td align="left" valign="top" width="20">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        @ResDashboard.MeasurmentMethod
                    </td>
                    <td align="left" valign="top">
                        @Html.DropDownListFor(model => model.MinMaxMeasureMethod, lstmeasureMethods.Where(t => t.Value != "1").ToList(), new { @class = "bdr" })
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        <img src="@Url.Content("~/Content/images/Green.png")" alt="Red" style="padding-top: 5px;" />
                        = @ResDashboard.perDisaboveoptimizationvalue1 =
                        @Html.TextBoxFor(model => model.MinMaxOptValue1, new { @class = "bdr", @style = "width:25px;", maxlength = 3 })
                        %
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td align="left" valign="top" width="20">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        @ResDashboard.DaysofUsagetoSample =
                    </td>
                    <td align="left" valign="top">
                        @Html.TextBoxFor(model => model.MinMaxDayOfUsageToSample, new { @class = "bdr", @style = "width:25px;", maxlength = 3 })
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        <img src="@Url.Content("~/Content/images/Yellow.png")" alt="Yellow"  style="padding-top: 5px;" />

                        = @ResDashboard.perDisbetweenoptimizationvalue1andvalue2
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp; @* Daily Average over sample =*@
                    </td>
                    <td align="left" valign="top">
                        &nbsp; @*@Html.TextBoxFor(model => model.MinMaxCalculatedDailyUsageOverSample, new { @class = "box", @readonly = "readonly" })*@
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        <img src="@Url.Content("~/Content/images/Red.png")" alt="Red" style="padding-top: 5px;" />
                        = @ResDashboard.perDisbelowoptimizationvalue2  =
                        @Html.TextBoxFor(model => model.MinMaxOptValue2, new { @class = "bdr", @style = "width:25px;", maxlength = 3 })
                        %
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        = @ResDashboard.Minimum =
                    </td>
                    <td align="left" valign="top">
                        @Html.TextBoxFor(model => model.MinMaxDayOfAverage, new { @class = "bdr", @style = "width:25px;", maxlength = 3 })
                        &nbsp;days of Daily Average @*= @Html.TextBoxFor(model => model.MinMaxCalcAvgPullByDay, new { @class = "box", @readonly = "readonly" })*@
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        <div style="width: 340px;">
                            <ul style="font-weight: bold;">
                                <li>@ResDashboard.minmaxmessage1 </li>
                                <li>@ResDashboard.minmaxmessage2 </li>
                            </ul>
                        </div>
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        @ResDashboard.MaximumMinimumx
                    </td>
                    <td align="left" valign="top">
                        @Html.TextBoxFor(model => model.MinMaxMinNumberOfTimesMax, new { @class = "bdr", @style = "width:25px;", maxlength = 4 })
                        @*= @Html.TextBoxFor(model => model.MinMaxCalcualtedMax, new { @class = "box", @readonly = "readonly" })*@
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="right" valign="top">
                        @*@Html.HiddenFor(model => model.ID)
                        @Html.HiddenFor(model => model.ParameterType)
                        <input type="button" style="margin-right: 70px;" value="Recalculate" name="btnRecalculateMinMax"
                            id="btnRecalculateMinMax" class="recalculate" />*@
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        @ResDashboard.AnnualCarryingCostPercent
                    </td>
                    <td align="left" valign="top">
                        @Html.HiddenFor(model => model.LargestAnnualCashSavings)
                        @Html.TextBoxFor(model => model.AnnualCarryingCostPercent, new { @class = "bdr", @style = "width:25px;", maxlength = 3 })                        
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="right" valign="top">
                        @Html.HiddenFor(model => model.ID)
                        @Html.HiddenFor(model => model.ParameterType)
                        <input type="button" style="margin-right: 70px;" value="Recalculate" name="btnRecalculateMinMax"
                            id="btnRecalculateMinMax" class="recalculate" />
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="right" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="row4">
        <div class="field">
            <div class="legend">
                @ResDashboard.OtherSettings</div>
            <table width="100%" border="0" cellspacing="0" cellpadding="0">
                <tr>
                    <td align="left" valign="top" width="20">
                        &nbsp;
                    </td>
                    <td align="left" valign="top" style="width: 225px;">
                       @ResDashboard.PieChartmetric =
                    </td>
                    <td align="left" valign="top">
                        @Html.RadioButtonFor(model => model.PieChartmetricOn, 1)
                        &nbsp;@ResDashboard.Item %
                        @Html.RadioButtonFor(model => model.PieChartmetricOn, 2)
                        &nbsp;@ResDashboard.Category %
                        @Html.RadioButtonFor(model => model.PieChartmetricOn, 3)
                        &nbsp;@ResDashboard.Manufacturer %
                        <input type="button" style="margin-left: 180px;" value="@ResCommon.Save" name="btnSaveOtherParameters"
                            id="btnSaveOtherParameters" class="recalculate" />
                    </td>
                    <td colspan="8">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        @ResDashboard.Roomlevelitemusageautocalc :
                    </td>
                    <td align="left" valign="top">
                        @Html.CheckBoxFor(model => model.IsTrendingEnabled, new { @class = "box" })
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    @*<td align="left" valign="top">
                      @ResDashboard.Autoclassification :
                    </td>
                    <td align="left" valign="top">
                        @Html.CheckBoxFor(model => model.AutoClassification, new { @class = "box" })
                    </td>*@
                    <td colspan="5">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        @ResDashboard.InventoryValueTurnsStockoutgraph
                    </td>
                    <td colspan="8">
                        <table style="width:100%;">
                            <tr>
                                <td>
                                  @ResDashboard.Fromyear:
                                </td>
                                <td>
                                    @Html.DropDownListFor(t => t.GraphFromYear, lstslYears, new { @class = "bdr", @style = "width:60px;" })
                                </td>
                                <td>
                                    @ResDashboard.Month
                                </td>
                                <td>
                                    @Html.DropDownListFor(t => t.GraphFromMonth, lstslMonths, new { @class = "bdr", @style = "width:45px;" })
                                </td>
                                <td>
                                    @ResDashboard.ToYear
                                </td>
                                <td>
                                    @Html.DropDownListFor(t => t.GraphToYear, lstslYears, new { @class = "bdr", @style = "width:60px;" })
                                </td>
                                <td>
                                    @ResDashboard.Month
                                </td>
                                <td>
                                    @Html.DropDownListFor(t => t.GraphToMonth, lstslMonths, new { @class = "bdr", @style = "width:45px;" })
                                </td>
                            </tr>
                        </table>
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td align="left" valign="top">
                        &nbsp;
                    </td>
                    <td colspan="8">
                        &nbsp;
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div style="float: right;">
        <input type="button" value="Save all" name="btnSaveAll" id="btnSaveAll" class="recalculate" />
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {

        $("#btnRecalculateTurn").click(function () {
            $("input[type='hidden'][name='ParameterType']").val("1");
            Saveparameters();
        });
        $("#btnRecalculateAvgUsage").click(function () {
            $("input[type='hidden'][name='ParameterType']").val("2");
            Saveparameters();
        });
        $("#btnRecalculateMinMax").click(function () {
            $("input[type='hidden'][name='ParameterType']").val("3");
            Saveparameters();
        });
        $("#btnSaveOtherParameters").click(function () {
            $("input[type='hidden'][name='ParameterType']").val("4");
            Saveparameters();
        });
        $("#btnSaveAll").click(function () {
            $("input[type='hidden'][name='ParameterType']").val("5");
            Saveparameters();
        });


    });

    function Saveparameters() {
        var saveType = $("input[type='hidden'][name='ParameterType']").val();
        /*var autoClassification = $('#AutoClassification').is(":checked");*/

        @*if ((saveType == "4" || saveType == "5") && (autoClassification !== undefined && autoClassification != null && autoClassification == false)) {

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetCountOfAutoClassificationItemsInRoom", "Master")',
                    contentType: 'application/json',
                    dataType: 'json',
                    async: false,
                    success: function (RetData) {
                        if (RetData) {
                            showNotificationDialog();
                            $("#spanGlobalMessage").html('@ResMessage.AutoClassificationItemsExistInRoom');
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        }
                        else {
                            $('#DivLoading').show();

                            $.post('@Url.Action("SaveDashboardParameters", "Master")', $("#dvdashpara").find("select,input").serialize(), function (json) {
                               
                                if (json) {
                                    showNotificationDialog();
                                    $("#spanGlobalMessage").html('@ResMessage.TrendingSettingItemExistInRoom');
                                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                                }
                                else {
                                    $('#DivLoading').hide();
                                    window.location.reload();
                                }
                            }, "json");
                           
                        }
                    },
                    error: function (err) {
                        console.log(err);
                        showNotificationDialog();
                        $("#spanGlobalMessage").html('@ResCommon.Fail');
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    }
                });
        }
        else {*@
            $('#DivLoading').show();



            $.post('@Url.Action("SaveDashboardParameters", "Master")', $("#dvdashpara").find("select,input").serialize(), function (json) {
                
                if (json) {
                    showNotificationDialog();
                    $("#spanGlobalMessage").html('@ResMessage.TrendingSettingItemExistInRoom');
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                }
                else {
                    $('#DivLoading').hide();
                    window.location.reload();
                }
                //            switch ($("input[type='hidden'][name='ParameterType']").val()) {
                //                case "1":
                //                    $("#TurnsCalculatedStockRoomTurn").val(json.TurnsCalculatedStockRoomTurn);
                //                    break;
                //                case "2":
                //                    $("#AUCalculatedDailyUsageOverSample").val(json.AUCalculatedDailyUsageOverSample);
                //                    break;
                //                default:
                //                    break;
                //  }


            }, "json");
       /* }*/
    }
</script>
