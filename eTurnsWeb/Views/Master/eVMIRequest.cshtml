@model eTurns.DTO.eVMISetupDTO
@{

    bool isEVMI = false;
    if (eTurnsWeb.Helper.SessionHelper.isEVMI != null)
    {
        isEVMI = (bool)eTurnsWeb.Helper.SessionHelper.isEVMI;
    }
    int eVMIScheduleFor = (int)eTurns.DTO.eVMIScheduleFor.eVMISchedule;
    bool IseVMiSetup = true;
    bool IsOldeVMIRoom = false;
    string CurrentRoomFullId = eTurnsWeb.Helper.SessionHelper.EnterPriceID + "_" + eTurnsWeb.Helper.SessionHelper.CompanyID + "_" + eTurnsWeb.Helper.SessionHelper.RoomID;
    if ((SiteSettingHelper.eVMIRooms ?? string.Empty).ToLower().Contains(CurrentRoomFullId.ToLower()))
    {
        IsOldeVMIRoom = true;
    }
    if (IsOldeVMIRoom)
    {
        IseVMiSetup = false;
    }
}
<script src="~/Scripts/jquery-ui-timepicker-addon.js" type="text/javascript"></script>
<script language="javascript" type="text/javascript">
    var IsRefreshGrid = false;
    var IsDeletePopupOpen = false;
    var AllowDeletePopup = true;
</script>
<div class="userListingWrapper">
    <h2>
        @ResLayout.eVMIRequest
    </h2>
    <div class="userListBlock">
        <div id="Ctab" class="tabContener" style="display: block;">
            @using (Ajax.BeginForm("eVMIRequestSave", "Master", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmeVMISetup" }))
            {
                @Html.AntiForgeryToken()
                <div class="userHead">
                    @Html.ValidationSummary(true)

                    <div class="infoBlock">
                    </div>

                    <div class="editorForm">
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @eTurns.DTO.ReseVMISetup.ComPort
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownList("dlComPort", new SelectList(ViewBag.RoomCOMMappings, "Value", "Text", ""), "", new { @class = "selectBox" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @eTurns.DTO.ReseVMISetup.Request
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownList("ddlRequestType", new SelectList(ViewBag.RequestTypeBag, "Value", "Text"), "", new { @class = "selectBox" })
                                </div>
                            </li>
                            <li id="liScale" class="liopField">
                                <div class="editor-label">
                                    @eTurns.DTO.ResItemBinMaster.ScaleID
                                </div>
                                <div class="editor-field">
                                    <select id="ddlScale" name="ddlScale" class="selectBox">
                                        <option value=""></option>
                                    </select>
                                </div>
                            </li>
                            <li id="liItemLocations" class="liopField">
                                <div class="editor-label">
                                    @eTurns.DTO.ResItemBinMaster.ItemLocation
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownList("ddlItemLocation", new SelectList(ViewBag.ItemBinBag, "ID", "ItemBin"), new { @class = "selectBox" })  @*@style = "width:120px"*@
                                </div>
                            </li>
                            <li id="liItemLocationSensorInfo" class="liopField">
                                <div class="editor-label">
                                    @eTurns.DTO.ResBin.eVMISensorID
                                </div>
                                <div class="editor-field">
                                    <span class="label" id="spnEVMISensorID"></span>
                                </div>
                            </li>
                            <li id="liWeightPerPiece" class="liopField">
                                <div class="editor-label">
                                    @eTurns.DTO.ResItemMaster.WeightPerPiece
                                </div>
                                <div class="editor-field">
                                    <input type="text" style="width:70px !important" class="text-box enterQty numericinput" id="totalQTY" placeholder="@ResCommon.Quantity" maxlength="6" />
                                    &nbsp;<span id="spnWeightPerPiece"></span>
                                </div>
                            </li>
                            <li id="liCalibrateWeight" class="liopField">
                                <div class="editor-label">
                                    @eTurns.DTO.ReseVMISetup.CalibrationWeight
                                </div>
                                <div class="editor-field">
                                    <input type="text" style="width:70px !important" class="text-box enterQty numericinput" id="txtCalibrationWeight" maxlength="6" />
                                </div>
                            </li>
                            <li id="liCalibrateWeightReading" class="liopField">
                                <div class="editor-label">
                                    @eTurns.DTO.ReseVMISetup.CalibrationWeight
                                </div>
                                <div class="editor-field">
                                    <span class="label" id="spnCalibrationWeight"></span>
                                </div>
                            </li>
                            <li id="liCalibrateInfo" class="liopField">
                                <div class="editor-label">
                                    &nbsp;
                                </div>
                                <div class="editor-field">
                                    <span style="font-weight:bold;padding:3px 0px;">@ReseVMISetup.Calibrate </span> <br />
                                    <div style="padding-left:10px">
                                        <div style="padding: 3px 0px;"> <span style="font-weight: bold; ">@ReseVMISetup.StepOne</span> @ReseVMISetup.StepOneDescription <br /></div>
                                        <div style="padding: 3px 0px;"><span style="font-weight: bold; ">@ReseVMISetup.StepTwo</span> @ReseVMISetup.StepTwoDescription <br /></div>
                                        <div style="padding: 3px 0px;"><span style="font-weight: bold; ">@ReseVMISetup.StepThree</span> @ReseVMISetup.StepThreeDescription <br /></div>
                                        <div style="padding: 3px 0px;"><span style="font-weight: bold; font-style: italic; color: brown">@ReseVMISetup.CalibrateRequestNoteOne <br /> @ReseVMISetup.CalibrateRequestNoteTwo</span></div>
                                    </div>
                                </div>
                            </li>
                            <li id="liCalibrationSteps" class="liopField">
                                <div class="editor-label">
                                    &nbsp;
                                </div>
                                <div class="editor-field">
                                    <input type="button" value="@ReseVMISetup.CalibrationStart" style="float:left;" id="btnCal1" name="btnCal1" class="CreateBtn" />&nbsp;
                                    <input type="button" value="@ReseVMISetup.CalibrateZero" style="float:left; display:none;" id="btnCal2" name="btnCal2" class="CreateBtn" />&nbsp;
                                    <input type="button" value="@ReseVMISetup.CalibrateXWeight" style="float: left; display: none;" id="btnCal3" name="btnCal3" class="CreateBtn" />&nbsp;
                                    <input type="hidden" name="hdnCalOp" id="hdnCalOp" value="" />

                                </div>
                            </li>
                            <li id="liScaleIDlabel" class="liopField">
                                <div class="editor-label">
                                    @eTurns.DTO.ReseVMISetup.ShelfID
                                </div>
                                <div class="editor-field">
                                    <span class="label" id="spnShelfID"></span>
                                </div>
                            </li>
                            <li id="liScaleIDInput" class="liopField">
                                <div class="editor-label">
                                    @eTurns.DTO.ReseVMISetup.ShelfID
                                </div>
                                <div class="editor-field">
                                    <input type="text" style="width:70px !important" class="text-box enterQty numericinput" id="txtShelfID" maxlength="3" />
                                </div>
                            </li>
                            <li id="liReadVersion" class="liopField">
                                <div class="editor-label">
                                    @eTurns.DTO.ReseVMISetup.Version
                                </div>
                                <div class="editor-field">
                                    <span class="label" id="spnVersion"></span>
                                </div>
                            </li>
                            <li id="liSrNumber" class="liopField">
                                <div class="editor-label">
                                    @eTurns.DTO.ReseVMISetup.SrNumber
                                </div>
                                <div class="editor-field">
                                    <span class="label" id="spnSrNumber"></span>
                                </div>
                            </li>
                            <li id="liGetModel" class="liopField">
                                <div class="editor-label">
                                    @eTurns.DTO.ReseVMISetup.Model
                                </div>
                                <div class="editor-field">
                                    <span class="label" id="spnModel"></span>
                                </div>
                            </li>

                            <li id="liSetModel" class="liopField">
                                <div class="editor-label">
                                    @eTurns.DTO.ReseVMISetup.Model
                                </div>
                                <div class="editor-field">
                                    <select id="ddlModel" class="selectBox">
                                        <option value=""></option>
                                        <option value="F80025">F80025</option>
                                        <option value="F60025">F60025</option>
                                        <option value="F40050">F40050</option>
                                        <option value="F10250">F10250</option>
                                        <option value="F11250">F11250</option>
                                        <option value="F12250">F12250</option>
                                    </select>
                                </div>
                            </li>
                            @if (isEVMI && IseVMiSetup)
                            {
                                <li id="liSaveReq">
                                    <div class="editor-label">
                                        &nbsp;
                                    </div>
                                    <div class="BtnBlockform">
                                        <input type="button" value="@eTurns.DTO.Resources.ResCommon.Save" id="btnSave" class="CreateBtn" />
                                    </div>
                                </li>
                            }

                        </ul>
                    </div>
                </div>
            }

        </div>
    </div>
</div>
<script type="text/javascript">
    $("form").submit(function (e) {
        $.validator.unobtrusive.parse("#frmeVMISetup");
        e.preventDefault();
    });
</script>
<script language="javascript" type="text/javascript">
    var _IseVMI = '@isEVMI';
    var calibrateRequestID = 0;

    var eVMIReqType = {
        Poll_1: "1",
        Tare_2: "2",
        Calibrate_3: "3",
        GetWeightPerPiece_5: "5",
        ResetScale_6: "6",
        GetShelfID_7: "7",
        SetShelfID_8: "8",
        GetVersion_9: "9",
        GetSerialNo_10: "10",
        GetModel_11: "11",
        SetModel_12: "12",
        GetCalibrateWeight_13: "13",
        SetCalibrateWeight_14: "14",
        TareAll_15: "15",
    };

    $(document).ready(function () {
        if ($('select#dlComPort').children().length > 1) {
            $($('select#dlComPort').children()[1]).attr('selected', true);
            $("select#ddlRequestType").val(1);
            GetItemBinsbyCom($('select#dlComPort').val());
            onTypeChangeFields($("select#ddlRequestType").val());
        }

        $('select#dlComPort').change(function () {
            var curobj = $(this);
            var selval = $(curobj).val();
            if (selval != "") {
                GetItemBinsbyCom(selval);
            }
            else {
                $("select#ddlItemLocation").html("");
                $('#spnEVMISensorID').text("");
            }
        });
        $("select#ddlRequestType").change(function () {
            var curobj = $(this);
            var selval = $(curobj).val();

            if (selval == eVMIReqType.TareAll_15) {
                // tare all will
                $("#dlComPort").val("");
            }

            onTypeChangeFields(selval);
        });

        $("select#ddlItemLocation").change(function () {
            if ($(this).val().trim() != "") {
                GetSensorID($('select#ddlItemLocation option:selected').text(), $("select#ddlItemLocation").val());
            }
            else {
                $('#spnEVMISensorID').text("");
            }
        });

        $("input#btnCal1,input#btnCal2,input#btnCal3,input#btnSave").click(function () {
            var curobj = $(this);
            if ($(curobj).prop("name") == "btnCal1") {
                $('#hdnCalOp').val("cal1");
            }
            else if ($(curobj).prop("name") == "btnCal2") {
                $('#hdnCalOp').val("cal2");
            }
            else if ($(curobj).prop("name") == "btnCal3") {
                $('#hdnCalOp').val("cal3");
            }
            else {
                $('#hdnCalOp').val("");
            }

            var reqtype = $('select#ddlRequestType').val();

            if (reqtype == eVMIReqType.TareAll_15) {
                // tare all request
                var IsValidForm = validateBeforeSave();

                if (IsValidForm) {
                    // call global tare all js function
                    $("#btnTareAll").click();
                }
            }
            else {
                SaveRequest();
            }

        });

    });

    function GetItemBinsbyCom(ComPortRoomMappingID) {
        if (_IseVMI == 'True' && ComPortRoomMappingID > 0) {
            $.ajax({
                'url': "GetItemBinsbyComPort",
                'data': { 'ComPortRoomMappingID': ComPortRoomMappingID },
                'type': 'GET',
                'async': false,
                'cache': false,
                'dataType': 'json',
                'success': function (response) {
                    if (response.Status === "ok") {
                        $('#DivLoading').hide();
                        /*$('#spnEVMISensorID').text(response.eVMISensorID);*/
                        if (response.ItemBins != undefined) {
                            if (response.ItemBins.length > 0) {
                                $("select#ddlItemLocation").html("");
                                $('select#ddlItemLocation').append('<option value=""></option>');
                                $(response.ItemBins).each(function (indx, elemnt) {
                                    $('select#ddlItemLocation').append('<option value="' + elemnt.ID + '">' + elemnt.ItemBin + '</option>');
                                });
                                if ($('select#ddlItemLocation').children().length > 1) {
                                    $($('select#ddlItemLocation').children()[1]).attr('selected', true);
                                    GetSensorID($('select#ddlItemLocation option:selected').text(), $("select#ddlItemLocation").val());
                                }
                            }
                        }
                        if (response.Scales != undefined) {
                            if (response.Scales.length > 0) {
                                $("select#ddlScale").html("");
                                $('select#ddlScale').append('<option value=""></option>');
                                $(response.Scales).each(function (indx, elemnt) {
                                    $('select#ddlScale').append('<option value="' + elemnt + '">' + elemnt + '</option>');
                                });
                            }
                        }


                    }
                    else {
                        $('#DivLoading').hide();
                        $('#spnEVMISensorID').text('');
                        showNotificationDialog();
                        $("#spanGlobalMessage").html(response.Status);
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    }
                },
                'error': function (xhr) {
                    $('#DivLoading').hide();
                }
            });
        }
    }

    function GetSensorID(ItemLocationName, ItemLocationID) {

        //var _ItemLocationName = $('#ddlItemLocation option:selected').text();
        //var _ItemLocationID = $("select#ddlItemLocation").val();
        var _ItemLocationName = ItemLocationName;
        var _ItemLocationID = ItemLocationID;


        if (_ItemLocationID != undefined && _ItemLocationID != null && _ItemLocationID != '' && _IseVMI == 'True') {
            $.ajax({
                'url': "GeteVMISensorID",
                'data': { 'ItemLocationName': _ItemLocationName, 'ItemLocationID': _ItemLocationID },
                'type': 'GET',
                'async': false,
                'cache': false,
                'dataType': 'json',
                'success': function (response) {
                    if (response.Status === "ok") {
                        $('#DivLoading').hide();
                        $('#spnEVMISensorID').text(response.eVMISensorID);
                    }
                    else {
                        $('#DivLoading').hide();
                        $('#spnEVMISensorID').text('');
                        showNotificationDialog();
                        $("#spanGlobalMessage").html(response.Status);
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    }
                },
                'error': function (xhr) {
                    $('#DivLoading').hide();
                }

            });
        }

    }

    function onTypeChangeFields(reqtype) {
        $("li.liopField").hide();
        if ($('select#ddlRequestType option:selected').text().trim() != "") {
            $("input[id='btnSave']").val($('select#ddlRequestType option:selected').text());
        }
        else {
            $("input[id='btnSave']").val('@ResCommon.Save');
        }

        $("#spnCalibrationWeight").html("");
        //$("#txtCalibrationWeight").val("");
        $("#spnShelfID").html("");
        $("#spnModel").html("");


        $("li#liSaveReq").show();
        switch (reqtype) {
            case eVMIReqType.Poll_1:
                $("li#liItemLocations").show();
                $("li#liItemLocationSensorInfo").show();
                break;
            case eVMIReqType.Tare_2:
                $("li#liItemLocations").show();
                $("li#liItemLocationSensorInfo").show();
                break;
            case eVMIReqType.Calibrate_3:
                $("li#liItemLocations").show();
                $("li#liItemLocationSensorInfo").show();
                $("li#liCalibrateInfo").show();
                $("li#liCalibrationSteps").show();
                $("li#liSaveReq").hide();
                break;
            case eVMIReqType.GetWeightPerPiece_5:
                $("li#liItemLocations").show();
                $("li#liItemLocationSensorInfo").show();
                $("li#liWeightPerPiece").show();
                break;
            case eVMIReqType.ResetScale_6:
                $("li#liScale").show();
                break;
            case eVMIReqType.GetShelfID_7:
                $("li#liScaleIDlabel").show();
                break;
            case eVMIReqType.SetShelfID_8:
                $("li#liScaleIDInput").show();
                break;
            case eVMIReqType.GetVersion_9:
                $("li#liScale").show();
                $("li#liReadVersion").show();
                break;
            case eVMIReqType.GetSerialNo_10:
                $("li#liScale").show();
                $("li#liSrNumber").show();
                break;
            case eVMIReqType.GetModel_11:
                $("li#liScale").show();
                $("li#liGetModel").show();
                break;
            case eVMIReqType.SetModel_12:
                $("li#liScale").show();
                $("li#liSetModel").show();
                break;
            case eVMIReqType.GetCalibrateWeight_13:
                $("li#liScale").show();
                $("li#liCalibrateWeightReading").show();
                break;
            case eVMIReqType.SetCalibrateWeight_14:
                $("li#liScale").show();
                $("li#liCalibrateWeight").show();
                break;
            default:
                $("li.liopField").hide();
                break;
        }
    }



    function SaveRequest() {
        var IsValidForm = validateBeforeSave();



        if (IsValidForm) {
            var _ComPortRoomMappingID = $('select#dlComPort').val();
            var _ItemLocationID = $("select#ddlItemLocation").val();
            var _ReqID = $("select#ddlRequestType").val();
            var _vtotalQTY = $('#totalQTY').val().trim();
            var _vCalibrateWeight = $('#txtCalibrationWeight').val().trim();
            var _SetShelfID = $('#txtShelfID').val().trim();
            var _ScaleID = $("select#ddlScale").val();
            var _ChannelID = 0;
            var modelNo = $("#ddlModel").val();

            var cmd = $('#hdnCalOp').val().trim();
            $("#spnWeightPerPiece").html("");

            $.ajax({
                'url': "eVMIRequestSave",
                'data': {
                    'ComPortRoomMappingID': _ComPortRoomMappingID, 'ReqID': _ReqID,
                    'ItemLocationID': _ItemLocationID, 'TotalQTY': _vtotalQTY,
                    'CalibrateWeight': _vCalibrateWeight, 'SetShelfID': _SetShelfID,
                    'pCalibrateRequestID': calibrateRequestID, 'cmd': cmd,
                    'ScaleID': _ScaleID, 'ChannelID': _ChannelID,
                    'ModelNumber': modelNo
                },
                'type': 'Post',
                'async': false,
                'cache': false,
                'dataType': 'json',
                'success': function (response) {
                    if (response.Status === "ok") {
                        calibrateRequestID = response.calibrateRequestID;
                        $('#DivLoading').hide();
                        var msg = "@ResCommon.success";

                        if (cmd == "cal1") {
                            msg = "@ReseVMISetup.CalibrateStepOneSuccess"
                            showHideCalibrateButton(2);
                        }
                        else if (cmd == "cal2") {
                            msg = "@ReseVMISetup.CalibrateStepTwoSuccess"
                            showHideCalibrateButton(3);
                        }
                        else if (cmd == "cal3") {
                            msg = "@ReseVMISetup.CalibrateStepThreeSuccess"
                            showHideCalibrateButton(1);
                        }

                        _notification.showSuccess(msg);
                        //showNotificationDialog();
                        //$("#spanGlobalMessage").text("Success");
                        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');

                        if (parseFloat(response.WeightPerPiece) > 0) {
                            $("#spnWeightPerPiece").html("Weight = " + response.WeightPerPiece);
                        }
                        if (parseFloat(response.ShelfID) > 0) {
                            $("#spnShelfID").html(response.ShelfID);
                        }
                        if (_ReqID == eVMIReqType.GetCalibrateWeight_13 && response.calWeight) {
                            var calWeight = parseFloat(response.calWeight);
                            $("#spnCalibrationWeight").html(response.calWeight);
                        }
                        else if (_ReqID == eVMIReqType.GetVersion_9 && response.Version) {
                            $("#spnVersion").html(response.Version);
                        }
                        else if (_ReqID == eVMIReqType.GetSerialNo_10 && response.SerialNo) {
                            $("#spnSrNumber").html(response.SerialNo);
                        }
                        else if (_ReqID == eVMIReqType.GetModel_11 && response.Model) {
                            $("#spnModel").html(response.Model);
                        }

                    }
                    else {
                        $('#DivLoading').hide();
                        _notification.showError(response.Status);
                        if (cmd == "cal1" || cmd == "cal2" || cmd == "cal3") {
                            // show calibrate button step 1
                            showHideCalibrateButton(1);
                        }
                        else {
                            // show save button
                            showHideCalibrateButton(0);
                        }

                    }
                },
                'error': function (xhr) {
                    $('#DivLoading').hide();
                }

            });
        }
        //else {
        //    _notification.showError("not a valid form");
        //}
        return false;
    }
    function validateBeforeSave() {
        var isValid = true;
        if ($('select#dlComPort').val() == "" || $('select#ddlRequestType').val() == "") {
            isValid = false;
            _notification.showError("@ReseVMISetup.COMPortAndRequestTypeMandatory");
        }
        else {
            var reqtype = $('select#ddlRequestType').val();

            switch (reqtype) {
                case eVMIReqType.Poll_1:
                case eVMIReqType.Tare_2:
                case eVMIReqType.Calibrate_3:
                case eVMIReqType.GetWeightPerPiece_5:
                    if ($("select#ddlItemLocation").val() == "") {
                        _notification.showError('@ReseVMISetup.SelectItemLocationValue');
                        isValid = false;
                    }
                    if (reqtype == eVMIReqType.GetWeightPerPiece_5) {
                        if ($('#totalQTY').val().trim() == "") {
                            _notification.showError('@ResCommon.ReqQuantity');
                            isValid = false;
                        }
                    }
                    break;
                case eVMIReqType.ResetScale_6:
                case eVMIReqType.GetVersion_9:
                case eVMIReqType.GetSerialNo_10:
                case eVMIReqType.GetModel_11:
                case eVMIReqType.SetModel_12:
                case eVMIReqType.GetCalibrateWeight_13:
                case eVMIReqType.SetCalibrateWeight_14:
                    if ($("select#ddlScale").val() == "") {
                        _notification.showError('@ReseVMISetup.SelectScaleValue');
                        isValid = false;
                    }
                    if (reqtype == eVMIReqType.SetModel_12) {
                        if ($("select#ddlModel").val() == "") {
                            _notification.showError('@ReseVMISetup.SelectModelToSet');
                            isValid = false;
                        }
                    }
                    if (reqtype == eVMIReqType.SetCalibrateWeight_14) {
                        if ($('input#txtCalibrationWeight').val().trim() == "") {
                            _notification.showError('@ReseVMISetup.EnterCalibrationWeight');
                            isValid = false;
                        }
                    }
                    break;
                case eVMIReqType.SetShelfID_8:
                    if ($('#txtShelfID').val().trim() == "") {
                        _notification.showError('@ReseVMISetup.EnterShelfIDToSet');
                        isValid = false;
                    }
                    break;
                case eVMIReqType.GetShelfID_7:
                    isValid = true;
                    break;
                case eVMIReqType.TareAll_15:
                    $("#dlComPort").val("");
                    isValid = true;
                    break;
                default:
                    isValid = false;
                    break;
            }
        }
        return isValid;
    }
    function showHideCalibrateButton(stepNo) {

        var liCalibrateInfo = $("#liCalibrateInfo");
        var reqType = $("#ddlRequestType").val();

        if (reqType == '3') {
            if (stepNo == 1) {
                /*$("#btnSave").hide();*/
                $("#btnCal1").slideDown();
                $("#btnCal2").hide();
                $("#btnCal3").hide();
                $("#dlComPort").prop("disabled", false);
                $("#ddlItemLocation").prop("disabled", false);
                $("#ddlRequestType").prop("disabled", false);
                liCalibrateInfo.slideDown();
            }
            else if (stepNo == 2) {
                /*$("#btnSave").hide();*/
                $("#btnCal1").hide();
                $("#btnCal2").slideDown();
                $("#btnCal3").hide();
                $("#dlComPort").prop("disabled", true);
                $("#ddlItemLocation").prop("disabled", true);
                $("#ddlRequestType").prop("disabled", true);
                liCalibrateInfo.slideDown();
            }
            else if (stepNo == 3) {
                /*$("#btnSave").hide();*/
                $("#btnCal1").hide();
                $("#btnCal2").hide();
                $("#btnCal3").slideDown();
                $("#dlComPort").prop("disabled", true);
                $("#ddlItemLocation").prop("disabled", true);
                $("#ddlRequestType").prop("disabled", true);
                liCalibrateInfo.slideDown();
            }
            else {
                $("#btnSave").show();
                $("#btnCal1").hide();
                $("#btnCal2").hide();
                $("#btnCal3").hide();
                $("#dlComPort").prop("disabled", false);
                $("#ddlItemLocation").prop("disabled", false);
                $("#ddlRequestType").prop("disabled", false);
                liCalibrateInfo.hide();
            }
        }
        else {
            $("#btnSave").show();
            $("#btnCal1").hide();
            $("#btnCal2").hide();
            $("#btnCal3").hide();
            $("#dlComPort").prop("disabled", false);
            $("#ddlItemLocation").prop("disabled", false);
            $("#ddlRequestType").prop("disabled", false);
            liCalibrateInfo.hide();
        }
    }
</script>

