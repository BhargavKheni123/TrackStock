@model eTurns.DTO.TechnicianMasterDTO
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
}

@{
    bool isUpdate;
    bool isInsert;
    if (ViewBag.ViewOnly == true)
    {
        isUpdate = false;
        isInsert = false;
    }
    else
    {
        isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.TechnicianMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
        isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.TechnicianMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    }
}
@using (Ajax.BeginForm("TechnicianSave", "Master", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmTechnician" }))
{
    @Html.AntiForgeryToken()
    <div class="userHead">
        @Html.ValidationSummary(true)
        @if (Model.ID != 0)
        {
            <div class="infoBlock">
                <ul>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.RoomName)
                        </label>
                        : <span>@(Model.RoomName)</span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.Created)
                        </label>
                        : <span>@(Model.CreatedDate)</span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.CreatedByName)
                        </label>
                        : <span>@(Model.CreatedByName)</span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.Updated)
                        </label>
                        : <span>@(Model.UpdatedDate)</span>
                    </li>
                    <li style="border: none">
                        <label for="RoomName">
                            @Html.LabelFor(model => model.UpdatedByName)
                        </label>
                        : <span>@(Model.UpdatedByName)</span>
                    </li>
                </ul>
            </div>
        }
        <div class="editorForm">
            <ul>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Technician)@*<em> *</em>*@
                    </div>
                    <div class="editor-field">
                        @if (Model.HistoryID > 0)
                        {
                            @Html.TextBoxFor(model => model.Technician, new { id = "TechnicianName", @class = "text-box", maxlength = 128, @readonly = "readonly" })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.Technician, new { id = "TechnicianName", @class = "text-box", maxlength = 128 })
                        }
                        @*<span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Technician)</span>*@
                        @Html.HiddenFor(model => model.ID, new { id = "hdnTechnicianId" })
                        @Html.HiddenFor(model => model.GUID)
                        @Html.HiddenFor(model => model.Created)
                        @Html.HiddenFor(model => model.Updated)
                        @Html.HiddenFor(model => model.CreatedBy)
                        @Html.HiddenFor(model => model.LastUpdatedBy)
                        @Html.HiddenFor(model => model.Room)
                        @Html.HiddenFor(model => model.RoomName)
                        @Html.HiddenFor(model => model.CompanyID)
                        @Html.HiddenFor(model => model.CreatedByName)
                        @Html.HiddenFor(model => model.UpdatedByName)
                        @Html.HiddenFor(model => model.IsDeleted)
                        @Html.HiddenFor(model => model.IsArchived)
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Technician)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.TechnicianCode)<em> *</em>
                    </div>
                    <div class="editor-field">
                        @if (Model.HistoryID > 0)
                        {
                            @Html.TextBoxFor(model => model.TechnicianCode, new { id = "TechnicianCode", @class = "text-box", maxlength = 128, @readonly = "readonly" })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.TechnicianCode, new { id = "TechnicianCode", @class = "text-box", maxlength = 128 })
                        }
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.TechnicianCode)</span>
                    </div>
                </li>
                @Html.Partial("UDFLayout", new eTurns.DTO.ResTechnician())
                <li>
                    <div class="editor-label">
                        &nbsp;
                    </div>
                    <div class="BtnBlockform">
                        <input type="button" value="@eTurns.DTO.Resources.ResCommon.Cancel" id="btnCancelTechnician" class="CreateBtn" />
                        @if (Model.HistoryID > 0)
                        {
                            <input type="submit" value="@eTurns.DTO.Resources.ResCommon.Save" disabled="disabled" id="btnSave" class="CreateBtn" onclick="return ReplaceSpaceInCode();" />
                        }
                        else
                        {
                            if (isInsert == true && Model.ID == 0)
                            {
                                <input type="submit" value="@eTurns.DTO.Resources.ResCommon.Save" id="btnSave" class="CreateBtn" onclick="return ReplaceSpaceInCode();" />
                            }
                            else if (isUpdate == true)
                            {
                                <input type="submit" value="@eTurns.DTO.Resources.ResCommon.Save" id="btnSave" class="CreateBtn" onclick="return ReplaceSpaceInCode();" />
                            }
                            else if (isUpdate == false && isInsert == false)
                            {
                                <script>
                                    disableControls('frmTechnician');
                                </script>
                            }
                        }
                    </div>
                </li>
            </ul>
        </div>
    </div>    }


@Html.Partial("_RequiredMessages")

<script type="text/javascript">
    $("form").submit(function (e) {
        $.validator.unobtrusive.parse("#frmTechnician");
        if ($(this).valid()) {
            rememberUDFValues($("#hdnPageName").val(), '@Model.ID');
        }
        e.preventDefault();
        $('#NarroSearchClear').click();
    });

    function ReplaceSpaceInCode()
    {
        if ($("#TechnicianCode").val().indexOf("---") >= 0)
        {
            alert('@ResTechnician.MsgInvalidTechniciancode'.replace("{0}",'" --- "'));
            return false;
        }
        if ($("#TechnicianName").val().indexOf("---") >= 0) {
            alert('@ResTechnician.MsgInvalidTechnicianName'.replace("{0}",'"---"'));
            return false;
        }

        $("#TechnicianCode").val($("#TechnicianCode").val().replace(/\s/g, ""));

    }
    $("#TechnicianCode").keydown(function (e) {
        if (e.keyCode == 32) {
            $(this).val($(this).val() + ""); 
            return false; // return false to prevent space from being added
        }
    });
</script>
<script language="javascript" type="text/javascript">
    function onSuccess(response) {
        IsRefreshGrid = true;
        //$('div#target').fadeToggle();
        //$("div#target").delay(2000).fadeOut(200);
        showNotificationDialog();
        $("#spanGlobalMessage").html(response.Message);
        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
        var idValue = $("#hdnTechnicianId").val();

        if (response.Status == "fail") {
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            $("#TechnicianName").val("");
            $("#TechnicianName").focus();
        }
        else if (idValue == 0) {
            //$("#TechnicianName").val("");
            $("#TechnicianName").focus();
            if (response.Status == "duplicate")
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
            else {
                if (typeof($('#NewMasterPopUP')) != "undefined" && $('#NewMasterPopUP').length > 0)
                {
                    var technicianOptionValue = $("#TechnicianCode").val();
                    var technicianName = $("#TechnicianName").val();

                    if (typeof (technicianName) != "undefined" && technicianName != null && technicianName != "" && technicianName.length > 0)
                    {
                        technicianOptionValue += ' --- ' + $("#TechnicianName").val();
                    }
                    $('#NewMasterPopUP').data("IDVal", response.NewIDForPopUp + '~' + technicianOptionValue).dialog('close');
                }
                else
                {
                    clearControls('frmTechnician');
                    setDefaultUDFValues($("#hdnPageName").val(), '@Model.ID');
                }
            }
        }
        else if (idValue > 0) {
            if (response.Status == "duplicate") {
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
                $("#TechnicianName").focus();
            }
            else {
                clearControls('frmTechnician');
                SwitchTextTab(0, 'TechnicianCreate', 'frmTechnician');
            }
        }
        return false;
    }
    function onFailure(message) {
        $("#spanGlobalMessage").html(message.statusText);
        //$('div#target').fadeToggle();
        //$("div#target").delay(2000).fadeOut(200);
        showNotificationDialog();
        $("#TechnicianName").focus();
    }
    $(document).ready(function () {
        $('form').areYouSure();
        $('#btnCancelTechnician').click(function (e) {
            
            //            if (IsRefreshGrid)
            //                $('#NarroSearchClear').click();
            if (typeof($('#NewMasterPopUP')) != "undefined" && $('#NewMasterPopUP').length > 0)
                $('#NewMasterPopUP').dialog('close');
            else
            {
                SwitchTextTab(0, 'TechnicianCreate', 'frmTechnician');
                if (oTable !== undefined && oTable != null) {
                    oTable.fnDraw();
                }
            }
            
            $('#NarroSearchClear').click();
        });
        checkRememberUDFValues($("#hdnPageName").val(), '@Model.ID');
    });
    _Common.addRequiredSign();
</script>
