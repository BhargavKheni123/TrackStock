@model eTurns.DTO.FreightTypeMasterDTO
@{
    ViewBag.Title = "FreightTypeEdit";
}
<div class="userListingWrapper">
    <h2>
        Technician Edit</h2>
    <div class="userListBlock">
        <ul class='tabs'>
            <li class="tab1"><a href='@Url.Content("~/Master/FreightTypeCreate")'></a></li>
            <li class="tab7"><a href='@Url.Content("~/Master/FreightTypeList")'></a></li>
        </ul>
        <div id="tab1" class="tabContener">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">search </span>
                    <input type="text" class="searchinput" />
                    <input type="button" value="Search" class="searchBtn" />
                </div>
            </div>
            <div class="userHead">
                @using (Html.BeginForm())
                {
                    @Html.ValidationSummary(true)
                    <div>
                        @Html.HiddenFor(model => model.ID)
                        @Html.HiddenFor(model => model.Room)
                        @Html.HiddenFor(model => model.LastUpdatedBy)
                        @Html.HiddenFor(model => model.CreatedBy)
                        <div class="editor-label">
                            @Html.LabelFor(model => model.FreightType)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.FreightType, new { id = "txtName", name = "txtName" })
                            @Html.ValidationMessageFor(model => model.FreightType)
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Created)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Created, new { @readonly = "readonly" })
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.LastUpdated)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.UpdatedDate, new { @readonly = "readonly" })
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.RoomName)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.RoomName, new { @readonly = "readonly" })
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.CreatedByName)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.CreatedByName, new { @readonly = "readonly" })
                        </div>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.UpdatedByName)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.UpdatedByName, new { @readonly = "readonly" })
                        </div>
                        <p>
                            <input type="submit" value="Save" class="CreateBtn" />
                        </p>
                    </div>
                }
            </div>
        </div>
        <div id='tab2' class="tabContener">
            <p>
                This is the 2nd tab.</p>
        </div>
    </div>
</div>
