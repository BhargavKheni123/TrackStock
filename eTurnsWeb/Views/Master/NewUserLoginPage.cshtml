@model eTurns.DTO.LoginModel
@{

    ViewBag.Title = "Login With Other User";

    var modelCommon = new eTurns.DTO.CommonDTO { PageName = "Login" };
    List<UserMasterDTO> lstAllUsers = (List<UserMasterDTO>)ViewBag.AllUsers;
    bool ShowInputs = false;
    string LoginPostMethod = "UserLogin";
    ShowInputs = false;

    string RetURL = "";//"/master/Myprofile";
    string LoginuserName = eTurnsWeb.Helper.SessionHelper.UserName;

    string Status = string.Empty;
    string Message = string.Empty;
    if (!string.IsNullOrWhiteSpace(Convert.ToString(ViewBag.Status)))
    {
        Status = Convert.ToString(ViewBag.Status);
    }
    if (!string.IsNullOrWhiteSpace(Convert.ToString(ViewBag.Message)))
    {
        Message = Convert.ToString(ViewBag.Message);
    }
    string currentDomain = HttpContext.Current.Request.Url.Host.ToLower();
    //List<SelectListItem> dates = ViewBag.dates;

}
@if (SiteSettingHelper.IsBorderStateURL == "1" && SiteSettingHelper.EnableOktaLoginForSpecialUrls.Contains(eTurnsWeb.Helper.SessionHelper.CurrentDomainURL)){<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyleBS.css")" />}else{ <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyle.css")" />}
<script src="@Url.Content("~/Content/OpenAccess/sha1-min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/PageScripts/ResetLogin.js?v=" + eTurnsWeb.Helper.CommonUtility.GetReleaseNumber())" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/OpenAccess/PageStyle/UserPage.css")" />
 @using (Html.BeginForm(LoginPostMethod, "Master", FormMethod.Post, new { @id = "frmUserLogin" }))
 {
    @Html.AntiForgeryToken()
    <div class="userListingWrapper">
        <div id="container" class="clearfix">
            <!-- header starts -->
            <div id="contentWrap" class="clearfix">

                <div class="content" style="display:block;">
                    @*<h1>
                            Inventory Management System
                        </h1>*@
                    <div class="mainGreybg" style="min-height: 554px;">
                        <div class="loginBg" style="min-height: 550px;">
                            <div class="loginContent alignLeft">
                                <div class="login alignLeft">
                                    <h2 class="alignLeft">
                                        Login With Other User
                                    </h2>
                                    <div class="loginForm clear">
                                        <ul>
                                            <li>
                                                <div id="ErrorMSG" style="color: Red">
                                                </div>
                                            </li>
                                        </ul>
                                        <ul @if (!ShowInputs) { <text> style="display:none;" </text>                                                                                                  }>
                                            <li class="alignLeft">
                                                <span>
                                                    <img alt="username" class="icon" src="@Url.Content("~/Content/OpenAccess/username-icon.png")" />
                                                </span>
                                            </li>
                                            <li class="alignLeft">
                                                @Html.TextBoxFor(model => model.Email, new { @id = "txtUserName", @placeholder = "User name", @autocomplete = "off", @class = "inputtext" })
                                                @*<input type="text" class="inputtext" value="" id="txtUserName" placeholder="User name"
                autocomplete="off" name="Email" />*@
                                            </li>
                                        </ul>
                                        <ul @if (!ShowInputs) { <text> style="display:none;" </text>                                                                                                  }>
                                            <li class="alignLeft">
                                                <span>
                                                    <img alt="password" class="icon" src="@Url.Content("~/Content/OpenAccess/password.png")" />
                                                </span>
                                            </li>
                                            <li class="alignLeft">
                                                @Html.PasswordFor(model => model.Password, new { @id = "txtPassword", @placeholder = "Password", @autocomplete = "off", @class = "inputtext" })
                                                @*<input type="password" class="inputtext" value="admin" id="txtPassword" placeholder="Password"
                autocomplete="off" name="Password" />*@
                                            </li>
                                        </ul>
                                        @if (!ShowInputs)
                                        {
                                            <ul @if (ShowInputs) { <text> style="display:none;" </text>                                                                                                  }>
                                                <li class="alignLeft">
                                                    <span>
                                                        <img alt="username" class="icon" src="@Url.Content("~/Content/OpenAccess/username-icon.png")" />
                                                    </span>
                                                </li>
                                                <li>
                                                    <select id="Email" name="Email">
                                                        <option value="">-- Select --</option>
                                                        @if (lstAllUsers != null && lstAllUsers.Count > 0)
                                                        {
                                                            foreach (var item in lstAllUsers)
                                                            {
                                                                <option value="@item.Password">@item.UserName</option>
                                                            }
                                                        }
                                                    </select>
                                                </li>
                                            </ul>
                                        }


                                        <ul>
                                            <li class="alignLeft">
                                                <span style="margin-right:23px;">
                                                    &nbsp;
                                                </span>
                                            </li>
                                            <li class="alignLeft">

                                                @Html.CheckBoxFor(model => model.IsRemember, new { @id = "chkRemember" })
                                                @*<input type="checkbox" class="checkbox" id="chkRemember" name="IsRemember" />*@
                                                <label for="chkRemember">
                                                    Remember me
                                                </label>

                                            </li>
                                        </ul>
                                        <ul>
                                            @*<li class="mLeft30 alignLeft">
                                                    <input type="submit" class="searchBtn" value="Login" id="btnLogin">
                                                </li>*@ @* <li class="alignLeft">
                                                    <input type="button" class="searchBtn" value="Cancel" onclick="javascript:return CancelClick();">
                                                </li>*@
                                            <li class="alignLeft" style="padding-left:30px;">
                                                <input type="submit" class="searchBtn" value="Login" id="btnLogin" />
                                                @Html.HiddenFor(model => model.ReturnUrl, new { @Value = RetURL })
                                                @Html.HiddenFor(model => model.CurrentLoggedInUserName, new { @Value = LoginuserName })
                                               
                                            </li>
                                            </ul>
                                        </div>
                                    </div>

                                </div>


                            </div>
                        </div>
                    </div>

                </div>

            </div>

            <!-- footer ends -->
        </div>

 }
<script type="text/javascript">
        var currentDomain = '@currentDomain';
        $(document).ready(function () {
            if (self == top) {
                document.documentElement.style.display = 'block';
                document.documentElement.style.visibility = 'visible';
            }
            else {
                top.location = self.location;
            }
            if ('@Status' == "fail") {
                $("#ErrorMSG").html('@Message');
                setTimeout(function () {
                    window.location.href = window.location.href;
                }, 1000);
            }

            var sdfsdf = document.all;
            $.fn.serializeObject = function () {
                var o = {};
                var a = this.serializeArray({ checkboxesAsBools: true });
                $.each(a, function () {
                    if (o[this.name]) {
                        if (!o[this.name].push) {
                            o[this.name] = [o[this.name]];
                        }
                        o[this.name].push(this.value || '');
                    } else {
                        o[this.name] = this.value || '';
                    }
                });

                return o;
            };

            $.fn.serializeArray = function (options) {
                var o = $.extend({
                    checkboxesAsBools: false
                }, options || {});

                var rselectTextarea = /select|textarea/i;
                var rinput = /text|hidden|password|search/i;

                return this.map(function () {
                    return this.elements ? $.makeArray(this.elements) : this;
                })
                .filter(function () {
                    return this.name && !this.disabled &&
                        (this.checked
                        || (o.checkboxesAsBools && this.type === 'checkbox')
                        || rselectTextarea.test(this.nodeName)
                        || rinput.test(this.type));
                })
                    .map(function (i, elem) {
                        var val = $(this).val();
                        return val == null ?
                        null :
                        $.isArray(val) ?
                        $.map(val, function (val, i) {
                            return { name: elem.name, value: val };
                        }) :
            {
                name: elem.name,
                value: (o.checkboxesAsBools && this.type === 'checkbox') ? //moar ternaries!
                    (this.checked ? 'true' : 'false') :
                    val
            };
                    }).get();
            };


            if ('@ShowInputs' == '@Boolean.TrueString') {
                $("#txtUserName").focus();
            }
            else {
                $("#Email").focus();
            }
            /*START - SET COOKIE */
            var UserName = getCookie('eturnsUserName');
            var Password = getCookie('eturnsPassword');

            if (!$.cookie('eturnsUserName')) {

            }
            //if (UserName != '' && Password != '') {
            if (UserName != '') {
                $("#txtUserName").val(UserName);
            }
            if (Password != '') {
                $("#txtPassword").val(Password);
            }
            $('#chkRemember').attr('checked', 'checked');
            /*END - SET COOKIE */
        });
        $("form").submit(function (e) {
            if ($('#chkRemember').prop("checked")) {
                $.cookie('eturnsUserName', $("#txtUserName").val(), { SameSite: 'Strict' });
                if (currentDomain != "arrowcares.arrow.com") {
                    $.cookie('eturnsPassword', $("#txtPassword").val(), { SameSite: 'Strict' });
                }
                else {
                    $.cookie('eturnsPassword', '', { SameSite: 'Strict' });
                }
            }
            else {
                $.cookie('eturnsUserName', '', { SameSite: 'Strict' });
                $.cookie('eturnsPassword', '', { SameSite: 'Strict' });
            }

            if ('@ShowInputs' == '@Boolean.TrueString') {
                //alert(hex_sha1($("#txtPassword").val()));
                $("#txtPassword").val(hex_sha1($("#txtPassword").val()));
            }
            if (RedirectToAnother() == true) {
                return true;
            }
            else {
                return false;
            }
        });

    $("#Email").change(function () {
            $("#txtUserName").val($(this).find("option:selected").text());
            $("#txtPassword").val($(this).val());

        });

        function OnBegin() {

        }

        function CancelClick() {
            $("#ErrorMSG").html("");
            return false;
        }

        function RedirectToAnother() {
            var UserBlank = false;
            var PassBlank = false;
            var msg = "";

            if ($("#txtUserName").val() == '' || $("#txtUserName").val().toLowerCase() == 'email') {
                UserBlank = true;
            }
            if ($("#txtPassword").val() == '' || $("#txtPassword").val().toLowerCase() == 'password') {
                PassBlank = true;
            }
            if (UserBlank == true && PassBlank == true) {
                msg = "Email and Password is mandatory";
            }
            else if (UserBlank == true) {
                msg = "Email is mandatory";
            }
            else if (PassBlank == true) {
                msg = "Password is mandatory";
            }
            if (msg != "") {
                $("#ErrorMSG").html(msg);
                return false;
            }
            else {
                return true;
                

            }
        }

        function getCookie(name) {
            var arg = name + "=";
            var alen = arg.length;
            var clen = document.cookie.length;
            var i = 0;
            while (i < clen) {
                var j = i + alen;
                if (document.cookie.substring(i, j) == arg) {
                    return getCookieVal(j);
                }
                i = document.cookie.indexOf(" ", i) + 1;
                if (i == 0) break;
            }
            return null;
        }

        function getCookieVal(offset) {
            var endstr = document.cookie.indexOf(";", offset);
            if (endstr == -1) { endstr = document.cookie.length; }
            return unescape(document.cookie.substring(offset, endstr));
        }

        function setCookie(name, value, days) {
            if (typeof days != "undefined") { //if set persistent cookie
                var expireDate = new Date();
                expireDate.setDate(expireDate.getDate() + days);
                document.cookie = name + "=" + value + "; path=/; expires=" + expireDate.toGMTString() + " ;SameSite=Strict;";
            }
            else //else if this is a session only cookie
                document.cookie = name + "=" + value + "; path=/ ;SameSite=Strict;";
        }
        $('#btnForgotPassword').click(function (e) {
            location.href = '@Url.Action("ForgotPassword", "Master")';
        });
    function ButtonClick()
    {
        $("#frmUserLogin").submit();
    }
</script>

