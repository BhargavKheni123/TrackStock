@{
    var Cart_settings = new GridHeaderSettings() { dataViewType = DataViewType.None, ShowSelectAll = true, DataTableName = "myCartDataTable", ListViewhref = "", PictureViewhref = "", DisplayUDFButton = false, UDFSetupFor = "", DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "DashboardCartDataTable", DisplayDeleteButton = false, DisplayGoToPage = false, ShowReorder = true, ReorderByDataTableName = true, ExportModuleName = "Suggested Orders", ExportDashboardFromReportFile = true };
    string title = ResDashboard.Cart;
    Session["IsInsert"] = "";

    var objOrderCount = new eTurnsWeb.Controllers.InventoryDashboardController();
    Int32 CartItemOrderCount = objOrderCount.GetCartItemOrderCount();//For Order Count
    Int32 CartItemTransferCount = objOrderCount.GetCartItemTransferCount();//For Transfer Countm Amount Exceeds");
}
<style>
    .dataTables_scrollBody {
        overflow-y:scroll ;
        overflow-x:scroll;
        
        max-height:3000px !important;
        overflow:scroll !important;
    } 
    
    .Lnavd
    {
        float: left;
        padding-left: 1px;
    }
    
    .Lnavd li
    {
        float: left;
        padding: 2px 4px 1px 0;
        position: relative;
        list-style: none;
    }
    
    .Lnavd li.clear
    {
        width: 100%;
        height: 1px;
        float: left;
        margin: 0;
        padding: 0;
    }
    
    .lia
    {
        background: none repeat scroll 0 0 #F3F9FF;
        border: 1px solid #C7E3FF;
        border-radius: 5px 5px 5px 5px;
        color: #1971BD;
        float: left;
        font-size: 12px;
        padding: 1px 5px;
        cursor: pointer;
        text-align: center;
        text-decoration: none; /* width: 50px;*/
    }
    
    .liahover
    {
        background: no-repeat scroll 90px center #1971BD;
        border: 1px solid #1971BD;
        border-radius: 5px 5px 5px 5px;
        color: #FFFFFF !important;
        cursor: auto;
        text-decoration: none;
    }
    /*  .Lnavd li a
    {
        background: none repeat scroll 0 0 #F3F9FF;
        border: 1px solid #C7E3FF;
        border-radius: 5px 5px 5px 5px;
        color: #1971BD;
        float: left;
        font-size: 12px;
        padding: 1px 5px;
        text-align: center;
        text-decoration: none;
    }*/
    .Lnavd li a:hover
    {
        text-decoration: none;
    }
    
    .imgclassd span
    {
        background: url("../../content/images/num-selected.png") no-repeat scroll 0 0 transparent;
        color: #FFFFFF;
        float: right;
        font-size: 12px;
        font-weight: bold;
        height: 18px;
        margin: -12px 0 0 -6px;
        padding: 6px 0;
        text-align: center;
        width: 29px;
    }
    
    .gridchartclass
    {
        float: right;
        margin-right: 0;
        margin-top: -25px;
        padding-bottom: 0;
        padding-left: 0;
        padding-top: 0;
        width: auto;
    }
</style>
<div id="Replenish" class="portlet ui-widget-content ui-helper-clearfix ui-corner-all">
    <div class="portlet-header ui-widget-header ui-corner-top">
        <span class="forcolor">@title</span><a href="#" class="closeEl ui-icon ui-icon-triangle-1-n"></a>
    </div>
    <div class="portlet-content">
        <div id="dvReplenish">
            <div style="float: left; width: 100%;">
                <div style="float: left; width: 100%;">
                    <div id="dvCartmain" class="Lnavd">
                        <ul>
                            <li class="imgclassd"><a id="lnkMainCartOrder" title="Order" style="display: none;"
                                onclick="BindCartOrderStatusGrid('lnkMainCartOrder','Order')" class="lia">@eTurns.DTO.Resources.ResLayout.Cart</a>
                            </li>
                        </ul>
                    </div>
                    <div id="divCartMainOrderTab" style="float: left; width: 100%;">
                        <div id="divCartOrderTab" class="Lnavd" style="float: left; width: 80%; padding-top: 10px;">
                            <ul>
                                <li class="imgclassd"><a id="lnkCartorder" title="Orders" onclick="BindCartOrderStatusGrid()"
                                    class="lia">@eTurns.DTO.ResDashboard.TabCartOrder</a>@if (CartItemOrderCount != 0)
                                                                                         { <span id="spndashcartcount">@CartItemOrderCount</span>}
                                </li>
                                <li class="imgclassd"><a id="lnkCartTransfer" title="Transfer" onclick="BindCartTransferStatusGrid()"
                                    class="lia">@eTurns.DTO.ResDashboard.TabCartTransfer</a>@if (CartItemTransferCount != 0)
                                                                                            { <span>@CartItemTransferCount</span>}
                                </li>
                            </ul>
                        </div>
                        <div class="viewBlock gridchartclass" style="margin-top: -9px;">
                            <span class="label">View:</span> <a class="view" href="javascript:void(0);" onclick="ShowHideCartOrderDiv('Chart');">
                                <img alt="" id="imgOChart" src="/content/images/chart-view-active.png">
                            </a><a class="view clsLoadGraph" href="javascript:void(0);" onclick="ShowHideCartOrderDiv('Grid');">
                                <img alt="" id="imgOGrid" src="/content/images/list-view-inactive.png">
                            </a>
                        </div>
                        <div style="float: left; padding-top: 4px; display: none;">
                            <ul>
                                <li style="border-right: none; float: left; padding-right: 5px;">
                                    <label style="float: left; padding: 1.3% 2px;">
                                        @Html.Label("Order date range")
                                    </label>
                                    @Html.TextBox("txtOrderFromDate", "1/1/" + eTurns.DAL.DateTimeUtility.DateTimeNow.Year, new { @class = "importtext-box", id = "txtOrderFromDate", @readonly = "readonly", @style = "width:70px;background:white", maxlength = 128 })
                                </li>
                                <li style="border-right: none; float: left; padding-right: 5px;">
                                    <label style="float: left; padding: 1.3% 2px;">
                                        @Html.Label("To")
                                    </label>
                                    @Html.TextBox("txtOrderToDate", eTurns.DAL.DateTimeUtility.DateTimeNow.ToString("MM/dd/yyyy"), new { @class = "importtext-box", id = "txtOrderToDate", @readonly = "readonly", @style = "width:70px;background:white", maxlength = 128 })
                                    @Html.Hidden("hdnstatusOrder", new { id = "hdnstatusOrder" })
                                    @Html.Hidden("hdnstatusCart", new { id = "hdnstatusCart" })
                                    @Html.Hidden("hdnCartreport", new { id = "hdnCartreport" })
                                </li>
                                <li style="border-right: none; float: left; padding-right: 5px;">
                                    <div class="BtnBlockform" style="margin: 0 0 0 5px;">
                                        <input type="button" value="GO" id="btnOrdergo" name="btnOrdergo" class="CreateBtn"
                                            style="float: left;" />
                                    </div>
                                </li>
                            </ul>
                        </div>
                        <div id="Carttab" class="tabContener">
                            <div id="dvCartOrderGrid" class="userContent" style="float: left; width: 100%;">
                                <div id="divCartOrderTab" class="Lnavd" style="float: left; width: 98%; padding-top: 10px;">
                                    <div style="float:left; width:38%">
                                        <span style="float:left">Supplier:&nbsp;</span><select id="ddlCartGridSupplier"></select>
                                    </div>
                                    <div style="float:left; width:38%">
                                        <span style="float:left">Category:&nbsp;</span><select id="ddlCartGridCategory"></select>
                                    </div>
                                    @Html.GridTopHeader(Cart_settings, eTurnsWeb.Helper.SessionHelper.ModuleList.DashboardCartDataTable)
                                </div>
                                <div class="searchWrapper">
                                    <div class="searchBlock">
                                        <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
                                        <div class="searchinputB">
                                            <input type="text" class="searchinput" id="global_filterDashCart" />
                                            <a href="javascript:void(0);" class="xclose">
                                                <img src="~/Content/images/x.png" alt="X" id="clear_global_filterDashCart" />
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="userHead" style="height: 30px;">
                                </div>
                                <table id="myCartDataTable" class="display" style="width: 561px; overflow: auto;">
                                    <thead>
                                        <tr>
                                            <th>
                                                @ResDashboard.CartItemNumber
                                            </th>
                                            <th>
                                                @ResDashboard.CartSupplierName
                                            </th>
                                            <th>
                                                Cart Count
                                            </th>
                                            <th>
                                                @ResDashboard.CartQuantity
                                            </th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                            <div id="dvCartOrderChart" style="float: left; width: 100%;">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script language="javascript" type="text/javascript">
    var CarttableOrder;
    var oTransferTable;
    var AllowDeletePopup = true;
    var GlobalCartSupplierValue = '';
    var GlobalCartCategoryValue = '';
    var objColumnsMyCartDataTable = {}

    $(document).ready(function () {
        objColumnsMyCartDataTable = GetGridHeaderColumnsObject('myCartDataTable');

        $("#hdnCartreport").val('Chart');
        $("#divCartMainOrderTab").show();
        $("#divMainTransferTab").hide();
        $("#dvCartOrderGrid").hide();
        $("#dvCartOrderChart").show();

        $("#dvTransferGrid").hide();
        $("#dvCartTransferChart").show();
        $("#global_filterDashCart").val("");
        $("#global_filterDashTransfer").val("");
        $("#lnkMainCartOrder").removeClass("lava");
        $("#lnkMainCartOrder").addClass("liahover");
        $("#lnkCartorder").removeClass("lava");
        $("#lnkCartorder").addClass("liahover");
        $("#hdnstatusOrder").val("Unsubmitted"); // Not Approved
        $("#hdnstatusCart").val("Purchase");
        //GenerateCartOrderGrid();
        //$('.DTTT_container').css('z-index', '-1');
        //fnFilterCartOrderList('');
        $("#lnkTransfer").removeClass("liahover");
        $("#lnkTransfer").addClass("lava");
        $("#hdnstatusTransfer").val("Unsubmitted");
        $('#dvCartOrderChart').empty();
        $('#dvCartOrderChart').load('/CartChart/LoadCartChart' + "?ChartType=" + encodeURIComponent($("#hdnstatusCart").val()) + '&SelectedSupplier=' + GlobalCartSupplierValue + '&SelectedCategory=' + GlobalCartCategoryValue, function () { });
        _Common.setGloblaSearch('global_filterDashCart', 'myCartDataTable');
    });




    function ShowHideCartOrderDiv(str) {
        if (str == 'Grid') {            
            $("#global_filterDashCart").val("");
            $('#divCartMainOrderTab').find('[id^="global_filter"]')[0].value = "";
            $('#myCartDataTable').dataTable().fnFilter('', null, null, null)
        }

        $("#hdnCartreport").val(str);
        if (str == 'Grid') {
            $("#dvCartOrderGrid").show();
            $("#dvCartOrderChart").hide();
            ChangeImgSRC('Grid', 'imgOGrid', 'imgOChart');

            if (CarttableOrder === undefined || CarttableOrder == null || dashboardReorder == true) {
                dashboardReorder = false;
                GenerateCartOrderGrid();
                $('.DTTT_container').css('z-index', '-1');
                //fnFilterCartOrderList('');
            }
            else
            {
                CarttableOrder.fnDraw();
            }
        }
        else {
            $("#dvCartOrderGrid").hide();
            $("#dvCartOrderChart").show();
            ChangeImgSRC('Chart', 'imgOGrid', 'imgOChart');
            $('#dvCartOrderChart').empty();
            $('#dvCartOrderChart').load('/CartChart/LoadCartChart' + "?ChartType=" + encodeURIComponent($("#hdnstatusCart").val()) + '&SelectedSupplier=' + GlobalCartSupplierValue + '&SelectedCategory=' + GlobalCartCategoryValue, function () { });

        }
    }

    function AddRemoveCartOrderCSS() {
        $("#lnkCartorder").removeClass("lava");
        $("#lnkCartorder").addClass("liahover");
        $("#lnkCartTransfer").removeClass("liahover");
        $("#lnkCartTransfer").addClass("lava");

    }

    function BindCartOrderStatusGrid(SelectedSupplier, SelectedCategory) {

        $('#divCartMainOrderTab').find('[id^="global_filter"]')[0].value = "";
        //$('#myCartDataTable').dataTable().fnFilter('', null, null, null);

        if (SelectedSupplier == null || SelectedSupplier == undefined) {
            SelectedSupplier = '';
            GlobalCartSupplierValue = '';
        }

        if (SelectedCategory == null || SelectedCategory == undefined) {
            SelectedCategory = '';
            GlobalCartCategoryValue = '';
        }

        var str = $("#hdnCartreport").val();
        AddRemoveCartOrderCSS();
        $("#hdnstatusCart").val("Purchase");

        if (str == 'Grid') {
            ChangeImgSRC('Grid', 'imgTGrid', 'imgTChart');
            if (CarttableOrder === undefined || CarttableOrder == null || dashboardReorder == true) {
                dashboardReorder = false;
                GenerateCartOrderGrid();
                $('.DTTT_container').css('z-index', '-1');
                //fnFilterCartOrderList('');
            }
            else {
                CarttableOrder.fnDraw();
            }
        }
        else {
            $('#dvCartOrderChart').empty();
            $('#dvCartOrderChart').load('/CartChart/LoadCartChart' + "?ChartType=" + encodeURIComponent($("#hdnstatusCart").val()) + '&SelectedSupplier=' + GlobalCartSupplierValue + '&SelectedCategory=' + GlobalCartCategoryValue, function () { });
        }
    }

    function AddRemoveCartTransferCSS() {
        $("#lnkCartTransfer").removeClass("lava");
        $("#lnkCartTransfer").addClass("liahover");
        $("#lnkCartorder").removeClass("liahover");
        $("#lnkCartorder").addClass("lava");
    }
    function BindCartTransferStatusGrid(SelectedSupplier, SelectedCategory) {

        $('#divCartMainOrderTab').find('[id^="global_filter"]')[0].value = "";
        $('#myCartDataTable').dataTable().fnFilter('', null, null, null);

        if (SelectedSupplier == null || SelectedSupplier == undefined) {
            SelectedSupplier = '';
            GlobalCartSupplierValue = '';
        }

        if (SelectedCategory == null || SelectedCategory == undefined) {
            SelectedCategory = '';
            GlobalCartCategoryValue = '';
        }

        var str = $("#hdnCartreport").val();
        $("#hdnstatusCart").val("Transfer");
        AddRemoveCartTransferCSS();
        if (str == 'Grid') {
            ChangeImgSRC('Grid', 'imgTGrid', 'imgTChart');
            CarttableOrder.fnDraw();
        }
        else {
            $('#dvCartOrderChart').empty();
            $('#dvCartOrderChart').load('/CartChart/LoadCartChart' + "?ChartType=" + encodeURIComponent($("#hdnstatusCart").val()) + '&SelectedSupplier=' + GlobalCartSupplierValue + '&SelectedCategory=' + GlobalCartCategoryValue, function () { });
        }
    }

    /* Global filter JS */

    var timeoutsc1;
    $('#global_filterDashCart').bind('propertychange input', function () {
        clearTimeout(timeoutsc1);
        timeoutsc1 = setTimeout(function () {
            fnFilterCartOrderGlobal();
        }, 200);
    });
    $("#global_filterDashCart").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);

        if (code == 13) {
            var searchtext = $("#global_filterDashCart").val().replace(/'/g, "''");
            fnFilterCartOrderList(searchtext);
            return false;
        }
        return true;
    });
    function fnFilterCartOrderList(searchtext) {


        $('#myCartDataTable').dataTable().fnFilter(searchtext, null, null, null);
        //alert(searchtext);
        $('#myCartDataTable' + ' td').removeHighlight();
        if (searchtext.length > 0)
            $('#myCartDataTable' + ' td').highlight(searchtext);
    }

    function fnFilterCartOrderGlobal() {
        if (typeof $("#global_filterDashCart") != 'undefined' && ($("#global_filterDashCart").val().length > 2 || $("#global_filterDashCart").val().length == 0)) {
            var searchtext = $("#global_filterDashCart").val().replace(/'/g, "''");
            fnFilterCartOrderList(searchtext);
        }
        else {
            $('#myCartDataTable td').removeHighlight();
            $('#myCartDataTable td').highlight($("#global_filterDashCart").val());
        }
    }
    $("#clear_global_filterDashCart").click(function () {
        if ($("#global_filterDashCart").val().length > 0) {
            $("#global_filterDashCart").val("");
            $("#global_filterDashCart").change();
        }
        return false;
    });

    /* Global filter JS */


    /* Global filter JS */
    var timeoutsc2;
    $('#global_filterDashTransfer').bind('textchange', function () {
        clearTimeout(timeoutsc2);
        timeoutsc2 = setTimeout(function () {
            fnFilterTransferGlobal();
        }, 200);
    });
    $("#global_filterDashTransfer").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            var searchtext = $("#global_filterDashTransfer").val().replace(/'/g, "''");
            fnFilterTransferList(searchtext);
            return false;
        }
        return true;
    });
    function fnFilterTransferList(searchtext) {
        var appendedText = GetCurrentSelectedTabTransfer();
        var searchtext1 = searchtext;
        if (appendedText.length > 0) {
            searchtext1 +=  "[^]" + appendedText;
        }        
        $('#myTransferDataTable').dataTable().fnFilter(searchtext1, null, null, null);

        $('#myTransferDataTable' + ' td').removeHighlight();
        if (searchtext.length > 0) {
            $('#myTransferDataTable' + ' td').highlight(searchtext);
        }


    }

    function fnFilterTransferGlobal() {
        if (typeof $("#global_filterDashTransfer") != 'undefined' && ($("#global_filterDashTransfer").val().length > 2 || $("#global_filterDashTransfer").val().length == 0)) {
            var searchtext = $("#global_filterDashTransfer").val().replace(/'/g, "''");
            fnFilterTransferList(searchtext);
        }
        else {
            $('#myTransferDataTable td').removeHighlight();
            $('#myTransferDataTable td').highlight($("#global_filterDashTransfer").val());
        }
    }
    $("#clear_global_filterDashTransfer").click(function () {
        if ($("#global_filterDashTransfer").val().length > 0) {
            $("#global_filterDashTransfer").val("");
            $("#global_filterDashTransfer").change();
        }
        return false;
    });

    /* Global filter JS */


    function GenerateCartOrderGrid() {

        CarttableOrder = $('#myCartDataTable').dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "bAutoWidth": false,
            //"sScrollX": "150%",
            "sScrollX": "100%",
            "sDom": 'R<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "aaSorting": [[1, "asc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bDestroy": true,
            "bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnRowCallback": function (nRow, aData) {
                if ($(aData.IsDeleted).text() == 'Yes' && $(aData.IsArchived).text() == 'Yes')
                    nRow.className = "GridDeleatedArchivedRow";
                else if ($(aData.IsDeleted).text() == 'Yes')
                    nRow.className = "GridDeletedRow";
                else if ($(aData.IsArchived).text() == 'Yes')
                    nRow.className = "GridArchivedRow";


                return nRow;
            },
            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
                //if (PostCount > 1) {
                $.ajax({
                    "url": '@Url.Content("~/Master/SaveGridState")',
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: 'DashboardCartDataTable' },
                    "async": false,
                    "dataType": "json",
                    "success": function (json) {
                        o = json;
                    }
                });
                //}
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'DashboardCartDataTable' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            },
            "bServerSide": true,
            "sAjaxSource": '@Url.Action("CartItemMasterListAjax", "InventoryDashboard")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                //PostCount = PostCount + 1;
                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;
                for (var i = 0; i <= objCols.length - 1; i++) {
                    arrCols.push(objCols[i].mDataProp);
                }
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }
                //if (oSettings.aaSorting.length != 0)
                //    aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                //else
                //    aoData.push({ "name": "SortingField", "value": "0" });
                
                if (oSettings.aaSorting.length != 0) {
                    var sortValue = "";
                    for (var k = 0; k <= oSettings.aaSorting.length - 1; k++) {
                        if (sortValue.length > 0)
                            sortValue += ", "
                        sortValue += arrCols[oSettings.aaSorting[k][0]] + ' ' + oSettings.aaSorting[k][1];

                    }
                    aoData.push({ "name": "SortingField", "value": sortValue });
                }
                else
                    aoData.push({ "name": "SortingField", "value": "0" });


                aoData.push({ "name": "CartType", "value": $("#hdnstatusCart").val() });
                aoData.push({ "name": "SelectedSupplier", "value": GlobalCartSupplierValue });
                aoData.push({ "name": "SelectedCategory", "value": GlobalCartCategoryValue });

                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    cache: false,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": function (json) {
                        fnCallback(json);
                        setTimeout(function () {
                            if ((json.SearchTerm == null || json.SearchTerm == undefined || json.SearchTerm.toString().trim() == '') && json.StartIndex == 0) {
                                //------------------------------------------------------------------------------------------------
                                //
                                var SelectedSupplier = '';
                                if (json.SelectedSupplier != null && json.SelectedSupplier != undefined && json.SelectedSupplier.trim() != '')
                                    SelectedSupplier = json.SelectedSupplier.trim();
                                else
                                    SelectedSupplier = GlobalCartSupplierValue;

                                BindMultiSelect("ddlCartGridSupplier", json.SupplierOptions, SelectedSupplier, '')
                                $("#ddlCartGridSupplier").multiselect().bind("multiselectclick multiselectcheckall multiselectuncheckall", function (event, ui) {
                                    GlobalCartSupplierValue = GetMultiselectSelectedValue('ddlCartGridSupplier');
                                    CarttableOrder.fnDraw();
                                });

                                //------------------------------------------------------------------------------------------------
                                //
                                var SelectedCategory = '';
                                if (json.SelectedCategory != null && json.SelectedCategory != undefined && json.SelectedCategory.trim() != '')
                                    SelectedCategory = json.SelectedCategory.trim();
                                else
                                    SelectedCategory = GlobalCartCategoryValue;

                                BindMultiSelect("ddlCartGridCategory", json.CategoryOptions, SelectedCategory, '')
                                $("#ddlCartGridCategory").multiselect().bind("multiselectclick multiselectcheckall multiselectuncheckall", function (event, ui) {
                                    GlobalCartCategoryValue = GetMultiselectSelectedValue('ddlCartGridCategory');
                                    CarttableOrder.fnDraw();
                                });
                            }
                        }, 500);
                    },
                    beforeSend: function () {
                        //$('#myCartDataTable td').removeHighlight();
                        removeHighlight2('myCartDataTable');
                        $('#myCartDataTable_wrapper .dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    complete: function () {
                        $('#myCartDataTable_wrapper .dataTables_scroll').css({ "opacity": 1 });
                        if ($("#global_filterDashCart").val() != '') {
                            $('#myCartDataTable td').highlight($("#global_filterDashCart").val());
                        }

                        $('#myCartDataTable tbody tr').unbind("click");
                        $('#myCartDataTable tbody tr').click(function (e) {
                            DataTableTRClickToSelect(this, e);
                        });

                        CallShowHideData();
                        //                            if ($("#txtOrderFilter").val() != '') {
                        //                                $('#myCartDataTable td').highlight($("#txtOrderFilter").val());
                        //                            }
                    }
                });
            },
            "fnInitComplete": function () {
                $('.ColVis').detach().appendTo(".setting-arrow");
                //                GenerateTransferGrid();
            },
            "aoColumns": [
                            {
                                "mDataProp": "ItemNumber",
                                "sClass": "read_only",
                                "sDefaultContent": '',
                                "bSortable": true,
                                "bSearchable": false,
                                "fnRender": function (obj) {
                                    return obj.aData.ItemNumber +
			                               "<input type='hidden' id='hdnExportId' value='" + obj.aData.ItemGuid + "' />";
                                }
                            },
                            { "mDataProp": "SupplierName", "sClass": "read_only" },
                            {
                                "mDataProp": "CartCount", "sClass": "read_only", "fnRender": function (obj, val) {
                                    if (obj.aData.CartCount != null && obj.aData.CartCount != NaN)
                                        return FormatedCostQtyValues(obj.aData.CartCount, 2);
                                    else
                                        return FormatedCostQtyValues(0, 2);
                                }
                            },
                            {
                                "mDataProp": "Quantity", "sClass": "read_only", "fnRender": function (obj, val) {
                                    if (obj.aData.Quantity != null && obj.aData.Quantity != NaN)
                                        return FormatedCostQtyValues(obj.aData.Quantity, 2);
                                    else
                                        return FormatedCostQtyValues(0, 2);
                                }
                            }

            //                            @Html.RenderColumnsArray("CartOtMaster")
            ]
        });

    }

</script>
