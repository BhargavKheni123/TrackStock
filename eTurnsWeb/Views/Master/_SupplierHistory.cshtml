@using eTurns.DTO
@using eTurns.DTO.Resources
@{    
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplayDeleteButton = false, DataTableName = "HistoryTable", ColumnSetupFor = "SupplierChangeLog" };
}
<script language="javascript" type="text/javascript">
    var oHistoryTable;
    $(document).ready(function () {
        oHistoryTable = $('#HistoryTable').dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "bAutoWidth": true,
            "sDom": 'R<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "sScrollX": "100%",
            //"aaSorting": [[1, "asc"]],
            "oColReorder": {},
            "bSort": false,
            "sPaginationType": "full_numbers",
            "oLanguage": {
                    "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                    "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                    "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                    "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries',
                    "sZeroRecords": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                    "sInfoFiltered": "",
                    "sLoadingRecords": '@eTurns.DTO.Resources.ResMessage.MsgLoading'
            },
            "sAjaxSource": '@Url.Content("~/Master/GetHistoryData")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                aoData.push({ "name": "PageType", "value": "SupplierList" });
                aoData.push({ "name": "PageID", "value": SelectedHistoryRecordID });
                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback
                })
            },
            "fnInitComplete": function () {
                     compareHistoryRows(this);
            },
            "aoColumns": [
                            //{ "mDataProp": "ID", "sClass": "read_only" },
                            //{ "mDataProp": "HistoryID", "sClass": "read_only" },
                            { "mDataProp": "Action", "sClass": "read_only" },
			                {
			                    "mDataProp": "SupplierName",
			                    "sClass": "read_only",
			                    "sDefaultContent": ''
			                },
                            { "mDataProp": "Description", "sClass": "read_only" },
                            //{ "mDataProp": "AccountNo", "sClass": "read_only" },
                            { "mDataProp": "ReceiverID", "sClass": "read_only" },
                            { "mDataProp": "Address", "sClass": "read_only" },
                            { "mDataProp": "City", "sClass": "read_only" },
                            { "mDataProp": "State", "sClass": "read_only" },
                            { "mDataProp": "ZipCode", "sClass": "read_only" },
                            { "mDataProp": "Country", "sClass": "read_only" },
                            { "mDataProp": "Contact", "sClass": "read_only" },
                            { "mDataProp": "Phone", "sClass": "read_only" },

                            { "mDataProp": "Fax", "sClass": "read_only" },
                            { "mDataProp": "Email", "sClass": "read_only" },

                            { "mDataProp": "DefaultOrderRequiredDays", "sClass": "read_only" },

                            { "mDataProp": "BranchNumber", "sClass": "read_only" },
                            { "mDataProp": "MaximumOrderSize", "sClass": "read_only" },
                            {
                                "mDataProp": "IsSendtoVendor", "sClass": "read_only", "fnRender": function (obj, val) {
                                    return GetBoolInFormat(obj, val);
                                }
                            },
                            {
                                "mDataProp": "IsVendorReturnAsn", "sClass": "read_only", "fnRender": function (obj, val) {
                                    return GetBoolInFormat(obj, val);
                                }
                            },
                            {
                                "mDataProp": "IsSupplierReceivesKitComponents", "sClass": "read_only", "fnRender": function (obj, val) {
                                    return GetBoolInFormat(obj, val);
                                }
                            },


                            { "mDataProp": "IsEmailPOInBody", "sClass": "read_only"
                            ,"fnRender": function (obj, val) {
                                        return GetBoolInFormat(obj, val);
                                 }
                            },
                            { "mDataProp": "IsEmailPOInPDF", "sClass": "read_only"
                            ,"fnRender": function (obj, val) {
                                        return GetBoolInFormat(obj, val);
                                 }
                            },
                            { "mDataProp": "IsEmailPOInCSV", "sClass": "read_only"
                            ,"fnRender": function (obj, val) {
                                        return GetBoolInFormat(obj, val);
                                 }
                            },
                            { "mDataProp": "IsEmailPOInX12", "sClass": "read_only"
                            ,"fnRender": function (obj, val) {
                                        return GetBoolInFormat(obj, val);
                                 }
                            },

			                { "mDataProp": "RoomName", "sClass": "read_only" },
			                { "mDataProp": "Created", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                       //return GetDateInFullFormat(val);
                                   return obj.aData.CreatedDate;
			                    }
			                },
			                { "mDataProp": "LastUpdated", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                       //return GetDateInFullFormat(val);
                                   return obj.aData.UpdatedDate;
			                    }
			                },
                            { "mDataProp": "UpdatedByName", "sClass": "read_only" },
                            { "mDataProp": "CreatedByName", "sClass": "read_only" },
                             { "mDataProp": "AddedFrom", "sClass": "read_only" },
                            { "mDataProp": "EditedFrom", "sClass": "read_only" },
                            { "mDataProp": "ReceivedOn", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                       return obj.aData.ReceivedOnDate;
			                    }
			                },
			                { "mDataProp": "ReceivedOnWeb", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                       return obj.aData.ReceivedOnDateWeb;
			                    }
			                },
                            { "mDataProp": "AccountNo", "sClass": "read_only" }
//                            { "mDataProp": "ReceivedOnDate", "sClass": "read_only" },
//                            { "mDataProp": "ReceivedOnDateWeb", "sClass": "read_only" }
                            @Html.RenderColumnsArray("SupplierMaster")

		    ]
        });
        //HIDE PRINT CONTAINER
        $('.DTTT_container').css('z-index', '-1');
        $("#HistoryText").keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                oHistoryTable.fnFilter(this.value);
            }
        });
        $("#HistoryClear").click(function () {
            if ($("#HistoryText").val().length > 0) {
                $("#HistoryText").val("");
                oHistoryTable.fnFilter("");
            }
            return false;
        });
        _Common.setGloblaSearch('HistoryText', 'HistoryTable');
    });
</script>
<div class="searchWrapper">
    <div class="searchBlock">
        <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
        <div class="searchinputB">
            <input type="text" class="searchinput" id="HistoryText" />
            <a href="javascript:void(0);" class="xclose">
                <img src="~/Content/images/x.png" alt="X" id="HistoryClear" /></a>
        </div>
    </div>
</div>
@Html.GridTopHeaderForHistory(settings)
<div style="margin: 0 0.4% 1%">
    <table id="HistoryTable" class="display">
        <thead>
            <tr>
                @*<th>
                    @eTurns.DTO.Resources.ResCommon.ID
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.HistoryID
                </th>*@
                <th>
                    @eTurns.DTO.Resources.ResCommon.HistoryAction
                </th>
                <th>@ResSupplierMaster.Supplier</th>
                <th>
                    @ResSupplierMaster.Description
                </th>
                @*<th>
                    @ResSupplierMaster.Account
                </th>*@
                <th>
                    @ResSupplierMaster.ReceiverID
                </th>
                <th>
                    @ResCommon.Address
                </th>
                <th>
                    @ResCommon.City
                </th>
                <th>
                    @ResCommon.State
                </th>
                <th>
                    @ResCommon.ZipCode
                </th>
                <th>
                    @ResCommon.Country
                </th>
                <th>
                    @ResSupplierMaster.Contact
                </th>
                <th>
                    @ResCommon.Phone
                </th>
                <th>
                    @ResSupplierMaster.Fax
                </th>
                <th>
                    @ResCommon.Email
                </th>
                <th>
                    @ResSupplierMaster.DefaultOrderRequiredDays
                </th>
                <th>@ResSupplierMaster.BranchNumber</th>
                <th>@ResSupplierMaster.MaximumOrderSize</th>
                <th>@ResSupplierMaster.IsSendtoVendor</th>
                <th>@ResSupplierMaster.IsVendorReturnAsn</th>
                <th>@ResSupplierMaster.IsSupplierReceivesKitComponents</th>
                <th>
                    @ResSupplierMaster.EmailPOInBody
                </th>
                <th>
                    @ResSupplierMaster.EmailPOInPDF
                </th>
                <th>
                    @ResSupplierMaster.EmailPOInCSV
                </th>
                <th>
                    @ResSupplierMaster.EmailPOInX12
                </th>
                <th>
                    @ResCommon.RoomName
                </th>
                <th>
                    @ResCommon.CreatedOn
                </th>
                <th>
                    @ResCommon.UpdatedOn
                </th>
                <th>
                    @ResCommon.UpdatedBy
                </th>
                <th>
                    @ResCommon.CreatedBy
                </th>
                <th>
                    @ResCommon.AddedFrom
                </th>
                <th>
                    @ResCommon.EditedFrom
                </th>
                <th>
                    @ResCommon.ReceivedOnDate
                </th>
                <th>
                    @ResCommon.ReceivedOnWebDate
                </th>
                <th>
                    @ResSupplierMaster.Account
                </th>
                @Html.RenderColumnsHeader("SupplierMaster", typeof(eTurns.DTO.ResSupplierMaster))
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
