@model eTurns.DTO.RoleMasterDTO
@{
    List<PermissionTemplateDTO> lstAllTemplates = new eTurns.DAL.PermissionTemplateDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetAllTemplates();
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    List<UserTypeInfo> lstUserTypes = new List<UserTypeInfo>();
    UserTypeInfo objUserTypeInfo;
    if (eTurnsWeb.Helper.SessionHelper.RoleID == -1)
    {
        objUserTypeInfo = new UserTypeInfo();
        objUserTypeInfo.UserType = 1;
        objUserTypeInfo.UserTypeName = "Super user";
        lstUserTypes.Add(objUserTypeInfo);

    }
    if (eTurnsWeb.Helper.SessionHelper.UserType == 1 || (eTurnsWeb.Helper.SessionHelper.UserType == 2))
    {
        objUserTypeInfo = new UserTypeInfo();
        objUserTypeInfo = new UserTypeInfo();
        objUserTypeInfo.UserType = 2;
        objUserTypeInfo.UserTypeName = "Enterprise user";
        lstUserTypes.Add(objUserTypeInfo);
    }
    objUserTypeInfo = new UserTypeInfo();
    objUserTypeInfo.UserType = 3;
    objUserTypeInfo.UserTypeName = "Company user";
    lstUserTypes.Add(objUserTypeInfo);
    string ep_compid = eTurnsWeb.Helper.SessionHelper.EnterPriceID + "_" + eTurnsWeb.Helper.SessionHelper.CompanyID;
    if (Model != null && Model.ID > 0)
    {
        ep_compid = Model.EnterpriseId + "_" + Model.CompanyID;
    }
}

@{
    bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.RoleMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.RoleMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    if (Model.ID < 0)
    {
        isUpdate = false;
    }
}
@using (Ajax.BeginForm("RoleMasterSave", "Master", new AjaxOptions { HttpMethod = "Post", LoadingElementId = "DivLoading", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmRole" }))
{
    @Html.AntiForgeryToken()
    <div class="userHead">
        @Html.ValidationSummary(true)

        @if (Model.ID != 0)
        {
            <div class="infoBlock">
                <ul>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.Created)
                        </label>
                        : <span>@(Model.CreatedDate)</span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.CreatedByName)
                        </label>
                        : @(Model.CreatedByName)
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.Updated)
                        </label>
                        : <span>@(Model.UpdatedDate)</span>
                    </li>
                    <li style="border: none">
                        <label for="RoomName">
                            @Html.LabelFor(model => model.UpdatedByName)
                        </label>
                        : @(Model.UpdatedByName)
                    </li>
                </ul>
            </div>
        }

        <div class="mainForm">
            <div class="editorForm">
                <h4>
                    @ResRoleMaster.hdrRoleDetail
                </h4>
                <ul>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.UserType)
                        </div>
                        <div class="editor-field">
                            @if (Model.ID < 1)
                            {
                                @Html.DropDownListFor(t => t.UserType, new SelectList(lstUserTypes, "UserType", "UserTypeName"), new { @class = "selectBox", @id = "drpUserType" })
                            }
                            else
                            {
                                @Html.DropDownListFor(t => t.UserType, new SelectList(lstUserTypes, "UserType", "UserTypeName"), new { @class = "selectBox", @id = "drpUserType", @disabled = "disabled" })
                                @Html.HiddenFor(t => t.UserType)
                            }
                            @*<select name="UserType" id="drpUserType" class="selectBox">
                                    @if (eTurnsWeb.Helper.SessionHelper.RoleID == -1)
                                    {
                                        <option value="1">Super Admin</option>
                                    }
                                    @if (eTurnsWeb.Helper.SessionHelper.UserType < 3)
                                    {
                                        <option value="2">Enterprise admin</option>
                                    }
                                    <option value="3">Company admin</option>
                                </select>*@ <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.UserType)</span>
                            </div>
                        </li>
                        <li>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.RoleName)<em> *</em>
                            </div>
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.RoleName, new { id = "txtRoleName", @class = "text-box", maxlength = 200 })
                                <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.RoleName)</span>
                                @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                                @Html.HiddenFor(model => model.GUID)
                                @Html.HiddenFor(model => model.Created)
                                @Html.HiddenFor(model => model.Updated)
                                @Html.HiddenFor(model => model.CreatedBy)
                                @Html.HiddenFor(model => model.LastUpdatedBy)
                                @Html.HiddenFor(model => model.CompanyID)
                                @Html.HiddenFor(model => model.Room)
                                @Html.HiddenFor(model => model.RoomName)
                                @Html.HiddenFor(model => model.CreatedByName)
                                @Html.HiddenFor(model => model.UpdatedByName)
                                @Html.HiddenFor(model => model.SelectedModuleIDs, new { id = "hdnSelectedModuleList" })
                                @Html.HiddenFor(model => model.SelectedNonModuleIDs, new { id = "hdnSelectedNonModuleList" })
                                @Html.HiddenFor(model => model.SelectedDefaultSettings, new { id = "hdnSelectedDefaultSettings" })
                                @Html.HiddenFor(model => model.SelectedEnterpriseAccessValue, new { id = "hdnSelectedEnterpriseAccessValue" })
                                @Html.HiddenFor(model => model.SelectedCompanyAccessValue, new { id = "hdnSelectedCompanyAccessValue" })
                                @Html.HiddenFor(model => model.SelectedRoomAccessValue, new { id = "hdnSelectedRoomAccessValue" })
                                @Html.HiddenFor(model => model.SelectedRoomReplanishmentValue, new { id = "hdnSelectedRoomReplanishmentValue" })
                                @Html.HiddenFor(model => model.EnterpriseId, new { id = "hdnRoleWiseEnterpriseId" })
                                @Html.HiddenFor(model => model.IsDeleted, new { id = "hdnIsDeleted" })
                                @Html.HiddenFor(model => model.IsECRAccessUpdated, new { id = "hdnIsECRAccessUpdated" })
                                <input type="hidden" id="hdTrueString" value="@Boolean.TrueString">
                            </div>
                        </li>
                        <li>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.Description)
                            </div>
                            <div class="editor-field">
                                @Html.TextAreaFor(model => model.Description, new { id = "txtDescription", @class = "text-box", maxlength = 1024 })
                                <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Description)</span>
                            </div>
                        </li>
                        <li>
                            <div class="editor-label">
                                &nbsp;
                            </div>
                            <div class="BtnBlockform">
                                <input type="button" value="@eTurns.DTO.Resources.ResCommon.Cancel" id="btnCancel" class="CreateBtn" />
                                @if (Model.IsDeleted == false)
                                {
                                    if (isInsert == true && Model.ID == 0)
                                    {
                                        <input type="submit" value="@eTurns.DTO.Resources.ResCommon.Save" id="btnSave" class="CreateBtn" />
                                    }
                                    else if (isUpdate == true)
                                    {

                                        <input type="submit" value="@eTurns.DTO.Resources.ResCommon.Save" id="btnSave" class="CreateBtn" 
                                               onclick="return _CreateRole.getRoleAssignmentToUser()"
                                               />
                                    }
                                }
                            </div>
                        </li>
                    </ul>
                </div>
                <div class="editorForm padRightNone">
                    <h4>
                        @ResRoleMaster.hdrRoomDetail
                    </h4>
                    <ul>
                        @*<li>
                                <div class="editor-label">
                                    @ResRoleMaster.lblRoomReplenishment
                                </div>
                                <div class="editor-field rightEdit">
                                    <select id="RoomReplanishment" multiple="multiple" name="example-basic" size="5">
                                    </select>
                                </div>
                            </li>*@
                        <li id="liEnterprises">
                            <div class="editor-label">
                                @ResRoleMaster.lblEnterprises
                            </div>
                            <div class="editor-field rightEdit">
                                <select id="EnterpriseData" multiple="multiple" name="example-basic" size="5" class="text-box"></select>
                            </div>
                        </li>
                        <li id="liCompanies">
                            <div class="editor-label">
                                @ResRoleMaster.lblCompanies
                            </div>
                            <div class="editor-field rightEdit">
                                <select id="CompanyData" multiple="multiple" name="example-basic" size="5" class="text-box"></select>
                            </div>
                        </li>
                        <li id="liRooms">
                            <div class="editor-label">
                                @ResRoleMaster.lblRooms
                            </div>
                            <div class="editor-field rightEdit">
                                <select id="RoomData" multiple="multiple" name="example-basic" size="5" class="text-box"></select>
                            </div>
                        </li>
                        <li>
                            <div class="editor-label">
                                @ResRoleMaster.lblSelectedRooms
                            </div>
                            <div class="editor-field rightEdit">
                                <select id="ddlSelectedRooms" name="example-basic" size="1" class="text-box" style="width: 200px;"></select>
                            </div>
                        </li>
                        <li>
                            <div class="editor-label">
                                @ResRoleMaster.lblCopyPermissionTo
                            </div>
                            <div class="editor-field rightEdit">
                                <select id="ddlDefaultPermissionRooms" multiple="multiple" name="example-basic" size="5"
                                        class="text-box"></select>
                            </div>
                            @if (Model.IsDeleted == false)
                            {
                                <input type="button" value="@ResRoleMaster.Copy" id="btnCopy" class="CreateBtn copy" onclick="javascript: CopyPermission();" />
                            }
                        </li>
                        <li>
                            <div class="editor-label">
                                @ResPermissionTemplate.TemplateName
                            </div>
                            <div class="editor-field rightEdit">
                                <select id="ddlPermissionTemplateName" class="selectBox" style="width: 200px;">
                                    <option value="">@eTurns.DTO.Resources.ResCommon.DefaultSelect</option>
                                    @foreach (var item in lstAllTemplates)
                                    {
                                        <option value="@item.ID">@item.TemplateName</option>
                                    }
                                </select>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>

            <div id="CreateRolePermissionDIV">
                @if (string.IsNullOrWhiteSpace(Model.SelectedRoomAccessValue))
                {
                    @Html.Partial("_CreateRolePermission", Model.RoleRoomsAccessDetail)
                }
            </div>
        </div>
    
     <div id="dlgRoleUsers" style="display: none;">
            <div class="inner">
                <p class="text" style="color:red">
                    Unable change the role. A user(s) record is attached to the role. 
                    <br />Please change the user record first and then change the Role record.
                </p>
                <br />
                <div id="dvRoleUsers" style="max-height:450px;overflow:auto">
                </div>
                <br />
            </div>
        </div>
        }
        <div style="padding:20px 0 0 45px;float:left; width:100%">
            <table>
                <tr><td style="background-color: #ff6347">
    &nbsp;<input type="checkbox" disabled="disabled">&nbsp;</td>
                    <td>&nbsp;&nbsp;Denotes module not available for selected room</td>
                </tr>
            </table>
        </div>
        @Html.Partial("_RequiredMessages")
        <div id="divRoleProcessing" class="SyncProcessing" style="display: none;"></div>
        <div id="divRoleSelectProcessing" class="SyncProcessing" style="display: none;"></div>
        <div id="divRoleEditProcessing" class="SyncProcessing" style="display: none;"></div>
        <div id="divEditRoleLoading" class="SyncProcessing" style="display: none;"></div>
        @section scripts{

            @*@if (false)
            {
                <script src="../../Scripts/jquery-1.9.1-vsdoc.js" type="text/javascript"></script>
            }*@
<script type="text/javascript">
        //        $(document).ready(function () {
        //            $('form').areYouSure();
        //        });
        var url_SaveToRolePermissionsToSession = '@Url.Action("SaveToRolePermissionsToSession", "Master")';
        var url_AddRemoveRoomsToSession = '@Url.Action("AddRemoveRoomsToSession", "Master")';
        var url_CopyPermissionsToRooms = '@Url.Action("CopyPermissionsToRooms", "Master")';
        var url_GetEnterpriseData = '@Url.Action("GetEnterpriseData", "Master")';
        var url_GetCompanyData = '@Url.Action("GetCompanyData", "Master")';
        var RoleEnterpriseID = '@eTurnsWeb.Helper.SessionHelper.EnterPriceID';
        var url_GetRoomData = '@Url.Action("GetRoomData", "Master")';
        var ep_compid = '@ep_compid';
        var url_RolePermissionCreate = '@Url.Action("RolePermissionCreate", "Master")';
        var url_SetTemplatePermissionToSession = '@Url.Action("SetTemplatePermissionToSession", "Master")';
        var sep1 = "[!,!]";
        var clearSessionURL = '@Url.Action("ClearRoleListSession", "Master")';
        var MsgRoomAccessRequired = '@ResRoleMaster.ReqRoomAccess';
        var MsgSelectRoomsCopyPermission = '@ResRoleMaster.MsgSelectRoomsCopyPermission';
        var MsgPermissionCopied = '@ResRoleMaster.MsgPermissionCopied';
        var MsgRoomToCopyPermission = '@ResRoleMaster.MsgRoomToCopyPermission';
        var MsgUserNameAlreadyExist = '@ResRoleMaster.MsgUserNameAlreadyExist';
        var AllUDFSetUpModuleID = '@eTurnsWeb.Helper.SessionHelper.ModuleList.AllUDFSetup.GetHashCode()';


       </script>
            <script src="@Url.Content("~/Scripts/PageScripts/RoleDetails.js?v=" + eTurnsWeb.Helper.CommonUtility.GetReleaseNumber())" type="text/javascript"></script>
        }
