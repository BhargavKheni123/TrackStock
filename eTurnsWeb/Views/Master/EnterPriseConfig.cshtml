@model eTurns.DTO.EnterPriseConfigDTO
@{
    ViewBag.Title = ResEnterPriseConfig.PageTitle;
}
<script src="~/Scripts/jquery-ui-timepicker-addon.js" type="text/javascript"></script>
<script language="javascript" type="text/javascript">
    var IsRefreshGrid = false;
    var IsDeletePopupOpen = false;
    var AllowDeletePopup = true;
</script>
<div class="userListingWrapper">
    <h2>
        @ResEnterPriseConfig.PageHeader
    </h2>
    <div class="userListBlock">
        <div id="Ctab" class="tabContener" style="display: block;">

            @{
                bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.EnterpriseMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
                bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.EnterpriseMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
            }
            @using (Ajax.BeginForm("EnterPriseConfigSave", "Master", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmEnterPriseConfig" }))
            {
                @Html.AntiForgeryToken()
                <div class="userHead">
                    @Html.ValidationSummary(true)

                    <div class="editorForm">
                        <ul>
                            <li>
                                @*<div class="editor-label">
                                        @Html.LabelFor(model => model.ScheduleDaysBefore)<em> *</em>
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.ScheduleDaysBefore)
                                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.ScheduleDaysBefore)</span>*@
                                @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                                @Html.HiddenFor(model => model.CreatedByName)
                                @Html.HiddenFor(model => model.UpdatedByName)
                                @Html.HiddenFor(model => model.DateFormat)
                                @*</div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.OperationalHoursBefore)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.OperationalHoursBefore)
                                        @Html.ValidationMessageFor(model => model.OperationalHoursBefore)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.MileageBefore)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.MileageBefore)
                                        @Html.ValidationMessageFor(model => model.MileageBefore)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.ProjectAmountExceed)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.ProjectAmountExceed)
                                        @Html.ValidationMessageFor(model => model.ProjectAmountExceed)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.ProjectItemQuantitExceed)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.ProjectItemQuantitExceed)
                                        @Html.ValidationMessageFor(model => model.ProjectItemQuantitExceed)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.ProjectItemAmountExceed)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.ProjectItemAmountExceed)
                                        @Html.ValidationMessageFor(model => model.ProjectItemAmountExceed)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.CostDecimalPoints)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.CostDecimalPoints)
                                        @Html.ValidationMessageFor(model => model.CostDecimalPoints)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.QuantityDecimalPoints)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.QuantityDecimalPoints)
                                        @Html.ValidationMessageFor(model => model.QuantityDecimalPoints)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.DateFormat)
                                    </div>
                                    <div class="editor-field">
                                        @*  @Html.EditorFor(model => model.DateFormat)
                                        @Html.DropDownListFor(model => model.DateFormat, new SelectList(ViewBag.DateTimeFormatBag, "Text", "Text", Model.DateFormat), "", new { @class = "selectBox", @id = "dlDateTime" })
                                        @Html.ValidationMessageFor(model => model.DateFormat)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.NOBackDays)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.NOBackDays)
                                        @Html.ValidationMessageFor(model => model.NOBackDays)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.NODaysAve)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.NODaysAve)
                                        @Html.ValidationMessageFor(model => model.NODaysAve)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.NOTimes)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.NOTimes)
                                        @Html.ValidationMessageFor(model => model.NOTimes)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.MinPer)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.MinPer)
                                        @Html.ValidationMessageFor(model => model.MinPer)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.MaxPer)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.MaxPer)
                                        @Html.ValidationMessageFor(model => model.MaxPer)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.CurrencySymbol)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.CurrencySymbol)
                                        @Html.ValidationMessageFor(model => model.CurrencySymbol)
                                    </div>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.GridRefreshTimeInSecond)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.GridRefreshTimeInSecond)
                                        @Html.ValidationMessageFor(model => model.GridRefreshTimeInSecond)
                                    </div>*@
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.PasswordExpiryDays)
                                </div>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.PasswordExpiryDays)
                                    @Html.ValidationMessageFor(model => model.PasswordExpiryDays)
                                </div>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.NotAllowedCharacter)
                                </div>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.NotAllowedCharacter, new { @maxlength = "500" })
                                </div>
                                @*<div class="editor-label">
                                        @Html.LabelFor(model => model.NumberOfBackDaysToSyncOverPDA)
                                    </div>
                                    <div class="editor-field">
                                        @Html.EditorFor(model => model.NumberOfBackDaysToSyncOverPDA)
                                        @Html.ValidationMessageFor(model => model.NumberOfBackDaysToSyncOverPDA)
                                    </div>*@
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.PreviousLastAllowedPWD)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.PreviousLastAllowedPWD, new { @class = "text-box", @style = "width:50px;" })

                                    @Html.ValidationMessageFor(model => model.PreviousLastAllowedPWD)
                                </div>
                            </li>

                        </ul>
                    </div>
                    <div class="editorForm padRightNone">
                        <ul>
                            <li>
                                <div class="editor-label" style="width: 50%">
                                    @Html.LabelFor(model => model.PasswordExpiryWarningDays)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.PasswordExpiryWarningDays, new { @class = "text-box", @style = "width:50px;" })
                                    <br />
                                    @Html.ValidationMessageFor(model => model.PasswordExpiryWarningDays)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.DisplayAgreePopupDays)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.DisplayAgreePopupDays, new { @class = "text-box", @style = "width:50px;" })
                                    @Html.ValidationMessageFor(model => model.DisplayAgreePopupDays)
                                </div>
                            </li>
                        </ul>
                        @*<ul>
                                <li>
                                    <div class="editor-label" style="width: 50%">
                                        @Html.LabelFor(model => model.AEMTPndOrders)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AEMTPndOrders, new { @class = "text-box ScheduleTime", @style = "width:50px;" })
                                        @Html.ValidationMessageFor(model => model.AEMTPndOrders)
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label" style="width: 50%">
                                        @Html.LabelFor(model => model.AEMTPndRequisition)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AEMTPndRequisition, new { @class = "text-box ScheduleTime", @style = "width:50px;" })
                                        @Html.ValidationMessageFor(model => model.AEMTPndRequisition)
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label" style="width: 50%">
                                        @Html.LabelFor(model => model.AEMTPndTransfer)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AEMTPndTransfer, new { @class = "text-box ScheduleTime", @style = "width:50px;" })
                                        @Html.ValidationMessageFor(model => model.AEMTPndTransfer)
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label" style="width: 50%">
                                        @Html.LabelFor(model => model.AEMTSggstOrdMin)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AEMTSggstOrdMin, new { @class = "text-box ScheduleTime", @style = "width:50px;" })
                                        @Html.ValidationMessageFor(model => model.AEMTSggstOrdMin)
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label" style="width: 50%">
                                        @Html.LabelFor(model => model.AEMTSggstOrdCrt)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AEMTSggstOrdCrt, new { @class = "text-box ScheduleTime", @style = "width:50px;" })
                                        @Html.ValidationMessageFor(model => model.AEMTSggstOrdCrt)
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label" style="width: 50%">
                                        @Html.LabelFor(model => model.AEMTAssetMntDue)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AEMTAssetMntDue, new { @class = "text-box ScheduleTime", @style = "width:50px;" })
                                        @Html.ValidationMessageFor(model => model.AEMTAssetMntDue)
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label" style="width: 50%">
                                        @Html.LabelFor(model => model.AEMTToolsMntDue)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AEMTToolsMntDue, new { @class = "text-box ScheduleTime", @style = "width:50px;" })
                                        @Html.ValidationMessageFor(model => model.AEMTToolsMntDue)
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label" style="width: 50%">
                                        @Html.LabelFor(model => model.AEMTItemStockOut)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AEMTItemStockOut, new { @class = "text-box ScheduleTime", @style = "width:50px;" })
                                        @Html.ValidationMessageFor(model => model.AEMTItemStockOut)
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label" style="width: 50%">
                                        @Html.LabelFor(model => model.AEMTCycleCount)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AEMTCycleCount, new { @class = "text-box ScheduleTime", @style = "width:50px;" })
                                        @Html.ValidationMessageFor(model => model.AEMTCycleCount)
                                    </div>
                                </li>
                                <li style="display: none">
                                    <div class="editor-label" style="width: 50%">
                                        @Html.LabelFor(model => model.AEMTCycleCntItmMiss)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AEMTCycleCntItmMiss, new { @class = "text-box ScheduleTime", @style = "width:50px;" })
                                        @Html.ValidationMessageFor(model => model.AEMTCycleCntItmMiss)
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label" style="width: 50%">
                                        @Html.LabelFor(model => model.AEMTItemUsageRpt)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AEMTItemUsageRpt, new { @class = "text-box ScheduleTime", @style = "width:50px;" })
                                        @Html.ValidationMessageFor(model => model.AEMTItemUsageRpt)
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label" style="width: 50%">
                                        @Html.LabelFor(model => model.AEMTItemReceiveRpt)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AEMTItemReceiveRpt, new { @class = "text-box ScheduleTime", @style = "width:50px;" })
                                        @Html.ValidationMessageFor(model => model.AEMTItemReceiveRpt)
                                    </div>
                                </li>
                            </ul>*@
                    </div>

                    <div class="editorForm" style="width: 75%">
                        <ul>
                            <li>
                                <div class="editor-label">
                                    &nbsp;
                                </div>
                                <div class="BtnBlockform">
                                    <input type="submit" value="@eTurns.DTO.Resources.ResCommon.Save" id="btnSave" class="CreateBtn" />
                                </div>
                            </li>
                        </ul>
                    </div>

                </div>
            }

            @Html.Partial("_RequiredMessages")
        </div>
    </div>
</div>
<script type="text/javascript">
    $("form").submit(function (e) {
        $.validator.unobtrusive.parse("#frmEnterPriseConfig");
        e.preventDefault();
    });
</script>
<script language="javascript" type="text/javascript">
    function onSuccess(response) {
        IsRefreshGrid = true;
        //$('div#target').fadeToggle();
        //$("div#target").delay(2000).fadeOut(200);
        showNotificationDialog();
        $("#spanGlobalMessage").html(response.Message);
        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
        var idValue = $("#hiddenID").val();

        if (response.Status == "fail") {
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
        }
        else if (idValue == 0) {

            if (response.Status == "duplicate")
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
            else {
            }

        }
        else if (idValue > 0) {
            if (response.Status == "duplicate") {
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
            }
        }

        if (response.Status == 'ok') {
            $("#hiddenID").val(response.ID);
        }
        return false;
    }
    function onFailure(message) {
        $("#spanGlobalMessage").html(message.statusText);
        //$('div#target').fadeToggle();
        //$("div#target").delay(2000).fadeOut(200);
        showNotificationDialog();
    }
    $(document).ready(function () {
        $('form').areYouSure();
        if ('@Model.ID' > 0) {
            $('#dlDateTime').val('@Model.DateFormat');
        }
        $('#dlDateTime').change(function () {
            $("#DateFormat").val($('#dlDateTime option:selected').val());
        });

        $('.ScheduleTime').timepicker({ timeFormat: 'HH:mm' });
    });
</script>
