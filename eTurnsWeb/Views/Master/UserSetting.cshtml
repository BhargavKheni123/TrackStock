@model eTurns.DTO.UserSettingDTO
@{
    //Layout = "~/Views/Shared/_PopupMaster.cshtml";

    //bool isUpdate;
    //bool isInsert;
    //if (ViewBag.ViewOnly == true)
    //{
    //    isUpdate = false;
    //    isInsert = false;
    //}
    //else
    //{
    //    isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.AssetCategory, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    //    isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.AssetCategory, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    //}
}
<div class="userListingWrapper">
    <h2 style="padding: 0% 0 0 3%;">
        User Setting
    </h2>
    @*<div class="Infoclass">
        <a href="~/Uploads/HelpDoc/InventoryLocation.pdf" target="_blank">
            <img src="~/Content/images/Info.png" alt="Help" />
        </a>
    </div>*@
    <div class="userHead">
        @using (Ajax.BeginForm("UserSettingPageSave", "Master", new AjaxOptions { HttpMethod = "Post", LoadingElementId = "DivLoading", OnSuccess = "onUserSettingSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmUserSetting" }))
        {
            @Html.AntiForgeryToken()
            <div class="userHead">
                @Html.ValidationSummary(true)
                <div class="editorForm">
                    <ul>
                        <li>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.RedirectURL)
                            </div>
                            <div class="editor-field">
                                @Html.DropDownListFor(model => model.RedirectURL, new List<SelectListItem>() { new SelectListItem() { Text = "select", Value = "" } }, new { @class = "selectBox" })
                                @Html.HiddenFor(t => t.RedirectURL, new { @Id = "hdnRedirectURL" })
                                @Html.HiddenFor(model => model.UserId, new { id = "hiddenUserID" })
                                @Html.HiddenFor(model => model.Id, new { id = "hiddenID" })
                                @Html.HiddenFor(model => model.IsRemember, new { id = "hiddenRememberID" })
                            </div>
                        </li>
                        <li>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.IsRequistionReportDisplay)
                            </div>
                            <div class="editor-field">
                                @Html.CheckBox("IsRequistionReportDisplay", Model.IsRequistionReportDisplay ?? false)

                            </div>
                        </li>
                        <li>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.IsNeverExpirePwd)
                            </div>
                            <div class="editor-field">
                                @Html.CheckBox("IsNeverExpirePwd", Model.IsNeverExpirePwd )

                            </div>
                        </li>
                        <li>
                            <div class="editor-label">
                                @Html.LabelFor(model => model.IsAutoLogin)
                            </div>
                            <div class="editor-field">
                                @Html.CheckBox("IsAutoLogin", Model.IsAutoLogin)
                            </div>
                        </li>

                        <li>
                            <div class="editor-label">
                                &nbsp;
                            </div>
                            <div class="BtnBlockform">
                                <input type="submit" style="float:left !important;" value="@eTurns.DTO.Resources.ResCommon.Save" id="btnSave" class="CreateBtn" />
                            </div>
                        </li>
                    </ul>
                </div>

            </div>
        }
    </div>
</div>
<script type="text/javascript">
    $("form").submit(function (e) {
        $.validator.unobtrusive.parse("#frmUserSetting");

        e.preventDefault();
    });
</script>
<script language="javascript" type="text/javascript">
    var ddlPageName;
    function onUserSettingSuccess(response) {
        showNotificationDialog();
        $("#spanGlobalMessage").html(response.Message);
        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
        var idCategoryValue = $("#hiddenCategoryID").val();

        if (response.Status == "fail") {
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');

        }
        else if (idCategoryValue == 0) {

            $("#txtAssetCategoryName").focus();
            if (response.Status == "duplicate")
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
            else {

                clearControls('frmAssetCategory');
                setDefaultUDFValues($("#hdnPageName").val(), '@Model.UserId');
            }

        }
        else if (idCategoryValue > 0) {
            if (response.Status == "duplicate") {
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
                $("#txtAssetCategoryName").val("");
                $("#txtAssetCategoryName").focus();
            }
            else
                clearControls('frmAssetCategory');
        }
    }
    function onFailure(message) {
        $("#spanGlobalMessage").html(message.statusText);
        showNotificationDialog();
        $("#txtAssetCategoryName").focus();
    }

    $(document).ready(function () {
        $('form').areYouSure();
        ddlPageName = $("#RedirectURL");

        //My Profile Group

        ddlPageName.append('<optgroup value="javascript:void(0);"> ' + "My Profile");
        ddlPageName.append('<option  value="/Master/MyProfile"> My Profile</option>');
        ddlPageName.append('</optgroup>');

        $('.RightBlock').find('div.Rnav').find("ul[id='rightNav']").find("li:first").each(function (i) {
            var mnuBtnText = $.trim($(this).find('a').first().text());
            var mnuBtnVal = $.trim($(this).find('a').first().attr("href"));
            if (mnuBtnText.length > 0) {
                ddlPageName.append('<optgroup  value="' + mnuBtnVal + '"> ' + mnuBtnText);
                $(this).find('a').first().parent().find('ul').find('li').each(function (j) {
                    if ($(this).parent().hasClass('sub_subMenu') === false) {
                        var subMnuText = $.trim($(this).find('a').first().text());
                        var subMnuVal = $.trim($(this).find('a').attr("href"));
                        ddlPageName.append('<option  value="' + subMnuVal + '"> ' + ' &nbsp;     ' + subMnuText + '</option>');
                    }
                });
                ddlPageName.append('</optgroup>');
            }
        });

        //Report Group

        //ddlPageName.append('<optgroup value="javascript:void(0);"> ' + "Reports");
        //$('.Lnav').children("ul").children("li:first").find("ul[id='nav']").children("li").children("ul").children("li").each(function (i) {
        //    var subMnuText = $.trim($(this).find('a:first').text());
        //    var subMnuVal = $.trim($(this).find('a:first').attr("href"));
        //    if ($.trim(subMnuText) != '') {
        //        ddlPageName.append('<option  value="' + subMnuVal + '"> ' + ' &nbsp;     ' + subMnuText + '</option>');
        //    }
        //});
        //ddlPageName.append('</optgroup>');

        //Dashboard Group

        //ddlPageName.append('<optgroup value="javascript:void(0);"> ' + "Dashboard");
        //ddlPageName.append('<option  value="/"> Dashboard</option>');
        //ddlPageName.append('</optgroup>');

        //Other than Dashboard and Report Group

        $('.Lnav').children("ul").children("li").each(function (i) {

            if (i >= 2) {
                $(this).find("ul[id='nav']").children("li").children("ul").children("li").each(function () {
                    var mnuBtnText = $.trim($(this).find('a').first().text());
                    var mnuBtnVal = $.trim($(this).find('a').first().attr("href"));

                    if ($.trim(mnuBtnText) != '') {
                        ddlPageName.append('<optgroup value="' + mnuBtnVal + '"> ' + mnuBtnText);
                        $(this).children('ul').children('li').each(function (j) {
                            var subMnuText = $.trim($(this).find('a:first').text());
                            var subMnuVal = $.trim($(this).find('a:first').attr("href"));
                            if ($.trim(subMnuText) != '') {
                                ddlPageName.append('<option  value="' + subMnuVal + '"> ' + ' &nbsp;     ' + subMnuText + '</option>');
                            }
                        });
                        ddlPageName.append('</optgroup>');
                    }
                });
            }
            else if (i == 0) {
                ddlPageName.append('<optgroup value="javascript:void(0);"> ' + "Reports");
                $(this).find("ul[id='nav']").children("li").children("ul").children("li").each(function () {
                    var subMnuText = $.trim($(this).find('a:first').text());
                    var subMnuVal = $.trim($(this).find('a:first').attr("href"));
                    if ($.trim(subMnuText) != '') {
                        ddlPageName.append('<option  value="' + subMnuVal + '">' + subMnuText + '</option>');
                    }
                });
                ddlPageName.append('</optgroup>');
            }
            else if (i == 1) {
                ddlPageName.append('<optgroup value="javascript:void(0);"> ' + "Dashboard");
                ddlPageName.append('<option  value="/"> Dashboard</option>');
                ddlPageName.append('</optgroup>');
            }

        });
        $("select#RedirectURL").val($("input#hdnRedirectURL").val());
    });
</script>
