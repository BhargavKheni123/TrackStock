
@{
    ViewBag.Title = ResLayout.ItemBinList;
    var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, ShowSelectAll = true, DisplaySaveButton = false, DataTableName = "myDataTable", ListViewhref = "#", PictureViewhref = "", DisplayUDFButton = false, UDFSetupFor = "ItemMaster&UDFHeader=" + @eTurns.DTO.ResItemMaster.ItemMasterHeader, DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "ItemMasterBinList", DisplayDeleteButton = false };

    var modelCommon = new eTurns.DTO.CommonDTO { PageName = "ItemMasterBinList" };

}
@if (SiteSettingHelper.IsBorderStateURL == "1" && SiteSettingHelper.EnableOktaLoginForSpecialUrls.Contains(eTurnsWeb.Helper.SessionHelper.CurrentDomainURL)){<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyleBS.css")" />}else{ <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyle.css")" />}
@section head{


    <script language="javascript" type="text/javascript">
        var DrillDownItemGuid = '';
        var DrillDownBinId = '';
        var ItemIDToOpen = '';
        var oTable;
        var IsRefreshGrid = false;
        var SelectedHistoryRecordID = 0;
        var deleteURL = "";
        var sImageUrl = "/Content/images/";
        var anOpen = [];
        var IsDeletePopupOpen = true;
        var AllowDeletePopup = true;
        var ItemName = ';'
        var ItemUniqueID = '';
        var objColumns = {}
        var UpperTR;
        var IsReloadItemList = false;
        //  var LatestGLAccountWidth='';
        //var CostNarroSearchValue = '';
        $(document).ready(function () {
            objColumns = GetGridHeaderColumnsObject('myDataTable');
            var gaiSelected = [];
            LoadTabs();
            oTable = $('#myDataTable').dataTable({
                "bJQueryUI": true,
                "bScrollCollapse": true,
                //"bAutoWidth": false,
                "sScrollX": "350%",
                //"sScrollX": "8000px",
                "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
                "oColVis": {},
                "aaSorting": [[3, "asc"]],
                "oColReorder": {},
                "sPaginationType": "full_numbers",
                "bProcessing": true,
                "bStateSave": true,
                "oLanguage": {
                    "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                    "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable', //+ "&nbsp; This barcode text is not assing to any item.<br>Would you like to assing it?<br><a id='aBarcodeYes'href='javascript:void(0)' onclick='javascript:return OpenItemInPopup(this);' >Yes</a> ",
                    "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                    "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries',
                    "sLoadingRecords": '@eTurns.DTO.Resources.ResMessage.MsgLoading'
                },
                "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                    if (aData.IsDeleted == true && aData.IsArchived == true)
                        // nRow.className = "GridDeleatedArchivedRow";
                        $(nRow).css('background-color', '#B9BCBF');
                    else if (aData.IsDeleted == true)
                        // nRow.className = "GridDeletedRow";
                        $(nRow).css('background-color', '#FFCCCC');
                        //}
                    else if (aData.IsArchived == true)
                        $(nRow).css('background-color', '#CCFFCC');
                    //                        nRow.className = "GridArchivedRow";

                    /*START : QTY Legends*/


                    if (aData.IsDeleted || aData.IsArchived) {
                        $(nRow).find("input,select").attr("disabled", "disabled");
                        $("#thUpdate").css("display", 'none');
                        $(nRow).find("img.ItemMasterImage").parent("td").hide();
                    }
                    if (aData.IsDeleted == false) {
                        $("#thUpdate").css("display", '');
                    }
                    $("td.RowNo:first", nRow).html(this.fnSettings()._iDisplayStart + iDisplayIndex + 1);
                    /*END : QTY Legends*/
                    return nRow;
                },
                "fnStateSaveParams": function (oSettings, oData) {
                    oData.oSearch.sSearch = "";
                    $.ajax({
                        "url": '@Url.Content("~/Master/SaveGridState")',
                        "type": "POST",
                        data: { Data: JSON.stringify(oData), ListName: 'ItemMasterBinList' },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        "success": function (json) {
                            if (json.jsonData != '')
                                o = json;
                        }
                    });
                },
                "fnStateLoad": function (oSettings) {
                    var o;
                    $.ajax({
                        "url": '@Url.Content("~/Master/LoadGridState")',
                        "type": "POST",
                        data: { ListName: 'ItemMasterBinList' },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        "success": function (json) {
                            if (json.jsonData != '')
                                o = JSON.parse(json.jsonData);
                        }
                    });
                    return o;
                },
                "bServerSide": true,
                "sAjaxSource": '@Url.Content("~/Master/ItemMasterBinListAjax")',
                "fnServerData": function (sSource, aoData, fnCallback, oSettings) {

                    //PostCount = PostCount + 1;
                    var arrCols = new Array();
                    var objCols = this.fnSettings().aoColumns;
                    for (var i = 0; i <= objCols.length - 1; i++) {
                        arrCols.push(objCols[i].mDataProp);
                    }
                    for (var j = 0; j <= aoData.length - 1; j++) {
                        if (aoData[j].name == "sColumns") {
                            aoData[j].value = arrCols.join("|");
                            break;
                        }
                    }



                    if (oSettings.aaSorting.length != 0) {
                        var sortValue = "";
                        for (var k = 0; k <= oSettings.aaSorting.length - 1; k++) {
                            if (sortValue.length > 0)
                                sortValue += ", "
                            sortValue += arrCols[oSettings.aaSorting[k][0]] + ' ' + oSettings.aaSorting[k][1];

                        }
                        aoData.push({ "name": "SortingField", "value": sortValue });
                    }
                    else
                        aoData.push({ "name": "SortingField", "value": "0" });

                    aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                    aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });
                    oSettings.jqXHR = $.ajax({
                        "dataType": 'json',
                        "type": "POST",
                        "url": sSource,
                        "cache": false,
                        "data": aoData,
						"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                        "success": fnCallback,
                        "beforeSend": function () {
                            $('#myDataTable').removeHighlight();
                            $('.dataTables_scroll').css({ "opacity": 0.2 });
                        },
                        "error": function (xhr, status, error) {
                            // Boil the ASP.NET AJAX error down to JSON.
                            console.log(xhr);
                            //var err = eval("(" + xhr.responseText + ")");

                            // Display the specific error raised by the server (e.g. not a
                            //   valid value for Int32, or attempted to divide by zero).
                        },
                        "complete": function () {
                            $('.dataTables_scroll').css({ "opacity": 1 });
                            if ($("#global_filter").val() != '') {

                                var SearchText = $("#global_filter").val();
                                var count = (SearchText.match(/"/g) || []).length;

                                if (count == 2 && SearchText.indexOf('"') == 0) {
                                    SearchText = SearchText.replace('"', '').replace('"', '');
                                    $('#myDataTable').highlight(SearchText);
                                }
                                if (count == 0) {
                                    $('#myDataTable').highlight($("#global_filter").val());
                                }
                            }
                            CallShowHideData();
                            if ($('#global_filter').val().length > 0) {
                                //  if (oTable.fnGetData().length == 1) {
                                //     // $('#myDataTable tr').find('#aEditLink').click();
                                //     // $('#global_filter').val('');
                                //     // $('#myDataTable').dataTable().fnFilter('', null, null, null);
                                //  }
                                //  else
                                //  if (oTable.fnGetData().length <= 0) {
                                //      $('#cnfBarcodeAddmdl').modal();
                                //      $('#btnBarcodeAddYes').focus();
                                //  }

                            }

                        }
                    })
                },
                "fnInitComplete": function () {
                    $("div.refreshBlock span").each(function (index, obj) {
                        if ($(obj).text().indexOf("@@enterprise@@") > -1) {
                            var EnterpriseName = $("#ddlEnterprise option:selected").text();
                            var SpanText = $(obj).text().replace("@@@@enterprise@@@@", EnterpriseName);
                            $(obj).text(SpanText);
                        }
                    });
                },
                "aoColumns": [
                     {
                         "mDataProp": null,
                         "bSortable": false,
                         "sClass": "read_only center NotHide RowNo",
                         "sDefaultContent": ''
                     },
                    {
                        "mDataProp": "ItemNumber",
                        "bSortable": false,
                        "sClass": "read_only center NotHide RowNo",
                        "sDefaultContent": ''
                    },
                    {
                        "mDataProp": "OldLocationName",
                        "bSortable": true,
                        "sClass": "read_only center NotHide RowNo",
                        "sDefaultContent": '',
                        "fnRender": function (obj, val) {
                            var strVal = val.toString();//.replace(/ /g, "&nbsp;");
                            strVal = strVal.replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;");
                            // return "";
                            return "<span style='display:none'>'" + strVal + "'</span><a id='aEditLink' onclick='return ShowEditTabGUID(&quot;ItemBinEdit?BinGUID=" + obj.aData.OldLocationGUID.toString() + "&quot;,&quot;frmItem&quot;)' href='JavaScript:void(0);'>" + strVal + "</a><input type='hidden' id='BinGUID' value='" + obj.aData.OldLocationGUID.toString() + "' /><input type='hidden' id='ItemGuid' value='" + obj.aData.ItemGuid + "' />";
                        }
                    },
                        { "mDataProp": "AddedFrom", "sClass": "read_only" },
                        { "mDataProp": "EditedFrom", "sClass": "read_only" },
                            {
                                "mDataProp": "Created", "sClass": "read_only",
                                "fnRender": function (obj, val) {
                                    return obj.aData.CreatedDate;
                                }
                            },
                       {
                           "mDataProp": "Updated", "sClass": "read_only", "sDefaultContent": '',
                           "fnRender": function (obj, val) {
                               return obj.aData.UpdatedDate;
                               //                                    if (obj.aData.Updated != null && obj.aData.Updated != NaN)
                               //                                        return "<span id='spnUpdated" + obj.aData.GUID + "'>" + GetDateInFullFormat(obj.aData.Updated) + "</span>";
                               //                                    else
                               //                                        return "<span id='spnUpdated" + obj.aData.GUID + "'>" + GetDateInFullFormat(obj.aData.Updated) + "</span>";
                           }
                       },
                        {
                            "mDataProp": "IsDefault", "sClass": "read_only",
                            "fnRender": function (obj, val) {
                                if (obj.aData.IsDefault) {
                                    return 'Yes';
                                }
                                else {
                                    return 'No';
                                }
                            }
                        },
                          { "mDataProp": "CreatedByName", "sClass": "read_only" },
                        { "mDataProp": "UpdatedByName", "sClass": "read_only" }


                ]
            }).makeEditable({
                sUpdateURL: '@Url.Content("~/Master/UpdateBinMasterData")'
            });


            $('.DTTT_container').css('z-index', '-1');




            /*Functions used for nasted data binding END*/


        });






        /* HISTORY related data deleated and archived START */
        function fnGetSelected(oTableLocal) {
            return oTableLocal.$('tr.row_selected');
        }


    </script>
}
<script type="text/javascript">
    var TabsArry = [];
    TabsArry = [new TabClass('tab1', '@eTurns.DTO.Resources.ResCommon.New', 'callbacknew();', false, true),
         new TabClass('tab5', '@eTurns.DTO.Resources.ResCommon.List', 'callbackhistory();', true, true),

    ];

    function callbacknew() { ShowNewTab('ItemCreate', 'frmItemMaster'); }
    function callbackhistory() {
        // window.location.href = "ItemMasterBinList";
        if (IsEditMode) {
            IsEditMode = false;
        }
        if (IsReloadItemList == true) {
            $('#myDataTable').dataTable().fnDraw();
            IsReloadItemList = false;
        }
        $("div#tab1").hide();
    }
    //HistoryTabClick(); }
    function callbackCL() { HistoryTabClick(); }
</script>
<div class="userListingWrapper">

    <h2>
        @ResLayout.ItemBinList
    </h2>
    <div class="Infoclass" style="width:70px !important">
        <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">


        </div>
    </div>
    <div class="userListBlock">
        @Html.Hidden("hdnPageName", modelCommon.PageName)
        <ul class='tabs'></ul>
        <div id="CtabNew" class="tabContener">
        </div>
        <div id="Ctab" class="tabContener">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="global_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_global_filter" />
                        </a>
                    </div>
                </div>
            </div>
            @Html.GridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.ItemMaster)
            @Html.Partial("NarrowSearchLayout", modelCommon)
            @*@{ Html.RenderPartial("NarrowSearchLayout", modelCommon);}*@
            <div class="userContent ">
                <table id="myDataTable" class="display">
                    <thead>
                        <tr>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.RowNo
                            </th>
                            <th>
                                @ResItemMaster.ItemNumber
                            </th>
                            <th>
                                @ResItemBinMaster.OldLocationName
                            </th>
                            <th>
                                @ResItemMaster.AddedFrom

                            </th>
                            <th>
                                @ResItemMaster.EditedFrom
                            </th>
                            <th>
                                @ResItemMaster.Created

                            </th>
                            <th>
                                @ResItemMaster.Updated
                            </th>
                            <th>
                                @ResItemBinMaster.IsDefault
                            </th>
                            <th>
                                @ResItemMaster.Created
                            </th>
                            <th>
                                @ResItemMaster.Updated
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>

                <div id="processing_message" style="display: none" title="Processing">@eTurns.DTO.Resources.ResMessage.RequestProcessMessage</div>

            </div>
        </div>
        <div id='CtabCL' class="tabContener">
        </div>
    </div>
</div>

@(Html.Partial("SupplierCatalog", new SupplierCatalogItemDTO() { SourcePageName = "ItemMaster", OpenPopup = true, ButtonText = "Add from Catalog" }))
<script type="text/javascript">

    $(document).ready(function () {


    });


</script>

