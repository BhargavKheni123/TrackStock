@{
    var objRequisitionCount = new eTurnsWeb.Controllers.InventoryDashboardController();
    Session["IsInsert"] = "";
    eTurns.DAL.CommonDAL objCommon = new eTurns.DAL.CommonDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName);
    List<RedCountDTO> lstRedCount = objCommon.GetRedCountByModuleType("Consume", eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID, eTurnsWeb.Helper.SessionHelper.UserSupplierIds, eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.AllowOrderToConsignedItem));
    List<RedCountDTO> lstReqRedCount = lstRedCount.Where(x => x.ModuleName == "Requisition").ToList();

    Int32 isNotSubmitted = 0;
    Int32 isNotApproved = 0;
    Int32 isNotConsumed = 0;
    if (lstReqRedCount != null && lstReqRedCount.Count > 0)
    {
        if (lstReqRedCount.Any(t => t.Status == "UnSubmitted"))
        {
            isNotSubmitted = lstReqRedCount.Where(x => x.Status == "UnSubmitted").First().RecCircleCount;
        }
        if (lstReqRedCount.Any(t => t.Status == "ToBeApproved"))
        {
            isNotApproved = lstReqRedCount.Where(x => x.Status == "ToBeApproved").First().RecCircleCount;
        }
        if (lstReqRedCount.Any(t => t.Status == "Approved"))
        {
            isNotConsumed = lstReqRedCount.Where(x => x.Status == "Approved").First().RecCircleCount;
        }
    }

    Int32 projectExceedCount = objRequisitionCount.GetProjectSpendCount("Project Amount Exceeds");
    Int32 itemQuantityExceedCount = objRequisitionCount.GetProjectSpendCount("Item Quantity Exceeds");
    Int32 itemAmountExceedCount = objRequisitionCount.GetProjectSpendCount("Item Amount Exceeds");

}
<style>
     .dataTables_scrollBody {
        overflow-y:scroll ;
        overflow-x:scroll;
        
        max-height:3000px !important;
        overflow:scroll !important;
    }
    .Lnavd
    {
        float: left;
        padding-left: 1px;
    }
    
    .Lnavd li
    {
        float: left;
        padding: 2px 4px 1px 0;
        position: relative;
        list-style: none;
    }
    .Lnavd li.clear
    {
        width: 100%;
        height: 1px;
        float: left;
        margin: 0;
        padding: 0;
    }
    .lia
    {
        background: none repeat scroll 0 0 #F3F9FF;
        border: 1px solid #C7E3FF;
        border-radius: 5px 5px 5px 5px;
        color: #1971BD;
        float: left;
        font-size: 12px;
        padding: 1px 5px;
        cursor: pointer;
        text-align: center;
        text-decoration: none; /* width: 50px;*/
    }
    .liahover
    {
        background: no-repeat scroll 90px center #1971BD;
        border: 1px solid #1971BD;
        border-radius: 5px 5px 5px 5px;
        color: #FFFFFF !important;
        cursor: auto;
        text-decoration: none;
    }
    /*  .Lnavd li a
    {
        background: none repeat scroll 0 0 #F3F9FF;
        border: 1px solid #C7E3FF;
        border-radius: 5px 5px 5px 5px;
        color: #1971BD;
        float: left;
        font-size: 12px;
        padding: 1px 5px;
        text-align: center;
        text-decoration: none; 
    }*/
    .Lnavd li a:hover
    {
        text-decoration: none;
    }
    .imgclassd span
    {
        background: url("../../content/images/num-selected.png") no-repeat scroll 0 0 transparent;
        color: #FFFFFF;
        float: right;
        font-size: 12px;
        font-weight: bold;
        height: 18px;
        margin: -12px 0 0 -6px;
        padding: 6px 0;
        text-align: center;
        width: 29px;
    }
    .gridchartclass
    {
        float: right;
        margin-right: 0;
        margin-top: -25px;
        padding-bottom: 0;
        padding-left: 0;
        padding-top: 0;
        width: auto;
    }
</style>
<div style="float: left; width: 100%;">
    <div id="dvmain" class="Lnavd">
        <ul>
            <li class="imgclassd"><a id="lnkRequisition" title="Requisition" onclick="BindConsumeStatusGrid('lnkRequisition','Requisition')"
                class="lia">@eTurns.DTO.ResDashboard.TabRequisition </a></li>
            <li class="imgclassd"><a id="lnkProjectspend" title="Project Spend" onclick="BindProjectStatusGrid('lnkProjectspend','Project Spend')"
                class="lia">@eTurns.DTO.ResDashboard.TabProjectSpend</a></li>
        </ul>
    </div>
    <div id="divMainRequisitionTab" style="float: left; width: 100%;">
        <div id="divRequisitionTab" class="Lnavd" style="float: left; width: 80%; padding-top: 10px;">
            <ul>
                <li class="imgclassd"><a id="lnknotsubmitted" title="Unsubmitted" onclick="BindConsumeStatusGrid('lnknotsubmitted','Unsubmitted')"
                    class="lia">@ResDashboard.SubTabRequisitionTobeSubmitted</a>@if (isNotSubmitted != 0)
                                                                                { <span>@isNotSubmitted</span>}</li>
                <li class="imgclassd"><a id="lnknotapproved" title="Submitted" onclick="BindConsumeStatusGrid('lnknotapproved','Submitted')"
                    class="lia">@ResDashboard.SubTabRequisitionTobeApproved</a>@if (isNotApproved != 0)
                                                                               { <span>@isNotApproved</span>}</li>
                <li class="imgclassd"><a id="lnknotconsumed" title="Approved" onclick="BindConsumeStatusGrid('lnknotconsumed','Approved')"
                    class="lia">@ResDashboard.SubTabRequisitionTobePulled</a>@if (isNotConsumed != 0)
                                                                             { <span>@isNotConsumed</span>}</li>
            </ul>
        </div>
        <div class="viewBlock gridchartclass">
            <span class="label">View:</span> <a class="view" href="javascript:void(0);" onclick="ShowHideConsumeDiv('Chart');">
                <img alt="" id="imgRChart" src="/content/images/chart-view-active.png"></a>
            <a class="view" href="javascript:void(0);" onclick="ShowHideConsumeDiv('Grid');">
                <img alt="" id="imgRGrid" src="/content/images/list-view-inactive.png"></a>
        </div>
        <div style="float: left; padding-top: 4px; display: none;">
            <ul>
                <li style="border-right: none; float: left; padding-right: 5px;">
                    <label style="float: left; padding: 1.3% 2px;">
                        @Html.Label("From")
                    </label>
                    @Html.TextBox("txtConsumeFromDate", "1/1/" + eTurns.DAL.DateTimeUtility.DateTimeNow.Year, new { @class = "importtext-box", id = "txtConsumeFromDate", @readonly = "readonly", @style = "width:70px;background:white", maxlength = 128 })
                </li>
                <li style="border-right: none; float: left; padding-right: 5px;">
                    <label style="float: left; padding: 1.3% 2px;">
                        @Html.Label("To")
                    </label>
                    @Html.TextBox("txtConsumeToDate", eTurns.DAL.DateTimeUtility.DateTimeNow.ToString("MM/dd/yyyy"), new { @class = "importtext-box", id = "txtConsumeToDate", @readonly = "readonly", @style = "width:70px;background:white", maxlength = 128 })
                    @Html.Hidden("hdnstatusConsume", new { id = "hdnstatusConsume" })
                </li>
                <li style="border-right: none; float: left; padding-right: 5px;">
                    <div class="BtnBlockform" style="margin: 0 0 0 5px;">
                        <input type="button" value="GO" id="btnConsumego" name="btnConsumego" class="CreateBtn"
                            style="float: left;" />
                    </div>
                </li>
            </ul>
        </div>
        <div id="Ctab" class="tabContener">
            <div id="dvConsumeGrid" class="userContent" style="float: left; width: 100%;">
                <div class="searchWrapper">
                    <div class="searchBlock">
                        <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
                        <div class="searchinputB">
                            <input type="text" class="searchinput" id="global_filterDashConsume" />
                            <a href="javascript:void(0);" class="xclose">
                                <img src="~/Content/images/x.png" alt="X" id="clear_global_filterDashConsume" /></a>
                        </div>
                    </div>
                </div>
                <div class="userHead" style="height: 30px;">
                </div>
                <table id="myRequisitionDataTable" class="display" style="width: 561px; overflow: auto;">
                    <thead>
                        <tr>
                            <th>@ResDashboard.RequisitionNumber
                            </th>
                            <th>@ResDashboard.RequisitionDescription
                            </th>
                            <th>@ResDashboard.RequisitionRequiredDate
                            </th>
                        </tr>
                    </thead>
                </table>
            </div>
            <div id="dvConsumeChart" style="float: left; width: 100%;">
                Chart
            </div>
        </div>
    </div>
    <div id="divMainProjectspend" style="float: left; width: 100%;">
        <div id="divProjectspendTab" class="Lnavd" style="float: left; width: 80%; padding-top: 10px;">
            <ul>
                <li class="imgclassd"><a id="lnkPAexceeds" title="Project Amount Exceeds" onclick="BindProjectStatusGrid('lnkPAexceeds','Project Amount Exceeds')"
                    class="lia">@ResDashboard.SubTabProjectSpendAmountExceeds</a>@if (projectExceedCount != 0)
                                                                                 { <span>@projectExceedCount</span>}</li>
                <li class="imgclassd"><a id="lnkIQexceeds" title="Item Quantity Exceeds" onclick="BindProjectStatusGrid('lnkIQexceeds','Item Quantity Exceeds')"
                    class="lia">@ResDashboard.SubTabProjectSpendQuantityExceeds</a>@if (itemQuantityExceedCount != 0)
                                                                                   { <span>@itemQuantityExceedCount</span>}</li>
                <li class="imgclassd"><a id="lnkIAexceeds" title="Item Amount Exceeds" onclick="BindProjectStatusGrid('lnkIAexceeds','Item Amount Exceeds')"
                    class="lia">@ResDashboard.SubTabProjectSpendItemAmountExceeds</a>@if (itemAmountExceedCount != 0)
                                                                                     { <span>@itemAmountExceedCount</span>}</li>
            </ul>
        </div>
        <div class="viewBlock gridchartclass">
            <span class="label">View:</span> <a class="view" href="javascript:void(0);" onclick="ShowHideProjectDiv('Chart');">
                <img alt="" id="imgPChart" src="/content/images/chart-view-active.png"></a>
            <a class="view" href="javascript:void(0);" onclick="ShowHideProjectDiv('Grid');">
                <img alt="" id="imgPGrid" src="/content/images/list-view-inactive.png"></a>
        </div>
        <div style="float: left; padding-top: 4px; display: none;">
            <ul>
                <li style="border-right: none; float: left; padding-right: 5px;">
                    <label style="float: left; padding: 1.3% 2px;">
                        @Html.Label("From")
                    </label>
                    @Html.TextBox("txtProjectFromDate", "1/1/" + eTurns.DAL.DateTimeUtility.DateTimeNow.Year, new { @class = "importtext-box", id = "txtProjectFromDate", @readonly = "readonly", @style = "width:70px;background:white", maxlength = 128 })
                </li>
                <li style="border-right: none; float: left; padding-right: 5px;">
                    <label style="float: left; padding: 1.3% 2px;">
                        @Html.Label("To")
                    </label>
                    @Html.TextBox("txtProjectToDate", eTurns.DAL.DateTimeUtility.DateTimeNow.ToString("MM/dd/yyyy"), new { @class = "importtext-box", id = "txtProjectToDate", @readonly = "readonly", @style = "width:70px;background:white", maxlength = 128 })
                    @Html.Hidden("hdnstatusProject", new { id = "hdnstatusProject" })
                </li>
                <li id="liLimits" style="border-right: none; float: left; padding-right: 5px;">
                    <label style="float: left; padding: 1.3% 2px;">
                        @Html.Label("Limits(%)")
                    </label>
                    @Html.TextBox("txtLimits", "", new { @class = "importtext-box", id = "txtLimits", @style = "width:30px;background:white", maxlength = 3 })
                </li>
                <li style="border-right: none; float: left; padding-right: 5px;">
                    <div class="BtnBlockform" style="margin: 0 0 0 5px;">
                        <input type="button" value="GO" id="btnProjectgo" name="btnProjectgo" class="CreateBtn"
                            style="float: left;" />
                    </div>
                </li>
            </ul>
        </div>
        <div id="Ptab" class="tabContener">
            <div id="dvProjectGrid" class="userContent" style="float: left; width: 100%;">
                <div class="searchWrapper">
                    <div class="searchBlock">
                        <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
                        <div class="searchinputB">
                            <input type="text" class="searchinput" id="global_filterDashProject" />
                            <a href="javascript:void(0);" class="xclose">
                                <img src="~/Content/images/x.png" alt="X" id="clear_global_filterDashProject" /></a>
                        </div>
                    </div>
                </div>
                <div class="userHead" style="height: 30px;">
                </div>
                <table id="myProjectDataTable" class="display" style="width: 561px; overflow: auto;">
                    <thead>
                        <tr>
                            <th>@ResDashboard.ProjectSpendName
                            </th>
                            <th>@ResDashboard.ProjectSpendDescription
                            </th>
                            <th>@ResDashboard.ProjectSpendDollarLimitAmount
                            </th>
                            <th>@ResDashboard.ProjectSpendDollarUsedAmount
                            </th>
                            <th>@ResDashboard.ProjectSpend
                            </th>
                        </tr>
                    </thead>
                </table>
            </div>
            <div id="dvProjectChart" style="float: left; width: 100%;">
                Chart
            </div>
        </div>
    </div>
</div>
<script language="javascript" type="text/javascript">
    var oTableRequisition;
    var oProjectTable;
    var AllowDeletePopup = true;
    function ShowHideConsumeDiv(str) {
        if (str == 'Grid') {
            $("#dvConsumeGrid").show();
            $("#dvConsumeChart").hide();
            ChangeImgSRC('Grid', 'imgRGrid', 'imgRChart');
            oTableRequisition.fnDraw();
        }
        else {
            $("#dvConsumeGrid").hide();
            $("#dvConsumeChart").show();

            ChangeImgSRC('Chart', 'imgRGrid', 'imgRChart');

            $('#dvConsumeChart').empty();
            $('#dvConsumeChart').load('/ConsumeChart/LoadChart', function () { });
        }
    }

    function ShowHideProjectDiv(str) {
        if (str == 'Grid') {
            $("#dvProjectGrid").show();
            $("#dvProjectChart").hide();
            ChangeImgSRC('Grid', 'imgPGrid', 'imgPChart');
            oProjectTable.fnDraw();
        }
        else {
            $("#dvProjectGrid").hide();
            $("#dvProjectChart").show();
            ChangeImgSRC('Chart', 'imgPGrid', 'imgPChart');
            $('#dvProjectChart').empty();
            $('#dvProjectChart').load('/ProjectChart/LoadChart', function () { });
        }
    }

    //    function ChangeImgSRC(CG, GridImage, ChartImage) {        
    //        if (CG == 'Grid') {
    //            $("#" + GridImage).attr("src", "/content/images/list-view.png");
    //            $("#" + ChartImage).attr("src", "/content/images/chart-view.png");
    //        }
    //        else {
    //            $("#" + GridImage).attr("src", "/content/images/list-view-inactive.png");
    //            $("#" + ChartImage).attr("src", "/content/images/chart-view-active.png");
    //        }
    //    }

    $(document).ready(function () {
        $("#divMainRequisitionTab").show();
        $("#divMainProjectspend").hide();
        $("#dvConsumeGrid").hide();
        $("#dvConsumeChart").show();

        $("#dvProjectGrid").hide();
        $("#dvProjectChart").show();



        $('#txtConsumeFromDate').blur(function () { }).datepicker({ dateFormat: 'm/d/yy' });
        $('#txtConsumeToDate').blur(function () { }).datepicker({ dateFormat: 'm/d/yy' });

        $('#txtProjectFromDate').blur(function () { }).datepicker({ dateFormat: 'm/d/yy' });
        $('#txtProjectToDate').blur(function () { }).datepicker({ dateFormat: 'm/d/yy' });

        $("#global_filterDashConsume").val("");
        $("#global_filterDashProject").val("");


        $("#lnkRequisition").removeClass("lava");
        $("#lnkRequisition").addClass("liahover");

        $("#lnknotsubmitted").removeClass("lava");
        $("#lnknotsubmitted").addClass("liahover");
        $("#hdnstatusConsume").val("Unsubmitted"); // Not Approved
        GenerateItemGrid();
        $('.DTTT_container').css('z-index', '-1');
        FilterRecordsByStatus($("#hdnstatusConsume").val());



        $("#lnkProjectspend").removeClass("liahover");
        $("#lnkProjectspend").addClass("lava");
        $("#lnkPAexceeds").removeClass("lava");
        $("#lnkPAexceeds").addClass("liahover");
        $("#hdnstatusProject").val("Project Amount Exceeds");


        $('#dvConsumeChart').empty();
        $('#dvConsumeChart').load('/ConsumeChart/LoadChart', function () { });
        $('#dvProjectChart').empty();
        $('#dvProjectChart').load('/ProjectChart/LoadChart', function () { });

    });

    $('#btnConsumego').click(function () {

        if ($("#lnkRequisition").hasClass("liahover")) {
            $("#divRequisitionTab.Lnavd > ul > li").each(function () {
                if ($(this).find('a').hasClass('liahover')) {
                    var lnk = $(this).find('a')[0];
                    var clickedid = lnk.id;
                    var clickedTitle = $(lnk).attr("title");
                    BindConsumeStatusGrid(clickedid, clickedTitle);
                }
            });
        }
        else if ($("#lnkProjectspend").hasClass("liahover")) {
            alert('@ResLayout.ProjectSpend');
        }

    });

    $('#btnProjectgo').click(function () {

        if ($("#lnkProjectspend").hasClass("liahover")) {
            $("#divProjectspendTab.Lnavd > ul > li").each(function () {
                if ($(this).find('a').hasClass('liahover')) {
                    var lnk = $(this).find('a')[0];
                    var clickedid = lnk.id;
                    var clickedTitle = $(lnk).attr("title");
                    BindProjectStatusGOClick(clickedid, clickedTitle);
                }
            });
        }
    });

    function AddRemoveProjectCSS() {
        $("#divProjectspendTab.Lnavd > ul > li").each(function () {
            $(this).find('a').addClass("lava");
            $(this).find('a').removeClass("liahover");
        });
    }

    function BindPercentageValue() {
        //  alert($("#hdnstatusProject").val());
        $.ajax({ url: '@Url.Action("GetCompanyConfig", "InventoryDashboard")'
                        , type: 'POST'
                        , data: { 'CompanyID': '@eTurnsWeb.Helper.SessionHelper.CompanyID', 'Status': $("#hdnstatusProject").val() }
                        , cache: false
                        , success: function (response) {
                            $("#txtLimits").val(response.StatusValue);
                            $("#global_filterDashProject").val("");
                            $("#global_filterDashProject").change();

                            FilterRecordsByStatusProject($("#hdnstatusProject").val());
                            $('#dvProjectChart').empty();
                            $('#dvProjectChart').load('/ProjectChart/LoadChart', function () { });
                            //$('.DTTT_container').css('z-index', '-1');
                        }
                        , error: function () {
                            $("#txtLimits").val(0);
                        }
        });

    }

    function BindProjectStatusGOClick(id, str) {

        AddRemoveProjectCSS();
        if (id == "lnkProjectspend") {

            $("#lnkRequisition").addClass("lava");
            $("#lnkRequisition").removeClass("liahover");
            $("#divMainRequisitionTab").hide();
            $("#divMainProjectspend").show();

            $("#lnkPAexceeds").removeClass("lava");
            $("#lnkPAexceeds").addClass("liahover");

            $("#hdnstatusProject").val("Project Amount Exceeds");


        }
        else {
            $("#hdnstatusProject").val(str);
        }

        $("#" + id).removeClass("lava");
        $("#" + id).addClass("liahover");
        $("#global_filterDashProject").val("");
        $("#global_filterDashProject").change();

        FilterRecordsByStatusProject($("#hdnstatusProject").val());
        $('.DTTT_container').css('z-index', '-1');

        $('#dvProjectChart').empty();
        $('#dvProjectChart').load('/ProjectChart/LoadChart', function () { });

    }

    function BindProjectStatusGrid(id, str) {

        AddRemoveProjectCSS();
        if (id == "lnkProjectspend") {

            $("#lnkRequisition").addClass("lava");
            $("#lnkRequisition").removeClass("liahover");
            $("#divMainRequisitionTab").hide();
            $("#divMainProjectspend").show();

            $("#lnkPAexceeds").removeClass("lava");
            $("#lnkPAexceeds").addClass("liahover");

            $("#hdnstatusProject").val("Project Amount Exceeds");
            ShowHideProjectDiv('Chart');

        }
        else {
            $("#hdnstatusProject").val(str);
        }

        $("#" + id).removeClass("lava");
        $("#" + id).addClass("liahover");

        BindPercentageValue();

    }
    function AddRemoveConsumeCSS() {
        $("#divRequisitionTab.Lnavd > ul > li").each(function () {
            $(this).find('a').addClass("lava");
            $(this).find('a').removeClass("liahover");
        });
    }
    function BindConsumeStatusGrid(id, str) {

        AddRemoveConsumeCSS();
        if (id == "lnkRequisition")//,'Requisition
        {
            $("#lnkProjectspend").addClass("lava");
            $("#lnkProjectspend").removeClass("liahover");

            $("#divMainRequisitionTab").show();
            $("#divMainProjectspend").hide();

            $("#lnknotsubmitted").removeClass("lava");
            $("#lnknotsubmitted").addClass("liahover");
            $("#hdnstatusConsume").val("Unsubmitted");
            ShowHideConsumeDiv('Chart');
        }
        else {
            $("#hdnstatusConsume").val(str);
        }
        $("#" + id).removeClass("lava");
        $("#" + id).addClass("liahover");

        $("#global_filterDashConsume").val("");
        $("#global_filterDashConsume").change();

        FilterRecordsByStatus($("#hdnstatusConsume").val());

        $('#dvConsumeChart').empty();
        $('#dvConsumeChart').load('/ConsumeChart/LoadChart', function () { });
    }


    function GenerateItemGrid() {

        oTableRequisition = $('#myRequisitionDataTable').dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "bAutoWidth": false,
            //"sScrollX": "150%",
            "sScrollX": "100%",
            "sDom": 'R<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "aaSorting": [[1, "asc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bDestroy": true,
            //"bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnRowCallback": function (nRow, aData) {
                if (aData.IsDeleted == true && aData.IsArchived == true)
                    nRow.className = "GridDeleatedArchivedRow";
                else if (aData.IsDeleted == true)
                    nRow.className = "GridDeletedRow";
                else if (aData.IsArchived == true)
                    nRow.className = "GridArchivedRow";

                return nRow;
            },
            "bServerSide": true,
            "sAjaxSource": '@Url.Action("RequisitionMasterListAjax", "InventoryDashboard")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                //PostCount = PostCount + 1;
                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;
                for (var i = 0; i <= objCols.length - 1; i++) {
                    arrCols.push(objCols[i].mDataProp);
                }
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }
                if (oSettings.aaSorting.length != 0)
                    aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                else
                    aoData.push({ "name": "SortingField", "value": "0" });

                aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });
                aoData.push({ "name": "FromDate", "value": $('#txtConsumeFromDate').val() });
                aoData.push({ "name": "ToDate", "value": $('#txtConsumeToDate').val() });
                aoData.push({ "name": "Criteria", "value": $("#hdnstatusConsume").val() });

                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    cache: false,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback,
                    beforeSend: function () {
                        $('#myRequisitionDataTable td').removeHighlight();
                        $('#myRequisitionDataTable_wrapper .dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    complete: function () {
                        $('#myRequisitionDataTable_wrapper .dataTables_scroll').css({ "opacity": 1 });
                        if ($("#global_filterDashConsume").val() != '') {
                            $('#myRequisitionDataTable td').highlight($("#global_filterDashConsume").val());
                        }
                        CallShowHideData();
                        //CallNarrowfunctions();
                    }
                });
            },
            "fnInitComplete": function () {
                $('.ColVis').detach().appendTo(".setting-arrow");
                GenerateProjectGrid();
                BindPercentageValue();
            },
            "aoColumns": [
                            {
                                "mDataProp": "RequisitionNumber",
                                "sClass": "read_only",
                                "sDefaultContent": '',
                                "bSortable": true,
                                "bSearchable": false,
                                "fnRender": function (obj) {
                                    return "<a id='aEditLink' onclick='return OpenRequisitionEdit(&quot;" + obj.aData.GUID + "&quot;)' href='JavaScript:void(0);'>" + obj.aData.RequisitionNumber + "</a>" + " <input type='hidden' id='RequisitionGUID' value='" + obj.aData.GUID.toString() + "' />";
                                    //return "<a id='aEditLink' onclick='return ShowEditTabGUID(&quot;RequisitionEdit?RequisitionGUID=" + obj.aData.GUID + "&quot;,&quot;frmRequisitionMaster&quot;)' href='JavaScript:void(0);'>" + obj.aData.RequisitionNumber + "</a>" + " <input type='hidden' id='RequisitionGUID' value='" + obj.aData.GUID.toString() + "' />";
                                    //return "" + obj.aData.RequisitionNumber + "";
                                }
                            },
			                { "mDataProp": "Description", "sClass": "read_only", "sDefaultContent": '',
			                    "fnRender": function (obj, val) {
			                        return "<div class='comment more'>" + val + "</div>" + " <span id='spnRequisitionStatus' style='display:none'>" + obj.aData.RequisitionStatus + "</span>";
			                    }
			                },
                            { "mDataProp": "RequiredDate", "sClass": "read_only",
                                "fnRender": function (obj, val) {
                                    return GetDateInFullFormat(val);
                                }
                            }


		    ]
        });

    }

    function OpenRequisitionEdit(guid) {
        var url = '@Url.Action("RequisitionList", "Consume")';
        url = url + '?fromdashboard=' + 'yes' + '&RequisitionGUID=' + guid;
        window.location.href = url;
        return false;
    }

    function GenerateProjectGrid() {
        oProjectTable = $('#myProjectDataTable').dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": false,
            "bAutoWidth": false,
            "sScrollX": "100%",
            "sDom": 'R<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            //"oColVis": {},
            "aaSorting": [[0, "asc"]],
            //"oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            //"bStateSave": true,
            "bDestroy": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnRowCallback": function (nRow, aData) {
                if (aData.IsDeleted == true && aData.IsArchived == true)
                    nRow.className = "GridDeleatedArchivedRow";
                else if (aData.IsDeleted == true)
                    nRow.className = "GridDeletedRow";
                else if (aData.IsArchived == true)
                    nRow.className = "GridArchivedRow";

                return nRow;
            },
            "bServerSide": true,
            "sAjaxSource": '@Url.Action("ProjectMasterListAjax", "InventoryDashboard")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;
                for (var i = 0; i <= objCols.length - 1; i++) {
                    arrCols.push(objCols[i].mDataProp);
                }
                //endFor
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }
                if (oSettings.aaSorting.length != 0)
                    aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                else
                    aoData.push({ "name": "SortingField", "value": "0" });

                aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });
                aoData.push({ "name": "FromDate", "value": $('#txtProjectFromDate').val() });
                aoData.push({ "name": "ToDate", "value": $('#txtProjectToDate').val() });
                aoData.push({ "name": "Status", "value": $("#hdnstatusProject").val() });
                aoData.push({ "name": "StatusValue", "value": $("#txtLimits").val() });

                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback,
                    beforeSend: function () {
                        $('#myProjectDataTable td').removeHighlight();
                        $('#myProjectDataTable_wrapper .dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    complete: function () {
                        $('#myProjectDataTable_wrapper .dataTables_scroll').css({ "opacity": 1 });
                        if ($("#global_filterDashProject").val() != '') {
                            $('#myProjectDataTable td').highlight($("#global_filterDashProject").val());
                        }

                        CallShowHideData();
                    }
                });
            }, // fnServerData : required to pass the custom parameter before fetching data from DB
            //            "fnInitComplete": function () {
            //                $('.ColVis').detach().appendTo(".setting-arrow");
            //            },
            "aoColumns": [
                                {
                                    "sClass": "read_only",
                                    "sDefaultContent": '',
                                    "bSortable": true,
                                    "bSearchable": false,
                                    "fnRender": function (obj) {
                                        //return "" + obj.aData.ProjectSpendName + "";
                                        return "<a onclick='return OpenProjectSpendEdit(&quot;" + obj.aData.ID + "&quot;)' href='JavaScript:void(0);'>" + obj.aData.ProjectSpendName + "</a>";
                                        //return "<a onclick='BlankSession(); return ShowEditTab(&quot;ProjectEdit/" + obj.aData.ID + "&quot;,&quot;frmProject&quot;)' href='JavaScript:void(0);'>" + obj.aData.ProjectSpendName + "</a>";
                                    }
                                },
                                { "mDataProp": "Description", "sClass": "read_only" },
                                { "mDataProp": "DollarLimitAmount", "sClass": "read_only" },
                                { "mDataProp": "DollarUsedAmount", "sClass": "read_only" },
                                {
                                    "sClass": "read_only",
                                    "sDefaultContent": '',
                                    "bSortable": true,
                                    "bSearchable": false,
                                    "fnRender": function (obj) {
                                        //return "" + obj.aData.ProjectSpendName + "";

                                        //                                        var Limit = obj.aData.DollarLimitAmount;
                                        //                                        var Used = obj.aData.DollarUsedAmount;
                                        //                                        var UsedPer = ((100 / obj.aData.DollarLimitAmount) * obj.aData.DollarUsedAmount)
                                        return "" + GetUsedPer(obj.aData.DollarLimitAmount, obj.aData.DollarUsedAmount);
                                        //return "<a onclick='BlankSession(); return ShowEditTab(&quot;ProjectEdit/" + obj.aData.ID + "&quot;,&quot;frmProject&quot;)' href='JavaScript:void(0);'>" + obj.aData.ProjectSpendName + "</a>";
                                    }
                                }
		    ]
        });

        $('.DTTT_container').css('z-index', '-1');
    }
    function GetUsedPer(limit, used) {
        var iDecimalPlace = 2;
        var perUsed = ((100 / limit) * used);
        //alert(PerUsed);
        return perUsed.toFixed(iDecimalPlace);
    }
    function OpenProjectSpendEdit(id) {
        var url = '@Url.Action("ProjectList", "ProjectSpend")';
        url = url + '?fromdashboard=' + 'yes' + '&ProjectID=' + id;
        window.location.href = url;
        return false;
    }

    function FilterRecordsByStatusProject(statusValue) {

        var searchtext = statusValue.replace(/'/g, "''");
        var globalSearch = $("#global_filterDashProject").val().replace(/'/g, "''");
        var projectTabFilter;
        if (globalSearch == '')
            projectTabFilter = "[####]" + searchtext;
        else {
            projectTabFilter = globalSearch + "[####]" + searchtext;
        }
        $('#myProjectDataTable').dataTable().fnFilter(
                            projectTabFilter,
                            null,
                            null,
                            null
                        );

        //$('.DTTT_container').css('z-index', '-1');
    }

    function FilterRecordsByStatus(statusValue) {

        var searchtext = statusValue.replace(/'/g, "''");
        var globalSearch = $("#global_filterDashConsume").val().replace(/'/g, "''");
        var requisitionTabFilter;
        if (globalSearch == '')
            requisitionTabFilter = "[####]" + searchtext;
        else {
            requisitionTabFilter = globalSearch + "[####]" + searchtext;
        }
        $('#myRequisitionDataTable').dataTable().fnFilter(
                            requisitionTabFilter,
                            null,
                            null,
                            null
                        );
    }

    /* Global filter JS */

    var timeoutsc1;
    $('#global_filterDashConsume').bind('textchange', function () {
        clearTimeout(timeoutsc1);
        //var self = this;
        timeoutsc1 = setTimeout(function () {
            fnFilterConsumeGlobal();
        }, 200);
    });
    $("#global_filterDashConsume").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            //var searchtext = $("#global_filterDashConsume").val().replace(/'/g, "''");
            FilterRecordsByStatus($("#hdnstatusConsume").val());
            //HideOtherTabs();
            return false;
        }
        return true;
    });

    function fnFilterConsumeGlobal() {
        //set filter only if more than 2 characters are pressed
        if (typeof $("#global_filterDashConsume") != 'undefined' && ($("#global_filterDashConsume").val().length > 2 || $("#global_filterDashConsume").val().length == 0)) {

            //var searchtext = $("#global_filterDashConsume").val().replace(/'/g, "''");
            FilterRecordsByStatus($("#hdnstatusConsume").val());

        }
        else {
            $('#myRequisitionDataTable td').removeHighlight();
            $('#myRequisitionDataTable td').highlight($("#global_filterDashConsume").val());
        }
    }
    $("#clear_global_filterDashConsume").click(function () {
        if ($("#global_filterDashConsume").val().length > 0) {
            $("#global_filterDashConsume").val("");
            $("#global_filterDashConsume").change();
        }
        return false;
    });

    /* Global filter JS */



    /* Global filter JS FOR Project Spend */

    var timeoutsc1;
    $('#global_filterDashProject').bind('textchange', function () {
        clearTimeout(timeoutsc1);
        //var self = this;
        timeoutsc1 = setTimeout(function () {
            fnFilterProjectGlobal();
        }, 200);
    });
    $("#global_filterDashProject").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            //var searchtext = $("#global_filterDashProject").val().replace(/'/g, "''");

            FilterRecordsByStatusProject($("#hdnstatusProject").val());


            //HideOtherTabs();

            return false;
        }
        return true;
    });

    function fnFilterProjectGlobal() {
        //set filter only if more than 2 characters are pressed
        if (typeof $("#global_filterDashProject") != 'undefined' && ($("#global_filterDashProject").val().length > 2 || $("#global_filterDashProject").val().length == 0)) {

            //var searchtext = $("#global_filterDashProject").val().replace(/'/g, "''");
            FilterRecordsByStatusProject($("#hdnstatusProject").val());

        }
        else {
            $('#myProjectDataTable td').removeHighlight();
            $('#myProjectDataTable td').highlight($("#global_filterDashProject").val());
        }
    }
    $("#clear_global_filterDashProject").click(function () {
        if ($("#global_filterDashProject").val().length > 0) {
            $("#global_filterDashProject").val("");
            $("#global_filterDashProject").change();
        }
        return false;
    });

    /* Global filter JS */
</script>
