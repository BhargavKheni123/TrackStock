@model eTurns.DTO.TechnicianMasterDTO
@{    
    Layout = "~/Views/Shared/_PopupMaster.cshtml";          
}
<div class="userHead">
    @using (Ajax.BeginForm("TechnicianSave", "Master", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmTechnicianEdit" }))
    {
        @Html.ValidationSummary(true)
                
        <div class="editorForm">
            <ul>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Technician)
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Technician, new { id = "Technician", @class = "text-box" })
                        @Html.ValidationMessageFor(model => model.Technician)
                        @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                        @Html.HiddenFor(model => model.GUID)
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        &nbsp;
                    </div>
                    <div class="BtnBlockform">
                        <input type="button" value="Cancel" id="btnCancel" class="CreateBtn" />
                        <input type="submit" value="Save" id="btnSave" class="CreateBtn" />
                    </div>
                </li>
            </ul>
        </div>
        if (Model.ID != 0)
        {
        <div class="rightside">
            <ul>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.RoomName)
                    </div>
                    <div class="colDiv">
                        :</div>
                    <div class="editor-field">
                        <span>@(Model.RoomName)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Created)
                    </div>
                    <div class="colDiv">
                        :</div>
                    <div class="editor-field">
                        <span>@(Model.Created)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.CreatedByName)
                    </div>
                    <div class="colDiv">
                        :</div>
                    <div class="editor-field">
                        <span>@(Model.CreatedByName)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Updated)
                    </div>
                    <div class="colDiv">
                        :</div>
                    <div class="editor-field">
                        <span>@(Model.Updated)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.UpdatedByName)
                    </div>
                    <div class="colDiv">
                        :</div>
                    <div class="editor-field">
                        <span>@(Model.UpdatedByName)</span>
                    </div>
                </li>
            </ul>
        </div>
        }
    }
</div>
<script type="text/javascript">
    $("form").submit(function (e) {
        $.validator.unobtrusive.parse("#frmTechnician");
        if ($(this).valid()) {
        }
        e.preventDefault();
    });    
</script>
<script language="javascript" type="text/javascript">
    function onSuccess(response) {
        IsRefreshGrid = true;
        $('div#target').fadeToggle();
        $("div#target").delay(2000).fadeOut(200);
        $("#spanGlobalMessage").text(response.Message);
        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
        var idValue = $("#hiddenID").val();

        if (response.Status == "fail") {
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            $("#Technician").val("");
            $("#Technician").focus();
        }
        else if (idValue == 0) {
            $("#Technician").val("");
            $("#Technician").focus();
            if (response.Status == "duplicate")
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
        }
        else if (idValue > 0) {
            if (response.Status == "duplicate") {
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
                $("#Technician").focus();
            }
            else
                SwitchTab(0);
        }
        return false;
    }
    function onFailure(message) {
        $("#spanGlobalMessage").text(message.statusText);
        $('div#target').fadeToggle();
        $("div#target").delay(2000).fadeOut(200);
        $("#Technician").focus();
    }
    $(document).ready(function () {
        $('#btnCancel').click(function (e) {
            SwitchTab(0);
        });
    });
</script>
