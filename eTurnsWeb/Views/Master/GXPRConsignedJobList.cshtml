@model IEnumerable<eTurns.DTO.GXPRConsigmentJobMasterDTO>
@using eTurns.DTO
@using eTurns.DTO.Resources
@{
    ViewBag.Title = ResGXPRConsignedJob.PageTitle;
    var settings = new GridHeaderSettings() { DisplaySaveButton = false, ShowSelectAll = true, DisplayUDFButton = false, UDFSetupFor = "GXPRConsigmentJobs&UDFHeader=" + @ResGXPRConsignedJob.PageHeader, DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "GXPRConsignedJobMasterList" };
    var modelCommon = new eTurns.DTO.CommonDTO { PageName = "GXPRConsigmentJobMaster" };
    bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.GXPRConsignedJobMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.GXPRConsignedJobMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    string GXPRConsignedJobsPDFURL = string.Format("{0}?t={1}", "/Uploads/HelpDoc/GXPRConsignedJobs.pdf", DateTime.Now.Ticks);
    var version = eTurnsWeb.Helper.CommonUtility.GetReleaseNumber();
}
@if (SiteSettingHelper.IsBorderStateURL == "1" && SiteSettingHelper.EnableOktaLoginForSpecialUrls.Contains(eTurnsWeb.Helper.SessionHelper.CurrentDomainURL)){<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyleBS.css")" />}else{ <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyle.css")" />}
@section head{
    <script type='text/javascript' src="@Url.Content("~/Scripts/TabCommon.js?v=" + version)"></script>
    <script language="javascript" type="text/javascript">
        var oTable;
        var deleteURL = "/Master/DeleteGXPRConsignedJobRecords";
        var IsRefreshGrid = false;
          var IsDeletePopupOpen = false;
        var AllowDeletePopup = true;
        var SelectedHistoryRecordID = 0;
        var objColumns = {};
        $(document).ready(function () {
            objColumns = GetGridHeaderColumnsObject('myDataTable');
            var gaiSelected = [];
             LoadTabs();
            oTable = $('#myDataTable').dataTable({
                "bJQueryUI": true,
                "bScrollCollapse": true,
                "sScrollX": "150%",
             "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
                "oColVis": {},
                "aaSorting": [[1, "asc"]],
                "oColReorder": {},
                "sPaginationType": "full_numbers",
                "bProcessing": true,
                "bStateSave": true,
                 "oLanguage": {
                      "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                      "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                      "sInfo":  '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                     "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries',
                    "sLoadingRecords": '@eTurns.DTO.Resources.ResMessage.MsgLoading'
                 },
                 "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                    if (aData.IsDeleted == true && aData.IsArchived == true)
                        nRow.className = "GridDeleatedArchivedRow";
                    else if (aData.IsDeleted == true)
                        nRow.className = "GridDeletedRow";
                    else if (aData.IsArchived == true)
                        nRow.className = "GridArchivedRow";
                    return nRow;
                },
                "fnStateSaveParams": function (oSettings, oData) {
                    oData.oSearch.sSearch = "";
                    $.ajax({
                        "url": '@Url.Content("~/Master/SaveGridState")',
                        "type": "POST",
                        data: { Data: JSON.stringify(oData), ListName: 'GXPRConsignedJobMasterList' },
                        "async": false,
                        "dataType": "json",
                        "success": function (json) {
                            o = json;

                        }
                    });
                },
                "fnStateLoad": function (oSettings) {
                    var o;
                    $.ajax({
                        "url": '@Url.Content("~/Master/LoadGridState")',
                         "type": "POST",
                        data: {  ListName: 'GXPRConsignedJobMasterList' },
                           "async": false,
                        cache: false,
                        "dataType": "json",
                        "success": function (json) {
                        if(json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                        }
                    });
                    return o;
                },
                "bServerSide": true,
                "sAjaxSource": '@Url.Content("~/Master/GetGXPRConsignedJobList")',
                "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                    var arrCols = new Array();
                    var objCols = this.fnSettings().aoColumns;
                    for (var i = 0; i <= objCols.length - 1; i++) {
                        arrCols.push(objCols[i].mDataProp);
                    }
                    //endFor
                    for (var j = 0; j <= aoData.length - 1; j++) {
                        if (aoData[j].name == "sColumns") {
                            aoData[j].value = arrCols.join("|");
                            break;
                        }
                    }
                    if (oSettings.aaSorting.length != 0)
                        aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                    else
                        aoData.push({ "name": "SortingField", "value": "0" });

                        aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                        aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });

                    oSettings.jqXHR = $.ajax({
                        "dataType": 'json',
                        "type": "POST",
                        "url": sSource,
                        "data": aoData,
						"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                        "success": fnCallback,
                        beforeSend: function () {
                            $('#myDataTable').removeHighlight();
                            $('.dataTables_scroll').css({ "opacity": 0.2 });
                        },
                        complete: function () {
                            $('.dataTables_scroll').css({ "opacity": 1 });
                            if ($("#global_filter").val() != '') {
                                $('#myDataTable').highlight($("#global_filter").val());
                            }
                        }
                    })
                },
                "fnInitComplete": function () {
                     $('.ColVis').detach().appendTo(".setting-arrow");
                },
                "aoColumns": [
			                { "mDataProp": "ID", "sClass": "read_only" },
			                { "mDataProp": "GXPRConsigmentJob",
			                    "sClass": "read_only",
			                    "sDefaultContent": '',
			                    "bSortable": true,
			                    "bSearchable": false,
			                    "fnRender": function (obj, val) {
			                        return "<a onclick='return ShowEditTab(&quot;GXPRConsignedJobEdit/" + obj.aData.ID + "&quot;,&quot;frmGXPRConsignedJob&quot;)' href='JavaScript:void(0);'>" + obj.aData.GXPRConsigmentJob + "</a>";
			                    }
			                },
			                { "mDataProp": "RoomName", "sClass": "read_only" },
			                { "mDataProp": "Created", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                        //return GetDateInFullFormat(val);
                                    return obj.aData.CreatedDate;
			                    }
			                },

			                { "mDataProp": "Updated", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                       //return GetDateInFullFormat(val);
                                   return obj.aData.UpdatedDate;
			                    }
			                },
                            { "mDataProp": "UpdatedByName", "sClass": "read_only" },
                            { "mDataProp": "CreatedByName", "sClass": "read_only" }
                            @Html.RenderColumnsArray("GXPRConsigmentJobMaster")
		    ]
            }).makeEditable({
                sUpdateURL: '@Url.Content("~/Master/UpdateGXPRConsignedJobData")' //"/Company/UpdateData",
            });
            //HIDE PRINT CONTAINER
            $('.DTTT_container').css('z-index', '-1');

        });

         /* HISTORY related data deleated and archived START */
        function fnGetSelected(oTableLocal) {
            return oTableLocal.$('tr.row_selected');
        }
        function HistoryTabClick() {
            GetHistoryData();
        }
        function GetHistoryData() {

            HistorySelected = fnGetSelected(oTable);
            if (HistorySelected != undefined && HistorySelected.length == 1) {
//                if(SelectedHistoryRecordID != HistorySelected[0].id)
//                {
                    SelectedHistoryRecordID = HistorySelected[0].id;
                    $('#DivLoading').show();
                     $("#CTab").hide();
                    $("#CtabCL").show();
                    $('#CtabCL').load('GXPRConsignedJobHistory', function () { $('#DivLoading').hide(); });
                //}
            }
            else {
                $('#CtabCL').html('');
                $("#spanGlobalMessage").html('@ResCommon.msgSelectForViewHistory');
                //$('div#target').fadeToggle();
                //$("div#target").delay(2000).fadeOut(200);
                showNotificationDialog();
                return false;
            }
        }
        /* HISTORY related data deleated and archived END */

    </script>
}
<script type="text/javascript">
    var TabsArry = [new TabClass('tab1', '@eTurns.DTO.Resources.ResCommon.New', 'callbacknew();', true, true),
         new TabClass('tab5', '@eTurns.DTO.Resources.ResCommon.List', 'callbackhistory();', true, true),
         new TabClass('tab6', '@eTurns.DTO.Resources.ResCommon.ChangeLog', 'callbackCL();', false, true)
         ];
    function callbacknew() { ShowNewTab('GXPRConsignedJobCreate', 'frmGXPRConsignedJob'); }
    function callbackhistory() { } //HistoryTabClick(); }
    function callbackCL() { HistoryTabClick(); }
</script>
<div class="userListingWrapper">
    <h2>@ResGXPRConsignedJob.PageHeader</h2>    
      <div class="Infoclass"> <a href="@GXPRConsignedJobsPDFURL" target="_blank">
            <img src="~/Content/images/Info.png" alt="Help" /></a></div>  
    <div class="userListBlock">
    @Html.Hidden("hdnInsertRights", isInsert)
        @Html.Hidden("hdnUpdateRights", isUpdate)
        @Html.Hidden("hdnPageName", modelCommon.PageName)
        <ul class='tabs'>
        </ul>
        <div id="CtabNew" class="tabContener" >
        </div>
        <div id="Ctab" class="tabContener">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@ResCommon.Search </span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="global_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_global_filter" /></a>
                    </div>
                    @*<input type="button" value="Search" class="searchBtn" />*@
                </div>
            </div>
            @Html.GridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.GXPRConsignedJobMaster)
            @*NARROW SEARCH STARTS HERE*@
            @Html.Partial("NarrowSearchLayout", modelCommon) @*NARROW SEARCH STARTS HERE*@
            <div class="userContent">
                <table id="myDataTable" class="display">
                    <thead>
                        <tr>
                            <th>
                                @ResCommon.ID
                            </th>
                            <th>
                                @ResGXPRConsignedJob.GXPRConsignedJob
                            </th>
                            <th>
                                @ResCommon.RoomName
                            </th>
                            <th>
                                @ResCommon.CreatedOn
                            </th>
                            <th>
                                @ResCommon.UpdatedOn
                            </th>
                            <th>
                                @ResCommon.UpdatedBy
                            </th>
                            <th>
                                @ResCommon.CreatedBy
                            </th>
                            @Html.RenderColumnsHeader("GXPRConsigmentJobMaster", typeof(eTurns.DTO.ResGXPRConsignedJob))
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
                <button id="btnAddNewCompany" value="Ok" style="display: none">
                    @ResCommon.AddNew</button>
                <button id="btnDeleteCompany" value="cancel" style="display: none">
                    Delete Selected</button>
                <div id="processing_message" style="display: none" title="Processing">
                    @ResMessage.RequestProcessMessage
                </div>
            </div>
        </div>
        <div id='CtabCL' class="tabContener">
        </div>
    </div>
</div>
<script>
    @*var objColumns = {
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.ID)': 0,
        '@MvcHtmlString.Create(eTurns.DTO.ResGXPRConsignedJob.GXPRConsignedJob)': 1,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.RoomName)': 2,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.CreatedOn)': 3,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.UpdatedOn)': 4,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.UpdatedBy)': 5,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.CreatedBy)': 6,
        '@MvcHtmlString.Create(eTurns.DTO.ResGXPRConsignedJob.UDF1)': 7,
        '@MvcHtmlString.Create(eTurns.DTO.ResGXPRConsignedJob.UDF2)': 8,
        '@MvcHtmlString.Create(eTurns.DTO.ResGXPRConsignedJob.UDF3)': 9,
        '@MvcHtmlString.Create(eTurns.DTO.ResGXPRConsignedJob.UDF4)': 10,
        '@MvcHtmlString.Create(eTurns.DTO.ResGXPRConsignedJob.UDF5)': 11
    };*@
</script>
<script language="javascript" type="text/javascript" src="@Url.Content("~/Scripts/Authorization.js?v=" + version)"></script>