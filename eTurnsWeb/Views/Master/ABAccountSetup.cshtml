@model eTurns.DTO.ABRoomStoreSettingDTO
@{
    ViewBag.Title = ResABRoomStoreSetting.PageTitle;
    Int64 Id = 0;
    bool IsSuccessDisplay = false;
    if (Model != null && Model.ID > 0)
    {
        Id = Model.ID;
        if (Model.IsSuccessDisplay != null)
        {
            IsSuccessDisplay = (bool)Model.IsSuccessDisplay;
        }

    }
    //if (ViewBag.IsMsgDisplay)
    //{
    //    IsSuccessDisplay = true;
    //}
    List<ABMarketPlaceDTO> lstplaces = ViewBag.ABMarketPlace;
    List<SelectListItem> lstAbMps = new List<SelectListItem>();

    SelectListItem objSelectListItem = new SelectListItem();
    objSelectListItem.Text = string.Empty;
    objSelectListItem.Value = String.Empty;
    lstAbMps.Add(objSelectListItem);

    foreach (var item in lstplaces)
    {
        objSelectListItem = new SelectListItem();
        objSelectListItem.Text = item.ABMPName;
        objSelectListItem.Value = item.CountryCode + "||" + item.MarketplaceID;
        lstAbMps.Add(objSelectListItem);
    }
    string AuthCode = string.Empty;
    if (Model != null && !string.IsNullOrWhiteSpace(Model.AuthCode))
    {
        AuthCode = Model.AuthCode;
    }
    List<SelectListItem> lstpagesize = new List<SelectListItem>();
    lstpagesize.Add(new SelectListItem() { Text = "", Value = "" });
    for (int i = 1; i < 25; i++)
    {
        if (i % 4 == 0)
        {
            lstpagesize.Add(new SelectListItem() { Text = i.ToString(), Value = i.ToString() });
        }
    }
    string CurrentPageURL = eTurnsWeb.Helper.SessionHelper.CurrentDomainURL + Url.Action("ABAccountSetup", "Master");
    string ConsentCompleteURL = string.Empty;
    if (Request.QueryString["amazon_callback_uri"] != null && Request.QueryString["amazon_state"] != null && Request.QueryString["status"] != null)
    {
        ConsentCompleteURL = Convert.ToString(Request.QueryString["amazon_callback_uri"]) + "?" + "amazon_state=" + Convert.ToString(Request.QueryString["amazon_state"]) + "&status=" + Convert.ToString(Request.QueryString["status"]);
    }
}
<div class="userListingWrapper">
    <h2>
        @ResABRoomStoreSetting.PageHeader
    </h2>
    <div class="userListBlock">
        <div id="Ctab" class="tabContener" style="display: block;">
            @using (Html.BeginForm("ABAccountSetup", "Master", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                <div class="userHead">
                    @if (Model != null && Model.ID != 0)
                    {
                        <div class="infoBlock">
                            <ul>
                                <li>
                                    <label for="RoomName">
                                        @Html.LabelFor(model => model.RoomName)
                                    </label>
                                    : <span>@(Model.RoomName)</span>
                                </li>
                                <li>
                                    <label for="RoomName">
                                        @Html.LabelFor(model => model.Created)
                                    </label>
                                    : <span>@(Model.CreatedDate)</span>
                                </li>
                                <li>
                                    <label for="RoomName">
                                        @Html.LabelFor(model => model.CreatedByName)
                                    </label>
                                    : <span>@(Model.CreatedByName)</span>
                                </li>
                                <li>
                                    <label for="RoomName">
                                        @Html.LabelFor(model => model.Updated)
                                    </label>
                                    : <span>@(Model.UpdatedDate)</span>
                                </li>
                                <li style="border: none">
                                    <label for="RoomName">
                                        @Html.LabelFor(model => model.UpdatedByName)
                                    </label>
                                    : <span>@(Model.UpdatedByName)</span>
                                </li>
                            </ul>
                        </div>
                    }
                    else
                    {
                        <div class="infoBlock">
                        </div>
                    }

                    <div class="editorForm">
                        <h4>
                            @ResABRoomStoreSetting.PurchasingCred
                        </h4>
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ABSystemID)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ABSystemID, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ABSystemPassword)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ABSystemPassword, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AmazonOrderEndpoint)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.AmazonOrderEndpoint, new { @class = "text-box" })
                                </div>
                            </li>
                        </ul>
                        <h4>
                            @ResABRoomStoreSetting.AmazonAbConnectHeader
                        </h4>
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.MarketplaceID)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.ABCountryCodeMarketplaceID, new SelectList(lstAbMps, "Value", "Text"), new { @class = "selectBox" })
                                </div>
                            </li>
                            <li>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.EmailAddress)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.EmailAddress, new { @class = "text-box" })
                                    </div>
                                </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AuthCode)
                                </div>
                                <div class="editor-field">
                                    @Html.DisplayFor(model => model.AuthCode)
                                    @Html.HiddenFor(model => model.AuthCode)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    <label for="btnConnect">@ResABRoomStoreSetting.CTAButtonLabel</label>
                                </div>
                                <div class="BtnBlockform">
                                    @if (string.IsNullOrWhiteSpace(AuthCode))
                                    {
                                        <input type="submit" value="@eTurns.DTO.ResABRoomStoreSetting.ConnectCTAButton" id="btnConnect" class="CreateBtn" />
                                    }
                                    else
                                    {
                                        <input type="submit" value="@eTurns.DTO.ResABRoomStoreSetting.DisconnectABAccount" id="btnDisConnect" class="CreateBtn" />
                                    }
                                </div>
                            </li>
                        </ul>
                        @if (eTurnsWeb.Helper.SessionHelper.RoleID == -1)
                        {
                            <h4>
                                @ResABRoomStoreSetting.OtherSettings
                            </h4>
                            <ul>
                                <li>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.ABLocale)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.ABLocale, new { @class = "text-box", @maxlength = "5" })
                                    </div>
                                </li>
                                
                                <li>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.ProductSearchFacets)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.ProductSearchFacets, new { @class = "text-box" })
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.ProductSearchPageSize)
                                    </div>
                                    <div class="editor-field">
                                        @Html.DropDownListFor(model => model.ProductSearchPageSize, new SelectList(lstpagesize, "Value", "Text"), new { @class = "selectBox" })
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.AbSupplierName)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.AbSupplierName, new { @class = "text-box" })
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.ProductVariantLimit)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.ProductVariantLimit, new { @class = "text-box" })
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label">
                                        @Html.LabelFor(model => model.ItemUDFforSeller)
                                    </div>
                                    <div class="editor-field">
                                        @Html.TextBoxFor(model => model.ItemUDFforSeller, new { @class = "text-box" })
                                    </div>
                                </li>
                                <li>
                                    <div class="editor-label">                                        
                                    </div>
                                    <div class="requiredField" style="font-size:13px !important">
                                        <em>*</em>&nbsp;@ResABRoomStoreSetting.AamzonBussinessEmailWarnning<br />
                                    </div>
                                </li>
                            </ul>
                        }
                        else
                        {
                            @Html.HiddenFor(model => model.ABLocale)                            
                            @Html.HiddenFor(model => model.ProductSearchFacets)
                            @Html.HiddenFor(model => model.ProductSearchPageSize)
                            @Html.HiddenFor(model => model.AbSupplierName)
                            @Html.HiddenFor(model => model.ProductVariantLimit)
                            @Html.HiddenFor(model => model.ItemUDFforSeller)
                        }
                        <ul>
                            <li>
                                <div class="editor-label">
                                    &nbsp;
                                </div>
                                <div class="BtnBlockform">
                                    @Html.HiddenFor(model => model.ID)
                                    @Html.HiddenFor(model => model.ActionButton)
                                    @Html.HiddenFor(model => model.MarketplaceID)
                                    @Html.HiddenFor(model => model.ABCountryCode)
                                    <input type="hidden" value="@ConsentCompleteURL" id="hdnConsentCompleteURL" />
                                    <input type="hidden" value="@CurrentPageURL" id="hdnCurrentPageURL" />
                                    <input type="submit" value="@eTurns.DTO.Resources.ResCommon.Save" id="btnSave" class="CreateBtn" />
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div class="dialog" id="dvABaccountSetup" style="display: none; width: 500px;">
    <div class="inner" style="width: 500px;">
        <p class="text" style="text-align: left; padding-left: 10px;">
            <b>@ResABRoomStoreSetting.BlockPopupWarnning</b><br />
            <br />
            <b>@ResABRoomStoreSetting.AamzonBussinessEmailWarnning</b><br />
        </p>
        <p id="NsOkbtn" class="text" style="text-align: center; padding-left: 10px;">
            <a href="#" class="no" id="aballowSetup" >
                <img src="~/Content/images/yes.png" alt="@ResCommon.Ok" />@ResCommon.Ok
            </a>
        </p>
    </div>
    @*<span>@ResABRoomStoreSetting.BlockPopupWarnning</span>
    <span>@ResABRoomStoreSetting.AamzonBussinessEmailWarnning</span>
    <input type="button" id="aballowSetup" value="@ResCommon.Ok" />*@
</div>
<script type="text/javascript">
    $(document).ready(function () {       

        $("#aballowSetup").click(function () {
            $.modal.impl.close();
            if ($("input[id='hdnConsentCompleteURL']").val() != "") {
                var PopupABconcentwin = window.open($("input[id='hdnConsentCompleteURL']").val(), "ABconcent", "height=200,width=200");
                if (PopupABconcentwin != null) {
                    setTimeout(function () {
                        PopupABconcentwin.close();
                    }, 10000);
                }
                else {
                    window.location.href = $("input[id='hdnConsentCompleteURL']").val();
                }
            }
        });
        if ($("input[id='hdnConsentCompleteURL']").val() != "") {
            $("#dvABaccountSetup").modal();
            $(".modalCloseImg").hide();
        }        
        var ABconcentwin;
        if ($("input[id='hdnConsentCompleteURL']").val() != "") {
            ABconcentwin = window.open($("input[id='hdnConsentCompleteURL']").val(), "ABconcent", "height=200,width=200");
            if (ABconcentwin != null) {
                setTimeout(function () {
                    ABconcentwin.close();
                    //window.location.href = $("input[id='hdnCurrentPageURL']").val();
                }, 10000);
            }
            else {
                $("#dvABaccountSetup").dialog('open');
            }
            /*window.open($("input[id='hdnConsentCompleteURL']").val(), "_blank");*/
            /*window.location.href = $("input[id='hdnCurrentPageURL']").val();*/


        }
        $("#btnConnect").click(function () {
            $("input[type='hidden'][id='ActionButton']").val("connect");
            if ($("select#ABCountryCodeMarketplaceID").val() == "") {
                event.preventDefault();
            }
        });
        $("#btnDisConnect").click(function () {
            $("input[type='hidden'][id='ActionButton']").val("disconnect");
            if ($("select#ABCountryCodeMarketplaceID").val() == "") {
                event.preventDefault();
            }
        });
        $("#btnSave").click(function () {
            $("input[type='hidden'][id='ActionButton']").val("save");
            if ($("select#ABCountryCodeMarketplaceID").val() == "") {
                event.preventDefault();
            }
        });
        $("select#ABCountryCodeMarketplaceID").change(function () {
            if ($.trim($(this).val()) != "") {
                var arr = $(this).val().split("||");
                $("input#MarketplaceID").val(arr[1]);
                $("input#ABCountryCode").val(arr[0]);
            }
            else {
                $("input#MarketplaceID").val("");
                $("input#ABCountryCode").val("");
            }
        });
    });

</script>
