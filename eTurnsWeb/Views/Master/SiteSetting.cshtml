@model eTurns.DTO.SiteSettingInfo
@{
    var eVMIRequestTypes = new List<SelectListItem>() {
                                       new SelectListItem(){ Text = eVMISiteSettings.ImmediateVal , Value = eVMISiteSettings.ImmediateVal },
                                        new SelectListItem(){ Text = eVMISiteSettings.QueuedVal , Value = eVMISiteSettings.QueuedVal }
                                   };

    var PollCommandTypes = new List<SelectListItem>() {
                                       new SelectListItem(){ Text = eVMISiteSettings.PollCommand_W , Value = eVMISiteSettings.PollCommand_W },
                                        new SelectListItem(){ Text = eVMISiteSettings.PollCommand_H , Value = eVMISiteSettings.PollCommand_H }
                                   };

    var ABOrderSyncModes = new List<SelectListItem>() {
                                       new SelectListItem(){ Text = "Online" , Value = ((byte)ABOrderSyncMode.Online).ToString() },
                                        new SelectListItem(){ Text = "Offline" , Value = ((byte)ABOrderSyncMode.Offline).ToString() }
                                   };

}
<div class="userListingWrapper">
    <h2>
        Site Settings
    </h2>
    <div class="userListBlock">
        <div id="Ctab" class="tabContener" style="display: block;">
            @using (Ajax.BeginForm("SaveSiteSetting", "Master", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmSiteSetting" }))
            {
                @Html.AntiForgeryToken()
                <div class="userHead">
                    @Html.ValidationSummary(true)
                    <div class="editorForm">
                        <h4 style="width:90%">Site Settings</h4>
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.LoginWithSelection)<em></em>
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.LoginWithSelection, new { @class = "text-box", @onkeypress = "return onlyNumeric(event)", maxlength = 5 })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ChartLabelCharSize)<em></em>
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ChartLabelCharSize, new { @class = "text-box", @onkeypress = "return onlyNumeric(event)", maxlength = 5 })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.DelayRedCount)<em></em>
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.DelayRedCount, new { @class = "text-box", @onkeypress = "return onlyNumeric(event)", maxlength = 5 })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.EnableOptimizations)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.EnableOptimizations, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ItemDetailsNew)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ItemDetailsNew, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AcceptLicence)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.AcceptLicence, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ILQImportNew)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ILQImportNew, new { @class = "text-box", @onkeypress = "return onlyNumeric(event)", maxlength = 5 })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.RoleCodeImprove)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.RoleCodeImprove, new { @class = "text-box", @onkeypress = "return onlyNumeric(event)", maxlength = 5 })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ItemDetailsChange)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ItemDetailsChange, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.OldResultView)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.OldResultView, new { @class = "text-box", @onkeypress = "return onlyNumeric(event)", maxlength = 5 })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.OldUserMasterUDF)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.OldUserMasterUDF, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ReleaseNumber)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ReleaseNumber, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.OrderNumberDateFormat)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.OrderNumberDateFormat, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.QuoteNumberDateFormat)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.QuoteNumberDateFormat, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.NoImage)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.NoImage, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.InventoryPhoto)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.InventoryPhoto, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AssetPhoto)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.AssetPhoto, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ToolPhoto)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ToolPhoto, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.InventoryLink2)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.InventoryLink2, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.SupplierPhoto)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.SupplierPhoto, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.WorkOrderFilePaths)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.WorkOrderFilePaths, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AllowedCharacter)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.AllowedCharacter, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.XMLFilePath)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.XMLFilePath, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ProjectSpendLimitPercentage)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ProjectSpendLimitPercentage, new { @class = "text-box", @onkeypress = "return onlyNumeric(event)", maxlength = 5 })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.EnableNewCountPopup)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.EnableNewCountPopup, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ApplyChangePassword)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ApplyChangePassword, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.NewBaseResourceFileName)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.NewBaseResourceFileName, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.BOMInventoryPhoto)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.BOMInventoryPhoto, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.BOMInventoryLink2)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.BOMInventoryLink2, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ItemBinBarcodeNewPage)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ItemBinBarcodeNewPage, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.UDFMaxLength)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.UDFMaxLength, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ExceptActionsForNoRoom)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ExceptActionsForNoRoom, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AccessQryUserNames)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.AccessQryUserNames, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AccessQryRoleIds)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.AccessQryRoleIds, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.RunWithReportConnection)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.RunWithReportConnection, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ApplyNewAuthorization)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ApplyNewAuthorization, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ValidateAntiForgeryTokenOnAllPosts)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ValidateAntiForgeryTokenOnAllPosts, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.MethodsToIgnoreXSRF)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.MethodsToIgnoreXSRF, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.SaveNewAuthorizationError)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.SaveNewAuthorizationError, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.SaveAntiForgeryError)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.SaveAntiForgeryError, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.IsShowGlobalReprotBuilder)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.IsShowGlobalReprotBuilder, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.CustomShortDatePatterns)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.CustomShortDatePatterns, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.MethodsToCheckIsInsert)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.MethodsToCheckIsInsert, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.IsNewNotification)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.IsNewNotification, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ControllerName)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ControllerName, new { @class = "text-box" })
                                </div>
                            </li>

                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ModuleName)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ModuleName, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ModuleMasterName)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ModuleMasterName, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AllowEnterpriseRoomForNN)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.AllowEnterpriseRoomForNN, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.LoadEnterpriseGridOrdering)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.LoadEnterpriseGridOrdering, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ValidatePhoneNumber)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ValidatePhoneNumber, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ProductEnvironment)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ProductEnvironment, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.OnlyIfRoomAvailable)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.OnlyIfRoomAvailable, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.decimalPointFromConfig)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.decimalPointFromConfig, new { @class = "text-box", @onkeypress = "return onlyNumeric(event)", maxlength = 5 })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ForWardDatesEnterpriseID)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ForWardDatesEnterpriseID, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.NewRangeDataFill)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.NewRangeDataFill, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.LoadNarrowDataCount)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.LoadNarrowDataCount, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.DisplayInventoryValueforReplenish)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.DisplayInventoryValueforReplenish, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.RoomReportGrid)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.RoomReportGrid, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.RoomReportGridCompanyID)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.RoomReportGridCompanyID, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.RoomReportGridRoomID)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.RoomReportGridRoomID, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AllowedPullQtyEdit)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.AllowedPullQtyEdit, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.WorkOrderAllowedFileExtension)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.WorkOrderAllowedFileExtension, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ResourceRead)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ResourceRead, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ResourceSave)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ResourceSave, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.EnterpriseIdsToShowReleaseNo)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.EnterpriseIdsToShowReleaseNo, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.eVMIRooms, "SensorBinsRooms")
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.eVMIRooms, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.QBRooms)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.QBRooms, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.QBClientID)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.QBClientID, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.QBClientSecret)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.QBClientSecret, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.QBEnvironment)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.QBEnvironment, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.QBRedirectUrl)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.QBRedirectUrl, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.QBDiscoveryUrl)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.QBDiscoveryUrl, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.QBVersion)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.QBVersion, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.NonRedirectablUrls)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.NonRedirectablUrls, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.HelpDocumentFolderPath)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.HelpDocumentFolderPath, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.UsersUISettingType)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.UsersUISettingType, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.DomainProtocol)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.DomainProtocol, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ABOrderSyncMode)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(m => m.ABOrderSyncMode, ABOrderSyncModes, new { @class = "selectBox" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.EnforceResourcePagesRestriction)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.EnforceResourcePagesRestriction, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AllowedUserIdsResources)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.AllowedUserIdsResources, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AllowedEntIdsResources)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.AllowedEntIdsResources, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.StrictRediretion)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.StrictRediretion, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.OrderFilePaths)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.OrderFilePaths, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.OrderAllowedFileExtension)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.OrderAllowedFileExtension, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.RequisitionFilePaths)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.RequisitionFilePaths, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.RequisitionAllowedFileExtension)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.RequisitionAllowedFileExtension, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.LogResourceCalls)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.LogResourceCalls, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ReceiveFilePaths)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ReceiveFilePaths, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ReceiveAllowedFileExtension)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.ReceiveAllowedFileExtension, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.CommonAllowedFileExtension)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.CommonAllowedFileExtension, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Link2AllowedFileExtension)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Link2AllowedFileExtension, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.MailOrderFieldRoomRestriction)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.MailOrderFieldRoomRestriction, new { @class = "text-box" })
                                </div>
                            </li>

                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.IsOktaEnable)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.IsOktaEnable, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.EmptyHeaderCheck)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.EmptyHeaderCheck, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.IsBorderStateURL)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.IsBorderStateURL, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.BorderStateDesignCssPostFix)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.BorderStateDesignCssPostFix, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.OktaServiceUrl)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.OktaServiceUrl, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.OktaReturnUrl)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.OktaReturnUrl, new { @class = "text-box" })
                                </div>
                            </li>

                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.EnableOktaLoginForSpecialUrls)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.EnableOktaLoginForSpecialUrls, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.EnableBorderStateID)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.EnableBorderStateID, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.RestrictNewUserEMailEnterpriseIds)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.RestrictNewUserEMailEnterpriseIds, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.IgnoreLatestCode)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.IgnoreLatestCode, new { @class = "text-box" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    &nbsp;
                                </div>
                                <div class="">
                                    <input type="submit"
                                           value="@eTurns.DTO.Resources.ResCommon.Save"
                                           id="btnSave" class="CreateBtn"
                                           style="float:left" />
                                </div>
                            </li>
                        </ul>
                    </div>
                    
                </div>
            }
            @*@Html.Partial("_RequiredMessages")*@
        </div>
    </div>
</div>
<script type="text/javascript">
    function onSuccess(response) {

        if (response.Status == "ok") {
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            $("#spanGlobalMessage").html(response.Message);
            $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');

            if ($("#ID").val() == 0) {
                location.href = location.href;
            }
        }
        else {
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            $("#spanGlobalMessage").html(response.Message);
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
        }

    }
    function onFailure(message) {

        $('div#target').fadeToggle();
        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
        $("#spanGlobalMessage").html(response.Message);
        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('errorIcon');
    }
    function GetCultureInfo(pid) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetLocaleInfo", "Master")',
            contentType: 'application/json',
            dataType: 'json',
            data: "{'CultureCode': '" + pid + "'}",
            success: function (RetData) {
                if (RetData != null) {

                    $("#ShortDatePattern").html("");
                    $("#ShortTimePattern").html("");

                    $(RetData.lstShortDatePatterns).each(function (indx, obj) {
                        //If Netherland or Rusia And formate is 'dd/MM/yy' then dont bind
                        if (!(($('#CultureCode').val() == 'nl-NL' || $('#CultureCode').val() == 'ru-RU') && obj == 'dd/MM/yy')) {
                            $("#ShortDatePattern").append("<option value='" + obj + "'>" + obj + "</option>");
                        }
                    });

                    $(RetData.lstLongTimePatterns).each(function (indx, obj) {
                        $("#ShortTimePattern").append("<option value='" + obj + "'>" + obj + "</option>");
                    });

                    $("#CurrencyDecimalDigits").val(RetData.CurrencyDecimalDigits);
                    $("#NumberDecimalDigits").val(RetData.NumberDecimalDigits);
                    $("#ShortDatePattern").val(RetData.ShortDatePattern);
                    $("#ShortTimePattern").val(RetData.ShortTimePattern);

                    $(RetData.lstCurrencySymbol).each(function (indx, obj) {
                        $("#CurrencySymbol").append("<option value='" + obj.CurrencySymbol + "'>" + obj.CurrencySymbol + "</option>");
                    });

                }
            },
            error: function (err) {
                alert(err);
            }
        });
    }
</script>
