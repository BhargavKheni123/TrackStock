@model eTurns.DTO.UserMasterDTO
@using eTurns.DTO
@using eTurns.DTO.Resources
@{
    List<PermissionTemplateDTO> lstAllTemplates = new eTurns.DAL.PermissionTemplateDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetAllTemplates();
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    List<UserTypeInfo> lstUserTypes = new List<UserTypeInfo>();
    UserTypeInfo objUserTypeInfo;
    if (eTurnsWeb.Helper.SessionHelper.RoleID == -1)
    {
        objUserTypeInfo = new UserTypeInfo();
        objUserTypeInfo.UserType = 1;
        objUserTypeInfo.UserTypeName = "Super admin";
        lstUserTypes.Add(objUserTypeInfo);

    }
    if (eTurnsWeb.Helper.SessionHelper.UserType == 1 || (eTurnsWeb.Helper.SessionHelper.UserType == 2))
    {
        objUserTypeInfo = new UserTypeInfo();
        objUserTypeInfo = new UserTypeInfo();
        objUserTypeInfo.UserType = 2;
        objUserTypeInfo.UserTypeName = "Enterprise admin";
        lstUserTypes.Add(objUserTypeInfo);
    }
    objUserTypeInfo = new UserTypeInfo();
    objUserTypeInfo.UserType = 3;
    objUserTypeInfo.UserTypeName = "Company admin";
    lstUserTypes.Add(objUserTypeInfo);
}

@{
    bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.UserMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.UserMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool DisableControl = false;
    if ((Model != null && Model.ID == eTurnsWeb.Helper.SessionHelper.UserID) || (Model != null && Model.RoleID < 0))
    {
        DisableControl = true;
    }
}
@using (Ajax.BeginForm("UserSave", "Master", new AjaxOptions { HttpMethod = "Post", LoadingElementId = "DivLoading", OnBegin = "Login_OnBegin", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmUser" }))
{
    <div class="userHead">
        @Html.ValidationSummary(true)

        @if (Model.ID != 0)
        {
            <div class="infoBlock">
                <ul>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.RoomName)
                        </label>
                        : <span>@(Model.RoomName)</span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.Created)
                        </label>
                        : <span>@(Model.CreatedDate)</span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.CreatedByName)
                        </label>
                        : <span>@(Model.CreatedByName)</span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.Updated)
                        </label>
                        : <span>@(Model.UpdatedDate)</span>
                    </li>
                    <li style="border: none">
                        <label for="RoomName">
                            @Html.LabelFor(model => model.UpdatedByName)
                        </label>
                        : <span>@(Model.UpdatedByName)</span>
                    </li>
                </ul>
            </div>
        }

        <div class="mainForm">
            @Html.Hidden("hdnDisableControl", DisableControl)
            <div class="editorForm">
                <h4>
                    @ResUserMaster.UserDetails
                </h4>
                <ul>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.UserType)
                        </div>
                        <div class="editor-field">
                            @if (Model.ID < 1)
                            {
                                @Html.DropDownListFor(t => t.UserType, new SelectList(lstUserTypes, "UserType", "UserTypeName"), new { @class = "selectBox", @id = "drpUserType" })
                            }
                            else
                            {
                                @Html.DropDownListFor(t => t.UserType, new SelectList(lstUserTypes, "UserType", "UserTypeName"), new { @class = "selectBox", @id = "drpUserType", @disabled = "disabled" })
                                @Html.HiddenFor(t => t.UserType)
                            }
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.UserType)</span>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.UserName)<em> *</em>
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.UserName, new { id = "txtUserName", @class = "text-box", maxlength = 64 })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.UserName)</span>
                            @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                            @Html.HiddenFor(model => model.GUID)
                            @Html.HiddenFor(model => model.Created)
                            @Html.HiddenFor(model => model.Updated)
                            @Html.HiddenFor(model => model.CreatedBy)
                            @Html.HiddenFor(model => model.LastUpdatedBy)
                            @Html.HiddenFor(model => model.CompanyID)
                            @Html.HiddenFor(model => model.Room)
                            @Html.HiddenFor(model => model.RoomName)
                            @Html.HiddenFor(model => model.CreatedByName)
                            @Html.HiddenFor(model => model.UpdatedByName)
                            @Html.HiddenFor(model => model.IsDeleted)
                            @Html.HiddenFor(model => model.IsArchived)
                            @Html.HiddenFor(model => model.RoleID, new { id = "hdnRoleID" })
                            @Html.HiddenFor(model => model.SelectedModuleIDs, new { id = "hdnSelectedModuleList" })
                            @Html.HiddenFor(model => model.SelectedNonModuleIDs, new { id = "hdnSelectedNonModuleList" })
                            @Html.HiddenFor(model => model.SelectedDefaultSettings, new { id = "hdnSelectedDefaultSettings" })
                            @Html.HiddenFor(model => model.SelectedRoomAccessValue, new { id = "hdnSelectedRoomAccessValue" })
                            @Html.HiddenFor(model => model.SelectedRoomReplanishmentValue, new { id = "hdnSelectedRoomReplanishmentValue" })
                            @Html.HiddenFor(model => model.SelectedEnterpriseAccessValue, new { id = "hdnSelectedEnterpriseAccessValue" })
                            @Html.HiddenFor(model => model.SelectedCompanyAccessValue, new { id = "hdnSelectedCompanyAccessValue" })
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Password)
                            @if (Model.ID == 0)
                            { <em> *</em>}
                        </div>
                        <div class="editor-field">
                            @Html.PasswordFor(model => model.Password, new { id = "txtPassword", @class = "text-box", maxlength = 255, @autocomplete = "off" })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Password)</span>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.ConfirmPassword)@if (Model.ID == 0)
                            { <em> *</em>}
                        </div>
                        <div class="editor-field">
                            @Html.PasswordFor(model => model.ConfirmPassword, new { id = "txtConfirmPassword", @class = "text-box", maxlength = 255, @autocomplete = "off" })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.ConfirmPassword)</span>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Phone)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Phone, new { id = "txtPhone", @class = "text-box", maxlength = 20 })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Phone)</span>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Email)<em> *</em>
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.Email, new { id = "txtEmail", @class = "text-box", maxlength = 255 })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Email)</span>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @ResUserMaster.Role
                        </div>
                        <div class="editor-field">
                            <select id="ddlRole" name="example-basic" size="1" class="text-box" style="width: 250px;"></select>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            &nbsp;
                        </div>
                        <div class="editor-field">
                            @ResUserMaster.lblPasswordRules
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            &nbsp;
                        </div>
                        <div class="BtnBlockform">
                            <input type="button" value="@eTurns.DTO.Resources.ResCommon.Cancel" id="btnCancel" class="CreateBtn" />
                            @if (isInsert == true && Model.ID == 0)
                            {
                                <input type="submit" value="@eTurns.DTO.Resources.ResCommon.Save" id="btnSave" class="CreateBtn" />
                            }
                            else if (isUpdate == true && Model.ID != eTurnsWeb.Helper.SessionHelper.UserID && Model.RoleID > 0)
                            {

                                <input type="submit" value="@eTurns.DTO.Resources.ResCommon.Save" id="btnSave" class="CreateBtn" />
                            }
                        </div>
                    </li>
                </ul>
            </div>
            <div class="editorForm padRightNone">
                <h4>
                    @ResRoleMaster.RoomDetails
                </h4>
                <ul>
                    @* <li>
                            <div class="editor-label">
                                @ResRoleMaster.lblRoomReplenishment
                            </div>
                            <div class="editor-field rightEdit">
                                <select id="RoomReplanishment" multiple="multiple" name="example-basic" size="5">
                                </select>
                            </div>
                        </li>*@
                    <li id="liEnterprises">
                        <div class="editor-label">
                            @ResRoleMaster.lblEnterprises
                        </div>
                        <div class="editor-field rightEdit">
                            <select id="EnterpriseData" multiple="multiple" name="example-basic" size="5" class="text-box"></select>
                        </div>
                    </li>
                    <li id="liCompanies">
                        <div class="editor-label">
                            @ResRoleMaster.lblCompanies
                        </div>
                        <div class="editor-field rightEdit">
                            <select id="CompanyData" multiple="multiple" name="example-basic" size="5" class="text-box"></select>
                        </div>
                    </li>
                    <li id="liRooms">
                        <div class="editor-label">
                            @ResRoleMaster.lblRooms
                        </div>
                        <div class="editor-field rightEdit">
                            <select id="RoomData" multiple="multiple" name="example-basic" size="5" class="text-box"></select>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @ResRoleMaster.lblSelectedRooms
                        </div>
                        <div class="editor-field rightEdit">
                            <select id="ddlSelectedRooms" name="example-basic" size="1" class="text-box" style="width: 200px;"></select>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @ResRoleMaster.lblCopyPermissionTo
                        </div>
                        <div class="editor-field rightEdit">
                            <select id="ddlDefaultPermissionRooms" multiple="multiple" name="example-basic" size="5"
                                    class="text-box"></select>
                        </div>
                        <input type="button" value="Copy" id="btnCopy" class="CreateBtn copy" onclick="javascript: CopyPermission();" />
                    </li>
                    <li>
                        <div class="editor-label">
                            @ResPermissionTemplate.TemplateName
                        </div>
                        <div class="editor-field rightEdit">
                            <select id="ddlPermissionTemplateName" class="selectBox" style="width: 200px;">
                                <option value="">@eTurns.DTO.Resources.ResCommon.DefaultSelect</option>
                                @foreach (var item in lstAllTemplates)
                                {
                                    <option value="@item.ID">@item.TemplateName</option>
                                }
                            </select>
                        </div>
                    </li>

                </ul>
            </div>
        </div>

        <div id="CreateRolePermissionDIV">
            @if (string.IsNullOrWhiteSpace(Model.SelectedRoomAccessValue))
            {
                @Html.Partial("_CreateUserPermission", Model.UserwiseRoomsAccessDetail)
            }
        </div>
    </div>
}

@Html.Partial("_RequiredMessages")
@section scripts{
    @*@if (false)
    {
        <script src="../../Scripts/jquery-1.9.1-vsdoc.js" type="text/javascript"></script>
    }*@
    <script type="text/javascript">
        $(document).ready(function () {
            $('form').areYouSure();
        });
        var url_SaveToUserPermissionsToSession = '@Url.Action("SaveToUserPermissionsToSession", "Master")';
        var url_AddRemoveUserRoomsToSession = '@Url.Action("AddRemoveUserRoomsToSession", "Master")';
        var url_CopyUserPermissionsToRooms = '@Url.Action("CopyUserPermissionsToRooms", "Master")';
        var UserEnterpriseID = '@eTurnsWeb.Helper.SessionHelper.EnterPriceID';
        var url_getRoleListByUserType = '@Url.Action("getRoleListByUserType", "Master")';
        var url_GetRoleDetailsInfo = '@Url.Action("GetRoleDetailsInfo", "Master")';
        var url_UserRolePermissionCreate = '@Url.Action("UserRolePermissionCreate", "Master")';
        var EnterPriceID_CompanyId = '@(eTurnsWeb.Helper.SessionHelper.EnterPriceID + "_" + eTurnsWeb.Helper.SessionHelper.CompanyID)';
        var UserCompanyId = '@Model.CompanyID';
        var url_SetTemplatePermissionToUserSession = '@Url.Action("SetTemplatePermissionToUserSession", "Master")';
        var ModelUserID = '@Model.ID';
        var sep1 = "[!,!]";
    </script>
    <script src="@Url.Content("~/Content/OpenAccess/sha1-min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/PageScripts/UserDetails.js")" type="text/javascript"></script>
}
