@model IEnumerable<eTurns.DTO.EnterpriseDTO>
@using eTurns.DTO.Resources
@using eTurns.DTO
@{
    ViewBag.Title = ResCompany.PageTitle;
    var settings = new GridHeaderSettings() { DisplaySaveButton = false, ShowSelectAll = true, DisplayUDFButton = true, UDFSetupFor = "Companies&UDFHeader=" + @ResCompany.PageHeader, DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "CompanyList" };
    var modelCommon = new eTurns.DTO.CommonDTO { PageName = "CompanyMaster" };

    bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.CompanyMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.CompanyMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    string CompaniesPDFURL = string.Format("{0}?t={1}", "/Uploads/HelpDoc/Companies.pdf", DateTime.Now.Ticks);
    bool IsShowChangeLog = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.CompanyMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.ShowChangeLog);
    var version = eTurnsWeb.Helper.CommonUtility.GetReleaseNumber();
    List<HelpDocumentDetailDTO> objHelpDocDtlDTO = eTurnsWeb.Helper.SessionHelper.GetHelpDocumentDetail("Companies", (int)HelpDocType.Module);
}
@if (SiteSettingHelper.IsBorderStateURL == "1" && SiteSettingHelper.EnableOktaLoginForSpecialUrls.Contains(eTurnsWeb.Helper.SessionHelper.CurrentDomainURL))
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyleBS.css")" />
}
else
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyle.css")" />
}
@section head{
    <script type='text/javascript' src="@Url.Content("~/Scripts/TabCommon.js?v=" + version)"></script>
    <script language="javascript" type="text/javascript">
        var oTable;
        var IsRefreshGrid = false;
        var deleteURL = "/Master/DeleteCompanyMasterRecords";
        var IsDeletePopupOpen = false;
        var AllowDeletePopup = true;
        var strUpdate = "";
        var objColumns = {};
        $(document).ready(function () {
            objColumns = GetGridHeaderColumnsObject('myDataTable');
            setTimeout(function () {
                $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": '@Url.Action("ClearCompanyListSession", "Master")',
                    "success": function (retdata) {

                    }
                })

            }, 4000);
            //CallAPI(12);
            //jQuery(function () {
            LoadTabs();
            if ($('#hdnUpdateRights').val() == "False") { strUpdate = "read_only"; }
            var gaiSelected = [];
            oTable = $('#myDataTable').dataTable({
                "bJQueryUI": true,
                "bScrollCollapse": true,
                "sScrollX": "150%",
                "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
                "oColVis": {},
                "aaSorting": [[2, "asc"]],
                "oColReorder": {},
                "sPaginationType": "full_numbers",
                "bProcessing": true,
                "bStateSave": true,
                "oLanguage": {
                    "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                    "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                    "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                    "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries',
                    "sLoadingRecords": '@eTurns.DTO.Resources.ResMessage.MsgLoading'

                },
                "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {

                    if (aData.IsDeleted == true && aData.IsArchived == true)
                        $(nRow).css('background-color', '#B9BCBF');
                       // nRow.className = "GridDeleatedArchivedRow";
                    else if (aData.IsDeleted == true)
                        $(nRow).css('background-color', '#FFCCCC');
                        //nRow.className = "GridDeletedRow";
                    else if (aData.IsArchived == true)
                        $(nRow).css('background-color', '#CCFFCC');
                       // nRow.className = "GridArchivedRow";
                    $("td.RowNo:first", nRow).html(this.fnSettings()._iDisplayStart + iDisplayIndex + 1);
                    return nRow;
                },
                "fnStateSaveParams": function (oSettings, oData) {
                    oData.oSearch.sSearch = "";
                    $.ajax({
                        "url": '@Url.Content("~/Master/SaveGridState")',
                        "type": "POST",
                        data: { Data: JSON.stringify(oData), ListName: 'CompanyList' },
                        "async": false,
                        "dataType": "json",
                        "success": function (json) {
                            o = json;
                        }
                    });
                },
                "fnStateLoad": function (oSettings) {
                    var o;
                    $.ajax({
                        "url": '@Url.Content("~/Master/LoadGridState")',
                         "type": "POST",
                        data: { ListName: 'CompanyList' },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        "success": function (json) {
                            if (json.jsonData != '')
                                o = JSON.parse(json.jsonData);
                        }
                    });
                    return o;
                },
                "bServerSide": true,
                "sAjaxSource": '@Url.Content("~/Master/GetCompanyList")',
                "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                    var arrCols = new Array();
                    var objCols = this.fnSettings().aoColumns;
                    for (var i = 0; i <= objCols.length - 1; i++) {
                        arrCols.push(objCols[i].mDataProp);
                    }
                    for (var j = 0; j <= aoData.length - 1; j++) {
                        if (aoData[j].name == "sColumns") {
                            aoData[j].value = arrCols.join("|");
                            break;
                        }
                    }
                     if (oSettings.aaSorting.length != 0) {
                        //aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                        var sortValue = "";
                        for (var i = 0; i <= oSettings.aaSorting.length - 1; i++) {
                            if (sortValue.length > 0)
                                sortValue += ", "
                            sortValue += arrCols[oSettings.aaSorting[i][0]] + ' ' + oSettings.aaSorting[i][1];

                        }
                        aoData.push({ "name": "SortingField", "value": sortValue });
                    }
                    else
                        aoData.push({ "name": "SortingField", "value": "0" });
                    aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                    aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });
                    oSettings.jqXHR = $.ajax({
                        "dataType": 'json',
                        "type": "POST",
                        "url": sSource,
                        "data": aoData,
						"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                        "success": fnCallback,
                        beforeSend: function () {
                            $('#myDataTable').removeHighlight();
                            $('.dataTables_scroll').css({ "opacity": 0.2 });
                        },
                        complete: function () {
                            $('.dataTables_scroll').css({ "opacity": 1 });
                            if ($("#global_filter").val() != '') {
                                $('#myDataTable').highlight($("#global_filter").val());
                            }
                        }
                    })
                },
                "fnInitComplete": function () {
                    $('.ColVis').detach().appendTo(".setting-arrow");
                },
                "aoColumns": [
                    { mDataProp: null, sClass: "read_only center NotHide RowNo", "bSortable": false, sDefaultContent: '' },

			                //{ "mDataProp": "ID", "sClass": "read_only" },
			                {
			                    "mDataProp": "Name",
			                    "sClass": "read_only",
			                    "sDefaultContent": '',
			                    "bSortable": true,
			                    "bSearchable": false,
			                    "fnRender": function (obj, val) {
			                        return "<a id='aEditLink' onclick='return ShowEditTab(&quot;CompanyEdit/" + obj.aData.ID + "_" + obj.aData.EnterPriseId + "&quot;,&quot;frmCompany&quot;)' href='JavaScript:void(0);'>" + obj.aData.Name + "</a><input type='hidden' id='hdnguid' value='" + obj.aData.GUID + "' />";
			                    }
                    },
                             { "mDataProp": "CompanyNumber", "sClass": "read_only"},
                            { "mDataProp": "EnterPriseName", "sClass": "read_only" },
			                { "mDataProp": "Address", "sClass": "read_only" },
                            { "mDataProp": "City", "sClass": "read_only" },
                            { "mDataProp": "State", "sClass": "read_only" },
                            { "mDataProp": "PostalCode", "sClass": "read_only" },
                            { "mDataProp": "Country", "sClass": "read_only" },
                            { "mDataProp": "ContactPhone", "sClass": "read_only" },
                            { "mDataProp": "ContactEmail", "sClass": "read_only" },
			                {
			                    "mDataProp": "Created", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                        //return GetDateInFullFormat(val);
                                    return obj.aData.CreatedDate;
			                    }
			                },
			                {
			                    "mDataProp": "Updated", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
                                return obj.aData.UpdatedDate;
			                        //return GetDateInFullFormat(val);
			                    }
			                },
                            { "mDataProp": "UpdatedByName", "sClass": "read_only" },
                            { "mDataProp": "CreatedByName", "sClass": "read_only" },
                            {
                                "mDataProp": "IsActive", "sClass": "read_only", "fnRender": function (obj, val) {
                                    return GetBoolInFormat(obj, val);
                                }
                            },
                            { "mDataProp": "NoOfRooms", "sClass": "read_only" },
                            { "mDataProp": "NoOfActiveRooms", "sClass": "read_only" }
                            @Html.RenderColumnsArray("CompanyMaster")
                ]
            }).makeEditable({
                sUpdateURL: '@Url.Content("~/Master/UpdateCompanyData")'
            });


            //This is Most important
            jQuery("#btnDiv").click(function (e) {
                var offset = $(this).offset();
                var leftpx = (parseInt(e.clientX) + parseInt($(this).css("width").toString().replace("px", "")) + parseInt(15)) + 'px';
                var toppx = (parseInt(e.clientY) + parseInt(5)) + 'px';
                jQuery('#myDataTable_wrapper div.ColVis .ColVis_Button').click();
                jQuery('.ColVis_collection').css("left", leftpx);
                jQuery('.ColVis_collection').css("top", toppx);
                e.preventDefault();

            });

            //HIDE PRINT CONTAINER
            $('.DTTT_container').css('z-index', '-1');

            $('#myDataTable').on('tap click', 'a[id^="aEditLink"]', function () {
                var tr = $(this).parent().parent();
                $("#myDataTable").find("tbody tr").removeClass("row_selected");
                $(tr).addClass('row_selected');

            });
        });

    </script>
}
<script type="text/javascript">
    var isTabClick = false;
    //    var TabsArry = [new TabClass('tab1', '@eTurns.DTO.Resources.ResCommon.New', 'callbacknew();', true, true),
    //         new TabClass('tab5', '@eTurns.DTO.Resources.ResCommon.List', 'callbackhistory();', true, true)
    //         ];
    //    function callbacknew() { ShowNewTab('CompanyCreate', 'frmCompany'); }
    //    function callbackhistory() { } //HistoryTabClick(); }
    var TabsArry = [new TabClass('tab1', '@eTurns.DTO.Resources.ResCommon.New', 'callbacknew();', true, true),
         new TabClass('tab5', '@eTurns.DTO.Resources.ResCommon.List', 'callbackhistory();', true, true),

    ];
    if ('@IsShowChangeLog.ToString().ToUpper()' == 'TRUE')
    {
        TabsArry.push(new TabClass('tab6', '@eTurns.DTO.Resources.ResCommon.ChangeLog', 'callbackCL();', false, true));
    }
    function callbacknew() { window.location.hash = '#new'; ShowNewTab('CompanyCreate', 'frmCompany'); }
    function callbackhistory() { window.location.hash = '#list'; } //HistoryTabClick(); }
    function callbackCL() { window.location.hash = ''; HistoryTabClick(); }
    function HistoryTabClick() {

        GetHistoryData();
    }
    var SelectedHistoryRecordEnterpriseID=0
    function GetHistoryData() {

        HistorySelected = fnGetSelected(oTable);
        if (HistorySelected != undefined && HistorySelected.length == 1) {
            //                if(SelectedHistoryRecordID != HistorySelected[0].id)
            //                {

            var aData = oTable.fnGetData(HistorySelected[0]);
            SelectedHistoryRecordID = aData.ID;
            SelectedHistoryRecordEnterpriseID = aData.EnterPriseId;
            $('#DivLoading').show();
            $("#CTab").hide();
            $("#CtabCL").show();
            $('#CtabCL').load('CompanyHistory', function () { $('#DivLoading').hide(); });
            //}
        }
        else {
            //$('#tab5').html('');
            $('#CtabCL').html('');
            $("#spanGlobalMessage").html('@ResCommon.msgSelectForViewHistory');
            //$('div#target').fadeToggle();
            //$("div#target").delay(2000).fadeOut(200);
            return false;
        }
    }

    function SetTabView() {
        var tabname = window.location.hash.toLowerCase();

        switch (tabname) {
            case "#list":
                $("#tab5").click();
                break
            case "#new":
                $("#tab1").click();
                break
        }
    }

    $(document).ready(function () {
        $(window).on('hashchange', function () {
            if (isTabClick == false) {
                SetTabView();
            }
            else {
                isTabClick = false;
            }
        });
        //SetTabView();
    });
    //function CallAPI(len) {
    //    $.ajax({
    //        type: "POST",
    //        url: '/api/FileUpload/Getlstfromws',
    //        contentType: 'application/json',
    //        dataType: 'json',
    //        data: "{lstlength:'" + len + "'}",
    //        success: function (retdt) {
    //        },
    //        error: function (err) {
    //            alert("There is some Error");
    //        }
    //    });

    //}
</script>
<div class="userListingWrapper">
    <h2>
        @ResCompany.PageHeader
    </h2>
    <div class="Infoclass" style="width:70px !important">
        @if (objHelpDocDtlDTO != null && objHelpDocDtlDTO.Count > 0 && objHelpDocDtlDTO.FirstOrDefault().IsVideoShow == true)
        {
            var VideoCount = objHelpDocDtlDTO.Where(x => x.IsVideo == true).Count();
            if (VideoCount > 1)
            {
                <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">
                    <a href="#" style="z-index:205 !important">
                        <img src="~/Content/images/InfoVideo.png" alt="Help" />
                    </a>
                    <div class="refreshBlock" style="z-index:200 !important; top: 20px;">
                        <ul class="sub_subMenu">
                            @foreach (var item in objHelpDocDtlDTO)
                            {
                                if (item.IsVideo == true && !string.IsNullOrWhiteSpace(item.ModuleVideoName) && !string.IsNullOrWhiteSpace(item.ModuleVideoPath))
                                {
                                    <li class="help_docvideo" onclick="return OpenHelpDocVideo('@item.ModuleVideoPath.Replace("../Uploads/HelpDoc/", "")', '@item.ModuleVideoNoExt');">@item.ModuleVideoNoExt</li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            }
            else
            {
                HelpDocumentDetailDTO helpDetails = new HelpDocumentDetailDTO();
                helpDetails = objHelpDocDtlDTO.Where(x => x.IsVideo == true).FirstOrDefault();

                if (helpDetails != null && helpDetails.IsVideo == true && !string.IsNullOrWhiteSpace(helpDetails.ModuleVideoName) && !string.IsNullOrWhiteSpace(helpDetails.ModuleVideoPath))
                {
                    <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">
                        <img class="help_docvideo" src="~/Content/images/InfoVideo.png" alt="@helpDetails.ModuleVideoNoExt" onclick="return OpenHelpDocVideo('@helpDetails.ModuleVideoPath.Replace("../Uploads/HelpDoc/", "")', '@helpDetails.ModuleVideoNoExt');" />
                    </div>
                }
            }
        }
        @if (objHelpDocDtlDTO != null && objHelpDocDtlDTO.Count > 0 && objHelpDocDtlDTO.FirstOrDefault().IsDocShow == true)
        {
            var DocCount = objHelpDocDtlDTO.Where(x => x.IsDoc == true).Count();
            if (DocCount > 1)
            {
                <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">
                    <a href="#" style="z-index:205 !important">
                        <img src="~/Content/images/Info.png" alt="Help" />
                    </a>
                    <div class="refreshBlock" style="z-index:200 !important; top: 20px;">
                        <ul class="sub_subMenu">
                            @foreach (var item in objHelpDocDtlDTO)
                            {
                                if (item.IsDoc == true && !string.IsNullOrWhiteSpace(item.ModuleDocName) && !string.IsNullOrWhiteSpace(item.ModuleDocPath))
                                {
                                    <li class="help_docvideo" onclick="return window.open('@item.ModuleDocPath', '_blank')">@item.ModuleDocNoExt</li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            }
            else
            {
                HelpDocumentDetailDTO helpDetails = new HelpDocumentDetailDTO();
                helpDetails = objHelpDocDtlDTO.Where(x => x.IsDoc == true).FirstOrDefault();

                if (helpDetails != null && helpDetails.IsDoc == true && !string.IsNullOrWhiteSpace(helpDetails.ModuleDocName) && !string.IsNullOrWhiteSpace(helpDetails.ModuleDocPath))
                {
                    <div class="refresh" style="z-index: 200 !important; margin-right: 5px;">
                        <img class="help_docvideo" src="~/Content/images/Info.png" alt="@helpDetails.ModuleDocNoExt" onclick="return window.open('@helpDetails.ModuleDocPath', '_blank')" />
                    </div>
                }
            }
        }
    </div>
    <div class="userListBlock">
        @Html.Hidden("hdnInsertRights", isInsert)
        @Html.Hidden("hdnUpdateRights", isUpdate)
        @Html.Hidden("hdnPageName", modelCommon.PageName)
        <ul class='tabs'>
        </ul>
        <div id="CtabNew" class="tabContener">
        </div>
        <div id="Ctab" class="tabContener">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@ResCommon.Search </span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="global_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_global_filter" />
                        </a>
                    </div>
                    @*<input type="button" value="Search" class="searchBtn" />*@
                </div>
                <input type="button" id="btnDiv" value="Div" style="visibility: hidden" />
            </div>
            @Html.GridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.CompanyMaster)
            @*NARROW SEARCH STARTS HERE*@
            @Html.Partial("NarrowSearchLayout", modelCommon) @*NARROW SEARCH STARTS HERE*@
            <div class="userContent">
                <table id="myDataTable" class="display">
                    <thead>
                        <tr>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.RowNo
                            </th>
                            <th>
                                @ResCompany.CompanyName
                            </th>
                            <th>
                                @ResCompany.CompanyNumber
                            </th>
                            <th>
                                @ResCompany.Enterprise
                            </th>
                            <th>
                                @ResCommon.Address
                            </th>
                            <th>
                                @ResCommon.City
                            </th>
                            <th>
                                @ResCommon.State
                            </th>
                            <th>
                                @ResCommon.PostalCode
                            </th>
                            <th>
                                @ResCommon.Country
                            </th>

                            <th>
                                @ResCompany.ContactPhone
                            </th>
                            <th>
                                @ResCompany.ContactEmail
                            </th>
                            <th>
                                @ResCommon.CreatedOn
                            </th>
                            <th>
                                @ResCommon.UpdatedOn
                            </th>
                            <th>
                                @ResCommon.UpdatedBy
                            </th>
                            <th>
                                @ResCommon.CreatedBy
                            </th>
                            <th>
                                @ResCompany.IsActive
                            </th>
                            <th>
                                @ResCompany.NoOfRooms
                            </th>
                            <th>
                                @ResCompany.NoOfActiveRooms
                            </th>

                            @Html.RenderColumnsHeader("CompanyMaster", typeof(eTurns.DTO.ResCompany))
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
                @* <button id="btnAddNewCompany" value="Ok" style="display: none">
                        Add New</button>
                    <button id="btnDeleteCompany" value="cancel" style="display: none">
                        Delete Selected</button>*@
                <div id="processing_message" style="display: none" title="Processing">
                    @ResMessage.RequestProcessMessage
                </div>
            </div>
        </div>
        <div id="CtabCL" class="tabContener">
        </div>
    </div>
</div>
<script type="text/javascript">
    @*var objColumns = {
        @*'@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.ID)': 0,
        '@MvcHtmlString.Create(eTurns.DTO.ResCompany.CompanyName)': 0,
        '@MvcHtmlString.Create("Enterprise")': 1,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.Address)': 2,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.City)': 3,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.State)': 4,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.PostalCode)': 5,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.Country)': 6,
        '@MvcHtmlString.Create(eTurns.DTO.ResCompany.ContactPhone)': 7,
        '@MvcHtmlString.Create(eTurns.DTO.ResCompany.ContactEmail)': 8,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.CreatedOn)': 9,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.UpdatedOn)': 10,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.UpdatedBy)': 11,
        '@MvcHtmlString.Create(eTurns.DTO.Resources.ResCommon.CreatedBy)': 12,
        '@MvcHtmlString.Create(eTurns.DTO.ResCompany.IsActive)': 13,
        '@MvcHtmlString.Create(eTurns.DTO.ResCompany.UDF1)': 14,
        '@MvcHtmlString.Create(eTurns.DTO.ResCompany.UDF2)': 15,
        '@MvcHtmlString.Create(eTurns.DTO.ResCompany.UDF3)': 16,
        '@MvcHtmlString.Create(eTurns.DTO.ResCompany.UDF4)': 17,
        '@MvcHtmlString.Create(eTurns.DTO.ResCompany.UDF5)': 18,
        '@MvcHtmlString.Create(eTurns.DTO.ResCompany.CompanyNumber)':19
    };*@
</script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Authorization.js?v=" + version)"></script>
