@model eTurns.DTO.ChangePasswordDTO
@{
    Layout = null;
    ViewBag.Title = "Reset Password";
}
<!DOCTYPE html>

<link href="@Url.Content("~/Content/OpenAccess/Login.css")" rel="stylesheet" type="text/css" />
<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/OpenAccess/PageStyle/UserPage.css")" />
<script src="@Url.Content("~/Content/OpenAccess/jquery-1.7.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/OpenAccess/sha1-min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/OpenAccess/ResetLogin.js?v=" + eTurnsWeb.Helper.CommonUtility.GetReleaseNumber())" type="text/javascript"></script>
<script src="@Url.Content("~/Content/OpenAccess/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Content/OpenAccess/jquery.validate.unobtrusive.js")" type="text/javascript"></script>


<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Reset Password</title>
    <style type="text/css">
        html {
            display: none;
            visibility: hidden;
        }
    </style>
</head>
<body>
    @using (Html.BeginForm("ResetPassword", "Master", FormMethod.Post, new { @id = "frmResetPass" }))
    {
        @Html.AntiForgeryToken()
        <div class="wrapper">
            <div id="container" class="clearfix">
                <!-- header starts -->
                <div id="header" class="clearfix">
                    <!-- logo starts -->
                    <h1 id="logo" class="alignLeft">
                        @*  <a href="https://www.eturns.com/" target="_blank" rel="home" title="eTurns">
                                <img src="@Url.Content("~/Content/images/logo-Login.jpg")" alt="eTurns" title="eTurns" />
                            </a>*@ <a href="https://www.eturns.com/" target="_blank" title="@eTurns.DTO.Resources.ResLayout.LogoTitle">
                            <img src="~/Content/openAccess/eturnslogo.png" width="167" height="77" alt="@eTurns.DTO.Resources.ResLayout.LogoImgAlt" />
                        </a>
                    </h1>
                    <!-- logo ends -->
                </div>
                <!-- header ends -->
                <!-- content starts -->
                <div id="contentWrap" class="clearfix">
                    <!-- main content starts -->
                    <div class="content">
                        <h1 style="padding: 8px 0 8px 0">
                            @ResLoginForms.ResetPassMainHeader
                        </h1>
                        <div class="mainGreybg" style="height: 245px;">
                            <div class="loginBg">
                                <div class="loginContent alignLeft">
                                    <div class="login alignLeft">
                                        @*<h2 class="alignLeft">
                                                @ResLoginForms.ResetPassHeader
                                            </h2>*@
                                        @if (Model == null)
                                        {
                                            <div class="loginForm clear">
                                                <ul>
                                                    <li>@ResLoginForms.ResetPassHeader</li>
                                                </ul>
                                            </div>
                                        }
                                        else if (Model != null && eTurns.DAL.DateTimeUtility.DateTimeNow > Model.TokenGeneratedDate.AddDays(1))
                                        {

                                            <div class="loginForm clear">
                                                <ul>
                                                    <li>@ResLoginForms.lnkNotFoundText </li>
                                                </ul>
                                            </div>
                                        }
                                        else if (Model != null && (Model.IsExpired || Model.IsProcessed))
                                        {
                                            <div class="loginForm clear">
                                                <ul>
                                                    <li>@ResLoginForms.LinkExpired</li>
                                                </ul>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="loginForm clear">
                                                <ul>
                                                    <li>
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.FirstPassword)<em> *</em>
                                                        </div>
                                                        <div class="editor-field login_test">
                                                            @Html.PasswordFor(model => model.FirstPassword, new { id = "txtNewPassword", @class = "inputtext" })
                                                            <div id="pswd_info" class="pswd_info_forget">
                                                                <h4>Password must meet the following requirements:</h4>
                                                                <ul class="password">
                                                                    <li id="letter" class="invalidOpenAccess">At least <strong>one letter</strong></li>
                                                                    <li id="capital" class="invalidOpenAccess">At least <strong>one capital letter</strong></li>
                                                                    <li id="number" class="invalidOpenAccess">At least <strong>one number</strong></li>
                                                                    <li id="special" class="invalidOpenAccess">Be at least <strong>one special letter</strong></li>
                                                                    <li id="length" class="invalidOpenAccess">Be at least <strong>8 characters</strong></li>
                                                                </ul>
                                                            </div>
                                                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.FirstPassword)</span>
                                                        </div>
                                                    </li>
                                                    <li>
                                                        <div class="editor-label">
                                                            @Html.LabelFor(model => model.ConfirmPassword)<em> *</em>
                                                        </div>
                                                        <div class="editor-field login_test">
                                                            @Html.PasswordFor(model => model.ConfirmPassword, new { id = "txtConfirmPassword", @class = "inputtext" })
                                                            <div id="Cpswd_info" class="Cpswd_info_forget">
                                                                <h4>Confirm Password must meet the following requirements:</h4>
                                                                <ul class="password">
                                                                    <li id="Cletter" class="invalidOpenAccess">At least <strong>one letter</strong></li>
                                                                    <li id="Ccapital" class="invalidOpenAccess">At least <strong>one capital letter</strong></li>
                                                                    <li id="Cnumber" class="invalidOpenAccess">At least <strong>one number</strong></li>
                                                                    <li id="Cspecial" class="invalidOpenAccess">Be at least <strong>one special letter</strong></li>
                                                                    <li id="Clength" class="invalidOpenAccess">Be at least <strong>8 characters</strong></li>
                                                                </ul>
                                                            </div>
                                                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.ConfirmPassword)</span>
                                                        </div>
                                                    </li>
                                                    <li>&nbsp;</li>
                                                    <li>
                                                        <input type="submit" style="float: left;  width: 96px;" value="@ResCommon.Save"
                                                               id="btnsave" class="searchBtn" name="btnsave" />
                                                        &nbsp;
                                                        @Html.HiddenFor(model => model.ID)
                                                        @Html.HiddenFor(model => model.UserId)
                                                        @Html.HiddenFor(model => model.RequestToken)
                                                        <input type="hidden" name="NewPassword" value="" />
                                                    </li>
                                                    <li>&nbsp;</li>
                                                    <li>
                                                        @*<input type="button" style="margin-left: 28%; margin-top: 4%;" value="Go to Forgot password?" id="btnGoForGotPassword"
                                                                   class="searchBtn" name="btnGoForGotPassword" />
                                                            <input type="button" style="margin-left: 28%; margin-top: 4%;" value="Log In" id="btnGoToLogin" class="searchBtn"
                                                                   name="btnGoToLogin" />*@
                                                        <a id="btnGoForGotPassword" href="javascript:void(0);">Go to Forgot password?</a> &nbsp;&nbsp;&nbsp;
                                                        <a id="btnGoToLogin" href="javascript:void(0);">Go to Log In</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- main content ends -->
                </div>
                <!-- content ends -->
            </div>
            <!-- footer starts -->
            <div id="footer" class="clearfix">
                <div class="copyright">
                    &copy; Copyright © @eTurns.DAL.DateTimeUtility.DateTimeNow.Year.ToString() eTurns.com. All rights reserved.
                </div>
            </div>
            <!-- footer ends -->
        </div>

    }
</body>
</html>
<script type="text/javascript">
    
    $(document).ready(function () {

        $("#btnsave").click(function () {
            var retval = checkpass("txtNewPassword");
            if (retval == false) {

            }
            //if (ValidatePassword() == false) {
            //    return false;
            //}
            //else {

            //}
        });



        $("#frmResetPass").submit(function (e) {
            if (ValidatePassword() == true) {
                $.validator.unobtrusive.parse("#frmResetPass");
                var validator = $("#frmResetPass").validate();
                var errors1 = validator.errorList //get the error elements, the actual labels
                //var errors2 = validator.invalidElements(); //the invalid elements themselves
                if (!$(this).valid()) {
                    e.preventDefault();
                }
                else {
                    $("input[type='hidden'][name='NewPassword']").val(hex_sha1($("#txtNewPassword").val()));
                    $("#txtNewPassword").val(hex_sha1($("#txtNewPassword").val()));
                    $("#txtConfirmPassword").val(hex_sha1($("#txtConfirmPassword").val()));                    
                }
            }
            else {
                e.preventDefault();
            }
        });

    });




</script>
<script type="text/javascript">
    var ModelUserID = '@Model.ID';

    if ('@Model.Status' == 'fail') {
        alert('@Model.ErrorMessege');
    }
    else if ('@Model.Status' == 'success') {
        alert('@Model.ErrorMessege');
    }

    function ValidatePassword() {

        var errormsg = "";
        if ($.trim($("#txtNewPassword").val()) == "" || $.trim($("#txtConfirmPassword").val()) == "") {
            errormsg = errormsg + '@ResLoginForms.errPasswordRequired';
        }
        else if ($("#txtNewPassword").val() != $("#txtConfirmPassword").val()) {
            errormsg = "\n" + errormsg + '@ResLoginForms.errPasswordmismatch';
        }
        else if (checkpass("txtNewPassword") == false) {
            errormsg = "\n" + errormsg + '@ResLoginForms.errPasswordRuleBreak';
        }

        if (errormsg == "") {

            return true;


            @*$.ajax({
                type: "POST",
                url: "/Master/ResetPassword",
                data: "{'NewPassword': '" + $("#txtNewPassword").val() + "', 'UserID':'" + $("#UserId").val() + "', 'RequestToken':'" + $("#RequestToken").val() + "'}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (message) {
                    if (message.Message == 'repeatpwd') {
                        alert('@ResLoginForms.repeatpwd');
                        $("#txtNewPassword").val('');
                        $("#txtConfirmPassword").val('');
                        $("#txtNewPassword").focus();
                    }
                    else {
                        alert('@ResLoginForms.PasswordResetSuccess');
                    }
                },
                error: function (response) {
                    // through errror message
                }
            });*@

        }
        else {
            alert(errormsg);
            return false;
        }


    }
    function onFailure(message) {
        $("#spanGlobalMessage").html(message.statusText);
        //$('div#target').fadeToggle();
        //$("div#target").delay(2000).fadeOut(200);
        showNotificationDialog();
        $("#txtUserName").focus();
    }
    function onSuccess(response) {
        alert(response.Message);
        if (response.Message == "ok") {
            alert("Done");
        }
        else if (response.Message == "wrngpsw") {
            alert('@eTurns.DTO.Resources.ResMessage.OldPasswordInvalid');
            $("#txtCurrentPassword").val("");
            $("#txtNewPassword").val("");
            $("#txtConfirmPassword").val("");
            return false;
        }
    }
    function OnBegin() {

    }

    $(document).ready(function () {

        if (self == top) {
            document.documentElement.style.display = 'block';
            document.documentElement.style.visibility = 'visible';
        }
        else {
            top.location = self.location;
        }

        jQuery.validator.addMethod('passwordrequired', function (value, element, params) {
            if (ModelUserID < 1)
                return false;
            else
                return true;
        }, '');
        jQuery.validator.unobtrusive.adapters.add('passwordrequired', {}, function (options) {

            options.rules['passwordrequired'] = true;
            options.messages['passwordrequired'] = options.message;

        });

        $("#btnGoToLogin").click(function () {
            window.location.href = "/Master/UserLogin";
        });
        $("#btnGoForGotPassword").click(function () {
            window.location.href = "/Master/ForgotPassword";
        });
        $('input#txtNewPassword').keyup(function () {

            pswd = $(this).val();
            if (pswd.length < 8) {
                $('#length').removeClass('validOpenAccess').addClass('invalidOpenAccess');
            } else {
                $('#length').removeClass('invalidOpenAccess').addClass('validOpenAccess');
            }
            if (pswd.match(/[a-z]/)) {
                $('#letter').removeClass('invalidOpenAccess').addClass('validOpenAccess');
            } else {
                $('#letter').removeClass('validOpenAccess').addClass('invalidOpenAccess');
            }

            //validate capital letter
            if (pswd.match(/[A-Z]/)) {
                $('#capital').removeClass('invalidOpenAccess').addClass('validOpenAccess');
            } else {
                $('#capital').removeClass('validOpenAccess').addClass('invalidOpenAccess');
            }
            if (pswd.match(/\W/g)) {
                $('#special').removeClass('invalidOpenAccess').addClass('validOpenAccess');
            } else {
                $('#special').removeClass('validOpenAccess').addClass('invalidOpenAccess');
            }

            //validate number
            if (pswd.match(/\d/)) {
                $('#number').removeClass('invalidOpenAccess').addClass('validOpenAccess');
            } else {
                $('#number').removeClass('validOpenAccess').addClass('invalidOpenAccess');
            }
            $('#pswd_info').show();
        }).focus(function () {
            $('#pswd_info').show();
        }).blur(function () {
            $('#pswd_info').hide();
        });
        $('input#txtConfirmPassword').keyup(function () {

            Cpswd = $(this).val();
            if (Cpswd.length < 8) {
                $('#Clength').removeClass('validOpenAccess').addClass('invalid');
            } else {
                $('#Clength').removeClass('invalid').addClass('validOpenAccess');
            }
            if (Cpswd.match(/[a-z]/)) {
                $('#Cletter').removeClass('invalid').addClass('validOpenAccess');
            } else {
                $('#Cletter').removeClass('validOpenAccess').addClass('invalid');
            }

            //validate capital letter
            if (Cpswd.match(/[A-Z]/)) {
                $('#Ccapital').removeClass('invalid').addClass('validOpenAccess');
            } else {
                $('#Ccapital').removeClass('validOpenAccess').addClass('invalid');
            }
            if (Cpswd.match(/\W/g)) {
                $('#Cspecial').removeClass('invalid').addClass('validOpenAccess');
            } else {
                $('#Cspecial').removeClass('validOpenAccess').addClass('invalid');
            }

            //validate number
            if (Cpswd.match(/\d/)) {
                $('#Cnumber').removeClass('invalid').addClass('validOpenAccess');
            } else {
                $('#Cnumber').removeClass('validOpenAccess').addClass('invalid');
            }
            $('#Cpswd_info').show();
        }).focus(function () {
            $('#Cpswd_info').show();
        }).blur(function () {
            $('#Cpswd_info').hide();
        });

        $("input#txtNewPassword").focus(function (e) {
            $('#pswd_info').show();
        });
        $("input#txtNewPassword").focusout(function (e) {
            $('#pswd_info').hide();
        });

        $("input#txtNewPassword").click(function (e) {
            $('#pswd_info').show();
        });
        //confirmpassword
        $("input#txtConfirmPassword").focus(function (e) {
            $('#Cpswd_info').show();
        });
        $("input#txtConfirmPassword").focusout(function (e) {
            $('#Cpswd_info').hide();
        });

        $("input#txtConfirmPassword").click(function (e) {
            $('#Cpswd_info').show();
        });

    });
</script>

<style>
    .ErrorMessage {
        float: left;
        width: 90%;
        line-height: 15px;
    }

    .editorForm li .field-validation-error, .loginForm li .field-validation-error {
        padding: 0 0 0 0;
        color: Red;
    }
</style>