@model eTurns.DTO.ImportMastersNewDTO.ImportPageDTO

@{
    //var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    //serializer.MaxJsonLength = Int32.MaxValue;
    //var lstItemMasterImportData = serializer.Serialize(Model.lstItemMasterImportData);
    string lstItemMasterImportData = Newtonsoft.Json.JsonConvert.SerializeObject(Model.lstItemMasterImportData );
}

@using (ImportMastersNewDTO.ImportPageDTO objImportPageDTO = Model)
{
    <input type="hidden" name="hdnDataTableColumns" value='@String.Join(",", Model.DataTableColumns)' />
    <table class="display dataTable">
        <thead>
            <tr>
                @if (objImportPageDTO.DataTableColumns.Count() > 0)
                {
                    <th class="ui-state-default read_only">
                        @ResCommon.Status
                    </th>
                    <th class="ui-state-default read_only">
                        @ResCommon.Reason
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("itemnumber"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.ItemNumber
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("link2"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.Link2
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("manufacturer"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ManufacturerName
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("manufacturernumber"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ManufacturerNumber
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("suppliername"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.Supplier
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("supplierpartno"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.SupplierPartNo
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("blanketordernumber"))
                {
                    <th class="ui-state-default read_only">
                        @ResSupplierBlanketPODetails.BlanketPO
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("upc"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UPC
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("unspsc"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UNSPSC
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("description"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Description
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("longdescription"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.LongDescription
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("categoryname"))
                {
                    <th class="ui-state-default read_only">
                        @ResCategoryMaster.Category
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("glaccount"))
                {
                    <th class="ui-state-default read_only">
                        @ResGLAccount.GLAccount
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("uom"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResUnitMaster.Unit
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("costuom"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResCostUOMMaster.CostUOM
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("defaultreorderquantity"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.DefaultReorderQuantity
                    </th>

                }
                @if (objImportPageDTO.DataTableColumns.Contains("defaultpullquantity"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.DefaultPullQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("cost"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Cost
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("markup"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Markup
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("sellprice"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.SellPrice
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("extendedcost"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ExtendedCost
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("leadtimeindays"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.LeadTimeInDays
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("trend"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Trend
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("taxable"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Taxable
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("consignment"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Consignment
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("stagedquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.StagedQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("intransitquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.InTransitquantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("onorderquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.OnOrderQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("ontransferquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.OnTransferQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("suggestedorderquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.SuggestedOrderQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("requisitionedquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.RequisitionedQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("averageusage"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.AverageUsage
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("turns"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Turns
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("onhandquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.OnHandQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("isitemlevelminmaxqtyrequired"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.IsItemLevelMinMaxQtyRequired
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("criticalquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.CriticalQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("minimumquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.MinimumQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("maximumquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.MaximumQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("weightperpiece"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.WeightPerPiece
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("itemuniquenumber"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ItemUniqueNumber
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("istransfer"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsTransfer
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("ispurchase"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsPurchase
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("inventrylocation"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResBin.BinNumber
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("inventoryclassification"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.InventoryClassification
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("serialnumbertracking"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.SerialNumberTracking
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("lotnumbertracking"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.LotNumberTracking
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("datecodetracking"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.DateCodeTracking
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("itemtype"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.ItemType
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("imagepath"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ImagePath
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("udf1"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF1
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("udf2"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF2
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("udf3"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF3
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("udf4"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF4
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("udf5"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF5
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("islotserialexpirycost"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsLotSerialExpiryCost
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("isbuildbreak"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsBuildBreak
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("enforcedefaultpullquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.PullQtyScanOverride
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("enforcedefaultreorderquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsEnforceDefaultReorderQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("isautoinventoryclassification"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsAutoInventoryClassification
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("trendingsetting"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.TrendingSetting
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("ispackslipmandatoryatreceive"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsPackslipMandatoryAtReceive
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("itemimageexternalurl"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.ItemImageExternalURL
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("itemdocexternalurl"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.ItemDocExternalURL
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("isdeleted"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.IsDeleted
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("itemlink2externalurl"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.ItemLink2ExternalURL
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("isactive"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.IsActive
                    </th>
                }
            </tr>
        </thead>
        <tbody id="tBodyImport">

        </tbody>
    </table>
    <script type="text/javascript">
        $(document).ready(function () {
            var div = $('#tBodyImport');
            var lstItemMasterImportData = @Html.Raw(lstItemMasterImportData);
            div.html($('#importTemplate').tmpl(lstItemMasterImportData));
        });
</script>
    <script id="importTemplate" type="text/x-jquery-tmpl">
        <tr class='odd' style='background-color: rgb(239, 247, 255);'>
            @if (objImportPageDTO.DataTableColumns.Count() > 0)
            {
                <td class="read_only ImportStatus">
                    ${Status}
                </td>
                <td class="read_only ImportReason">
                    ${Reason}
                </td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("itemnumber"))
            {
                <td class="read_only"><input id="ItemNumber[${Index}]" name="ItemNumber[${Index}]" value="${ItemNumber}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("link2"))
            {
                <td class="read_only"><input id="Link2[${Index}]" name="Link2[${Index}]" value="${Link2}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("manufacturer"))
            {
                <td class="read_only"><input id="ManufacturerName[${Index}]" name="ManufacturerName[${Index}]" value="${ManufacturerName}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("manufacturernumber"))
            {
                <td class="read_only"><input id="ManufacturerNumber[${Index}]" name="ManufacturerNumber[${Index}]" value="${ManufacturerNumber}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("suppliername"))
            {
                <td class="read_only"><input id="SupplierName[${Index}]" name="SupplierName[${Index}]" value="${SupplierName}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("supplierpartno"))
            {
                <td class="read_only"><input id="SupplierPartNo[${Index}]" name="SupplierPartNo[${Index}]" value="${SupplierPartNo}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("blanketordernumber"))
            {
                <td class="read_only"><input id="BlanketOrderNumber[${Index}]" name="BlanketOrderNumber[${Index}]" value="${BlanketOrderNumber}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("upc"))
            {
                <td class="read_only"><input id="UPC[${Index}]" name="UPC[${Index}]" value="${UPC}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("unspsc"))
            {
                <td class="read_only"><input id="UNSPSC[${Index}]" name="UNSPSC[${Index}]" value="${UNSPSC}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("description"))
            {
                <td class="read_only"><input id="Description[${Index}]" name="Description[${Index}]" value="${Description}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("longdescription"))
            {
                <td class="read_only"><input id="LongDescription[${Index}]" name="LongDescription[${Index}]" value="${LongDescription}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("categoryname"))
            {
                <td class="read_only"><input id="CategoryName[${Index}]" name="CategoryName[${Index}]" value="${CategoryName}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("glaccount"))
            {
                <td class="read_only"><input id="GLAccount[${Index}]" name="GLAccount[${Index}]" value="${GLAccount}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("uom"))
            {
                <td class="read_only"><input id="Unit[${Index}]" name="Unit[${Index}]" value="${Unit}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("costuom"))
            {
                <td class="read_only"><input id="CostUOMName[${Index}]" name="CostUOMName[${Index}]" value="${CostUOMName}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("defaultreorderquantity"))
            {
                <td class="read_only"><input id="DefaultReorderQuantity[${Index}]" name="DefaultReorderQuantity[${Index}]" value="${DefaultReorderQuantity}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("defaultpullquantity"))
            {
                <td class="read_only"><input id="DefaultPullQuantity[${Index}]" name="DefaultPullQuantity[${Index}]" value="${DefaultPullQuantity}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("cost"))
            {
                <td class="read_only"><input id="Cost[${Index}]" name="Cost[${Index}]" value="${Cost}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("markup"))
            {
                <td class="read_only"><input id="Markup[${Index}]" name="Markup[${Index}]" value="${Markup}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("sellprice"))
            {
                <td class="read_only"><input id="SellPrice[${Index}]" name="SellPrice[${Index}]" value="${SellPrice}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("extendedcost"))
            {
                <td class="read_only"><input id="ExtendedCost[${Index}]" name="ExtendedCost[${Index}]" value="${ExtendedCost}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("leadtimeindays"))
            {
                <td class="read_only"><input id="LeadTimeInDays[${Index}]" name="LeadTimeInDays[${Index}]" value="${LeadTimeInDays}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("trend"))
            {
                <td class="read_only"><input id="Trend[${Index}]" name="Trend[${Index}]" value="${Trend}" type="checkbox" {{if Trend}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("taxable"))
            {
                <td class="read_only"><input id="Taxable[${Index}]" name="Taxable[${Index}]" value="${Taxable}" type="checkbox" {{if Taxable}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("consignment"))
            {
                <td class="read_only"><input id="Consignment[${Index}]" name="Consignment[${Index}]" value="${Consignment}" type="checkbox" {{if Consignment}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("stagedquantity"))
            {
                <td class="read_only">${StagedQuantity}</td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("intransitquantity"))
            {
                <td class="read_only">${InTransitquantity}</td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("onorderquantity"))
            {
                <td class="read_only">${OnOrderQuantity}</td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("ontransferquantity"))
            {
                <td class="read_only">${OnTransferQuantity}</td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("suggestedorderquantity"))
            {
                <td class="read_only">${SuggestedOrderQuantity}</td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("requisitionedquantity"))
            {
                <td class="read_only">${RequisitionedQuantity}</td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("averageusage"))
            {
                <td class="read_only">${AverageUsage}</td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("turns"))
            {
                <td class="read_only">${Turns}</td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("onhandquantity"))
            {
                <td class="read_only"><input id="OnHandQuantity[${Index}]" name="OnHandQuantity[${Index}]" value="${OnHandQuantity}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("isitemlevelminmaxqtyrequired"))
            {
                <td class="read_only"><input id="IsItemLevelMinMaxQtyRequired[${Index}]" name="IsItemLevelMinMaxQtyRequired[${Index}]" value="${IsItemLevelMinMaxQtyRequired}" type="checkbox" {{if IsItemLevelMinMaxQtyRequired}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("criticalquantity"))
            {
                <td class="read_only"><input id="CriticalQuantity[${Index}]" name="CriticalQuantity[${Index}]" value="${CriticalQuantity}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("minimumquantity"))
            {
                <td class="read_only"><input id="MinimumQuantity[${Index}]" name="MinimumQuantity[${Index}]" value="${MinimumQuantity}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("maximumquantity"))
            {
                <td class="read_only"><input id="MaximumQuantity[${Index}]" name="MaximumQuantity[${Index}]" value="${MaximumQuantity}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("weightperpiece"))
            {
                <td class="read_only"><input id="WeightPerPiece[${Index}]" name="WeightPerPiece[${Index}]" value="${WeightPerPiece}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("itemuniquenumber"))
            {
                <td class="read_only"><input id="ItemUniqueNumber[${Index}]" name="ItemUniqueNumber[${Index}]" value="${ItemUniqueNumber}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("istransfer"))
            {
                <td class="read_only"><input id="IsTransfer[${Index}]" name="IsTransfer[${Index}]" value="${IsTransfer}" type="checkbox" {{if IsTransfer}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("ispurchase"))
            {
                <td class="read_only"><input id="IsPurchase[${Index}]" name="IsPurchase[${Index}]" value="${IsPurchase}" type="checkbox" {{if IsPurchase}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("inventrylocation"))
            {
                <td class="read_only"><input id="InventryLocation[${Index}]" name="InventryLocation[${Index}]" value="${InventryLocation}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("inventoryclassification"))
            {
                <td class="read_only"><input id="InventoryClassificationName[${Index}]" name="InventoryClassificationName[${Index}]" value="${InventoryClassificationName}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("serialnumbertracking"))
            {
                <td class="read_only"><input id="SerialNumberTracking[${Index}]" name="SerialNumberTracking[${Index}]" value="${SerialNumberTracking}" type="checkbox" {{if SerialNumberTracking}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("lotnumbertracking"))
            {
                <td class="read_only"><input id="LotNumberTracking[${Index}]" name="LotNumberTracking[${Index}]" value="${LotNumberTracking}" type="checkbox" {{if LotNumberTracking}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("datecodetracking"))
            {
                <td class="read_only"><input id="DateCodeTracking[${Index}]" name="DateCodeTracking[${Index}]" value="${DateCodeTracking}" type="checkbox" {{if DateCodeTracking}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("itemtype"))
            {
                <td class="read_only"><input id="ItemType[${Index}]" name="ItemType[${Index}]" value="${ItemType}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("imagepath"))
            {
                <td class="read_only"><input id="ImagePath[${Index}]" name="ImagePath[${Index}]" value="${ImagePath}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("udf1"))
            {
                <td class="read_only"><input id="UDF1[${Index}]" name="UDF1[${Index}]" value="${UDF1}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("udf2"))
            {
                <td class="read_only"><input id="UDF2[${Index}]" name="UDF2[${Index}]" value="${UDF2}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("udf3"))
            {
                <td class="read_only"><input id="UDF3[${Index}]" name="UDF3[${Index}]" value="${UDF3}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("udf4"))
            {
                <td class="read_only"><input id="UDF4[${Index}]" name="UDF4[${Index}]" value="${UDF4}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("udf5"))
            {
                <td class="read_only"><input id="UDF5[${Index}]" name="UDF5[${Index}]" value="${UDF5}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("islotserialexpirycost"))
            {
                <td class="read_only"><input id="IsLotSerialExpiryCost[${Index}]" name="IsLotSerialExpiryCost[${Index}]" value="${IsLotSerialExpiryCost}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("isbuildbreak"))
            {
                <td class="read_only"><input id="IsBuildBreak[${Index}]" name="IsBuildBreak[${Index}]" value="${IsBuildBreak}" type="checkbox" {{if IsBuildBreak}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("enforcedefaultpullquantity"))
            {
                <td class="read_only"><input id="PullQtyScanOverride[${Index}]" name="PullQtyScanOverride[${Index}]" value="${PullQtyScanOverride}" type="checkbox" {{if PullQtyScanOverride}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("enforcedefaultreorderquantity"))
            {
                <td class="read_only"><input id="IsEnforceDefaultReorderQuantity[${Index}]" name="IsEnforceDefaultReorderQuantity[${Index}]" value="${IsEnforceDefaultReorderQuantity}" type="checkbox" {{if IsEnforceDefaultReorderQuantity}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("isautoinventoryclassification"))
            {
                <td class="read_only"><input id="IsAutoInventoryClassification[${Index}]" name="IsAutoInventoryClassification[${Index}]" value="${IsAutoInventoryClassification}" type="checkbox" {{if IsAutoInventoryClassification}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("trendingsetting"))
            {
                <td class="read_only"><input id="TrendingSettingName[${Index}]" name="TrendingSettingName[${Index}]" value="${TrendingSettingName}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("ispackslipmandatoryatreceive"))
            {
                <td class="read_only"><input id="IsPackslipMandatoryAtReceive[${Index}]" name="IsPackslipMandatoryAtReceive[${Index}]" value="${IsPackslipMandatoryAtReceive}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("itemimageexternalurl"))
            {
                <td class="read_only"><input id="ItemImageExternalURL[${Index}]" name="ItemImageExternalURL[${Index}]" value="${ItemImageExternalURL}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("itemdocexternalurl"))
            {
                <td class="read_only"><input id="ItemDocExternalURL[${Index}]" name="ItemDocExternalURL[${Index}]" value="${ItemDocExternalURL}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("isdeleted"))
            {
                <td class="read_only"><input id="IsDeleted[${Index}]" name="IsDeleted[${Index}]" value="${IsDeleted}" type="checkbox" {{if IsDeleted}}checked="checked"{{/if}} class="importtext-box valid"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("itemlink2externalurl"))
            {
                <td class="read_only"><input id="ItemLink2ExternalURL[${Index}]" name="ItemLink2ExternalURL[${Index}]" value="${ItemLink2ExternalURL}" type="text" class="importtext-box"></td>
            }
            @if (objImportPageDTO.DataTableColumns.Contains("isactive"))
            {
                <td class="read_only"><input id="IsActive[${Index}]" name="IsActive[${Index}]" value="${IsActive}" type="text" class="importtext-box"></td>
            }
        </tr>
    </script>
}