@model eTurns.DTO.ImportMastersNewDTO.ImportPageDTO

@{
    //var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    //serializer.MaxJsonLength = Int32.MaxValue;
    //var lstItemMasterImportData = serializer.Serialize(Model.lstItemMasterImportData);
    //string lstItemMasterImportData = Newtonsoft.Json.JsonConvert.SerializeObject(Model.lstItemMasterImportData);
    //string DataTableColumns = Newtonsoft.Json.JsonConvert.SerializeObject(Model.DataTableColumns);
    string ImportPageDTO = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
}
<div id="divtest">    
    <table class="display dataTable">
        <thead>
            <tr>
                @if (Model.DataTableColumns.Count() > 0)
                {
                    <th class="ui-state-default read_only">
                        @ResCommon.Status
                    </th>
                    <th class="ui-state-default read_only">
                        @ResCommon.Reason
                    </th>
                }
                @if (Model.DataTableColumns.Contains("itemnumber"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.ItemNumber
                    </th>
                }
                @if (Model.DataTableColumns.Contains("link2"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.Link2
                    </th>
                }
                @if (Model.DataTableColumns.Contains("manufacturer"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ManufacturerName
                    </th>
                }
                @if (Model.DataTableColumns.Contains("manufacturernumber"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ManufacturerNumber
                    </th>
                }
                @if (Model.DataTableColumns.Contains("suppliername"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.Supplier
                    </th>
                }
                @if (Model.DataTableColumns.Contains("supplierpartno"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.SupplierPartNo
                    </th>
                }
                @if (Model.DataTableColumns.Contains("blanketordernumber"))
                {
                    <th class="ui-state-default read_only">
                        @ResSupplierBlanketPODetails.BlanketPO
                    </th>
                }
                @if (Model.DataTableColumns.Contains("upc"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UPC
                    </th>
                }
                @if (Model.DataTableColumns.Contains("unspsc"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UNSPSC
                    </th>
                }
                @if (Model.DataTableColumns.Contains("description"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Description
                    </th>
                }
                @if (Model.DataTableColumns.Contains("longdescription"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.LongDescription
                    </th>
                }
                @if (Model.DataTableColumns.Contains("categoryname"))
                {
                    <th class="ui-state-default read_only">
                        @ResCategoryMaster.Category
                    </th>
                }
                @if (Model.DataTableColumns.Contains("glaccount"))
                {
                    <th class="ui-state-default read_only">
                        @ResGLAccount.GLAccount
                    </th>
                }
                @if (Model.DataTableColumns.Contains("uom"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResUnitMaster.Unit
                    </th>
                }
                @if (Model.DataTableColumns.Contains("costuom"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResCostUOMMaster.CostUOM
                    </th>
                }
                @if (Model.DataTableColumns.Contains("defaultreorderquantity"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.DefaultReorderQuantity
                    </th>

                }
                @if (Model.DataTableColumns.Contains("defaultpullquantity"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.DefaultPullQuantity
                    </th>
                }
                @if (Model.DataTableColumns.Contains("cost"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Cost
                    </th>
                }
                @if (Model.DataTableColumns.Contains("markup"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Markup
                    </th>
                }
                @if (Model.DataTableColumns.Contains("sellprice"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.SellPrice
                    </th>
                }
                @if (Model.DataTableColumns.Contains("extendedcost"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ExtendedCost
                    </th>
                }
                @if (Model.DataTableColumns.Contains("leadtimeindays"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.LeadTimeInDays
                    </th>
                }
                @if (Model.DataTableColumns.Contains("trend"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Trend
                    </th>
                }
                @if (Model.DataTableColumns.Contains("taxable"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Taxable
                    </th>
                }
                @if (Model.DataTableColumns.Contains("consignment"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Consignment
                    </th>
                }
                @if (Model.DataTableColumns.Contains("stagedquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.StagedQuantity
                    </th>
                }
                @if (Model.DataTableColumns.Contains("intransitquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.InTransitquantity
                    </th>
                }
                @if (Model.DataTableColumns.Contains("onorderquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.OnOrderQuantity
                    </th>
                }
                @if (Model.DataTableColumns.Contains("ontransferquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.OnTransferQuantity
                    </th>
                }
                @if (Model.DataTableColumns.Contains("suggestedorderquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.SuggestedOrderQuantity
                    </th>
                }
                @if (Model.DataTableColumns.Contains("requisitionedquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.RequisitionedQuantity
                    </th>
                }
                @if (Model.DataTableColumns.Contains("averageusage"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.AverageUsage
                    </th>
                }
                @if (Model.DataTableColumns.Contains("turns"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Turns
                    </th>
                }
                @if (Model.DataTableColumns.Contains("onhandquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.OnHandQuantity
                    </th>
                }
                @if (Model.DataTableColumns.Contains("isitemlevelminmaxqtyrequired"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.IsItemLevelMinMaxQtyRequired
                    </th>
                }
                @if (Model.DataTableColumns.Contains("criticalquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.CriticalQuantity
                    </th>
                }
                @if (Model.DataTableColumns.Contains("minimumquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.MinimumQuantity
                    </th>
                }
                @if (Model.DataTableColumns.Contains("maximumquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.MaximumQuantity
                    </th>
                }
                @if (Model.DataTableColumns.Contains("weightperpiece"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.WeightPerPiece
                    </th>
                }
                @if (Model.DataTableColumns.Contains("itemuniquenumber"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ItemUniqueNumber
                    </th>
                }
                @if (Model.DataTableColumns.Contains("istransfer"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsTransfer
                    </th>
                }
                @if (Model.DataTableColumns.Contains("ispurchase"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsPurchase
                    </th>
                }
                @if (Model.DataTableColumns.Contains("inventrylocation"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResBin.BinNumber
                    </th>
                }
                @if (Model.DataTableColumns.Contains("inventoryclassification"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.InventoryClassification
                    </th>
                }
                @if (Model.DataTableColumns.Contains("serialnumbertracking"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.SerialNumberTracking
                    </th>
                }
                @if (Model.DataTableColumns.Contains("lotnumbertracking"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.LotNumberTracking
                    </th>
                }
                @if (Model.DataTableColumns.Contains("datecodetracking"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.DateCodeTracking
                    </th>
                }
                @if (Model.DataTableColumns.Contains("itemtype"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.ItemType
                    </th>
                }
                @if (Model.DataTableColumns.Contains("imagepath"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ImagePath
                    </th>
                }
                @if (Model.DataTableColumns.Contains("udf1"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF1
                    </th>
                }
                @if (Model.DataTableColumns.Contains("udf2"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF2
                    </th>
                }
                @if (Model.DataTableColumns.Contains("udf3"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF3
                    </th>
                }
                @if (Model.DataTableColumns.Contains("udf4"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF4
                    </th>
                }
                @if (Model.DataTableColumns.Contains("udf5"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF5
                    </th>
                }
                @if (Model.DataTableColumns.Contains("islotserialexpirycost"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsLotSerialExpiryCost
                    </th>
                }
                @if (Model.DataTableColumns.Contains("isbuildbreak"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsBuildBreak
                    </th>
                }
                @if (Model.DataTableColumns.Contains("enforcedefaultpullquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.PullQtyScanOverride
                    </th>
                }
                @if (Model.DataTableColumns.Contains("enforcedefaultreorderquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsEnforceDefaultReorderQuantity
                    </th>
                }
                @if (Model.DataTableColumns.Contains("isautoinventoryclassification"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsAutoInventoryClassification
                    </th>
                }
                @if (Model.DataTableColumns.Contains("trendingsetting"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.TrendingSetting
                    </th>
                }
                @if (Model.DataTableColumns.Contains("ispackslipmandatoryatreceive"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsPackslipMandatoryAtReceive
                    </th>
                }
                @if (Model.DataTableColumns.Contains("itemimageexternalurl"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.ItemImageExternalURL
                    </th>
                }
                @if (Model.DataTableColumns.Contains("itemdocexternalurl"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.ItemDocExternalURL
                    </th>
                }
                @if (Model.DataTableColumns.Contains("isdeleted"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.IsDeleted
                    </th>
                }
                @if (Model.DataTableColumns.Contains("itemlink2externalurl"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.ItemLink2ExternalURL
                    </th>
                }
                @if (Model.DataTableColumns.Contains("isactive"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.IsActive
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            <tr ng-repeat="item in ImportPageDTO.lstItemMasterImportData" class='odd importtext-box-tr' style='background-color: rgb(239, 247, 255);'>                
                <td class="read_only ImportStatus">
                    {{item.Status}}
                </td>
                <td class="read_only ImportReason">
                    {{item.Reason}}
                </td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].ItemNumber" value="{{item.ItemNumber}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].Link2" value="{{item.Link2}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].ManufacturerName" value="{{item.ManufacturerName}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].ManufacturerNumber" value="{{item.ManufacturerNumber}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].SupplierName" value="{{item.SupplierName}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].SupplierPartNo" value="{{item.SupplierPartNo}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].BlanketOrderNumber" value="{{item.BlanketOrderNumber}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].UPC" value="{{item.UPC}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].UNSPSC" value="{{item.UNSPSC}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].Description" value="{{item.Description}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].LongDescription" value="{{item.LongDescription}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].CategoryName" value="{{item.CategoryName}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].GLAccount" value="{{item.GLAccount}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].Unit" value="{{item.Unit}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].CostUOMName" value="{{item.CostUOMName}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].DefaultReorderQuantity" value="{{item.DefaultReorderQuantity}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].DefaultPullQuantity" value="{{item.DefaultPullQuantity}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].Cost" value="{{item.Cost}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].Markup" value="{{item.Markup}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].SellPrice" value="{{item.SellPrice}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].ExtendedCost" value="{{item.ExtendedCost}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].LeadTimeInDays" value="{{item.LeadTimeInDays}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].Trend" value="{{item.Trend}}" type="checkbox" ng-checked="item.expression"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].Taxable" value="{{item.Taxable}}" type="checkbox" ng-checked="item.Taxable"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].Consignment" value="{{item.Consignment}}" type="checkbox" ng-checked="item.Consignment"></td>
                <td>{{item.StagedQuantity}}</td>
                <td>{{item.InTransitquantity}}</td>
                <td>{{item.OnOrderQuantity}}</td>
                <td>{{item.OnTransferQuantity}}</td>
                <td>{{item.SuggestedOrderQuantity}}</td>
                <td>{{item.RequisitionedQuantity}}</td>
                <td>{{item.AverageUsage}}</td>
                <td>{{item.Turns}}</td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].OnHandQuantity" value="{{item.OnHandQuantity}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].IsItemLevelMinMaxQtyRequired" value="{{item.IsItemLevelMinMaxQtyRequired}}" type="checkbox" ng-checked="item.IsItemLevelMinMaxQtyRequired"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].CriticalQuantity" value="{{item.CriticalQuantity}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].MinimumQuantity" value="{{item.MinimumQuantity}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].MaximumQuantity" value="{{item.MaximumQuantity}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].WeightPerPiece" value="{{item.WeightPerPiece}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].ItemUniqueNumber" value="{{item.ItemUniqueNumber}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].IsTransfer" value="{{item.IsTransfer}}" type="checkbox" ng-checked="item.IsTransfer"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].IsPurchase" value="{{item.IsPurchase}}" type="checkbox" ng-checked="item.IsPurchase"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].InventryLocation" value="{{item.InventryLocation}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].InventoryClassificationName" value="{{item.InventoryClassificationName}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].SerialNumberTracking" value="{{item.SerialNumberTracking}}" type="checkbox" ng-checked="item.SerialNumberTracking"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].LotNumberTracking" value="{{item.LotNumberTracking}}" type="checkbox" ng-checked="item.LotNumberTracking"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].DateCodeTracking" value="{{item.DateCodeTracking}}" type="checkbox" ng-checked="item.DateCodeTracking"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].ItemType" value="{{item.ItemType}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].ImagePath" value="{{item.ImagePath}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].UDF1" value="{{item.UDF1}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].UDF2" value="{{item.UDF2}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].UDF3" value="{{item.UDF3}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].UDF4" value="{{item.UDF4}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].UDF5" value="{{item.UDF5}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].IsLotSerialExpiryCost" value="{{item.IsLotSerialExpiryCost}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].IsBuildBreak" value="{{item.IsBuildBreak}}" type="checkbox" ng-checked="item.IsBuildBreak"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].PullQtyScanOverride" value="{{item.PullQtyScanOverride}}" type="checkbox" ng-checked="item.PullQtyScanOverride"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].IsEnforceDefaultReorderQuantity" value="{{item.IsEnforceDefaultReorderQuantity}}" type="checkbox" ng-checked="item.IsEnforceDefaultReorderQuantity"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].IsAutoInventoryClassification" value="{{item.IsAutoInventoryClassification}}" type="checkbox" ng-checked="item.IsAutoInventoryClassification"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].TrendingSettingName" value="{{item.TrendingSettingName}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].IsPackslipMandatoryAtReceive" value="{{item.IsPackslipMandatoryAtReceive}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].ItemImageExternalURL" value="{{item.ItemImageExternalURL}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].ItemDocExternalURL" value="{{item.ItemDocExternalURL}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].IsDeleted" value="{{item.IsDeleted}}" type="checkbox" ng-checked="item.IsDeleted"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].ItemLink2ExternalURL" value="{{item.ItemLink2ExternalURL}}" type="text"></td>
                <td><input name="objImportPageDTO.lstItemMasterImportData[{{item.Index}}].IsActive" value="{{item.IsActive}}" type="text"></td>
            </tr>
        </tbody>
    </table>
</div>
<script type="text/javascript">
    $(document).ready(function(){
        var _ImportPageDTO = @Html.Raw(ImportPageDTO);
        var eTurnsAppModule = angular.module("eTurnsAppModule");
        eTurnsAppModule.controller("myCtrl", function ($scope) {
            $scope.ImportPageDTO = _ImportPageDTO;
        });
        angular.bootstrap($('#myImportDataTable_wrapper'), ['eTurnsAppModule']);
    });
</script>