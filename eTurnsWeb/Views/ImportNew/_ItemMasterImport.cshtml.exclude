@model eTurns.DTO.ImportMastersNewDTO.ImportPageDTO

@{

}
@using (ImportMastersNewDTO.ImportPageDTO objImportPageDTO = Model)
{
    //@Html.HiddenFor(m => m.DataTableColumns.Concat(','));
    <input type="hidden" name="hdnDataTableColumns" value='@String.Join(",", Model.DataTableColumns)' />
    <table class="display dataTable">
        <thead>
            <tr>
                @if (objImportPageDTO.DataTableColumns.Count() > 0)
                {
                    <th class="ui-state-default read_only">
                        @ResCommon.Status
                    </th>
                    <th class="ui-state-default read_only">
                        @ResCommon.Reason
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("itemnumber"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.ItemNumber
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("link2"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.Link2
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("manufacturer"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ManufacturerName
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("manufacturernumber"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ManufacturerNumber
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("suppliername"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.Supplier
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("supplierpartno"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.SupplierPartNo
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("blanketordernumber"))
                {
                    <th class="ui-state-default read_only">
                        @ResSupplierBlanketPODetails.BlanketPO
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("upc"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UPC
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("unspsc"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UNSPSC
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("description"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Description
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("longdescription"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.LongDescription
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("categoryname"))
                {
                    <th class="ui-state-default read_only">
                        @ResCategoryMaster.Category
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("glaccount"))
                {
                    <th class="ui-state-default read_only">
                        @ResGLAccount.GLAccount
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("uom"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResUnitMaster.Unit
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("costuom"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResCostUOMMaster.CostUOM
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("defaultreorderquantity"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.DefaultReorderQuantity
                    </th>

                }
                @if (objImportPageDTO.DataTableColumns.Contains("defaultpullquantity"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.DefaultPullQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("cost"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Cost
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("markup"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Markup
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("sellprice"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.SellPrice
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("extendedcost"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ExtendedCost
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("leadtimeindays"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.LeadTimeInDays
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("trend"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Trend
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("taxable"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Taxable
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("consignment"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Consignment
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("stagedquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.StagedQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("intransitquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.InTransitquantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("onorderquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.OnOrderQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("ontransferquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.OnTransferQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("suggestedorderquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.SuggestedOrderQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("requisitionedquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.RequisitionedQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("averageusage"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.AverageUsage
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("turns"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.Turns
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("onhandquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.OnHandQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("isitemlevelminmaxqtyrequired"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.IsItemLevelMinMaxQtyRequired
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("criticalquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.CriticalQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("minimumquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.MinimumQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("maximumquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.MaximumQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("weightperpiece"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.WeightPerPiece
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("itemuniquenumber"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ItemUniqueNumber
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("istransfer"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsTransfer
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("ispurchase"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsPurchase
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("inventrylocation"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResBin.BinNumber
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("inventoryclassification"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.InventoryClassification
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("serialnumbertracking"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.SerialNumberTracking
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("lotnumbertracking"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.LotNumberTracking
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("datecodetracking"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.DateCodeTracking
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("itemtype"))
                {
                    <th class="ui-state-default read_only">
                        <em>* </em>
                        @ResItemMaster.ItemType
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("imagepath"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.ImagePath
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("udf1"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF1
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("udf2"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF2
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("udf3"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF3
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("udf4"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF4
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("udf5"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.UDF5
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("islotserialexpirycost"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsLotSerialExpiryCost
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("isbuildbreak"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsBuildBreak
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("enforcedefaultpullquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.PullQtyScanOverride
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("enforcedefaultreorderquantity"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsEnforceDefaultReorderQuantity
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("isautoinventoryclassification"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsAutoInventoryClassification
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("trendingsetting"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.TrendingSetting
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("ispackslipmandatoryatreceive"))
                {
                    <th class="ui-state-default read_only">
                        @ResItemMaster.IsPackslipMandatoryAtReceive
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("itemimageexternalurl"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.ItemImageExternalURL
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("itemdocexternalurl"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.ItemDocExternalURL
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("isdeleted"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.IsDeleted
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("itemlink2externalurl"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.ItemLink2ExternalURL
                    </th>
                }
                @if (objImportPageDTO.DataTableColumns.Contains("isactive"))
                {
                    <th class="ui-state-default read_only">
                        @eTurns.DTO.ResItemMaster.IsActive
                    </th>
                }
            </tr>
        </thead>
        <tbody>

            @*@{
                    List<eTurns.DTO.ImportMastersNewDTO.ItemMasterImport> lstImport = (List<eTurns.DTO.ImportMastersNewDTO.ItemMasterImport>)objImportPageDTO.lstItemMasterImportData;
                }*@

            @for (int i = 0; i < objImportPageDTO.lstItemMasterImportData.Count; i++)
            {
                string strTRAttributes = "";
                if (i % 2 != 0)
                {
                    strTRAttributes = "class='odd' style='background-color: rgb(239, 247, 255);'";
                }
                else
                {
                    strTRAttributes = "class='even' style='background-color: rgb(255, 255, 255);'";
                }

                <tr @Html.Raw(@strTRAttributes)>
                    @if (objImportPageDTO.DataTableColumns.Count() > 0)
                    {
                        <td class="read_only ImportStatus">
                            @Html.DisplayFor(m => objImportPageDTO.lstItemMasterImportData[i].Status, new { @class = "importtext-box" })
                        </td>
                        <td class="read_only ImportReason">
                            @if (ViewData.ModelState.IsValid)
                            {
                                @Html.DisplayFor(m => objImportPageDTO.lstItemMasterImportData[i].Reason, new { @class = "importtext-box" })
                            }
                            @Html.ValidationMessageFor(m => objImportPageDTO.lstItemMasterImportData[i].ItemNumber, null, new { @style = "color:red", @class = "ImportValidationError" })
                            @Html.ValidationMessageFor(m => objImportPageDTO.lstItemMasterImportData[i].InventryLocation, null, new { @style = "color:red", @class = "ImportValidationError" })
                        </td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("itemnumber"))
                    {
                        <td class="read_only"><input id="ItemNumber[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].ItemNumber" value="@objImportPageDTO.lstItemMasterImportData[i].ItemNumber" type="text" class="importtext-box" data-val="true" data-val-required="Item number required" data-val-length="Item number can not be more then 100 character." data-val-length-max="100"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("link2"))
                    {
                        <td class="read_only"><input id="Link2[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].Link2" value="@objImportPageDTO.lstItemMasterImportData[i].Link2" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("manufacturer"))
                    {
                        <td class="read_only"><input id="ManufacturerName[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].ManufacturerName" value="@objImportPageDTO.lstItemMasterImportData[i].ManufacturerName" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("manufacturernumber"))
                    {
                        <td class="read_only"><input id="ManufacturerNumber[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].ManufacturerNumber" value="@objImportPageDTO.lstItemMasterImportData[i].ManufacturerNumber" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("suppliername"))
                    {
                        <td class="read_only"><input id="SupplierName[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].SupplierName" value="@objImportPageDTO.lstItemMasterImportData[i].SupplierName" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("supplierpartno"))
                    {
                        <td class="read_only"><input id="SupplierPartNo[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].SupplierPartNo" value="@objImportPageDTO.lstItemMasterImportData[i].SupplierPartNo" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("blanketordernumber"))
                    {
                        <td class="read_only"><input id="BlanketOrderNumber[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].BlanketOrderNumber" value="@objImportPageDTO.lstItemMasterImportData[i].BlanketOrderNumber" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("upc"))
                    {
                        <td class="read_only"><input id="UPC[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].UPC" value="@objImportPageDTO.lstItemMasterImportData[i].UPC" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("unspsc"))
                    {
                        <td class="read_only"><input id="UNSPSC[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].UNSPSC" value="@objImportPageDTO.lstItemMasterImportData[i].UNSPSC" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("description"))
                    {
                        <td class="read_only"><input id="Description[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].Description" value="@objImportPageDTO.lstItemMasterImportData[i].Description" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("longdescription"))
                    {
                        <td class="read_only"><input id="LongDescription[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].LongDescription" value="@objImportPageDTO.lstItemMasterImportData[i].LongDescription" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("categoryname"))
                    {
                        <td class="read_only"><input id="CategoryName[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].CategoryName" value="@objImportPageDTO.lstItemMasterImportData[i].CategoryName" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("glaccount"))
                    {
                        <td class="read_only"><input id="GLAccount[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].GLAccount" value="@objImportPageDTO.lstItemMasterImportData[i].GLAccount" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("uom"))
                    {
                        <td class="read_only"><input id="Unit[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].Unit" value="@objImportPageDTO.lstItemMasterImportData[i].Unit" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("costuom"))
                    {
                        <td class="read_only"><input id="CostUOMName[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].CostUOMName" value="@objImportPageDTO.lstItemMasterImportData[i].CostUOMName" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("defaultreorderquantity"))
                    {
                        <td class="read_only"><input id="DefaultReorderQuantity[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].DefaultReorderQuantity" value="@objImportPageDTO.lstItemMasterImportData[i].DefaultReorderQuantity" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("defaultpullquantity"))
                    {
                        <td class="read_only"><input id="DefaultPullQuantity[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].DefaultPullQuantity" value="@objImportPageDTO.lstItemMasterImportData[i].DefaultPullQuantity" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("cost"))
                    {
                        <td class="read_only"><input id="Cost[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].Cost" value="@objImportPageDTO.lstItemMasterImportData[i].Cost" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("markup"))
                    {
                        <td class="read_only"><input id="Markup[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].Markup" value="@objImportPageDTO.lstItemMasterImportData[i].Markup" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("sellprice"))
                    {
                        <td class="read_only"><input id="SellPrice[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].SellPrice" value="@objImportPageDTO.lstItemMasterImportData[i].SellPrice" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("extendedcost"))
                    {
                        <td class="read_only"><input id="ExtendedCost[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].ExtendedCost" value="@objImportPageDTO.lstItemMasterImportData[i].ExtendedCost" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("leadtimeindays"))
                    {
                        <td class="read_only"><input id="LeadTimeInDays[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].LeadTimeInDays" value="@objImportPageDTO.lstItemMasterImportData[i].LeadTimeInDays" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("trend"))
                    {
                        <td class="read_only"><input id="Trend[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].Trend" value="@objImportPageDTO.lstItemMasterImportData[i].Trend" type="checkbox" @Html.Raw(objImportPageDTO.lstItemMasterImportData[i].Trend ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The Trend field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("taxable"))
                    {
                        <td class="read_only"><input id="Taxable[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].Taxable" value="@objImportPageDTO.lstItemMasterImportData[i].Taxable" type="checkbox" @Html.Raw(objImportPageDTO.lstItemMasterImportData[i].Taxable ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The Taxable field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("consignment"))
                    {
                        <td class="read_only"><input id="Consignment[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].Consignment" value="@objImportPageDTO.lstItemMasterImportData[i].Consignment" type="checkbox" @Html.Raw(objImportPageDTO.lstItemMasterImportData[i].Consignment ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The Consignment field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("stagedquantity"))
                    {
                        <td class="read_only">@objImportPageDTO.lstItemMasterImportData[i].StagedQuantity.ToString()</td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("intransitquantity"))
                    {
                        <td class="read_only">@objImportPageDTO.lstItemMasterImportData[i].InTransitquantity.ToString()</td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("onorderquantity"))
                    {
                        <td class="read_only">@objImportPageDTO.lstItemMasterImportData[i].OnOrderQuantity.ToString()</td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("ontransferquantity"))
                    {
                        <td class="read_only">@objImportPageDTO.lstItemMasterImportData[i].OnTransferQuantity.ToString()</td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("suggestedorderquantity"))
                    {
                        <td class="read_only">@objImportPageDTO.lstItemMasterImportData[i].SuggestedOrderQuantity.ToString()</td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("requisitionedquantity"))
                    {
                        <td class="read_only">@objImportPageDTO.lstItemMasterImportData[i].RequisitionedQuantity.ToString()</td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("averageusage"))
                    {
                        <td class="read_only">@objImportPageDTO.lstItemMasterImportData[i].AverageUsage.ToString()</td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("turns"))
                    {
                        <td class="read_only">@objImportPageDTO.lstItemMasterImportData[i].Turns.ToString()</td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("onhandquantity"))
                    {
                        <td class="read_only"><input id="OnHandQuantity[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].OnHandQuantity" value="@objImportPageDTO.lstItemMasterImportData[i].OnHandQuantity" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("isitemlevelminmaxqtyrequired"))
                    {
                        <td class="read_only"><input id="IsItemLevelMinMaxQtyRequired[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].IsItemLevelMinMaxQtyRequired" value="@objImportPageDTO.lstItemMasterImportData[i].IsItemLevelMinMaxQtyRequired" type="checkbox" @Html.Raw(objImportPageDTO.lstItemMasterImportData[i].IsItemLevelMinMaxQtyRequired ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The Is Item Level Min Max Qty field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("criticalquantity"))
                    {
                        <td class="read_only"><input id="CriticalQuantity[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].CriticalQuantity" value="@objImportPageDTO.lstItemMasterImportData[i].CriticalQuantity" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("minimumquantity"))
                    {
                        <td class="read_only"><input id="MinimumQuantity[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].MinimumQuantity" value="@objImportPageDTO.lstItemMasterImportData[i].MinimumQuantity" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("maximumquantity"))
                    {
                        <td class="read_only"><input id="MaximumQuantity[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].MaximumQuantity" value="@objImportPageDTO.lstItemMasterImportData[i].MaximumQuantity" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("weightperpiece"))
                    {
                        <td class="read_only"><input id="WeightPerPiece[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].WeightPerPiece" value="@objImportPageDTO.lstItemMasterImportData[i].WeightPerPiece" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("itemuniquenumber"))
                    {
                        <td class="read_only"><input id="ItemUniqueNumber[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].ItemUniqueNumber" value="@objImportPageDTO.lstItemMasterImportData[i].ItemUniqueNumber" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("istransfer"))
                    {
                        <td class="read_only"><input id="IsTransfer[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].IsTransfer" value="@objImportPageDTO.lstItemMasterImportData[i].IsTransfer" type="checkbox" @Html.Raw(objImportPageDTO.lstItemMasterImportData[i].IsTransfer ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The IsTransfer field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("ispurchase"))
                    {
                        <td class="read_only"><input id="IsPurchase[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].IsPurchase" value="@objImportPageDTO.lstItemMasterImportData[i].IsPurchase" type="checkbox" @Html.Raw(objImportPageDTO.lstItemMasterImportData[i].IsPurchase ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The IsPurchase field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("inventrylocation"))
                    {
                        <td class="read_only"><input id="InventryLocation[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].InventryLocation" value="@objImportPageDTO.lstItemMasterImportData[i].InventryLocation" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("inventoryclassification"))
                    {
                        <td class="read_only"><input id="InventoryClassificationName[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].InventoryClassificationName" value="@objImportPageDTO.lstItemMasterImportData[i].InventoryClassificationName" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("serialnumbertracking"))
                    {
                        <td class="read_only"><input id="SerialNumberTracking[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].SerialNumberTracking" value="@objImportPageDTO.lstItemMasterImportData[i].SerialNumberTracking" type="checkbox" @Html.Raw(objImportPageDTO.lstItemMasterImportData[i].SerialNumberTracking ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The serial number tracking field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("lotnumbertracking"))
                    {
                        <td class="read_only"><input id="LotNumberTracking[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].LotNumberTracking" value="@objImportPageDTO.lstItemMasterImportData[i].LotNumberTracking" type="checkbox" @Html.Raw(objImportPageDTO.lstItemMasterImportData[i].LotNumberTracking ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The lot number tracking field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("datecodetracking"))
                    {
                        <td class="read_only"><input id="DateCodeTracking[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].DateCodeTracking" value="@objImportPageDTO.lstItemMasterImportData[i].DateCodeTracking" type="checkbox" @Html.Raw(objImportPageDTO.lstItemMasterImportData[i].DateCodeTracking ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The date code tracking field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("itemtype"))
                    {
                        <td class="read_only"><input id="ItemType[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].ItemType" value="@objImportPageDTO.lstItemMasterImportData[i].ItemType" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("imagepath"))
                    {
                        <td class="read_only"><input id="ImagePath[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].ImagePath" value="@objImportPageDTO.lstItemMasterImportData[i].ImagePath" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("udf1"))
                    {
                        <td class="read_only"><input id="UDF1[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].UDF1" value="@objImportPageDTO.lstItemMasterImportData[i].UDF1" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("udf2"))
                    {
                        <td class="read_only"><input id="UDF2[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].UDF2" value="@objImportPageDTO.lstItemMasterImportData[i].UDF2" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("udf3"))
                    {
                        <td class="read_only"><input id="UDF3[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].UDF3" value="@objImportPageDTO.lstItemMasterImportData[i].UDF3" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("udf4"))
                    {
                        <td class="read_only"><input id="UDF4[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].UDF4" value="@objImportPageDTO.lstItemMasterImportData[i].UDF4" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("udf5"))
                    {
                        <td class="read_only"><input id="UDF5[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].UDF5" value="@objImportPageDTO.lstItemMasterImportData[i].UDF5" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("islotserialexpirycost"))
                    {
                        <td class="read_only"><input id="IsLotSerialExpiryCost[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].IsLotSerialExpiryCost" value="@objImportPageDTO.lstItemMasterImportData[i].IsLotSerialExpiryCost" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("isbuildbreak"))
                    {
                        <td class="read_only"><input id="IsBuildBreak[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].IsBuildBreak" value="@objImportPageDTO.lstItemMasterImportData[i].IsBuildBreak" type="checkbox" @Html.Raw(objImportPageDTO.lstItemMasterImportData[i].IsBuildBreak ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The IsBuildBreak field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("enforcedefaultpullquantity"))
                    {
                        <td class="read_only"><input id="PullQtyScanOverride[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].PullQtyScanOverride" value="@objImportPageDTO.lstItemMasterImportData[i].PullQtyScanOverride" type="checkbox" @Html.Raw(objImportPageDTO.lstItemMasterImportData[i].PullQtyScanOverride ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The PullQtyScanOverride field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("enforcedefaultreorderquantity"))
                    {
                        <td class="read_only"><input id="IsEnforceDefaultReorderQuantity[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].IsEnforceDefaultReorderQuantity" value="@objImportPageDTO.lstItemMasterImportData[i].IsEnforceDefaultReorderQuantity" type="checkbox" @Html.Raw((objImportPageDTO.lstItemMasterImportData[i].IsEnforceDefaultReorderQuantity ?? false) ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The IsEnforceDefaultReorderQuantity field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("isautoinventoryclassification"))
                    {
                        <td class="read_only"><input id="IsAutoInventoryClassification[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].IsAutoInventoryClassification" value="@objImportPageDTO.lstItemMasterImportData[i].IsAutoInventoryClassification" type="checkbox" @Html.Raw(objImportPageDTO.lstItemMasterImportData[i].IsAutoInventoryClassification ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The IsAutoInventoryClassification field is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("trendingsetting"))
                    {
                        <td class="read_only"><input id="TrendingSettingName[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].TrendingSettingName" value="@objImportPageDTO.lstItemMasterImportData[i].TrendingSettingName" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("ispackslipmandatoryatreceive"))
                    {
                        <td class="read_only"><input id="IsPackslipMandatoryAtReceive[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].IsPackslipMandatoryAtReceive" value="@objImportPageDTO.lstItemMasterImportData[i].IsPackslipMandatoryAtReceive" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("itemimageexternalurl"))
                    {
                        <td class="read_only"><input id="ItemImageExternalURL[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].ItemImageExternalURL" value="@objImportPageDTO.lstItemMasterImportData[i].ItemImageExternalURL" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("itemdocexternalurl"))
                    {
                        <td class="read_only"><input id="ItemDocExternalURL[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].ItemDocExternalURL" value="@objImportPageDTO.lstItemMasterImportData[i].ItemDocExternalURL" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("isdeleted"))
                    {
                        <td class="read_only"><input id="IsDeleted[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].IsDeleted" value="@objImportPageDTO.lstItemMasterImportData[i].IsDeleted" type="checkbox" @Html.Raw((objImportPageDTO.lstItemMasterImportData[i].IsDeleted ?? false) ? "checked='checked'" : "") class="importtext-box valid" data-val="true" data-val-required="The IsDeleted is required."></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("itemlink2externalurl"))
                    {
                        <td class="read_only"><input id="ItemLink2ExternalURL[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].ItemLink2ExternalURL" value="@objImportPageDTO.lstItemMasterImportData[i].ItemLink2ExternalURL" type="text" class="importtext-box"></td>
                    }
                    @if (objImportPageDTO.DataTableColumns.Contains("isactive"))
                    {
                        <td class="read_only"><input id="IsActive[@i.ToString()]" name="objImportPageDTO.lstItemMasterImportData[@i.ToString()].IsActive" value="@objImportPageDTO.lstItemMasterImportData[i].IsActive" type="text" class="importtext-box"></td>
                    }
                </tr>
            }
        </tbody>
    </table>
}