@model IEnumerable<eTurns.DTO.RequisitionDetailsDTO>
@{
    string ListName = "";
    if (ViewBag.RequisitionStatus == "Unsubmitted")
    {
        ListName = "RequisitionDetails";
    }
    if (ViewBag.RequisitionStatus == "Submitted")
    {
        ListName = "RequisitionDetailsSubmittted";
    }
    if (ViewBag.RequisitionStatus == "Approved")
    {
        ListName = "RequisitionDetailsApproved";
    }
    if (ViewBag.RequisitionStatus == "Closed")
    {
        ListName = "RequisitionDetailsClosed";
    }

    bool HasOnTheFlyEntryRight = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.OnTheFlyEntry);
    GridHeaderSettings settings = new GridHeaderSettings()
    {
        dataViewType = DataViewType.None,
        DisplaySaveButton = true,
        DisplayUDFButton = false,
        UDFSetupFor = "",
        DisplaySettings = true,
        DisplayColumnSetupButton = false,
        DisplayContextMenu = false,
        ColumnSetupFor = ListName,
        DisplayPrintBlock = false,
        DisplayDeleteButton = true,
        ShowSelectAll = true,
        DataTableName = "RequisitionItemsTable" + ViewBag.RequisitionID
    };
    bool IsApprove = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.RequisitionApproval, eTurnsWeb.Helper.SessionHelper.PermissionType.Approval);
    bool IsUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Requisitions, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    bool IsClose = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.RequisitionClosing, eTurnsWeb.Helper.SessionHelper.PermissionType.Approval);
    bool isPullList_Create = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.PullMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool isPullUDF = new eTurns.DAL.UDFDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetNonDeletedUDFCountByUDFTableName("PullMaster", eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID) > 0;
    bool isCost = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.HideCostMarkUpSellPrice);
    bool AllowCheckinCheckOut = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.AllowCheckInCheckout);
    RequisitionMasterDTO objDTO = ViewBag.ReqDTO;
    string ViewNewPullbuttons = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["ViewNewPullbuttons"]);
    if (string.IsNullOrWhiteSpace(ViewNewPullbuttons))
    {
        ViewNewPullbuttons = "no";
    }
    string UDF1Text = eTurnsWeb.Helper.ResourceUtils.GetResource("ResPullMaster", "UDF1", true);
    string UDF2Text = eTurnsWeb.Helper.ResourceUtils.GetResource("ResPullMaster", "UDF2", true);
    string UDF3Text = eTurnsWeb.Helper.ResourceUtils.GetResource("ResPullMaster", "UDF3", true);
    string UDF4Text = eTurnsWeb.Helper.ResourceUtils.GetResource("ResPullMaster", "UDF4", true);
    string UDF5Text = eTurnsWeb.Helper.ResourceUtils.GetResource("ResPullMaster", "UDF5", true);

    bool UDF1IsRequired = Html.GetUdfIsRequiredStatus("PullMaster", "UDF1");
    bool UDF2IsRequired = Html.GetUdfIsRequiredStatus("PullMaster", "UDF2");
    bool UDF3IsRequired = Html.GetUdfIsRequiredStatus("PullMaster", "UDF3");
    bool UDF4IsRequired = Html.GetUdfIsRequiredStatus("PullMaster", "UDF4");
    bool UDF5IsRequired = Html.GetUdfIsRequiredStatus("PullMaster", "UDF5");

    //----------------------------------------------------------------------------
    //
    eTurns.DAL.ProjectMasterDAL objData = new eTurns.DAL.ProjectMasterDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName);
    var defaultProjectSpent = objData.GetDefaultProjectSpendRecord(eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID, false, false);
    List<ProjectMasterDTO> lstProjectCommon = null;
    List<ProjectMasterDTO> lstProject = new List<ProjectMasterDTO>();
    Int32? IsClosedFalseCommon = null;

    if (defaultProjectSpent != null && defaultProjectSpent.GUID != Guid.Empty)
    {
        lstProject.Add(defaultProjectSpent);
        lstProjectCommon = lstProject;
    }
    else
    {
        lstProject = objData.GetAllProjectMasterByRoomPlain(eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID, false, false).ToList();
        if (lstProject != null && lstProject.Any())
        {
            IsClosedFalseCommon = 1;
        }
        lstProjectCommon = lstProject;
    }


    //----------------------------------------------------------------------------
    //
    string DecFormat = "N";
    if (eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits != null && !String.IsNullOrEmpty(eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits) && !String.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits))
    {
        DecFormat = "N" + eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits;
    }

    ProjectMasterDTO lstDTO = null;
    Int64 RoomID = eTurnsWeb.Helper.SessionHelper.RoomID;
    Int64 CompanyID = eTurnsWeb.Helper.SessionHelper.CompanyID;
    objData = new eTurns.DAL.ProjectMasterDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName);
    lstDTO = objData.GetDefaultProjectSpendRecord(RoomID, CompanyID, false, false);
    string ProjectSpendNameUsage = string.Empty;
    Guid? ProjectSpendGuidUsage = null;
    if (lstDTO != null)
    {
        ProjectSpendNameUsage = lstDTO.ProjectSpendName;
        ProjectSpendGuidUsage = lstDTO.GUID;
    }
    else
    {
        ProjectSpendNameUsage = string.Empty;
        ProjectSpendGuidUsage = null;
    }
    bool isToolUDF = new eTurns.DAL.UDFDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetNonDeletedUDFCountByUDFTableName("ToolCheckInOutHistory", eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID) > 0;
    string commonControlType = "Textbox";
    var objPOMaster = new eTurns.DAL.UDFDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetSinglePullPOPlain(eTurnsWeb.Helper.SessionHelper.CompanyID, eTurnsWeb.Helper.SessionHelper.RoomID);
    if (objPOMaster != null)
    {
        commonControlType = objPOMaster.UDFControlType;
    }
}
<script type="text/javascript">
    var PullItemQuantityUrl = '@Url.Action("PullItemQuantity", "Pull")';
    var PullLotSrSelectionUrl = '@Url.Content("~/Pull/PullLotSrSelection")';
    var isDeleteSrLotRow = false;
    var BoolTrueString = '@Boolean.TrueString';
    var PullSerialsAndLotsNewUrl = '@Url.Action("PullSerialsAndLotsNew", "Pull")';
    var CloseRequisitionIfPullCompletedUrl = '@Url.Content("~/Consume/CloseRequisitionIfPullCompletedByDetailId")';
    var TechnicianText = '@eTurns.DTO.Resources.ResCommon.SelectTechnicianText';
    var msgInvalidTechnician = '@ResToolCheckInOutHistory.MsgRemoveInvalidValueFromTechnician';
    var MsgDuplicateLotNumberExpirationDate = '@ResPullMaster.MsgDuplicateLotNumberExpirationDate';
    var MsgDuplicateExpirationDate = '@ResPullMaster.MsgDuplicateExpirationDate';
    var MsgCreditTransactionDone = '@ResPullMaster.MsgCreditTransactionDone';
    var MsgCreditTransactionForSerialNumber = '@ResPullMaster.MsgCreditTransactionForSerialNumber';
    var EnterLotNumber = '@ResKitMaster.EnterLotNumber';
    var MsgSerialNumberValidation = '@ResReceiveOrderDetails.MsgSerialNumberValidation';
    var MsgEnterExpirationDate = '@ResPullMaster.MsgEnterExpirationDate';
    var MsgPullCreditQuantity = '@ResToolMaster.MsgPullCreditQuantity';
    var MsgStagingHeaderAvailable = '@ResToolMaster.MsgStagingHeaderAvailable';
    var MsgSelectStagingHeader = '@ResToolMaster.MsgSelectStagingHeader';
    var MsgSelectRowToDelete = '@ResPullMaster.MsgSelectRowToDelete';
    var MsgRowShouldExists = '@ResToolMaster.MsgRowShouldExists';
    var MsgErrorInProcess = '@ResCommon.ErrorInProcess';
    var MsgPullMoreQuantityValidation = '@ResToolMaster.MsgPullMoreQuantityValidation';
    var MsgEnteredPullQuantityValidation = '@ResToolMaster.MsgEnteredPullQuantityValidation';
    var MsgPullExpiredItemList = '@ResPullMaster.MsgPullExpiredItemList';
    var MsgCommonConfirmation = '@ResCommon.MsgCommonConfirmation';
    var SomeItemNotPulled = '@ResInventoryCountDetail.SomeItemNotPulled';
    var MsgPullDoneSuccess = '@ResToolMaster.MsgPullDoneSuccess';
    var MsgAllPulldone = '@ResPullMaster.AllPulldon';
    var MsgDuplicateLotNumber = '@ResToolMaster.MsgDuplicateLotNumber';
    var DuplicateSerialFound = '@ResMessage.DuplicateSerialFound';
    var DuplicateNumber = '@ResMessage.DuplicateNumber';
    var MsgEnterPullQuantity = '@ResPullMaster.MsgEnterPullQuantity';
    var MsgAlertValidated = '@ResPullMaster.MsgAlertValidated';
    var MsgNoLocationToAdd = '@ResPullMaster.MsgNoLocationToAdd';
    var MsgQtyToPullMandatory = '@ResPullMaster.MsgQtyToPullMandatory';
    var MsgLabourItemRequiredHours = '@ResPullMaster.MsgLabourItemRequiredHours';
    var PleaseSelectRecord = '@ResOrder.PleaseSelectRecord';
    var MsgInventoryLocationMandatory = '@ResPullMaster.InventoryLocationMandatory';
    var ReqTechnician = '@ResToolMaster.ReqTechnician';
    var MsgPullClosedValidation = '@ResPullMaster.MsgPullClosedValidation';
    var MsgPullDetails = '@ResPullMaster.PullDetails';

</script>
<script type='text/javascript' src="@Url.Content("~/Scripts/PageScripts/PullCommon.js?v=" + eTurnsWeb.Helper.CommonUtility.GetReleaseNumber())"></script>
<style type="text/css">
    .requisition-line-items .dataTables_length {
        top: -127px;
    }

    .requisition-line-items .dataTables_paginate {
        top: -118px;
    }

    .requisition-line-items .td-udfs {
        padding: 3px;
    }

    #tblPullCommonUDF .selectBox {
        width: 90% !important;
    }

    #tblPullCommonUDF .text-boxinner {
        width: 90% !important;
    }

    #tblPullChcekOutCommonUDF .selectBox {
        width: 90% !important;
    }

    #tblPullChcekOutCommonUDF .text-boxinner {
        width: 90% !important;
    }

     .tblPullCommonUDFthead {
       padding-right:5px;
       padding-left:5px;
    }

</style>

@*@if (isPullUDF && ViewBag.RequisitionStatus == "Approved")
    {
        <style type="text/css">
            .requisition-line-items .dataTables_length {
                top: -82px;
            }

            .requisition-line-items .dataTables_paginate {
                top: -72px;
            }

            .requisition-line-items .td-udfs {
                padding: 3px;
            }
        </style>
    }*@
<div class="userListingWrapper">
    <div class="userListBlock">
        <div id="tab7" class="tabContener requisition-line-items" style="width: 99.5%; height: 800px;">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search</span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="InnerItem_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_QLItem_filter" />
                        </a>
                    </div>
                </div>
                <input type="button" id="btnDiv" value="Div" style="visibility: hidden" />
                <input type="hidden" id="hdnListName" value="@ListName" />
                <input type="hidden" id="hdnReqId" value="@ViewBag.RequisitionID" />
            </div>
            @Html.QuickListItemsGridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.Requisitions)
            <div class="userContentInnerGrid" style="width: 99% !important; margin-left: 5px !important; float: left;">

                <table style="margin-bottom:1px;margin-top:1px;" id="tblPullCommonUDF">
                    <thead>
                        <tr>
                            <th></th>
                            <th id="thProjectSpend">@eTurns.DTO.ResRequisitionDetails.ProjectSpendID</th>
                            <th id="THPullOrderNumber">@eTurns.DTO.ResPullMaster.PullOrderNumber</th>
                            @if (isPullUDF)
                            {
                                @Html.RenderColumnsHeaderByName("PullMaster", typeof(eTurns.DTO.ResPullMaster))
                            }
                        </tr>                       
                    </thead>
                    <tbody>
                        <tr>
                            <td><b style="font-size:13px;">@ResCommon.Usethis</b> <input type="checkbox" id="chkUsePullCommonUDF" /></td>
                            <td id="TDProjectSpend">
                                <span style="position:relative">
                                    @if (string.IsNullOrWhiteSpace(ProjectSpendNameUsage))
                                    {
                                        if (HasOnTheFlyEntryRight)
                                        {
                                            <input type="text" id="txtProjectSpentCommon" class="text-boxinner AutoPullProjectSpents" style="width:93%;" value="" />
                                            <input type="hidden" id="ProjectSpendGUIDCommon" value="" />
                                            <a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsProjectSpents">
                                                <img src="/Content/images/arrow_down_black.png" alt="select" />
                                            </a>
                                        }
                                        else
                                        {
                                            @Html.DropDownList("ProjectSpendGUIDCommon", new SelectList((IEnumerable<eTurns.DTO.ProjectMasterDTO>)lstProjectCommon, "GUID", "ProjectSpendName"), string.Empty, new { @class = "selectBox", @width = "93%", @id = "txtProjectSpentCommon" })
                                        }

                                    }
                                    else
                                    {
                                        @Html.DropDownList("ProjectSpendGUIDCommon", new SelectList((IEnumerable<eTurns.DTO.ProjectMasterDTO>)lstProjectCommon, "GUID", "ProjectSpendName", ProjectSpendGuidUsage), string.Empty, new { @class = "selectBox", @width = "93%", @disabled = "disabled", @id = "txtProjectSpentCommon" })
                                    }
                                </span>

                            </td>
                            <td id="TDPullOrderNumber">
                                <span style="position:relative">
                                    @if (commonControlType == "Textbox")
                                    {
                                        <input type="text" id="txtPullOrderNumberCommon" class="text-boxinner" maxlength="22" style="width:93%;" />
                                    }
                                    else if (commonControlType == "Dropdown")
                                    {
                                        @Html.RenderColumnsArrayForPullOrderMaster("PullPoMaster")
                                    }
                                    else
                                    {
                                        <input type="text" id="txtPullOrderNumberCommon" class="text-boxinner AutoPullOrderNumber" maxlength="22" style="width:93%;" autocomplete="off" />
                                        <a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsOrderNumber">
                                            <img src="/Content/images/arrow_down_black.png" alt="select" />
                                        </a>
                                    }

                                </span>
                            </td>
                            @if (isPullUDF)
                            {
                                @Html.RenderColumnsArrayEditableObjectForDOMByName("PullMaster", controlIDPostfix: "PullCommon")
                            }
                                                   
                        </tr>
                    </tbody>
                </table>
                <table style="margin-bottom:1px;margin-top:1px;" id="tblPullChcekOutCommonUDF">
                    <thead>
                        <tr>
                            <th style="width:75px;">
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.TechnicianList
                            </th>
                            @if (isToolUDF)
                            {
                                @Html.RenderColumnsHeaderByName("ToolCheckInOutHistory", typeof(eTurns.DTO.ResToolCheckInOutHistory))
                            }
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <b style="font-size: 13px;">@ResCommon.Usethis</b>
                                <input type="checkbox" id="chkUseToolCommonUDF" />
                            </td>
                            <td>
                                <span style="position:relative">
                                    <input type="text" id="txtUseThisTechnician" class="text-boxinner UseThisAutoTechnician" style="width:120px;" value="@eTurns.DTO.Resources.ResCommon.SelectTechnicianText" autocomplete="off" role="textbox" aria-autocomplete="list" aria-haspopup="true">
                                    <input type="hidden" id="UseThisTechnicianGUID" value="">
                                    <a id="UseThislnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="UseThisShowAllOptions">
                                        <img src="/Content/images/arrow_down_black.png" alt="select">
                                    </a>
                                </span>

                            </td>
                            @if (isToolUDF)
                            {
                                @Html.RenderColumnsArrayEditableObjectForDOMByName("ToolCheckInOutHistory", controlIDPostfix: "ToolCommon")
                            }
                        </tr>
                    </tbody>
                </table>


                @*@if (isPullUDF && ViewBag.RequisitionStatus == "Approved")
                    {
                        <table style="margin-bottom:1px;margin-top:1px;" id="tblPullCommonUDF">
                            <thead>
                                <tr><th></th>@Html.RenderColumnsHeader("PullMaster", typeof(eTurns.DTO.ResPullMaster))</tr>
                            </thead>
                            <tbody>
                                <tr><td><b style="font-size:13px;">&nbsp;&nbsp;&nbsp;Use this</b> <input type="checkbox" id="chkUsePullCommonUDF" /></td>@Html.RenderColumnsArrayEditableObjectForDOM("PullMaster", controlIDPostfix: "PullCommon")</tr>
                            </tbody>
                        </table>
                    }*@
                <table id="RequisitionItemsTable@(ViewBag.RequisitionID)" class="display">
                    <thead>
                        <tr>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.RowNo
                            </th>
                            @if (ViewBag.RequisitionStatus == "Approved")
                            {
                                if (ViewBag.IsRecordEditableBag)
                                {
                                    <th class="NotSortable NotHide">
                                    @eTurns.DTO.Resources.ResCommon.ExpandCollapse
                                    </th>
                                    <th class="NotSortable NotHide">
                                        @eTurns.DTO.ResPullMaster.Pull
                                    </th>
                                    <th class="NotSortable NotHide">
                                        @eTurns.DTO.ResRequisitionDetails.QtytoPull
                                    </th>
                                }
                            }
                            else if (ViewBag.RequisitionStatus != "Unsubmitted")
                            {
                            <th class="NotSortable NotHide">
                            @eTurns.DTO.Resources.ResCommon.ExpandCollapse
                            </th>
                            }
                            @if (ViewBag.RequisitionStatus != "Closed")
                            {
                                <th class="NotHide">
                                    @eTurns.DTO.ResRequisitionDetails.BinID
                                </th>
                                <th class="NotHide">
                                    @eTurns.DTO.ResRequisitionDetails.ProjectSpendID
                                </th>
                                <th class="NotHide">
                                    @eTurns.DTO.ResPullMaster.PullOrderNumber
                                </th>
                                <th class="NotHide">
                                    @eTurns.DTO.ResRequisitionDetails.RequiredDate
                                </th>
                            }
                            <th class="NotHide">
                                @eTurns.DTO.ResItemMaster.ItemNumber
                            </th>
                            <th class="NotHide">
                                @eTurns.DTO.ResToolMaster.ToolName
                            </th>
                            <th class="NotHide">
                                @eTurns.DTO.ResRequisitionMaster.Tool - @eTurns.DTO.ResToolMaster.Serial
                            </th>
                            <th class="NotHide">
                                @eTurns.DTO.ResRequisitionDetails.QuantityRequisitioned
                            </th>
                            <th class="NotHide">
                                @eTurns.DTO.ResRequisitionDetails.QuantityApproved
                            </th>
                            <th>
                                @eTurns.DTO.ResRequisitionDetails.QuantityPulled
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ManufacturerNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.SupplierPartNo
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Supplier
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Description
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.LongDescription
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ManufacturerName
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.CategoryID
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.GLAccountID
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.UOMID
                            </th>
                            @if (isCost)
                            {
                                <th>
                                    @eTurns.DTO.ResItemMaster.Cost
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.Markup
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.SellPrice
                                </th>
                            }
                            <th>
                                @eTurns.DTO.ResItemMaster.Taxable
                            </th>
                            @*<th>
            @eTurns.DTO.ResItemMaster.InTransitquantity
        </th>*@
                            <th>
                                @eTurns.DTO.ResItemMaster.OnOrderQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OnTransferQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.AverageUsage
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Turns
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OnHandQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.CriticalQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.MinimumQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.MaximumQuantity
                            </th>
                            @if (ViewBag.RequisitionStatus != "Closed")
                            {
                                <th class="NotSortable NotHide">
                                    @eTurns.DTO.ResRequisitionDetails.SupplierAccountNumber
                                </th>
                            }
                            @Html.RenderColumnsHeader("ItemMaster", typeof(eTurns.DTO.ResItemMaster), "Item")
                            @Html.RenderColumnsHeaderCombineQL("PullMaster", typeof(eTurns.DTO.ResPullMaster), "Pull")

                            @*@Html.RenderColumnsHeader("ToolMaster", typeof(eTurns.DTO.ResToolMaster), "Tool")*@
                            <th>
                                @eTurns.DTO.Resources.ResCommon.TechnicianList
                            </th>
                            <th>
                                @eTurns.DTO.ResToolMaster.ToolCategory
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.Image
                            </th>
                            @Html.RenderColumnsHeader("ToolCheckInOutHistory", typeof(eTurns.DTO.ResToolCheckInOutHistory), "ToolCheckout")
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            {
                                <tr style='@(item.IsCloseItem == false ? "" : "background-color:LightGray;")'>
                                    <td></td>
                                    @if (ViewBag.RequisitionStatus == "Approved")
                                    {
                                        if (ViewBag.IsRecordEditableBag)
                                        {
                                            <td>
                                                <img src="~/Content/images/drildown_open.jpg" name="pullDrillDown" alt="Show/Hide Pull" />
                                            </td>

                                            <td style="vertical-align: middle;">
                                                @*@if (item.QuantityPulled.GetValueOrDefault() < item.QuantityApproved.GetValueOrDefault())
                                                    { @if (isPullList_Create)
                                                    {*@

                                                @if (item.IsCloseItem == false)
                                                {
                                                    if (item.ItemGUID.GetValueOrDefault(Guid.Empty) != Guid.Empty)
                                                    {
                                                        if (item.QuantityApproved > item.QuantityPulled)
                                                        {
                                                            if (item.SerialNumberTracking == true || item.LotNumberTracking
                                                                || item.DateCodeTracking == true)
                                                            {
                                                                <input type="button" value="@ResPullMaster.Pull" class="CreateBtn pull" onclick="return OpenPullPopupFromRequisition(this, '@ViewBag.WorkOrderGUID','@ViewBag.MaterialStagingGUID')" id="btnAdd" />
                                                            }
                                                            else
                                                            {
                                                                <input type="button" value="@ResPullMaster.Pull" class="CreateBtn pull" onclick="return AddSingleItemToPullList(this)" id="btnAdd" data-value="Pull" />
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <input type="button" value="Pull" class="CreateBtndisabled pull" id="btnAddDIsabled" disabled="disabled" />
                                                        }
                                                    }
                                                    else if (item.ToolGUID.GetValueOrDefault(Guid.Empty) != Guid.Empty)
                                                    {
                                                        if (item.QuantityApproved > item.QuantityPulled)
                                                        {
                                                            <input type="button" value="@ResPullMaster.Pull" class="CreateBtn pull RequisitionToolCheckOut" id="btnToolCheckout" />
                                                        }
                                                        else
                                                        {
                                                            <input type="button" value="@ResPullMaster.Pull" class="CreateBtndisabled pull" id="btnToolCheckoutDisabled" disabled="disabled" />
                                                        }
                                                    }
                                                }
                                                else
                                                {

                                                }
                                                <input type="hidden" id="hdnIsCloseItem" value="@item.IsCloseItem.ToString()" />
                                                <input type="hidden" id="hdnRequisitionDetailGUID" value="@item.GUID" />
                                                <span id='spnOrderItemType' style='display:none'>@item.ItemType</span>
                                                @*}}*@
                                            </td>
                                            <td>
                                                @if (item.QuantityPulled.GetValueOrDefault() < item.QuantityApproved.GetValueOrDefault())
                                                {
                                                    var qtytemp = item.QuantityApproved.GetValueOrDefault(0) - item.QuantityPulled.GetValueOrDefault(0);
                                                    if (item.SerialNumberTracking)
                                                    {
                                                        @Html.TextBox("txtQty", qtytemp, new { @style = "width:50px;", @maxlength = "10", @class = "text-boxQuantityFormatSR text-boxinner numericinput" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBox("txtQty", qtytemp, new { @style = "width:50px;", @maxlength = "10", @class = "text-boxQuantityFormat text-boxinner numericinput" })
                                                    }
                                                }
                                                else
                                                {
                                                    if (item.SerialNumberTracking)
                                                    {
                                                        @Html.TextBox("txtQty", "0", new { @style = "width:50px;", @maxlength = "10", @class = "text-boxQuantityFormatSR text-boxinner numericinput" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBox("txtQty", "0", new { @style = "width:50px;", @maxlength = "10", @class = "text-boxQuantityFormat text-boxinner numericinput" })
                                                    }
                                                }
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                        }
                                    }
                                    else if (ViewBag.RequisitionStatus != "Unsubmitted")
                                    {
                                        <td>
                                            <img src="~/Content/images/drildown_open.jpg" name="pullDrillDown" alt="Show/Hide Pull" />
                                        </td>
                                    }
                                    @if (ViewBag.RequisitionStatus != "Closed")
                                    {
                                        <td>
                                            @if (item.ItemGUID.GetValueOrDefault(Guid.Empty) != Guid.Empty)
                                            {

                                                List<DTOForAutoComplete> lstBins = new eTurns.DAL.BinMasterDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetItemLocationsForNewPullGrid(item.ItemGUID.Value, eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID, eTurnsWeb.Helper.SessionHelper.eTurnsRegionInfoProp, (Guid)ViewBag.MaterialStagingGUID, Convert.ToString(ViewBag.RequisitionStatus));
                                                string BinName = (lstBins == null || item.BinID == null ? "" : lstBins.Where(x => x.ID == item.BinID).Select(x => x.Value).FirstOrDefault());

                                                <span id="hdnSpnBin" style="display:none">@BinName</span>

                                                if (lstBins != null && lstBins.Count == 1)
                                                {
                                                    if (ViewBag.RequisitionStatus == "Approved"
                                                        && ViewBag.AllowPullBeyondAvailableQty == true
                                                       && HasOnTheFlyEntryRight == true
                                                       && item.QuantityApproved > item.QuantityPulled
                                                       && item.SerialNumberTracking == false
                                                       && item.LotNumberTracking == false
                                                       && item.DateCodeTracking == false)
                                                    {
                                                        <span style="display:none">@BinName</span>
                                                        <input id="item_BinID" type="hidden" value="@item.BinID" />
                                                        <span style="position:relative">
                                                            <input type="text" id="txtBinNumber" class="text-boxinner AutoPullBins" style="width:93%;" value="@BinName" />
                                                            <a id="lnkShowAllBinOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsBin">
                                                                <img src="/Content/images/arrow_down_black.png" alt="select data-vDefaultLocationName= @BinName" />
                                                            </a>
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownListFor(model => item.BinID, new SelectList(lstBins, "ID", "Value", item.BinID), new { @class = "selectBox", @style = "width:93%;" })
                                                    }
                                                }
                                                else
                                                {
                                                    if (ViewBag.RequisitionStatus == "Approved"
                                                    && ViewBag.AllowPullBeyondAvailableQty == true
                                                       && HasOnTheFlyEntryRight == true
                                                       && item.QuantityApproved > item.QuantityPulled
                                                       && item.SerialNumberTracking == false
                                                       && item.LotNumberTracking == false
                                                       && item.DateCodeTracking == false)
                                                    {
                                                        <span style="display:none">@BinName</span>
                                                        <input id="item_BinID" type="hidden" value="@item.BinID" />
                                                        <span style="position:relative">
                                                            <input type="text" id="txtBinNumber" class="text-boxinner AutoPullBins" style="width:93%;" value="@BinName" />
                                                            <a id="lnkShowAllBinOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsBin">
                                                                <img src="/Content/images/arrow_down_black.png" alt="select data-vDefaultLocationName= @BinName" />
                                                            </a>
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownListFor(model => item.BinID, new SelectList(lstBins, "ID", "Value", item.BinID), "", new { @class = "selectBox", @style = "width:93%;" })
                                                    }
                                                }
                                            }
                                        </td>
                                        <td>
                                            @if (item.ItemGUID.GetValueOrDefault(Guid.Empty) != Guid.Empty)
                                            {
                                                Int32? IsClosedFalse = null;
                                                if (lstProject != null)
                                                {
                                                    if (lstProject.Where(t => t.TrackAllUsageAgainstThis == true).Count() > 0)
                                                    {
                                                        lstProject = lstProject.Where(t => t.TrackAllUsageAgainstThis == true).ToList();//lstProject = lstProject.Where(t => t.TrackAllUsageAgainstThis == true || t.GUID == item.ProjectSpendGUID).ToList();
                                                        var tmpItemProjectSpentGuid = item.ProjectSpendGUID.GetValueOrDefault(Guid.Empty);

                                                        if (tmpItemProjectSpentGuid != Guid.Empty && tmpItemProjectSpentGuid != lstProject[0].GUID)
                                                        {
                                                            var currentProject = objData.GetRecord(item.ProjectSpendGUID.GetValueOrDefault(Guid.Empty), eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID, false, false);
                                                            if (currentProject != null && currentProject.GUID != Guid.Empty)
                                                            {
                                                                lstProject.Add(currentProject);
                                                            }
                                                        }
                                                    }
                                                    else
                                                    {
                                                        IsClosedFalse = 1;
                                                        lstProject = lstProject.Where(t => t.IsClosed != true).ToList();
                                                    }
                                                }
                                                else
                                                {
                                                    lstProject = null;
                                                }

                                                string ProjectSpendName = (lstProject == null || item.ProjectSpendGUID == null || (item.ProjectSpendGUID.HasValue == true && item.ProjectSpendGUID.Value == Guid.Empty) ? "" : lstProject.Where(x => x.GUID == item.ProjectSpendGUID).Select(x => x.ProjectSpendName).FirstOrDefault());


                                                <span id="hdnSpnProjectSpend" style="display:none">@ProjectSpendName</span>
                                                if (!HasOnTheFlyEntryRight || lstProject != null && ((IEnumerable<eTurns.DTO.ProjectMasterDTO>)lstProject).Where(t => t.TrackAllUsageAgainstThis == true).Count() == 1)
                                                {
                                                    if (IsClosedFalse != null)
                                                    {
                                                        @Html.DropDownList("ProjectSpendGUID", new SelectList((IEnumerable<eTurns.DTO.ProjectMasterDTO>)lstProject, "GUID", "ProjectSpendName", item.ProjectSpendGUID), string.Empty, new { @class = "selectBox", style = "width: 93%;", @id = "txtProjectSpent" })
                                                    }
                                                    else
                                                    {
                                                        if (!string.IsNullOrWhiteSpace(ProjectSpendNameUsage))
                                                        {
                                                            @Html.DropDownList("ProjectSpendGUID", new SelectList((IEnumerable<eTurns.DTO.ProjectMasterDTO>)lstProject, "GUID", "ProjectSpendName", ProjectSpendGuidUsage), new { @class = "selectBox", style = "width: 93%;", @id = "txtProjectSpent" })
                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownList("ProjectSpendGUID", new SelectList((IEnumerable<eTurns.DTO.ProjectMasterDTO>)lstProject, "GUID", "ProjectSpendName", item.ProjectSpendGUID), new { @class = "selectBox", style = "width: 93%;", @id = "txtProjectSpent" })
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    @*@Html.DropDownList("ProjectSpendGUID", new SelectList((IEnumerable<eTurns.DTO.ProjectMasterDTO>)lstProject, "GUID", "ProjectSpendName", item.ProjectSpendGUID), string.Empty, new { @class = "selectBox", style = "width: 93%;" })*@
                                                    <span style='position:relative'>
                                                        <input type="text" id="txtProjectSpent" class="text-boxinner AutoPullProjectSpents" style="width:93%;" value="@ProjectSpendName" />
                                                        <input type="hidden" id="ProjectSpendGUID" value="" />
                                                        <a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsProjectSpents">
                                                            <img src="/Content/images/arrow_down_black.png" alt="select" />
                                                        </a>
                                                    </span>
                                                }
                                            }
                                        </td>
                                        <td>
                                            <span id="hdnSpnPullOrderNumber" style="display:none"></span>
                                            @Html.RenderColumnsArrayForPullPO("PullPoMaster", FixedName: "txtPullOrderNumber", PrependComma: false, ModuleName: "Requisition", SelectedValue: item.PullOrderNumber)
                                        </td>
                                        <td>
                                            <span id="hdnSpnQuantityRequisitioned" style="display:none">@(@item.RequiredDate == null ? "" : ((DateTime)@item.RequiredDate).ToString("yyyyMMdd"))</span>
                                            @if (item.RequiredDate != null)
                                            {
                                                <input value="@item.RequiredDate.Value.ToString(eTurnsWeb.Helper.SessionHelper.RoomDateFormat, eTurnsWeb.Helper.SessionHelper.RoomCulture)" onkeypress="return false;" type='text' style="width:93%;background:white;" readonly="readonly" class='myDatePicker text-box' id='hiddenDatePicker@(item.GUID)' />
                                            }
                                            else
                                            {
                                                <input value="" onkeypress="return false;" type='text' style="width:93%;background:white;" readonly="readonly" class='myDatePicker text-box' id='hiddenDatePicker@(item.GUID)' />
                                            }
                                        </td>
                                    }
                                    <td>
                                        <span id="spnItemNumber">@item.ItemNumber</span>
                                    </td>
                                    <td>
                                        @if (item.ToolCategoryID.GetValueOrDefault(0) > 0 && objDTO.RequisitionStatus != "Approved" && objDTO.RequisitionStatus != "Closed")
                                        {
                                            List<ToolMasterDTO> lstTools = new eTurns.DAL.ToolMasterDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetToolByToolCategoryID(item.ToolCategoryID.GetValueOrDefault(0), eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID).ToList();

                                            @Html.DropDownList("ToolGUIDByCategory", new SelectList((IEnumerable<eTurns.DTO.ToolMasterDTO>)lstTools, "GUID", "ToolNameSerial", @item.ToolGUID), string.Empty, new { @class = "selectBox", @width = "93%" })

                                        }
                                        else
                                        {
                                            <span id="spnToolName">@item.ToolName</span>
                                        }
                                    </td>
                                    <td>
                                        @item.ToolSerialNumber
                                    </td>
                                    <td class="numericalign">
                                        @*PPT screen 27*@
                                        <span id="hdnSpnQuantityRequisitioned" style="display:none">@item.QuantityRequisitioned</span>
                                        @if (ViewBag.RequisitionStatus == "Unsubmitted")
                                        {
                                            if (item.SerialNumberTracking)
                                            {
                                                @Html.TextBox("txtQuantityRequisitioned", item.QuantityRequisitioned, new { @style = "width:93%;", @maxlength = "10", @class = "numericinput text-boxinner numericalign" })
                                            }
                                            else
                                            {
                                                @Html.TextBox("txtQuantityRequisitioned", item.QuantityRequisitioned, new { @style = "width:93%;", @maxlength = "10", @class = "numericinput text-boxinner numericalign" })
                                            }
                                            @*<input id="txtQuantityRequisitioned" value="@item.QuantityRequisitioned" style="width:60px;" maxlength="10" class="text-boxPriceFormat text-boxinner"/>*@
                                        }
                                        else
                                        {
                                            <span class="QuantityRequisitioned">@item.QuantityRequisitioned</span>
                                            if (item.SerialNumberTracking)
                                            {
                                                @Html.TextBox("txtQuantityRequisitioned", item.QuantityRequisitioned, new { @style = "width:0px;display:none;", @maxlength = "10", @class = "numericinput text-boxinner numericalign" })
                                            }
                                            else
                                            {
                                                @Html.TextBox("txtQuantityRequisitioned", item.QuantityRequisitioned, new { @style = "width:0px;display:none;", @maxlength = "10", @class = "numericinput text-boxinner numericalign" })
                                            }
                                            @*<input id="txtQuantityRequisitioned" value="@item.QuantityRequisitioned" style="width:0px;display:none;" maxlength="10" class="text-boxPriceFormat text-boxinner"/>*@
                                        }
                                        <input id="hdnID" type="hidden" value="@item.GUID" />
                                        <input id="hdnBigID" type="hidden" value="@item.ID" />
                                        <input id="hdnItemNumber" type="hidden" value="@item.ItemNumber" />
                                        <input id="hdnToolName" type="hidden" value="@item.ToolName" />
                                        <input id="hdnItemID" type="hidden" value="@item.ItemID" />
                                        <input id="hdnItemGUID" type="hidden" value="@item.ItemGUID" />
                                        <input id="hdnRequisitionGUID" type="hidden" value="@item.RequisitionGUID" />
                                        <input id="hdnItemCost" type="hidden" value="@item.ItemCost" />
                                        <input id="hdnQuantityRequisitioned" type="hidden" value="@item.QuantityRequisitioned" />
                                        <input id="hdnQuantityApproved" type="hidden" value="@item.QuantityApproved" />
                                        <input id="hdnQuantityPulled" type="hidden" value="@item.QuantityPulled" />
                                        <input id="hdnHandQuantity" type="hidden" value="@item.OnHandQuantity">
                                        <input id="hdnDefaultPullQuantity" type="hidden" value="@item.DefaultPullQuantity">
                                        <input id="hdnSerialNumberTracking" type="hidden" value="@item.SerialNumberTracking.ToString()">
                                        <input id="hdnLotNumberTracking" type="hidden" value="@item.LotNumberTracking.ToString()">
                                        <input id="hdnDateCodeTracking" type="hidden" value="@item.DateCodeTracking.ToString()">
                                        <input id="hdnQuickListItemGUID" type="hidden" value="@item.QuickListItemGUID" />
                                        <input id="hdnToolGUID" type="hidden" value="@item.ToolGUID" />
                                        <input id="hdnSelectedSupplierAccountGuid" type="hidden" value="@item.SupplierAccountGuid" />
                                        <input id="hdnSelectedSupplierAccountNo" type="hidden" value="@item.SupplierAccountNo" />
                                        <input id="hdnToolCategoryID" type="hidden" value="@item.ToolCategoryID.GetValueOrDefault(0)" />
                                    </td>
                                    @*<td>
                                            @if (ViewBag.RequisitionStatus == "Submitted")
                                            {
                                                if (item.SerialNumberTracking)
                                                {
                                                @Html.TextBox("txtQuantityApproved", item.QuantityApproved, "{0:0}", new { @style = "width:60px;", @maxlength = "10", @class = "text-boxQuantityFormatSR text-boxinner" })
                                                }
                                                else
                                                {
                                                @Html.TextBox("txtQuantityApproved", item.QuantityApproved, eTurnsWeb.Helper.SessionHelper.QuantityFormat, new { @style = "width:60px;", @maxlength = "10", @class = "text-boxQuantityFormat text-boxinner" })
                                                }
                                            }
                                            else
                                            {
                                                @item.QuantityApproved
                                                if (item.SerialNumberTracking)
                                                {
                                                @Html.TextBox("txtQuantityApproved", item.QuantityApproved, "{0:0}", new { @style = "width:0px;display:none;", @maxlength = "10", @class = "text-boxQuantityFormatSR text-boxinner" })
                                                }
                                                else
                                                {
                                                @Html.TextBox("txtQuantityApproved", item.QuantityApproved, eTurnsWeb.Helper.SessionHelper.QuantityFormat, new { @style = "width:0px;display:none;", @maxlength = "10", @class = "text-boxQuantityFormat text-boxinner" })
                                                }
                                            }
                                        </td>*@
                                    <td class="numericalign">
                                        <span id="hdnSpnQuantityApproved" style="display:none">@item.QuantityApproved</span>
                                        @if (IsApprove && ViewBag.RequisitionStatus != "Approved")
                                        {
                                            if (item.SerialNumberTracking)
                                            {
                                                @Html.TextBox("txtQuantityApproved", item.QuantityApproved, new { @style = "width:93%;", @maxlength = "10", @class = "numericinput text-boxinner numericalign" })
                                            }
                                            else
                                            {
                                                @Html.TextBox("txtQuantityApproved", item.QuantityApproved, new { @style = "width:93%;", @maxlength = "10", @class = "numericinput text-boxinner numericalign" })

                                            }
                                        }
                                        else
                                        {
                                            <span class="QuantityApproved">@item.QuantityApproved;</span>
                                            if (item.SerialNumberTracking)
                                            {
                                                @Html.TextBox("txtQuantityApproved", item.QuantityApproved, new { @style = "width:93%; display:none;", @maxlength = "10", @class = "numericinput text-boxinner numericalign" })
                                            }
                                            else
                                            {
                                                @Html.TextBox("txtQuantityApproved", item.QuantityApproved, new { @style = "width:93%;display:none;", @maxlength = "10", @class = "numericinput text-boxinner numericalign" })

                                            }
                                        }
                                    </td>
                                    <td class="numericalign">
                                        @string.Format(eTurnsWeb.Helper.SessionHelper.QuantityFormat, item.QuantityPulled)
                                        @*@item.QuantityPulled*@
                                        <input id="txtQuantityPulled" value="@item.QuantityPulled" style="width:0px;display:none;" maxlength="10" class="text-boxinner" />
                                    </td>
                                    <td>
                                        @item.ManufacturerNumber
                                    </td>
                                    <td>
                                        @item.SupplierPartNo
                                    </td>
                                    <td>
                                        @item.SupplierName
                                    </td>
                                    <td>
                                        @item.Description
                                    </td>
                                    <td>
                                        @item.LongDescription
                                    </td>
                                    <td>
                                        @item.ManufacturerName
                                    </td>
                                    <td>
                                        @item.CategoryName
                                    </td>
                                    <td>
                                        @item.GLAccount
                                    </td>
                                    <td>
                                        @item.Unit
                                    </td>
                                    @if (isCost)
                                    {
                                        <td class="numericalign">
                                            @string.Format(eTurnsWeb.Helper.SessionHelper.PriceFormat, item.Cost)
                                            @*@item.Cost*@
                                        </td>
                                        <td class="numericalign">
                                            @item.Markup.ToString(DecFormat)
                                        </td>
                                        <td class="numericalign">
                                            @string.Format(eTurnsWeb.Helper.SessionHelper.PriceFormat, item.SellPrice)
                                            @*@item.SellPrice*@
                                        </td>
                                    }
                                    <td>
                                        @item.Taxable
                                    </td>
                                    @*<td>
                                            @item.InTransitquantity
                                        </td>*@
                                    <td class="numericalign">
                                        @string.Format(eTurnsWeb.Helper.SessionHelper.QuantityFormat, item.OnOrderQuantity)
                                        @*@item.OnOrderQuantity*@
                                    </td>
                                    <td class="numericalign">
                                        @string.Format(eTurnsWeb.Helper.SessionHelper.QuantityFormat, item.OnTransferQuantity)
                                        @*@item.OnTransferQuantity*@
                                    </td>
                                    <td class="numericalign">
                                        @item.AverageUsage.ToString(DecFormat)
                                    </td>
                                    <td class="numericalign">
                                        @item.Turns.ToString(DecFormat)
                                    </td>
                                    <td class="numericalign">
                                        @string.Format(eTurnsWeb.Helper.SessionHelper.QuantityFormat, item.OnHandQuantity)
                                        @*@item.OnHandQuantity*@
                                    </td>
                                    <td class="numericalign">
                                        @string.Format(eTurnsWeb.Helper.SessionHelper.QuantityFormat, item.CriticalQuantity)
                                        @*@item.CriticalQuantity*@
                                    </td>
                                    <td class="numericalign">
                                        @string.Format(eTurnsWeb.Helper.SessionHelper.QuantityFormat, item.MinimumQuantity)
                                        @*@item.MinimumQuantity*@
                                    </td>
                                    <td class="numericalign">
                                        @string.Format(eTurnsWeb.Helper.SessionHelper.QuantityFormat, item.MaximumQuantity)
                                        @*@item.MaximumQuantity*@
                                    </td>
                                    @if (ViewBag.RequisitionStatus != "Closed")
                                    {
                                        <td>
                                            @if (item.ItemGUID.GetValueOrDefault(Guid.Empty) != Guid.Empty)
                                            {
                                                <input type="hidden" id="hdnSupplierAccountNumber" value="@item.SupplierAccountGuid" />
                                                <span style="position:relative">
                                                    <input type="text" id="txtSupplierAccountNumber" class="text-boxinner AutoSupplierAccountNumber" style="width:120px;" value="@item.SupplierAccountNo" />
                                                    <a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsSupplierAccountNumber"><img src="/Content/images/arrow_down_black.png" alt="select" /></a>
                                                </span>
                                            }
                                        </td>
                                    }
                                    @(Html.RenderColumnsArrayForDOM("ItemMaster", item, "Item"))
                                    @Html.RenderColumnsArrayEditableObjectForDOMWithValueCombineQL("PullMaster", item, "Pull", "Pull")
                                    @*@Html.RenderColumnsArrayForDOM("ToolMaster", item, "Tool")*@
                                    <td>
                                        <span style="position:relative">
                                            @if (!string.IsNullOrEmpty(item.Technician))
                                            {
                                                <input type="text" id="txtTechnician" class="text-boxinner AutoTechnician" style="width:93%;" value="@item.Technician" />
                                                <input type="hidden" id="TechnicianGUID" value="@item.TechnicianGUID" />
                                            }
                                            else
                                            {
                                                <input type="text" id="txtTechnician" class="text-boxinner AutoTechnician" style="width:93%;" value="@eTurns.DTO.Resources.ResCommon.SelectTechnicianText" />
                                                <input type="hidden" id="TechnicianGUID" value="" />
                                            }
                                            <a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptions"><img src="/Content/images/arrow_down_black.png" alt="select" /></a>
                                        </span>
                                    </td>
                                    <td>
                                        @item.ToolCategory
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.ImagePath) && (!string.IsNullOrWhiteSpace(item.ImageType)) && item.ImageType.ToLower() == "imagepath")
                                        {
                                            string Imagepath = "/Uploads/InventoryPhoto/";
                                            string Enterpriseid = eTurnsWeb.Helper.SessionHelper.EnterPriceID.ToString();
                                            string CompanyId = eTurnsWeb.Helper.SessionHelper.CompanyID.ToString();
                                            string Roomid = eTurnsWeb.Helper.SessionHelper.RoomID.ToString();
                                            <img style="cursor:pointer;" alt="@(item.ItemNumber)" id="ItemImageBox" width="120px" height="120px" src="/Consume/Get?path=@(Imagepath+"/"+Enterpriseid+"/"+ CompanyId + "/"+ Roomid + "/" + item.ItemID +  "/" + item.ImagePath)">
                                        }
                                        else if (!string.IsNullOrEmpty(item.ItemImageExternalURL) && (!string.IsNullOrWhiteSpace(item.ImageType)) && item.ImageType.ToLower() == "externalimage")
                                        {
                                            string imgURL = item.ItemImageExternalURL;
                                            <img style="cursor:pointer;" alt="@(item.ItemNumber)" id="ItemImageBox" width="120px" height="120px" src="@(imgURL)">
                                        }
                                        else
                                        {
                                            <img style="cursor:pointer;" id="ItemImageBox" width="120px" height="120px" alt="No Image" src="~/Content/images/no-image.jpg" />
                                        }
                                    </td>
                                    @Html.RenderColumnsArrayEditableObjectForDOMWithValue("ToolCheckInOutHistory", item, "ToolCheckout", "TC")
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                @if (ViewBag.RequisitionStatus == "Approved")
                {
                    if (ViewBag.IsRecordEditableBag)
                    {
                        //if (isPullList_Create) // un comment this code for WI-3872 (insert pull rights)
                        {
                            <div style="clear: both; width: 90%; margin-top: 10px;">
                                <input type="button" value="@ResPullMaster.BtnPullAll" id="btnPullAll" class="CreateBtn" style="float: left;" onclick="OpenPullPopupFromRequisition(this, '@ViewBag.WorkOrderGUID','@ViewBag.MaterialStagingGUID')" />

                            </div>
                        }
                    }
                }
                @if ((ViewBag.RequisitionStatus == "Approved" || ViewBag.RequisitionStatus == "Submitted" || ViewBag.RequisitionStatus == "Unsubmitted") && IsClose == true)
                {
                    <input id="btnCloseRequistion" type="button" value="@ResRequisitionMaster.BtnCloseRequistion" style="float: left; margin-left: 0%;
                                 margin-top: 2%" class="CreateBtn" />
                }

                @if (ViewBag.RequisitionStatus == "Approved")
                {
                    <input id="btnCloseRequistionItem" type="button" value="@ResRequisitionMaster.BtnCloseItem" style="float: left; margin-left: 0%;margin-top: 2%" class="CreateBtn" onclick="CloseSelectedRequistionItem(this)" />
                }
            </div>
        </div>
    </div>
</div>
<div class="dialog" id="mdlQLYesNo" style="display: none;">
    <div class="inner">
        <p class="text">
            @eTurns.DTO.Resources.ResMessage.DeleteConfirm
        </p>
        <a href="javascript:void(0);" id="btnQLModelYesSP" class="yes">
            <img src="~/Content/images/yes.png" alt="Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="javascript:void(0);" class="no" onclick="QLcloseModal()">
            <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div>
<div class="dialog" id="dlgNoSelectErrorMsg" style="display: none; width: 500px;">
    <div class="inner" style="width: 500px;">
        <p class="text" id="NoSelectErrMessage" style="text-align: left; padding-left: 10px;">
            <b>First select items</b><br />
            <br />
        </p>
        <p id="NsOkbtn" class="text" style="text-align: center; padding-left: 10px;">
            <a href="#" class="no" onclick="closeModalNoSelectModel()">
                <img src="~/Content/images/yes.png" alt="@eTurns.DTO.Resources.ResMessage.InformOk" />@eTurns.DTO.Resources.ResMessage.InformOk
            </a>
        </p>
    </div>
</div>
<div class="dialog" id="CloseRequisitionLineItemDialog" style="display: none;">
    <div class="inner">
        <p class="text">
            @ResRequisitionMaster.CloseSelectedLineItemValidation
        </p>
        <a href="javascript:void(0);" id="bntCloseRequisitionLineItemConfirmYes" class="yes yesornooryes">
            <img src="~/Content/images/yes.png" alt="Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="javascript:void(0);" class="no" onclick="closeModalCloseRequisitionLineItemDialog();">
            <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div><div class="dialog" id="dlgExpiredItemErrorMsg" style="display: none; width: 600px;">
    <div class="inner" style="width: 600px; max-height: 300px; overflow: scroll;">
        <p class="text" id="pErrMessage" style="text-align: left; padding-left: 10px;">
        </p>
        <input type="hidden" id="btnPullExItemGuid" />
        <input type="hidden" id="btnPullExReqGuid" />
        <p id="pYesForExpiredItem" class="text" style="text-align: center; padding-left: 10px; display: none;">
            <a href="JavaScript:void{}" id="btnYesForExpiredItem" class="yes">
                <img src="~/Content/images/yes.png" alt="Yes" />
                @eTurns.DTO.Resources.ResMessage.ConfirmYes
            </a><a href="#" class="no" onclick="closeModalPSLimit()">
                <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
            </a>
        </p>
    </div>
</div>
<div class="dialog" id="dlgCommonErrorMsg" style="display: none; width: 600px;">
    <div class="inner" style="width: 600px; max-height: 300px; overflow: scroll;">
        <p class="text" id="pErrMessage" style="text-align: left; padding-left: 10px;">
        </p>
        <p id="pOkbtn" class="text" style="text-align: center; padding-left: 10px; display: block;">
            <a href="#" class="no" onclick="closeModalPSLimit()">
                <img src="~/Content/images/yes.png" alt="ok" />@ResCommon.Ok
            </a>
        </p>
        <p id="pYesNobtn" class="text" style="text-align: center; padding-left: 10px; display: none;">
            <a href="javascript:void(0);" id="btnYesForPS" class="yes">
                <img src="~/Content/images/yes.png" alt="Yes" />
                @eTurns.DTO.Resources.ResMessage.ConfirmYes
            </a><a href="#" class="no" onclick="closeModalPSLimit()">
                <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
            </a>
        </p>
    </div>
</div>
<div class="dialog" id="project-spend-limit-basic-modal-content" style="display: none;">
    <div class="inner">
        <p class="text" id="PSPlimit" style="text-align: left; padding-left: 10px;">
            <b>Some of the Item(s) is(are) not able to Pull(s) Due to following reasons.</b><br />
            <b style="color: Olive;">1) Quantity to Pull is Mandatory.</b>
            <br />
            <b style="color: Olive;">2) Inventory Location are Mandatory.</b>
            <br />
            <b style="color: Olive;">3) Labour Item Required Hours to Pull.</b>
            <br />
            <b style="color: Olive;">4) Quantity Not available for Selected Inventory Location.</b>
            <br />
            <b style="color: Yellow;">
                5) Some Item(s) have reach Project spend Limit,
                <br />
                do you want to create new requisition for the same ?
            </b>
            <br />
            <b style="color: Red;">6) Searver error occured!!</b><br />
            <b style="color: Green;">7) Pulled Successfully.</b><br />
            <b style="color: Olive;">8)@eTurns.DTO.ResRequisitionDetails.YoucanPullMaxtoApprovedQuantity</b><br />
            <b style="color: Olive;">9)@eTurns.DTO.ResRequisitionDetails.InvalidPullvalue</b><br />
            <b style="color: Olive;">10)@eTurns.DTO.ResRequisitionDetails.QtytoPullandInventoryLocationareMandatory</b>
        </p>
        <a href="javascript:void(0);" id="btnModelYesPSLimit" class="yes">
            <img src="~/Content/images/yes.png" alt="Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="#" class="no" onclick="closeModalPSLimit()">
            <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div>
<div class="dialog" id="noramal-global-msg-basic-modal-content" style="display: none;">
    <div class="inner">
        <p class="text" id="GloablMSG" style="text-align: left; padding-left: 10px;">
            <b>Some of the Item(s) is(are) not able to Pull(s) Due to following reasons.</b><br />
            <b style="color: Olive;">1) Quantity to Pull is Mandatory.</b>
            <br />
            <b style="color: Olive;">2) Inventory Location are Mandatory.</b>
            <br />
            <b style="color: Olive;">3) Labour Item Required Hours to Pull.</b>
            <br />
            <b style="color: Olive;">4) Quantity Not available for Selected Inventory Location.</b>
            <br />
            <b style="color: Red;">5) Searver error occured!!</b><br />
            <b style="color: Green;">6) Pulled Successfully.</b><br />
            <b style="color: Olive;">7)@eTurns.DTO.ResRequisitionDetails.YoucanPullMaxtoApprovedQuantity</b><br />
            <b style="color: Olive;">8)@eTurns.DTO.ResRequisitionDetails.InvalidPullvalue</b><br />
            <b style="color: Olive;">9)@eTurns.DTO.ResRequisitionDetails.QtytoPullandInventoryLocationareMandatory</b>
        </p>
        <p class="text" style="text-align: center; padding-left: 10px;">
            <a href="#" class="no" onclick="closeModalGlobal();">
                <img src="~/Content/images/yes.png" alt="@eTurns.DTO.Resources.ResMessage.InformOk" />@eTurns.DTO.Resources.ResMessage.InformOk
            </a>
        </p>
    </div>
</div>
<div class="dialog" id="basic-close-requisition" style="display: none;">
    <div class="inner">
        <p class="text">
            @eTurns.DTO.Resources.ResMessage.ClosedRequistionConfirm
        </p>
        <a href="javascript:void(0);" id="bntCloseConfirmYes" class="yes">
            <img src="~/Content/images/yes.png" alt="Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="#" class="no" onclick="closeModalRequisition()">
            <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div>
<div class="dialog" id="GlobalModalProcessing" style="display: none;">
    <div class="inner">
        <p class="text" id="GloablMSGWait" style="text-align: left; padding-left: 10px;">
            <b style="color: Red;">@eTurns.DTO.Resources.ResMessage.PleaseWaitTransGoingOn </b>
        </p>
    </div>
</div>
<div id="DivPullSelection">
</div>

<div class="dialog" id="dlgPullAllReqMessage" style="display: none; width: 600px;">
    <div class="inner" style="width: 600px; max-height: 300px; overflow: scroll;">
        <p class="text" id="pErrMessage" style="text-align: left; padding-left: 10px;">
        </p>
        <p id="pOkbtn" class="text" style="text-align: center; padding-left: 10px; display: block;">
            <a href="javascript:void(0);" class="no" onclick="CloseReqPullAllModel()">
                <img src="~/Content/images/yes.png" alt="@eTurns.DTO.Resources.ResMessage.InformOk" />@eTurns.DTO.Resources.ResMessage.InformOk
            </a>
        </p>
    </div>
</div>

<script type="text/javascript">
    var oTableProjectItems;

    var deleteURL1 = "/Consume/RequisitionItemsDelete";
    var NotAllowedCharCodes = [9, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40];
    var DTName = 'RequisitionItemsTable' + '@ViewBag.RequisitionID';
    var RequisitionItemsDTName = 'RequisitionItemsTable' + '@ViewBag.RequisitionID';
    var bIsFilter = false;
    var anOpen = [];
    var objDetailGridColumns = {};
    var sImageUrl1 = "/Content/images/";
    $('#btnCloseRequistion').click(function () {
        $('#basic-close-requisition').modal();
    });
    function closeModalRequisition() {

        $.modal.impl.close();
    }
    $('#bntCloseConfirmYes').click(function () {
        $('#DivLoading').show();

        $.ajax({
            'url': 'UpdateRequistionToClose',
            'data': { 'RequisitionID': EditRequisitionID },
            'success': function (result) {

                SetReplenishRedCount();
                closeModalRequisition();
                $('#DivLoading').hide();
                SwitchRequisitionTab('RequisitionCreate', 'frmRequisitionMaster');
            },
            'error': function (result) {
                closeModalRequisition();
                $('#DivLoading').hide();
            }

        });
    });
    var CurrentListTabID = 'tab5'
    function SwitchRequisitionTab(action, frmName) {
        isDirtyForm = false;
        if (!dirtyCheck()) {
            return false;
        }
        else {
            removeDirtyclass();
        }
        //$('#CtabNew').empty();
        if (HasInsertPermission == "False") {
            $('#tab1').hide();
        }
        $('#tab1').find("#spnTabName").text('@eTurns.DTO.ResTransfer.In');

        //$('#tab1').find("#spnTabName").css('padding-right', '12px');
        AllowDeletePopup = true;
        $("#" + CurrentListTabID).click();
        $('#tab1').find("#spnTabName").text('@eTurns.DTO.ResTransfer.In');
        $('#tab1').find('#spnTabName').css('padding', '15px');
        //$('#tab1').find("#spnTabName").css('padding-left', '12px');
        //$('#tab1').find("#spnTabName").css('padding-right', '12px');
        $('#CtabNew').hide();
        if (IsRefreshGrid) {
            IsRefreshGrid = false;
            oTable.fnDraw();
        }
        //FillRedCount();
        SetReplenishRedCount();
    }


    function SaveAllClick(msgflag) {
        isDirtyForm = false;
        var arrItems = new Array();
        var arrApprovedItems = new Array();
        var ItemNodes = $('#' + RequisitionItemsDTName).dataTable().fnGetNodes();

        for (var j = 0; j <= ItemNodes.length - 1; j++) {
            if ($(ItemNodes[j]).hasClass("RowChanged") || $("#chkUsePullCommonUDF").is(":checked") || $("#chkUseToolCommonUDF").is(":checked")) {
                var hdnItemGUID = $(ItemNodes[j]).find('#hdnItemGUID').val();
                var hdnToolGUID = $(ItemNodes[j]).find('#hdnToolGUID').val();

                var hdnItemCost = $(ItemNodes[j]).find("#hdnItemCost").val();
                var hdnID = $(ItemNodes[j]).find('#hdnID').val();
                var hdnRequisitionGUID = $(ItemNodes[j]).find('#hdnRequisitionGUID').val();
                var txtQuantityRequisitioned = $(ItemNodes[j]).find('#txtQuantityRequisitioned').val() == '' ? 0 : $(ItemNodes[j]).find('#txtQuantityRequisitioned').val();
                var txtQuantityApproved = $(ItemNodes[j]).find('#txtQuantityApproved').val() == '' ? 0 : $(ItemNodes[j]).find('#txtQuantityApproved').val();
                var txtQuantityPulled = $(ItemNodes[j]).find('#txtQuantityPulled').val() == '' ? 0 : $(ItemNodes[j]).find('#txtQuantityPulled').val();

                txtQuantityRequisitioned = parseFloat(txtQuantityRequisitioned, 10);
                txtQuantityApproved = parseFloat(txtQuantityApproved, 10);
                txtQuantityPulled = parseFloat(txtQuantityPulled, 10);

                var item_BinID = $(ItemNodes[j]).find("#item_BinID").val();
                var ProjectSpendGUID = '';
                var hdnItemID = $(ItemNodes[j]).find('#hdnItemID').val();
                var hdnItemNumber = $(ItemNodes[j]).find('#hdnItemNumber').val();

                var QuickListItemGUID = $(ItemNodes[j]).find('#hdnQuickListItemGUID').val();
                if (QuickListItemGUID == null || QuickListItemGUID == undefined || QuickListItemGUID == '00000000-0000-0000-0000-000000000000')
                    QuickListItemGUID = null;
                var RequiredDate = $(ItemNodes[j]).find('#hiddenDatePicker' + hdnID).val();

                var vUDF1 = ''; var vUDF2 = ''; var vUDF3 = ''; var vUDF4 = ''; var vUDF5 = '';
                var ProjectSpendGUIDCommon = '';
                var vUDF1PullCommon = ''; var vUDF2PullCommon = ''; var vUDF3PullCommon = ''; var vUDF4PullCommon = ''; var vUDF5PullCommon = '';
                var vUDF1Required = false; var vUDF2Required = false; var vUDF3Required = false; var vUDF4Required = false; var vUDF5Required = false;
                var tcUDF1 = ''; var tcUDF2; var tcUDF3 = ''; var tcUDF4; var tcUDF5; var vTechnicianGUID = '';

                if (hdnItemGUID != null && hdnItemGUID != undefined && hdnItemGUID != '00000000-0000-0000-0000-000000000000') {
                    //if ($('#ddlProjectSpendHeader').val().length > 0) {
                    //    ProjectSpendGUID = $('#ddlProjectSpendHeader').val();
                    //}
                    //else if ($("#chkUsePullCommonUDF").is(":checked") && $("#ProjectSpendGUIDCommon") != null) {
                    //    ProjectSpendGUID = $('#ProjectSpendGUIDCommon').val();
                    //}
                    //else if ($(ItemNodes[j]).find("#ProjectSpendGUID").length > 0 && $(ItemNodes[j]).find("#ProjectSpendGUID").val().length > 0) {
                    //    ProjectSpendGUID = $(ItemNodes[j]).find("#ProjectSpendGUID").val();
                    //}

                    if ($("#UDF1PullCommon") != null) {
                        if ($("#UDF1PullCommon").attr("class") == 'selectBox') {
                            vUDF1PullCommon = $("#UDF1PullCommon option:selected").text();
                        }
                        else {
                            vUDF1PullCommon = $("#UDF1PullCommon").val();
                        }
                        if ($("#chkUsePullCommonUDF").is(":checked")) {
                            vUDF1Required = $("#UDF1PullCommon").attr("udfrequired");
                        }
                    }

                    if ($("#UDF2PullCommon") != null) {
                        if ($("#UDF2PullCommon").attr("class") == 'selectBox') {
                            vUDF2PullCommon = $("#UDF2PullCommon option:selected").text();
                        }
                        else {
                            vUDF2PullCommon = $("#UDF2PullCommon").val();
                        }
                        if ($("#chkUsePullCommonUDF").is(":checked")) {
                            vUDF2Required = $("#UDF2PullCommon").attr("udfrequired");
                        }
                    }

                    if ($("#UDF3PullCommon") != null) {
                        if ($("#UDF3PullCommon").attr("class") == 'selectBox') {
                            vUDF3PullCommon = $("#UDF3PullCommon option:selected").text();
                        }
                        else {
                            vUDF3PullCommon = $("#UDF3PullCommon").val();
                        }
                        if ($("#chkUsePullCommonUDF").is(":checked")) {
                            vUDF3Required = $("#UDF3PullCommon").attr("udfrequired");
                        }
                    }

                    if ($("#UDF4PullCommon") != null) {
                        if ($("#UDF4PullCommon").attr("class") == 'selectBox') {
                            vUDF4PullCommon = $("#UDF4PullCommon option:selected").text();
                        }
                        else {
                            vUDF4PullCommon = $("#UDF4PullCommon").val();
                        }
                        if ($("#chkUsePullCommonUDF").is(":checked")) {
                            vUDF4Required = $("#UDF4PullCommon").attr("udfrequired");
                        }
                    }

                    if ($("#UDF5PullCommon") != null) {
                        if ($("#UDF5PullCommon").attr("class") == 'selectBox') {
                            vUDF5PullCommon = $("#UDF5PullCommon option:selected").text();
                        }
                        else {
                            vUDF5PullCommon = $("#UDF5PullCommon").val();
                        }
                        if ($("#chkUsePullCommonUDF").is(":checked")) {
                            vUDF5Required = $("#UDF5PullCommon").attr("udfrequired");
                        }
                    }

                    if ($(ItemNodes[j]).find('#UDF1Pull').length > 0) {
                        if ($(ItemNodes[j]).find('#UDF1Pull').attr("class") == 'selectBox') {
                            vUDF1 = $(ItemNodes[j]).find('#UDF1Pull option:selected').text();
                        }
                        else {
                            vUDF1 = $(ItemNodes[j]).find('#UDF1Pull').val();
                        }
                        if (!$("#chkUsePullCommonUDF").is(":checked")) {
                            vUDF1Required = $(ItemNodes[j]).find('#UDF1Pull').attr("udfrequired");
                        }
                    }

                    if ($(ItemNodes[j]).find('#UDF2Pull').length > 0) {
                        if ($(ItemNodes[j]).find('#UDF2Pull').attr("class") == 'selectBox') {
                            vUDF2 = $(ItemNodes[j]).find('#UDF2Pull option:selected').text();
                        }
                        else {
                            vUDF2 = $(ItemNodes[j]).find('#UDF2Pull').val();
                        }
                        if (!$("#chkUsePullCommonUDF").is(":checked")) {
                            vUDF2Required = $(ItemNodes[j]).find('#UDF2Pull').attr("udfrequired");
                        }
                    }

                    if ($(ItemNodes[j]).find('#UDF3Pull').length > 0) {
                        if ($(ItemNodes[j]).find('#UDF3Pull').attr("class") == 'selectBox') {
                            vUDF3 = $(ItemNodes[j]).find('#UDF3Pull option:selected').text();
                        }
                        else {
                            vUDF3 = $(ItemNodes[j]).find('#UDF3Pull').val();
                        }
                        if (!$("#chkUsePullCommonUDF").is(":checked")) {
                            vUDF3Required = $(ItemNodes[j]).find('#UDF3Pull').attr("udfrequired");
                        }
                    }

                    if ($(ItemNodes[j]).find('#UDF4Pull').length > 0) {
                        if ($(ItemNodes[j]).find('#UDF4Pull').attr("class") == 'selectBox') {
                            vUDF4 = $(ItemNodes[j]).find('#UDF4Pull option:selected').text();
                        }
                        else {
                            vUDF4 = $(ItemNodes[j]).find('#UDF4Pull').val();
                        }
                        if (!$("#chkUsePullCommonUDF").is(":checked")) {
                            vUDF4Required = $(ItemNodes[j]).find('#UDF4Pull').attr("udfrequired");
                        }
                    }

                    if ($(ItemNodes[j]).find('#UDF5Pull').length > 0) {
                        if ($(ItemNodes[j]).find('#UDF5Pull').attr("class") == 'selectBox') {
                            vUDF5 = $(ItemNodes[j]).find('#UDF5Pull option:selected').text();
                        }
                        else {
                            vUDF5 = $(ItemNodes[j]).find('#UDF5Pull').val();
                        }
                        if (!$("#chkUsePullCommonUDF").is(":checked")) {
                            vUDF5Required = $(ItemNodes[j]).find('#UDF5Pull').attr("udfrequired");
                        }
                    }

                    if ($("#chkUsePullCommonUDF").is(":checked")) {
                        vUDF1 = vUDF1PullCommon;
                        vUDF2 = vUDF2PullCommon;
                        vUDF3 = vUDF3PullCommon;
                        vUDF4 = vUDF4PullCommon;
                        vUDF5 = vUDF5PullCommon;
                    }
                    var UDfRequiredmsg = '';
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && vUDF1Required == "true" && $.trim(vUDF1) == "") {
                        UDfRequiredmsg += '@string.Format(ResMessage.MsgRequired, "UDF1")';
                    }
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && vUDF2Required == "true" && $.trim(vUDF2) == "") {
                        UDfRequiredmsg += '@string.Format(ResMessage.MsgRequired, "UDF2")';
                    }
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && vUDF3Required == "true" && $.trim(vUDF3) == "") {
                        UDfRequiredmsg += '@string.Format(ResMessage.MsgRequired, "UDF3")';
                    }
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && vUDF4Required == "true" && $.trim(vUDF4) == "") {
                        UDfRequiredmsg += '@string.Format(ResMessage.MsgRequired, "UDF4")';
                    }
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && vUDF5Required == "true" && $.trim(vUDF5) == "") {
                        UDfRequiredmsg += '@string.Format(ResMessage.MsgRequired, "UDF5")';
                    }

                    if ($.trim(UDfRequiredmsg) != "") {
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").html(UDfRequiredmsg);
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        $(ItemNodes[j]).css("background-color", "#F7BBC4");
                        return false;
                    }
                }
                else if (hdnToolGUID != null && hdnToolGUID != undefined && hdnToolGUID != '00000000-0000-0000-0000-000000000000') {

                    if ($("#chkUseToolCommonUDF").is(":checked")) {
                        if ($("#UDF1ToolCommon") != null) {
                            if ($("#UDF1ToolCommon").attr("class") == 'selectBox') {
                                tcUDF1 = $("#UDF1ToolCommon option:selected").text();
                            }
                            else {
                                tcUDF1 = $("#UDF1ToolCommon").val();
                            }
                        }
                        if ($("#UDF2ToolCommon") != null) {
                            if ($("#UDF2ToolCommon").attr("class") == 'selectBox') {
                                tcUDF2 = $("#UDF2ToolCommon option:selected").text();
                            }
                            else {
                                tcUDF2 = $("#UDF2ToolCommon").val();
                            }

                        }
                        if ($("#UDF3ToolCommon") != null) {
                            if ($("#UDF3ToolCommon").attr("class") == 'selectBox') {
                                tcUDF3 = $("#UDF3ToolCommon option:selected").text();
                            }
                            else {
                                tcUDF3 = $("#UDF3ToolCommon").val();
                            }
                        }
                        if ($("#UDF4ToolCommon") != null) {
                            if ($("#UDF4ToolCommon").attr("class") == 'selectBox') {
                                tcUDF4 = $("#UDF4ToolCommon option:selected").text();
                            }
                            else {
                                tcUDF4 = $("#UDF4ToolCommon").val();
                            }
                        }
                        if ($("#UDF5ToolCommon") != null) {
                            if ($("#UDF5ToolCommon").attr("class") == 'selectBox') {
                                tcUDF5 = $("#UDF5ToolCommon option:selected").text();
                            }
                            else {
                                tcUDF5 = $("#UDF5ToolCommon").val();
                            }
                        }

                        vTechnicianGUID = $('#UseThisTechnicianGUID').val();
                    }
                    else {
                        if ($(ItemNodes[j]).find('#TCUDF1').length > 0) {
                            if ($(ItemNodes[j]).find('#TCUDF1').attr("class") == 'selectBox') {
                                tcUDF1 = $(ItemNodes[j]).find('#TCUDF1 option:selected').text();
                            }
                            else {
                                tcUDF1 = $(ItemNodes[j]).find('#TCUDF1').val();
                            }
                        }
                        if ($(ItemNodes[j]).find('#TCUDF2').length > 0) {
                            if ($(ItemNodes[j]).find('#TCUDF2').attr("class") == 'selectBox') {
                                tcUDF2 = $(ItemNodes[j]).find('#TCUDF2 option:selected').text();
                            }
                            else {
                                tcUDF2 = $(ItemNodes[j]).find('#TCUDF2').val();
                            }
                        }
                        if ($(ItemNodes[j]).find('#TCUDF3').length > 0) {
                            if ($(ItemNodes[j]).find('#TCUDF3').attr("class") == 'selectBox') {
                                tcUDF3 = $(ItemNodes[j]).find('#TCUDF3 option:selected').text();
                            }
                            else {
                                tcUDF3 = $(ItemNodes[j]).find('#TCUDF3').val();
                            }
                        }
                        if ($(ItemNodes[j]).find('#TCUDF4').length > 0) {
                            if ($(ItemNodes[j]).find('#TCUDF4').attr("class") == 'selectBox') {
                                tcUDF4 = $(ItemNodes[j]).find('#TCUDF4 option:selected').text();
                            }
                            else {
                                tcUDF4 = $(ItemNodes[j]).find('#TCUDF4').val();
                            }
                        }
                        if ($(ItemNodes[j]).find('#TCUDF5').length > 0) {
                            if ($(ItemNodes[j]).find('#TCUDF5').attr("class") == 'selectBox') {
                                tcUDF5 = $(ItemNodes[j]).find('#TCUDF5 option:selected').text();
                            }
                            else {
                                tcUDF5 = $(ItemNodes[j]).find('#TCUDF5').val();
                            }
                        }

                        vTechnicianGUID = $(ItemNodes[j]).find('#TechnicianGUID').val();
                    }
                }

                if (txtQuantityRequisitioned <= 0) {
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $("#spanGlobalMessage").html('@ResRequisitionDetails.ValidRequisitionedQuantity');
                    $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');

                    $(ItemNodes[j]).css("background-color", "#F7BBC4");
                    return false;
                }
                else if (txtQuantityApproved > txtQuantityRequisitioned) {
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $("#spanGlobalMessage").html('@(eTurns.DTO.ResRequisitionDetails.YoucanapproveonlyRequisitionedQuantity)' + '  ' + txtQuantityRequisitioned);
                    $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                    $(ItemNodes[j]).css("background-color", "#F7BBC4");
                    return false;
                }
                else if (txtQuantityApproved > 0 && '@ViewBag.RequisitionStatus' == "Approved") {
                    if (txtQuantityRequisitioned != undefined) {
                        var dataNew = {
                            "GUID": hdnID, "ItemGUID": hdnItemGUID, "RequisitionGUID": hdnRequisitionGUID, "ItemNumber": hdnItemNumber,
                            "QuantityRequisitioned": txtQuantityRequisitioned, "QuantityPulled": txtQuantityPulled, "QuantityApproved": txtQuantityApproved,
                            "ItemCost": hdnItemCost, "BinID": item_BinID, "ProjectSpendGUID": ProjectSpendGUID, "RequiredDateStr": RequiredDate, "PullUDF1": vUDF1,
                            "PullUDF2": vUDF2, "PullUDF3": vUDF3, "PullUDF4": vUDF4, "PullUDF5": vUDF5, "QuickListItemGUID": QuickListItemGUID,
                            "ToolGuid": hdnToolGUID, "ToolCheckoutUDF1": tcUDF1, "ToolCheckoutUDF2": tcUDF2, "ToolCheckoutUDF3": tcUDF3, "ToolCheckoutUDF4": tcUDF4,
                            "ToolCheckoutUDF5": tcUDF5, "TechnicianGUID": vTechnicianGUID
                        };
                        arrApprovedItems.push(dataNew);
                    }
                }
                else {
                    if (txtQuantityRequisitioned != undefined) {
                        var data = {
                            "GUID": hdnID, "ItemGUID": hdnItemGUID, "RequisitionGUID": hdnRequisitionGUID, "ItemNumber": hdnItemNumber,
                            "QuantityRequisitioned": txtQuantityRequisitioned, "QuantityPulled": txtQuantityPulled, "QuantityApproved": txtQuantityApproved,
                            "ItemCost": hdnItemCost, "BinID": item_BinID, "ProjectSpendGUID": ProjectSpendGUID, "RequiredDateStr": RequiredDate, "PullUDF1": vUDF1,
                            "PullUDF2": vUDF2, "PullUDF3": vUDF3, "PullUDF4": vUDF4, "PullUDF5": vUDF5, "QuickListItemGUID": QuickListItemGUID,
                            "ToolGuid": hdnToolGUID, "ToolCheckoutUDF1": tcUDF1, "ToolCheckoutUDF2": tcUDF2, "ToolCheckoutUDF3": tcUDF3, "ToolCheckoutUDF4": tcUDF4,
                            "ToolCheckoutUDF5": tcUDF5, "TechnicianGUID": vTechnicianGUID
                        };
                        arrItems.push(data);
                    }
                }

            }


            if (arrItems.length > 0) {
                $('#DivLoading').show();
                $.ajax({
                    url: '@Url.Content("~/Consume/AddItemToDetailTable")',
                    data: { 'para': JSON.stringify(arrItems) },
                    dataType: 'json',
                    type: 'POST',
                    async: false,
                    cache: false,
                    success: function (response) {
                        $('#DivLoading').hide();
                        if (response.Status == "ok") {
                            if (msgflag == true) {
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                $("#spanGlobalMessage").html(response.Message);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                                ShowEditTabGUIDTRUEOnly("RequisitionEdit?RequisitionGUID=" + '@ViewBag.RequisitionGUID', "frmRequisitionMaster");
                            }
                        }
                        else {
                            $("#spanGlobalMessage").html(response.Message);
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            return false;
                        }
                    }
                });
            }

            if (arrApprovedItems.length > 0) {
                $('#DivLoading').show();
                $.ajax({
                    url: '@(Url.Content("~/Consume/ApprovedRequisitionUDFUpdate"))',
                    data: { 'para': JSON.stringify(arrApprovedItems) },
                    dataType: 'json',
                    type: 'POST',
                    async: false,
                    cache: false,
                    success: function (response) {
                        $('#DivLoading').hide();
                        if (response.Status == "ok") {
                            if (msgflag == true) {
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                $("#spanGlobalMessage").html(response.Message);
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                                ShowEditTabGUIDTRUEOnly("RequisitionEdit?RequisitionGUID=" + '@(ViewBag.RequisitionGUID)', "frmRequisitionMaster");
                            }
                        }
                        else {
                            $("#spanGlobalMessage").html(response.Message);
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            return false;
                        }
                    }

                });
            }
        }
        return true;

    }


    function CloseReqPullAllModel() {
        $.modal.impl.close();
        setTimeout(function () {

            $('#RequisitionItemsTable' + '@ViewBag.RequisitionID' + ' tbody tr').each(function () {
                $(this).removeAttr("style");
            });
            ShowEditTabGUIDTRUEOnly("RequisitionEdit?RequisitionGUID=" + '@ViewBag.RequisitionGUID', "frmRequisitionMaster");
        }, 10);
    }

    function closeModalPSLimit() {
        $.modal.impl.close();
        var hasError = false;
        $('#RequisitionItemsTable' + '@ViewBag.RequisitionID' + ' tbody tr ').each(function () {
            if ($(this).css("background-color").length > 0) {
                if (rgb2hex($(this).css("background-color")) !== '#008000' && rgb2hex($(this).css("background-color")) !== '#eff7ff' && rgb2hex($(this).css("background-color")) !== '#000000' && rgb2hex($(this).css("background-color")) !== '#ffffff') {
                    //alert(rgb2hex($(this).css("background-color")) != '#000000');
                    $(this).removeClass('row_selected');
                    hasError = true;
                }
                else {
                    $(this).removeAttr("style");
                }
            }
            else {
                $(this).removeAttr("style");
            }
        });

        if (!hasError) {
            setTimeout(function () {
                $('#RequisitionItemsTable' + '@ViewBag.RequisitionID' + ' tr').each(function () {
                    $(this).removeAttr("style");
                });
                ShowEditTabGUIDTRUEOnly("RequisitionEdit?RequisitionGUID=" + '@ViewBag.RequisitionGUID', "frmRequisitionMaster");
            }, 1000);
        }
    }
    function closeModalGlobal() {
        $.modal.impl.close();
        ShowEditTabGUIDTRUEOnly("RequisitionEdit?RequisitionGUID=" + '@ViewBag.RequisitionGUID', "frmRequisitionMaster");
    }



    function RequisitionPullAll() {
        var IsGlobalErrorMsgShow = false;
        var IsPSRedirectToReq = false;
        var errorGBLMsg = '';
        var arrItems = new Array();

        var arrItemsToPull = new Array();
        var arrItemErrors = new Array();
        var errorMsgObjct = new Object();

        $('#' + RequisitionItemsDTName + ' tbody tr.row_selected').each(function (i) {
            $(this).toggleClass('row_selected');
            var errorMsg = '';

            errorMsgObjct.RowIndex = i;
            var RowObject = $(this);

            var aPos = $('#RequisitionItemsTable' + '@ViewBag.RequisitionID').dataTable().fnGetPosition($(this)[0]);
            var aData = $('#RequisitionItemsTable' + '@ViewBag.RequisitionID').dataTable().fnGetData(aPos);

            var ItemNumber = $(RowObject).find('#hdnItemNumber').val();
            var vBinID = $(this).find("#item_BinID").val();
            var vItemGUID = $(this).find('#hdnItemGUID').val();

            errorMsgObjct.Item = ItemNumber;

            if ($(this).find('[type="button"]').length <= 0) {
                $(this).css('background-color', 'Olive');
                IsGlobalErrorMsgShow = true;
                errorMsg += "<b style='color:Olive;'>" + ItemNumber + ": You can not pull for closed items.</b><br/>"
                arrItemErrors.push({ "Message": errorMsg, "Color": "Olive" });
            }

            var txtQuantityRequisitioned = 0;
            var txtQuantityApproved = 0;
            var txtQuantityPulled = 0;
            var txtQty = 0;
            if (!isNaN(parseFloat($(this).find('#txtQuantityRequisitioned').val())) && parseFloat($(this).find('#txtQuantityRequisitioned').val()) > 0)
                txtQuantityRequisitioned = parseFloat($(this).find('#txtQuantityRequisitioned').val(), 10);

            if (!isNaN(parseFloat($(this).find('#txtQuantityApproved').val())) && parseFloat($(this).find('#txtQuantityApproved').val()) > 0)
                txtQuantityApproved = parseFloat($(this).find('#txtQuantityApproved').val(), 10);

            if (!isNaN(parseFloat($(this).find('#txtQuantityPulled').val())) && parseFloat($(this).find('#txtQuantityPulled').val()) > 0)
                txtQuantityPulled = parseFloat($(this).find('#txtQuantityPulled').val(), 10);

            if (!isNaN(parseFloat($(this).find('#txtQty').val())) && parseFloat($(this).find('#txtQty').val()) > 0)
                txtQty = parseFloat($(this).find('#txtQty').val(), 10);


            if ((parseFloat(txtQty) + parseFloat(txtQuantityPulled)) > parseFloat(txtQuantityApproved)) {
                $(this).css('background-color', 'Olive');
                IsGlobalErrorMsgShow = true;
                errorMsg += "<b style='color:Olive;'>" + ItemNumber + ": Qty to Pull is greater than quantity approved.</b><br/>"
                arrItemErrors.push({ "Message": errorMsg, "Color": "Olive" });
            }
            if (txtQty <= 0) {
                $(this).css('background-color', 'Olive');
                IsGlobalErrorMsgShow = true;
                errorMsg += "<b style='color:Olive;'>" + ItemNumber + ": Qty to Pull is Mandatory.</b><br/>"

                arrItemErrors.push({ "Message": errorMsg, "Color": "Olive" });
            }
            if (!(!isNaN(parseInt(vBinID)) && parseInt(vBinID) > 0) && (vItemGUID != null && vItemGUID != undefined && vItemGUID != '00000000-0000-0000-0000-000000000000')) {
                $(this).css('background-color', 'Olive');
                IsGlobalErrorMsgShow = true;
                errorMsg += "<b style='color:Olive;'>" + ItemNumber + ": Inventory Location are Mandatory.</b><br/>"

                arrItemErrors.push({ "Message": errorMsg, "Color": "Olive" });
            }
            var trimtxtVal = txtQty.toString().replace(/ /g, '');
            trimtxtVal = parseFloat(trimtxtVal, 10);

            if (errorMsg.length <= 0) {
                var vItemID = $(this).find('#hdnItemID').val();

                var vProjectID = '';
                var ProjectSpendName = '';

                if ($('#ddlProjectSpendHeader').length > 0 && $('#ddlProjectSpendHeader').val().length > 0) {
                    vProjectID = $('#ddlProjectSpendHeader').val();
                    ProjectSpendName = $('#ddlProjectSpendHeader option:selected').text();
                }
                else if ($("#chkUsePullCommonUDF").is(":checked") && $('#ProjectSpendGUIDCommon').val().length > 0) {
                    vProjectID = $('#ProjectSpendGUIDCommon').val();
                    ProjectSpendName = $('#ProjectSpendGUIDCommon option:selected').text();
                }
                else if ($(this).find("#ProjectSpendGUID").length > 0 && $(this).find("#ProjectSpendGUID").val().length > 0) {
                    vProjectID = $(this).find("#ProjectSpendGUID").val();
                    ProjectSpendName = $(this).find("#ProjectSpendGUID option:selected").text();
                }

                var SupplierAccountGuid = '';
                var SupplierAccountNo = '';

                if ($(this).find("#hdnSupplierAccountNumber").length > 0) {
                    SupplierAccountGuid = $(this).find("#hdnSupplierAccountNumber").val();
                }

                if ($(this).find("#txtSupplierAccountNumber").length > 0) {
                    SupplierAccountNo = $(this).find("#txtSupplierAccountNumber").val();
                }

                var hdnID = $(this).find('#hdnID').val();
                var hdnRequisitionGUID = $(this).find('#hdnRequisitionGUID').val();
                var vspnOn_HandQuantity = 0;
                var vPullCreditText = 'pull';
                var vPullOrderNumber = "";
                var vProjectSpentName = "";

                var vUDF1 = ''; vUDF2 = ''; vUDF3 = ''; vUDF4 = ''; vUDF5 = ''; tcUDF1 = ''; tcUDF2 = ''; tcUDF3 = ''; tcUDF4 = ''; tcUDF5 = '';

                if ($("#chkUsePullCommonUDF").is(":checked")) {
                    vUDF1 = GetCommonUDFValue("UDF1PullCommon");
                    vUDF2 = GetCommonUDFValue("UDF2PullCommon");
                    vUDF3 = GetCommonUDFValue("UDF3PullCommon");
                    vUDF4 = GetCommonUDFValue("UDF4PullCommon");
                    vUDF5 = GetCommonUDFValue("UDF5PullCommon");

                    if ($('#txtPullOrderNumberCommon') != null) {
                        if ($('#txtPullOrderNumberCommon').attr("class") == 'selectBox') {
                            vPullOrderNumber = $('#txtPullOrderNumberCommon option:selected').text();
                        }
                        else {
                            vPullOrderNumber = $('#txtPullOrderNumberCommon').val();
                        }
                    }
                    if ($('#txtProjectSpentCommon') != null) {
                        if ($('#txtProjectSpentCommon').attr("class") == 'selectBox') {
                            vProjectSpentName = $('#txtProjectSpentCommon option:selected').text();
                        }
                        else {
                            vProjectSpentName = $('#txtProjectSpentCommon').val();
                        }
                    }
                }
                else {
                    vUDF1 = GetUDFValueFromTR("UDF1Pull", RowObject);
                    vUDF2 = GetUDFValueFromTR("UDF2Pull", RowObject);
                    vUDF3 = GetUDFValueFromTR("UDF3Pull", RowObject);
                    vUDF4 = GetUDFValueFromTR("UDF4Pull", RowObject);
                    vUDF5 = GetUDFValueFromTR("UDF5Pull", RowObject);

                    if ($(this).find('#txtPullOrderNumber') != null) {
                        if ($(this).find('#txtPullOrderNumber').attr("class") == 'selectBox') {
                            vPullOrderNumber = $(this).find('#txtPullOrderNumber option:selected').text();
                        }
                        else {
                            vPullOrderNumber = $(this).find('#txtPullOrderNumber').val();
                        }
                    }
                    if ($(this).find('#txtProjectSpent') != null) {
                        if ($(this).find('#txtProjectSpent').attr("class") == 'selectBox') {
                            vProjectSpentName = $(this).find('#txtProjectSpent option:selected').text();
                        }
                        else {
                            vProjectSpentName = $(this).find('#txtProjectSpent').val();
                        }
                    }
                }

                var vToolGUID = $(this).find('#hdnToolGUID').val();
                var vTechnicianGUID = null;
                var vTechnicianName = '';
                if ($("#chkUseToolCommonUDF").is(":checked")) {
                    tcUDF1 = GetCommonUDFValue("UDF1ToolCommon");
                    tcUDF2 = GetCommonUDFValue("UDF2ToolCommon");
                    tcUDF3 = GetCommonUDFValue("UDF3ToolCommon");
                    tcUDF4 = GetCommonUDFValue("UDF4ToolCommon");
                    tcUDF5 = GetCommonUDFValue("UDF5ToolCommon");
                    vTechnicianGUID = $('#UseThisTechnicianGUID').val();
                }
                else {
                    tcUDF1 = GetUDFValueFromTR("UDF1TC", RowObject);
                    tcUDF2 = GetUDFValueFromTR("UDF2TC", RowObject);
                    tcUDF3 = GetUDFValueFromTR("UDF3TC", RowObject);
                    tcUDF4 = GetUDFValueFromTR("UDF4TC", RowObject);
                    tcUDF5 = GetUDFValueFromTR("UDF5TC", RowObject);
                    vTechnicianGUID = $(this).find('#TechnicianGUID').val();
                }
                arrItemsToPull.push({
                    ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectID, PullCreditQuantity: txtQty, BinID: vBinID, PullCredit: vPullCreditText,
                    TempPullQTY: txtQty, UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, RequisitionDetailGUID: hdnID,
                    WorkOrderDetailGUID: '@ViewBag.WorkOrderGUID', ProjectSpendName: vProjectSpentName, RequisitionMasterGUID: hdnRequisitionGUID,
                    ItemNumber: ItemNumber, ToolGuid: vToolGUID, TechnicianGUID: vTechnicianGUID, ToolCheckoutUDF1: tcUDF1, ToolCheckoutUDF2: tcUDF2,
                    ToolCheckoutUDF3: tcUDF3, ToolCheckoutUDF4: tcUDF4, ToolCheckoutUDF5: tcUDF5, SupplierAccountGuid: SupplierAccountGuid, PullOrderNumber: vPullOrderNumber
                });
            }
        });
        if (arrItemsToPull.length > 0) {
            $.ajax({
                "url": '@Url.Content("~/Pull/RequisitionPullAll")',
                "data": JSON.stringify(arrItemsToPull),
                "type": "POST",
                "dataType": "json",
                "contentType": "application/json",
                success: function (result) {
                    $('#DivLoading').hide();

                    if (result.ErrorMessages.length > 0) {

                        for (var i = 0; i < result.ErrorMessages.length; i++) {
                            var errorMsg = '';
                            var response = result.ErrorMessages[i];
                            var trRow;
                            var ItemNumber = '';
                            $('#' + RequisitionItemsDTName + ' tbody tr').each(function (i) {
                                if ($(this).find('#hdnID').val() == response.ReqDetailGuid) {
                                    trRow = $(this);
                                    errorMsgObjct.RowIndex = i;
                                    return;
                                }
                            });
                            ItemNumber = $(trRow).find('#hdnItemNumber').val();
                            if (ItemNumber.length <= 0)
                                ItemNumber = $(trRow).find('#hdnToolName').val();

                            if (response.Status == "ok") {
                                if (response.LocationMSG != "") {
                                    if (response.PSLimitExceed) {
                                        $(trRow).css('background-color', 'Yellow');
                                        errorMsg = "<b style='color:Olive'>" + ItemNumber + ": " + response.LocationMSG + " " + '@ResPullMaster.msgProjectSpendLimitConfirmation' +"</b><br>"
                                        arrItemErrors.push({ "Message": errorMsg, "Color": "Olive" });
                                    }
                                    else {
                                        $(trRow).css('background-color', 'Olive');
                                        errorMsg = "<b style='color:Olive'>" + ItemNumber + ": " + response.LocationMSG + "</b><br>"
                                        arrItemErrors.push({ "Message": errorMsg, "Color": "Olive" });
                                    }
                                }
                                else {
                                    UDFInsertNewForGrid(trRow);
                                    $(trRow).css('background-color', 'Green');
                                    errorMsg = "<b style='color:Green'>" + ItemNumber + ": " + response.Message + "</b><br>"
                                    arrItemErrors.push({ "Message": errorMsg, "Color": "Green" });

                                }
                            }
                            else {
                                $(trRow).css('background-color', 'Red');
                                errorMsg = "<b style='color:Red'>" + ItemNumber + ": " + response.Message + "</b><br>"
                                arrItemErrors.push({ "Message": errorMsg, "Color": "Red" });
                            }

                        }
                    }
                    var ErrorResult = $.grep(arrItemErrors, function (e) { return e.Color != "Green"; });
                    var newErrorMsg = "<b>" +'@ResPullMaster.PullSuccessMsg'+"</b><br /><br />";
                    if (ErrorResult.length > 0) {
                        newErrorMsg = "<b>"+'@ResInventoryCountDetail.SomeItemNotPulled'+"</b><br /><br />";
                    }
                    for (var i = 0; i < arrItemErrors.length; i++) {
                        newErrorMsg += "<b>" + (i + 1) + "</b>. <b style='color:" + arrItemErrors[i].Color + "'>" + arrItemErrors[i].Message + "</b>";
                    }
                    $.modal.impl.close();
                    $('#dlgPullAllReqMessage').find("#pErrMessage").html(newErrorMsg);
                    $('#dlgPullAllReqMessage').modal();
                },
                error: function (response) {
                    showNotificationDialog();
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    $("#spanGlobalMessage").html('@ResCommon.ErrorInProcess');
                }
            });

        }
        else {
            $('#DivLoading').hide();
            var ErrorResult = $.grep(arrItemErrors, function (e) { return e.Color != "Green"; });
            var newErrorMsg = "<b>"+ '@ResPullMaster.PullSuccessMsg' +"</b><br /><br />";
            if (ErrorResult.length > 0) {
                newErrorMsg = "<b>"+'@ResInventoryCountDetail.SomeItemNotPulled'+"</b><br /><br />";
            }
            for (var i = 0; i < arrItemErrors.length; i++) {
                newErrorMsg += "<b>" + (i + 1) + "</b>. <b style='color:" + arrItemErrors[i].Color + "'>" + arrItemErrors[i].Message + "</b><br />";
            }
            $.modal.impl.close();
            $('#dlgCommonErrorMsg').find("#pErrMessage").html(newErrorMsg);
            $('#dlgCommonErrorMsg').modal();
        }
    }


    function AddSingleItemToPullList(obj) {
        isDirtyForm = false;


        if ($(obj)[0].value == undefined)
            return false;

        if ($($(obj)[0]).data("value") == 'Pull ALL'
            || $(obj)[0].id == "btnPullAll") {

            return RequisitionPullAll();

            var IsGlobalErrorMsgShow = false;
            var IsPSRedirectToReq = false;
            var errorGBLMsg = '';

            var arrItems = new Array();

            $('#' + RequisitionItemsDTName + ' tbody tr.row_selected').each(function (i) {
                $(this).toggleClass('row_selected');
                var errorMsg = '';

                var arrItemErrors = new Array();
                var errorMsgObjct = new Object();
                errorMsgObjct.RowIndex = i;

                var RowObject = $(this);
                var aPos = $('#RequisitionItemsTable' + '@ViewBag.RequisitionID').dataTable().fnGetPosition($(this)[0]);
                var aData = $('#RequisitionItemsTable' + '@ViewBag.RequisitionID').dataTable().fnGetData(aPos);
                var ItemNumber = $(RowObject).find('#hdnItemNumber').val();

                errorMsgObjct.Item = ItemNumber;

                var txtQuantityRequisitioned = $(this).find('#txtQuantityRequisitioned').val() == '' ? 0 : $(this).find('#txtQuantityRequisitioned').val();
                var txtQuantityApproved = $(this).find('#txtQuantityApproved').val() == '' ? 0 : $(this).find('#txtQuantityApproved').val();
                var txtQuantityPulled = $(this).find('#txtQuantityPulled').val() == '' ? 0 : $(this).find('#txtQuantityPulled').val();
                var txxt = $(this).find('#txtQty').val() == '' ? 0 : $(this).find('#txtQty').val();
                var vBinID = $(this).find("#item_BinID").val();
                var txtQty = parseFloat(txxt, 10);
                var vPullOrderNumber = "";

                txtQuantityApproved = parseFloat(txtQuantityApproved, 10);
                txtQuantityPulled = parseFloat(txtQuantityPulled, 10);

                if ((parseFloat(txtQty) + parseFloat(txtQuantityPulled)) > parseFloat(txtQuantityApproved)) {
                    $(this).css('background-color', 'Olive');
                    IsGlobalErrorMsgShow = true;
                    errorMsg += "<b style='color:Olive;'>" + ItemNumber + ": Qty to Pull is greater than quantity approved.</b><br/>"

                    arrItemErrors.push({ "Message": "Pull qauntity is greater than approved qauntity", "Color": "Olive" });
                }
                if (txtQty <= 0) {
                    $(this).css('background-color', 'Olive');
                    IsGlobalErrorMsgShow = true;
                    errorMsg += "<b style='color:Olive;'>" + ItemNumber + ": Qty to Pull is Mandatory.</b><br/>"

                    arrItemErrors.push({ "Message": "Please enter quantity to pull", "Color": "Olive" });
                }
                if (!(!isNaN(parseInt(vBinID)) && parseInt(vBinID) > 0)) {
                    $(this).css('background-color', 'Olive');
                    IsGlobalErrorMsgShow = true;
                    errorMsg += "<b style='color:Olive;'>" + ItemNumber + ": Inventory Location are Mandatory.</b><br/>"

                    arrItemErrors.push({ "Message": "Please select inventory location", "Color": "Olive" });
                }
                var trimtxtVal = txtQty.toString().replace(/ /g, '');
                trimtxtVal = parseFloat(trimtxtVal, 10);

                if (errorMsg.length <= 0) {
                    var vItemID = $(this).find('#hdnItemID').val();
                    var vItemGUID = $(this).find('#hdnItemGUID').val();

                    var vProjectID = '';
                    var ProjectSpendName = '';

                    if ($('#txtProjectSpendHeader').val().length > 0) {
                        vProjectID = $('#txtProjectSpendHeader').val();
                        ProjectSpendName = $('#txtProjectSpendHeader option:selected').text();
                    }
                    else if ($("#chkUsePullCommonUDF").is(":checked") && $('#ProjectSpendGUIDCommon').val().length > 0) {
                        vProjectID = $('#ProjectSpendGUIDCommon').val();
                        ProjectSpendName = $('#ProjectSpendGUIDCommon option:selected').text();
                    }
                    else if ($(this).find("#ProjectSpendGUID").val().length > 0) {
                        vProjectID = $(this).find("#ProjectSpendGUID").val();
                        ProjectSpendName = $(this).find("#ProjectSpendGUID option:selected").text();
                    }

                    var hdnID = $(this).find('#hdnID').val();
                    var hdnRequisitionGUID = $(this).find('#hdnRequisitionGUID').val();
                    var vspnOn_HandQuantity = 0;
                    var vPullCreditText = 'pull';
                    var vUDF1 = '';
                    var vUDF2 = '';
                    var vUDF3 = '';
                    var vUDF4 = '';
                    var vUDF5 = '';
                    var vUDF1PullCommon = ''; var vUDF2PullCommon = ''; var vUDF3PullCommon = ''; var vUDF4PullCommon = ''; var vUDF5PullCommon = '';

                    if ($("#UDF1PullCommon") != null) {
                        if ($("#UDF1PullCommon").attr("class") == 'selectBox') {
                            vUDF1PullCommon = $("#UDF1PullCommon option:selected").text();
                        }
                        else {
                            vUDF1PullCommon = $("#UDF1PullCommon").val();
                        }
                    }

                    if ($("#UDF2PullCommon") != null) {
                        if ($("#UDF2PullCommon").attr("class") == 'selectBox') {
                            vUDF2PullCommon = $("#UDF2PullCommon option:selected").text();
                        }
                        else {
                            vUDF2PullCommon = $("#UDF2PullCommon").val();
                        }
                    }

                    if ($("#UDF3PullCommon") != null) {
                        if ($("#UDF3PullCommon").attr("class") == 'selectBox') {
                            vUDF3PullCommon = $("#UDF3PullCommon option:selected").text();
                        }
                        else {
                            vUDF3PullCommon = $("#UDF3PullCommon").val();
                        }
                    }

                    if ($("#UDF4PullCommon") != null) {
                        if ($("#UDF4PullCommon").attr("class") == 'selectBox') {
                            vUDF4PullCommon = $("#UDF4PullCommon option:selected").text();
                        }
                        else {
                            vUDF4PullCommon = $("#UDF4PullCommon").val();
                        }
                    }

                    if ($("#UDF5PullCommon") != null) {
                        if ($("#UDF5PullCommon").attr("class") == 'selectBox') {
                            vUDF5PullCommon = $("#UDF5PullCommon option:selected").text();
                        }
                        else {
                            vUDF5PullCommon = $("#UDF5PullCommon").val();
                        }
                    }

                    if ($(this).find('#UDF1Pull').length > 0) {
                        if ($(this).find('#UDF1Pull').attr("class") == 'selectBox') {
                            vUDF1 = $(this).find('#UDF1Pull option:selected').text();
                        }
                        else {
                            vUDF1 = $(this).find('#UDF1Pull').val();
                        }
                    }

                    if ($(this).find('#UDF2Pull').length > 0) {
                        if ($(this).find('#UDF2Pull').attr("class") == 'selectBox') {
                            vUDF2 = $(this).find('#UDF2Pull option:selected').text();
                        }
                        else {
                            vUDF2 = $(this).find('#UDF2Pull').val();
                        }
                    }

                    if ($(this).find('#UDF3Pull').length > 0) {
                        if ($(this).find('#UDF3Pull').attr("class") == 'selectBox') {
                            vUDF3 = $(this).find('#UDF3Pull option:selected').text();
                        }
                        else {
                            vUDF3 = $(this).find('#UDF3Pull').val();
                        }
                    }

                    if ($(this).find('#UDF4Pull').length > 0) {
                        if ($(this).find('#UDF4Pull').attr("class") == 'selectBox') {
                            vUDF4 = $(this).find('#UDF4Pull option:selected').text();
                        }
                        else {
                            vUDF4 = $(this).find('#UDF4Pull').val();
                        }
                    }

                    if ($(this).find('#UDF5Pull').length > 0) {
                        if ($(this).find('#UDF5Pull').attr("class") == 'selectBox') {
                            vUDF5 = $(this).find('#UDF5Pull option:selected').text();
                        }
                        else {
                            vUDF5 = $(this).find('#UDF5Pull').val();
                        }
                    }

                    if ($("#chkUsePullCommonUDF").is(":checked")) {
                        vUDF1 = vUDF1PullCommon != undefined ? vUDF1PullCommon : '';
                        vUDF2 = vUDF2PullCommon != undefined ? vUDF2PullCommon : '';
                        vUDF3 = vUDF3PullCommon != undefined ? vUDF3PullCommon : '';
                        vUDF4 = vUDF4PullCommon != undefined ? vUDF4PullCommon : '';
                        vUDF5 = vUDF5PullCommon != undefined ? vUDF5PullCommon : '';
                    }

                    $('#DivLoading').show();
                    $.ajax({
                        "url": '@Url.Content("~/Pull/UpdatePullData")',
                        data: { ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectID, PullCreditQuantity: txtQty, BinID: vBinID, PullCredit: vPullCreditText, TempPullQTY: txtQty, UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, RequisitionDetailGUID: hdnID, WorkOrderDetailGUID: '@ViewBag.WorkOrderGUID', ProjectSpendName: vProjectSpentName, PullOrderNumber: vPullOrderNumber },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        success: function (response) {
                            $('#DivLoading').hide();
                            if (response.Status == "ok") {
                                if (response.LocationMSG != "") {
                                    if (response.PSLimitExceed) {
                                        $(RowObject).css('background-color', 'Yellow');
                                        IsPSRedirectToReq = true;
                                        IsGlobalErrorMsgShow = true;
                                        errorMsg += "<b style='color:Olive'>" + ItemNumber + ": " + response.LocationMSG + " " + "do you want to create new requisition for the same ?</b><br>"

                                        arrItemErrors.push({ "Message": response.LocationMSG + " " + "do you want to create new requisition for the same ?", "Color": "Olive" });
                                    }
                                    else {
                                        $(RowObject).css('background-color', 'Olive');
                                        IsPSRedirectToReq = false;
                                        IsGlobalErrorMsgShow = true;
                                        errorMsg += "<b style='color:Olive'>" + ItemNumber + ": " + response.LocationMSG + "</b><br>"

                                        arrItemErrors.push({ "Message": response.LocationMSG, "Color": "Olive" });
                                    }
                                }
                                else {
                                    UDFInsertNewForGrid(RowObject);
                                    $(RowObject).css('background-color', 'Green');
                                    errorMsg += "<b style='color:Green'>" + ItemNumber + ": " + response.Message + "</b><br>"

                                    arrItemErrors.push({ "Message": response.Message, "Color": "Green" });

                                    //$('div#target').fadeToggle();
                                    //$("div#target").delay(2000).fadeOut(200);
                                    //$("#spanGlobalMessage").text(response.Message);
                                    //$("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                                    IsPSRedirectToReq = false;
                                    if (!IsGlobalErrorMsgShow) {
                                        IsGlobalErrorMsgShow = false;
                                    }
                                    $.ajax({
                                        "url": '@Url.Content("~/Consume/CloseRequisitionIfPullCompleted")',
                                        data: { RequisitionGUID: hdnRequisitionGUID },
                                        "async": false,
                                        cache: false,
                                        "dataType": "json",
                                        success: function (response) {
                                        }
                                    });
                                }
                            }
                            else {
                                $(RowObject).css('background-color', 'Red');
                                IsPSRedirectToReq = false;
                                IsGlobalErrorMsgShow = true;
                                errorMsg += "<b style='color:Red'>" + ItemNumber + ": " + response.Message + "</b><br>"


                                arrItemErrors.push({ "Message": response.Message, "Color": "Red" });

                            }
                        },
                        error: function (response) {
                            $(RowObject).css('background-color', 'Red');
                            IsPSRedirectToReq = false;
                            IsGlobalErrorMsgShow = true;
                            errorMsg += "<b style='color:Red'>" + ItemNumber + ": " + response.Message + "</b><br>"

                            arrItemErrors.push({ "Message": "Server Error!", "Color": "Red" });

                        }
                    });
                }

                errorGBLMsg = errorGBLMsg + errorMsg;


                errorMsgObjct.Errors = arrItemErrors;
                errorMsgObjct.HasError = false;
                var ErrorResult = $.grep(arrItemErrors, function (e) { return e.Color != "Green"; });
                if (ErrorResult.length > 0) {
                    errorMsgObjct.HasError = true;
                }
                arrItems.push(errorMsgObjct);
            });

            $.modal.impl.close();

            var newErrorMsg = "<b>"+ '@ResPullMaster.PullSuccessMsg'  +"</b><br /><br />";
            var ErrorResult = $.grep(arrItems, function (e) { return e.HasError == true; });

            if (ErrorResult.length > 0) {
                newErrorMsg = "<b>"+'@ResInventoryCountDetail.SomeItemNotPulled'+"</b><br /><br />";
            }

            for (var i = 0; i < arrItems.length; i++) {
                newErrorMsg += "<b>" + (i + 1) + "</b>. <b style='color:" + arrItems[i].Errors[0].Color + "'>" + arrItems[i].Item + ": ";
                for (var j = 0; j < arrItems[i].Errors.length; j++) {
                    if (j > 0 && j < (arrItems[i].Errors.length - 1)) {
                        newErrorMsg += ", ";
                    }
                    else if (j > 0 && j == (arrItems[i].Errors.length - 1)) {
                        newErrorMsg += " and ";
                    }
                    newErrorMsg += arrItems[i].Errors[j].Message;
                }
                newErrorMsg += "</b><br />";
            }

            $('#dlgCommonErrorMsg').find("#pErrMessage").html(newErrorMsg);
            $('#dlgCommonErrorMsg').modal();


            // if (IsPSRedirectToReq) {
            //     errorGBLMsg = "<b>Some of the Item(s) is(are) not able to Pull(s) Due to following reasons.</b><br /><br />" + errorGBLMsg;
            //     $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', 'none');
            //     $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', '');
            // }
            // else if (IsGlobalErrorMsgShow) {
            //     errorGBLMsg = "<b>Some of the Item(s) is(are) not able to Pull(s) Due to following reasons.</b><br /><br />" + errorGBLMsg;

            //     $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', '');
            //     $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
            // }
            // else if (!IsGlobalErrorMsgShow) {
            //     errorGBLMsg = "<b>Pull successfully done.</b><br /><br />" + errorGBLMsg;
            //     $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', '');
            //     $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
            // }
            // $('#dlgCommonErrorMsg').find("#pErrMessage").html(errorGBLMsg);
            // $('#dlgCommonErrorMsg').modal();
        }
        else {
            var txtQuantityRequisitioned = $(obj).parent().parent().find('#txtQuantityRequisitioned').val() == '' ? 0 : $(obj).parent().parent().find('#txtQuantityRequisitioned').val();
            var txtQuantityApproved = $(obj).parent().parent().find('#txtQuantityApproved').val() == '' ? 0 : $(obj).parent().parent().find('#txtQuantityApproved').val();
            var txtQuantityPulled = $(obj).parent().parent().find('#txtQuantityPulled').val() == '' ? 0 : $(obj).parent().parent().find('#txtQuantityPulled').val();
            var txxt = $(obj).parent().parent().find('#txtQty').val() == '' ? 0 : $(obj).parent().parent().find('#txtQty').val();
            var vBinID = $(obj).parent().parent().find("#item_BinID").val();
            var txtQty = parseFloat(txxt, 10);
            var vPullOrderNumber = "";
            var vProjectSpentName = "";

            txtQuantityApproved = parseFloat(txtQuantityApproved, 10);
            txtQuantityPulled = parseFloat(txtQuantityPulled, 10);

            if ((txtQty + txtQuantityPulled) > txtQuantityApproved) {
                $("#spanGlobalMessage").html('@eTurns.DTO.ResRequisitionDetails.YoucanPullMaxtoApprovedQuantity  ' + (txtQuantityApproved - txtQuantityPulled));
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
                return false;
            }
            if (txtQty <= 0) {
                $("#spanGlobalMessage").html('@eTurns.DTO.ResRequisitionDetails.InvalidPullvalue');
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
                return false;
            }

            if (txtQty != 'undefined' && txtQty > 0 && vBinID > 0) {
                var trimtxtVal = txtQty.toString().replace(/ /g, '');
                trimtxtVal = parseFloat(trimtxtVal, 10);
                if (trimtxtVal > 0) {

                    var vItemID = $(obj).parent().parent().find('#hdnItemID').val();
                    var vItemGUID = $(obj).parent().parent().find('#hdnItemGUID').val();
                    //var vProjectID = $(obj).parent().parent().find("#ProjectSpendGUID").val() == "" ? "" : $(obj).parent().parent().find("#ProjectSpendGUID").val();
                    var vProjectID = '';
                    var ProjectSpendName = '';

                    //if ($('#ddlProjectSpendHeader').val().length > 0) {
                    //    vProjectID = $('#ddlProjectSpendHeader').val();
                    //    ProjectSpendName = $('#ddlProjectSpendHeader option:selected').text();
                    //}
                    //else if ($("#chkUsePullCommonUDF").is(":checked") && $('#ProjectSpendGUIDCommon').val().length > 0) {
                    //    vProjectID = $('#ProjectSpendGUIDCommon').val();
                    //    ProjectSpendName = $('#ProjectSpendGUIDCommon option:selected').text();
                    //}
                    //else if ($(obj).parent().parent().find("#ProjectSpendGUID").val().length > 0) {
                    //    vProjectID = $(obj).parent().parent().find("#ProjectSpendGUID").val();
                    //    ProjectSpendName = $(obj).parent().parent().find("#ProjectSpendGUID option:selected").text();
                    //}
                    if ($("#chkUsePullCommonUDF").is(":checked")) {
                        if ($('#txtProjectSpentCommon') != null) {
                            if ($('#txtProjectSpentCommon').attr("class") == 'selectBox') {
                                vProjectSpentName = $('#txtProjectSpentCommon option:selected').text();
                            }
                            else {
                                vProjectSpentName = $('#txtProjectSpentCommon').val();
                            }
                        }
                    }
                    else {
                        if ($('#txtProjectSpent') != null) {
                            if ($(obj).parent().parent().find('#txtProjectSpent').attr("class") == 'selectBox') {
                                vProjectSpentName = $(obj).parent().parent().find('#txtProjectSpent option:selected').text();
                            }
                            else {
                                vProjectSpentName = $(obj).parent().parent().find('#txtProjectSpent').val();
                            }
                        }
                    }
                    var SupplierAccountGuid = '';
                    var SupplierAccountNo = '';

                    if ($(obj).parent().parent().find("#hdnSupplierAccountNumber").val().length > 0) {
                        SupplierAccountGuid = $(obj).parent().parent().find("#hdnSupplierAccountNumber").val();
                    }

                    if ($(obj).parent().parent().find("#txtSupplierAccountNumber").val().length > 0) {
                        SupplierAccountNo = $(obj).parent().parent().find("#txtSupplierAccountNumber").val();
                    }

                    var hdnID = $(obj).parent().parent().find('#hdnID').val();
                    var hdnRequisitionGUID = $(obj).parent().parent().find('#hdnRequisitionGUID').val();
                    var vspnOn_HandQuantity = 0;
                    var vPullCreditText = 'pull';
                    var vUDF1 = '';
                    var vUDF2 = '';
                    var vUDF3 = '';
                    var vUDF4 = '';
                    var vUDF5 = '';

                    var vUDF1PullCommon = ''; var vUDF2PullCommon = ''; var vUDF3PullCommon = ''; var vUDF4PullCommon = ''; var vUDF5PullCommon = '';

                    if ($("#UDF1PullCommon") != null) {
                        if ($("#UDF1PullCommon").attr("class") == 'selectBox') {
                            vUDF1PullCommon = $("#UDF1PullCommon option:selected").text();
                        }
                        else {
                            vUDF1PullCommon = $("#UDF1PullCommon").val();
                        }
                    }

                    if ($("#UDF2PullCommon") != null) {
                        if ($("#UDF2PullCommon").attr("class") == 'selectBox') {
                            vUDF2PullCommon = $("#UDF2PullCommon option:selected").text();
                        }
                        else {
                            vUDF2PullCommon = $("#UDF2PullCommon").val();
                        }
                    }

                    if ($("#UDF3PullCommon") != null) {
                        if ($("#UDF3PullCommon").attr("class") == 'selectBox') {
                            vUDF3PullCommon = $("#UDF3PullCommon option:selected").text();
                        }
                        else {
                            vUDF3PullCommon = $("#UDF3PullCommon").val();
                        }
                    }

                    if ($("#UDF4PullCommon") != null) {
                        if ($("#UDF4PullCommon").attr("class") == 'selectBox') {
                            vUDF4PullCommon = $("#UDF4PullCommon option:selected").text();
                        }
                        else {
                            vUDF4PullCommon = $("#UDF4PullCommon").val();
                        }
                    }

                    if ($("#UDF5PullCommon") != null) {
                        if ($("#UDF5PullCommon").attr("class") == 'selectBox') {
                            vUDF5PullCommon = $("#UDF5PullCommon option:selected").text();
                        }
                        else {
                            vUDF5PullCommon = $("#UDF5PullCommon").val();
                        }
                    }

                    if ($(obj).parent().parent().find('#UDF1Pull').length > 0) {
                        if ($(obj).parent().parent().find('#UDF1Pull').attr("class") == 'selectBox') {
                            vUDF1 = $(obj).parent().parent().find('#UDF1Pull option:selected').text();
                        }
                        else {
                            vUDF1 = $(obj).parent().parent().find('#UDF1Pull').val();
                        }
                    }

                    if ($(obj).parent().parent().find('#UDF2Pull').length > 0) {
                        if ($(obj).parent().parent().find('#UDF2Pull').attr("class") == 'selectBox') {
                            vUDF2 = $(obj).parent().parent().find('#UDF2Pull option:selected').text();
                        }
                        else {
                            vUDF2 = $(obj).parent().parent().find('#UDF2Pull').val();
                        }
                    }

                    if ($(obj).parent().parent().find('#UDF3Pull').length > 0) {
                        if ($(obj).parent().parent().find('#UDF3Pull').attr("class") == 'selectBox') {
                            vUDF3 = $(obj).parent().parent().find('#UDF3Pull option:selected').text();
                        }
                        else {
                            vUDF3 = $(obj).parent().parent().find('#UDF3Pull').val();
                        }
                    }

                    if ($(obj).parent().parent().find('#UDF4Pull').length > 0) {
                        if ($(obj).parent().parent().find('#UDF4Pull').attr("class") == 'selectBox') {
                            vUDF4 = $(obj).parent().parent().find('#UDF4Pull option:selected').text();
                        }
                        else {
                            vUDF4 = $(obj).parent().parent().find('#UDF4Pull').val();
                        }
                    }

                    if ($(obj).parent().parent().find('#UDF5Pull').length > 0) {
                        if ($(obj).parent().parent().find('#UDF5Pull').attr("class") == 'selectBox') {
                            vUDF5 = $(obj).parent().parent().find('#UDF5Pull option:selected').text();
                        }
                        else {
                            vUDF5 = $(obj).parent().parent().find('#UDF5Pull').val();
                        }
                    }

                    if ($("#chkUsePullCommonUDF").is(":checked")) {
                        vUDF1 = vUDF1PullCommon != undefined ? vUDF1PullCommon : '';
                        vUDF2 = vUDF2PullCommon != undefined ? vUDF2PullCommon : '';
                        vUDF3 = vUDF3PullCommon != undefined ? vUDF3PullCommon : '';
                        vUDF4 = vUDF4PullCommon != undefined ? vUDF4PullCommon : '';
                        vUDF5 = vUDF5PullCommon != undefined ? vUDF5PullCommon : '';
                    }

                    $('#DivLoading').show();

                    if ($("#chkUsePullCommonUDF").is(":checked")) {
                        if ($('#txtPullOrderNumberCommon') != null) {
                            if ($('#txtPullOrderNumberCommon').attr("class") == 'selectBox') {
                                vPullOrderNumber = $('#txtPullOrderNumberCommon option:selected').text();
                            }
                            else {
                                vPullOrderNumber = $('#txtPullOrderNumberCommon').val();
                            }
                        }
                        if ($('#txtProjectSpentCommon') != null) {
                            if ($('#txtProjectSpentCommon').attr("class") == 'selectBox') {
                                vProjectSpentName = $('#txtProjectSpentCommon option:selected').text();
                            }
                            else {
                                vProjectSpentName = $('#txtProjectSpentCommon').val();
                            }
                        }
                    }
                    else {
                        if ($('#txtPullOrderNumber') != null) {
                            if ($(obj).parent().parent().find('#txtPullOrderNumber').attr("class") == 'selectBox') {
                                vPullOrderNumber = $('#txtPullOrderNumber option:selected').text();
                            }
                            else {
                                vPullOrderNumber = $('#txtPullOrderNumber').val();
                            }
                        }
                        if ($('#txtProjectSpent') != null) {
                            if ($(obj).parent().parent().find('#txtProjectSpent').attr("class") == 'selectBox') {
                                vProjectSpentName = $(obj).parent().parent().find('#txtProjectSpent option:selected').text();
                            }
                            else {
                                vProjectSpentName = $(obj).parent().parent().find('#txtProjectSpent').val();
                            }
                        }
                    }

                    $.ajax({
                        "url": '@Url.Content("~/Pull/UpdatePullData")',
                        data: { ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectID, PullCreditQuantity: txtQty, BinID: vBinID, PullCredit: vPullCreditText, TempPullQTY: txtQty, UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, RequisitionDetailGUID: hdnID, WorkOrderDetailGUID: '@ViewBag.WorkOrderGUID', ProjectSpendName: vProjectSpentName, PullOrderNumber: vPullOrderNumber, SupplierAccountNumberGuid : SupplierAccountGuid },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        success: function (response) {

                            $('#DivLoading').hide();
                            if (response.Status == "ok") {
                                if (response.LocationMSG != "") {
                                    if (response.PSLimitExceed) {
                                        // write code to redirect to requisition with confirm box
                                        $("#PSPlimit").text(response.LocationMSG + " " + "do you want to create new requisition for the same ?");
                                        $('#project-spend-limit-basic-modal-content').modal();
                                    }
                                    else {
                                        showNotificationDialog();
                                        $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
                                        $("#spanGlobalMessage").html(response.LocationMSG);
                                    }
                                }
                                else {
                                    UDFInsertNewForGrid($(obj).parent().parent());
                                    $('div#target').fadeToggle();
                                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                    $("#spanGlobalMessage").html(response.Message);
                                    $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                                    // put method to check completed pulls , if all done then Close the requisition
                                    $.ajax({
                                        "url": '@Url.Content("~/Consume/CloseRequisitionIfPullCompleted")',
                                        data: { RequisitionGUID: hdnRequisitionGUID },
                                        "async": false,
                                        cache: false,
                                        "dataType": "json",
                                        success: function (response) {
                                        }
                                    });
                                    ShowEditTabGUIDTRUEOnly("RequisitionEdit?RequisitionGUID=" + hdnRequisitionGUID, "frmRequisitionMaster");
                                }
                            }
                            else {
                                $("#spanGlobalMessage").html(response.Message);
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            }
                            //txxt.val('');
                        },
                        error: function (response) {
                            $('#DivLoading').hide();
                            $("#spanGlobalMessage").html(response.message);
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        }
                    });
                }
            }
            else {
                $('#DivLoading').hide();
                $("#spanGlobalMessage").html('@eTurns.DTO.ResRequisitionDetails.QtytoPullandInventoryLocationareMandatory');
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            }
        }
    }

    function CallThisFunctionFromModel(msg) {
        if (msg == 'success') {
            $('#DivLoading').show();
            $('#RequisitionLineItems').load('@Url.Action("LoadRequisitionItems", new { RequisitionID = ViewBag.RequisitionID })', function () {
                $('#DivLoading').hide();
            });
        }
    }

    function ReDirectData() {
        //ShowEditTab("RequisitionEdit/" + '@ViewBag.RequisitionID', "frmRequisitionMaster");
        ShowEditTabGUIDTRUEOnly("RequisitionEdit?RequisitionGUID=" + '@ViewBag.RequisitionGUID', "frmRequisitionMaster");
    }


    $(document).ready(function () {

        //Tool
        $('.UseThisShowAllOptions').off('click')
        $(document).off('click', 'a.ShowAllOptions');
        $(document).off('focus', "input.AutoTechnician");
        $('body').off('focus', "input.UseThisAutoTechnician");
        $(document).off('click', 'a.lnkShowAllBinOptions');
        $(document).off('focus', "input.AutoPullBins");

        $('.UseThisShowAllOptions').on('click', function () {
            $(this).siblings('.UseThisAutoTechnician').trigger("focus");
            $(this).siblings(".UseThisAutoTechnician").autocomplete("search", " ");
        });

        $('.CRShowAllOptions').click(function () {
            $(this).siblings('.CRAutoTechnician').trigger("focus");
            $(this).siblings(".CRAutoTechnician").autocomplete("search", " ");
        });

        $('body').on('focus', "input.CRAutoTechnician", function (e) {
            var ajaxURL = '/Tool/GetTechnician';
            $(this).autocomplete({
                source: function (request, response) {
                    $('#DivLoading').show()
                    $.ajax({
                        url: ajaxURL,
                        type: 'POST',
                        data: JSON.stringify({ 'NameStartWith': request.term }),
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            $('#DivLoading').hide()
                            response($.map(data, function (Items) {
                                return {
                                    label: Items.Value,
                                    value: Items.Key,
                                    id: Items.ID,
                                    selval: Items.GUID
                                }
                            }));
                        },
                        error: function (err) {
                            $('#DivLoading').hide();
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    $(this).val(ui.item.value);
                    if ($.trim(ui.item.value).length > 0) {
                        $("#TechnicianID").val(ui.item.id);
                    }
                    else {
                        $('#TechnicianID').val('');
                    }
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {
                    if (ui.item != null && ui.item != undefined && $.trim(ui.item.id).length > 0) {
                        $('#TechnicianID').val(ui.item.id);
                    }
                    else {
                        $('#TechnicianID').val('');
                    }
                }
            });
        });

        $(document).on('click', 'a.ShowAllOptions', function () {
            $(this).siblings('.AutoTechnician').trigger("focus");
            $(this).siblings(".AutoTechnician").autocomplete("search", " ");
        });

        $(document).on('focus', "input.AutoTechnician", function (e) {
            var ajaxURL = '/Assets/GetTechnician';
            var tr = $(this).parent().parent().parent();
            var itmGuid = $(tr).find('#spnItemGUID').text();
            var stagName = '';
            $(this).autocomplete({
                source: function (request, response) {
                    $('#DivLoading').show()
                    $.ajax({
                        url: ajaxURL,
                        type: 'POST',
                        data: JSON.stringify({ 'NameStartWith': request.term }),
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            $('#DivLoading').hide()
                            response($.map(data, function (Items) {
                                return {
                                    label: Items.Value,
                                    value: Items.Key,
                                    id: Items.GUID
                                }
                            }));
                        },
                        error: function (err) {
                            $('#DivLoading').hide();
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    $(this).val(ui.item.value);
                    if ($.trim(ui.item.value).length > 0) {

                        if ($(this).parent().find('#TechnicianGUID') != undefined)
                            $(this).parent().find('#TechnicianGUID').val(ui.item.id);
                    }
                    else {
                        $(this).parent().find('#TechnicianGUID').val('');
                    }
                    $(tr).addClass("RowChanged");
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {
                    if (ui.item != null && ui.item != undefined && $.trim(ui.item.id).length > 0) {
                        if ($(this).parent().find('#TechnicianGUID') != undefined)
                            $(this).parent().find('#TechnicianGUID').val(ui.item.id);
                    }
                    else {
                        $(this).parent().find('#TechnicianGUID').val('');
                    }
                }
            });
        });

        $(document).on('click', 'a.ShowAllOptionsBin', function () {
            $(this).siblings('.AutoPullBins').trigger("focus");
            $(this).siblings(".AutoPullBins").autocomplete("search", " ");
        });

        $(document).on('focus', "input.AutoPullBins", function (e) {
            var ajaxURL = '/Pull/GetItemLocationsForNewPullGrid';
            var tr = $(this).parent().parent().parent();
            var itmGuid = $(tr).find('#hdnItemGUID').val();
            $(this).autocomplete({
                source: function (request, response) {
                    $('#DivLoading').show()
                    $.ajax({
                        url: ajaxURL,
                        type: 'POST',
                        data: JSON.stringify({ 'ItemGuid': itmGuid, 'NameStartWith': request.term }),
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            $('#DivLoading').hide()
                            if (data.isNewBinCreated == true && data.NewBinID > 0) {
                                $(tr).find("#item_BinID").val(data.NewBinID);
                            }
                            response($.map(data.returnKeyValList, function (Items) {
                                $(tr).find("#item_BinID").val(Items.ID);
                                return {
                                    label: Items.Value,
                                    value: Items.Key,
                                    id: Items.ID,
                                    oinfo: Items.OtherInfo1
                                }
                            }));
                        },
                        error: function (err) {
                            $('#DivLoading').hide();
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    $(this).val(ui.item.value);
                    if ($.trim(ui.item.value).length > 0) {
                        if ($(tr).find('#item_BinID') != undefined)
                            $(tr).find('#item_BinID').val(ui.item.id);
                    }
                    else {
                        $(tr).find('#item_BinID').val('');
                    }
                    $(tr).addClass("RowChanged");
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {
                    if (ui.item != null && ui.item != undefined && $.trim(ui.item.id).length > 0) {
                        if ($(tr).find('#item_BinID') != undefined)
                            $(tr).find('#item_BinID').val(ui.item.id);
                    }
                    else {
                        $(tr).find('#item_BinID').val('');
                    }
                }
            });
        });

        $('body').on('focus', "input.UseThisAutoTechnician", function (e) {
            var ajaxURL = '/Assets/GetTechnician';
            var tr = $(this).parent().parent().parent();
            var itmGuid = $(tr).find('#spnItemGUID').text();
            var stagName = '';
            $(this).autocomplete({
                source: function (request, response) {
                    $('#DivLoading').show()
                    $.ajax({
                        url: ajaxURL,
                        type: 'POST',
                        data: JSON.stringify({ 'NameStartWith': request.term }),
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            $('#DivLoading').hide()
                            response($.map(data, function (Items) {
                                return {
                                    label: Items.Value,
                                    value: Items.Key,
                                    id: Items.GUID
                                }
                            }));
                        },
                        error: function (err) {
                            $('#DivLoading').hide();
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    $(this).val(ui.item.value);
                    if ($.trim(ui.item.value).length > 0) {

                        if ($(this).parent().find('#UseThisTechnicianGUID') != undefined)
                            $(this).parent().find('#UseThisTechnicianGUID').val(ui.item.id);
                    }
                    else {
                        $(this).parent().find('#UseThisTechnicianGUID').val('');
                    }
                    $(tr).addClass("RowChanged");
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {
                    if (ui.item != null && ui.item != undefined && $.trim(ui.item.id).length > 0) {
                        if ($(this).parent().find('#UseThisTechnicianGUID') != undefined)
                            $(this).parent().find('#UseThisTechnicianGUID').val(ui.item.id);
                    }
                    else {
                        $(this).parent().find('#UseThisTechnicianGUID').val('');
                    }
                }
            });
        });

         var DTName = 'RequisitionItemsTable' + '@ViewBag.RequisitionID';

        $("table#" + RequisitionItemsDTName + " tr").off('click', 'a.ShowAllOptionsSupplierAccountNumber');
        $("table#" + RequisitionItemsDTName + " tr").off('focus', "input.AutoSupplierAccountNumber");
        $("table#" + RequisitionItemsDTName + " tr").on('click', 'a.ShowAllOptionsSupplierAccountNumber', function () {
            $(this).siblings('.AutoSupplierAccountNumber').trigger("focus");
            $(this).siblings(".AutoSupplierAccountNumber").autocomplete("search", " ");
        });

        $("table#" + RequisitionItemsDTName + " tr").on('focus', "input.AutoSupplierAccountNumber", function (e) {
            var ajaxURL = '/Pull/GetSupplierAccountNumbersforPull';
            var tr = $(this).parent().parent().parent();
            var itmGuid = $(tr).find('#hdnItemGUID').val();
            $(this).autocomplete({
                source: function (request, response) {
                    $('#DivLoading').show()
                    $.ajax({
                        url: ajaxURL,
                        type: 'POST',
                        data: JSON.stringify({ 'ItemGuid': itmGuid, 'NameStartWith': request.term }),
                        contentType: 'application/json',
                        dataType: 'json',
                        success: function (data) {
                            $('#DivLoading').hide()

                            response($.map(data, function (Items) {
                                return {
                                    label: Items.Value,
                                    value: Items.Value,
                                    selval: Items.GUID
                                }
                            }));
                        },
                        error: function (err) {
                            $('#DivLoading').hide();
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    $(tr).find("#hdnSupplierAccountNumber").val(ui.item.selval);
                    $(this).val(ui.item.value);
                    $(tr).addClass("RowChanged");
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                    $(this).autocomplete('widget').css('z-index', 9000);
                    $('ul.ui-autocomplete').css('overflow-y', 'auto');
                    $('ul.ui-autocomplete').css('max-height', '300px');
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                },
                change: function (event, ui) {

                }
            });
        });

        $("table#" + RequisitionItemsDTName + " tr").each(function () {

            if ($(this).find("span.QuantityRequisitioned").text() != '') {
                $(this).find("span.QuantityRequisitioned").text(FormatedCostQtyValues(parseFloat($(this).find("span.QuantityRequisitioned").text()), 2));
            }
            if ($(this).find("span.QuantityApproved").text() != '') {
                $(this).find("span.QuantityApproved").text(FormatedCostQtyValues(parseFloat($(this).find("span.QuantityApproved").text()), 2));
            }

        });

        //UDFfillEditableOptionsForGrid();
        UDFfillEditableOptionsForGridCombineQL('RQ');

        $('form').areYouSure({ 'message': 'You have unsaved changes.  Do you want to leave this page and lose your changes?' });

        $(".myDatePicker").datepicker({
            changeMonth: true,
            changeYear: true, dateFormat: RoomDateJSFormat
        });

        var ddlProjectSpendREQHeader = $('#txtProjectSpendHeader');
        if (ddlProjectSpendREQHeader != null && ddlProjectSpendREQHeader != undefined && ddlProjectSpendREQHeader.length > 0 && ddlProjectSpendREQHeader.val().length > 0) {
            $("#txtProjectSpentCommon").val($('#txtProjectSpendHeader').val());
            $("#txtProjectSpentCommon").attr('disabled', 'disabled');
        }
        else {
            $("#txtProjectSpentCommon").removeAttr('disabled');
        }



        $("#saveRows").click(function () {
            //return SaveAllClick(true);
            return SaveRequisitionLineItems(false);
        });
        objDetailGridColumns = GetGridChildGridColumnsObject(RequisitionItemsDTName);
        var gaiSelected = [];
        oTableProjectItems = $('#' + RequisitionItemsDTName).dataTable({
            "bJQueryUI": true,
            "bRetrieve": true,
            "bDestroy": true,
            "bScrollCollapse": true,
            "sScrollX": "100%",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>',
            "oColVis": {},
            "oColReorder": {},
            "aaSorting": [[2, "desc"]],
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "bDeferRender": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries',
                "sZeroRecords": MsgNoDataAvailableInTable,
                "sInfoFiltered": ""
            },
            aoColumnDefs: [
                { mDataProp: null, sClass: "read_only center NotHide RowNo", "bSortable": false, sDefaultContent: '', aTargets: [0] }
            ],
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                var ddlProjectSpendHeader = $('#txtProjectSpendHeader');
                if (ddlProjectSpendHeader != null && ddlProjectSpendHeader != undefined && ddlProjectSpendHeader.length > 0 && ddlProjectSpendHeader.val().length > 0) {
                    $(nRow).find("#txtProjectSpent").val($('#txtProjectSpendHeader').val());
                    $(nRow).find("#txtProjectSpent").attr('disabled', 'disabled');
                }
                else {
                    //$(nRow).find("#ProjectSpendGUID").val($('#ddlProjectSpendHeader').val());
                    $(nRow).find("#txtProjectSpent").removeAttr('disabled');
                }
                $("td.RowNo:first", nRow).html(this.fnSettings()._iDisplayStart + iDisplayIndex + 1);
                return nRow;
            },
            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
                // if (!bIsFilter) {
                $.ajax({
                    "url": '@Url.Content("~/Master/SaveGridState")',
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: '@ListName' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        o = json;
                    }
                });
                // }
                bIsFilter = false;

            },
            "fnStateLoad": function (oSettings) {

                var objReqLineItemsColumns = GetGridHeaderColumnsObject(RequisitionItemsDTName);
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: '@ListName' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);

                        if (json.jsonData != '') {

                            var InvisibleUDF = 0;

                            if ('@ViewBag.RequisitionStatus' == 'Closed') {
                                InvisibleUDF++;
                                $("#thProjectSpend").html('');
                                $('#TDProjectSpend').html('');
                            }
                            else {
                                var ProjectSpendIndex = objReqLineItemsColumns['ProjectSpend'];
                                if (ProjectSpendIndex != null && ProjectSpendIndex != undefined) {
                                    if (o.abVisCols[ProjectSpendIndex] == false) {
                                        InvisibleUDF++;
                                        $("#thProjectSpend").html('');
                                        $('#TDProjectSpend').html('');
                                    }
                                }
                            }

                            var UDF1Index = objReqLineItemsColumns['Pull ' + '@UDF1Text'];
                            if (UDF1Index != null && UDF1Index != undefined) {
                                if ('@UDF1IsRequired' == 'True') {
                                    o.abVisCols[UDF1Index] = true;
                                }
                                else if (o.abVisCols[UDF1Index] == false) {
                                    @*$("th:contains('@UDF1Text')").hide();
                                    $('#UDF1PullCommon').closest('td').hide();*@
                                    $("#tblPullCommonUDF th:contains('@UDF1Text')").html('');
                                    $("#tblPullChcekOutCommonUDF th:contains('@UDF1Text')").html('');
                                    $('#UDF1PullCommon').closest('td').html('');
                                    InvisibleUDF++;
                                }
                            }
                            else
                                InvisibleUDF++;

                            var UDF2Index = objReqLineItemsColumns['Pull ' + '@UDF2Text'];
                            if (UDF2Index != null && UDF2Index != undefined) {
                                if ('@UDF2IsRequired' == 'True') {
                                    o.abVisCols[UDF2Index] = true;
                                }
                                else if (o.abVisCols[UDF2Index] == false) {
                                    @*$("th:contains('@UDF2Text')").hide();
                                    $('#UDF2PullCommon').closest('td').hide();*@
                                    $("#tblPullCommonUDF th:contains('@UDF2Text')").html('');
                                    $("#tblPullChcekOutCommonUDF th:contains('@UDF2Text')").html('');
                                    $('#UDF2PullCommon').closest('td').html('');
                                    InvisibleUDF++;
                                }
                            }
                            else
                                InvisibleUDF++;

                            var UDF3Index = objReqLineItemsColumns['Pull ' + '@UDF3Text'];
                            if (UDF3Index != null && UDF3Index != undefined) {
                                if ('@UDF3IsRequired' == 'True') {
                                    o.abVisCols[UDF3Index] = true;
                                }
                                else if (o.abVisCols[UDF3Index] == false) {
                                    @*$("th:contains('@UDF3Text')").hide();
                                    $('#UDF3PullCommon').closest('td').hide();*@
                                    $("#tblPullCommonUDF th:contains('@UDF3Text')").html('');
                                    $("#tblPullChcekOutCommonUDF th:contains('@UDF3Text')").html('');
                                    $('#UDF3PullCommon').closest('td').html('');
                                    InvisibleUDF++;
                                }
                            }
                            else
                                InvisibleUDF++;

                            var UDF4Index = objReqLineItemsColumns['Pull ' + '@UDF4Text'];
                            if (UDF4Index != null && UDF4Index != undefined) {
                                if ('@UDF4IsRequired' == 'True') {
                                    o.abVisCols[UDF4Index] = true;
                                }
                                else if (o.abVisCols[UDF4Index] == false) {
                                    @*$("th:contains('@UDF4Text')").hide();
                                    $('#UDF4PullCommon').closest('td').hide();*@
                                    $("#tblPullCommonUDF th:contains('@UDF4Text')").html('');
                                    $("#tblPullChcekOutCommonUDF th:contains('@UDF4Text')").html('');
                                    $('#UDF4PullCommon').closest('td').html('');
                                    InvisibleUDF++;
                                }
                            }
                            else
                                InvisibleUDF++;

                            var UDF5Index = objReqLineItemsColumns['Pull ' + '@UDF5Text'];
                            if (UDF5Index != null && UDF5Index != undefined) {
                                if ('@UDF5IsRequired' == 'True') {
                                    o.abVisCols[UDF5Index] = true;
                                }
                                else if (o.abVisCols[UDF5Index] == false) {
                                    @*$("th:contains('@UDF5Text')").hide();
                                    $('#UDF5PullCommon').closest('td').hide();*@
                                    $("#tblPullCommonUDF th:contains('@UDF5Text')").html('');
                                    $("#tblPullChcekOutCommonUDF th:contains('@UDF5Text')").html('');
                                    $('#UDF5PullCommon').closest('td').html('');
                                    InvisibleUDF++;
                                }
                            }
                            else
                                InvisibleUDF++;

                            //----------------------------
                            //
                            setTimeout(function () {
                                if (InvisibleUDF == 6) {
                                    $('#tblPullCommonUDF').hide();
                                    $('#tblPullChcekOutCommonUDF').hide();
                                    $('.requisition-line-items .dataTables_length').attr('style', 'left:0;top:-127px !important');
                                    $('.requisition-line-items .dataTables_paginate').attr('style', 'left: 145px;top:-118px !important');
                                }
                                else {
                                    $('.requisition-line-items .dataTables_length').attr('style', 'left:0;top:-127px !important');
                                    $('.requisition-line-items .dataTables_paginate').attr('style', 'left: 145px;top:-118px !important');
                                }

                            }, 500);
                        }
                    }
                });

                return o;
            },
            "fnInitComplete": function (oSettings, json) {
                $('.ColVis').detach().appendTo(".setting-arrow");
            }
        });



        //        .makeEditable({
        //            sUpdateURL: '@Url.Content("~/Master/UpdateProjectData")' //"/Company/UpdateData",
        //        })
        $('.DTTT_container').css('z-index', '-1');
        oTableProjectItems.addClass("dtRequisitionItemsTable")


        $("#project-spend-limit-basic-modal-content").on("click", "#btnModelYesPSLimit", function () {

            //TabItemClicked('RequisitionCreate','frmRequisitionMaster');
            var url = '@Url.Action("RequisitionList", "Consume")';
            url = url + '?fromPull=' + 'yes'
            window.location.href = url;
        });

        //$(".text-boxPriceFormat").priceFormat({
        //    prefix: '',
        //    thousandsSeparator: '',
        //    centsLimit: parseInt($('#hdCostcentsLimit').val(), 10)
        //});
        //$(".text-boxQuantityFormat").priceFormat({
        //    prefix: '',
        //    thousandsSeparator: '',
        //    centsLimit: parseInt($('#hdQuantitycentsLimit').val(), 10)
        //});
        $(".text-boxQuantityFormatSR").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: 0
        });

        $('.ShowAllOptionsOrderNumber').off("click");
        $('.ShowAllOptionsOrderNumber').on("click", function () {
            $(this).siblings('.AutoPullOrderNumber').trigger("focus");
            $(this).siblings(".AutoPullOrderNumber").autocomplete("search", " ");
        });

        $('.ShowAllOptionsProjectSpents').off("click");
        $('.ShowAllOptionsProjectSpents').on("click", function () {
            $(this).siblings('.AutoPullProjectSpents').trigger("focus");
            $(this).siblings(".AutoPullProjectSpents").autocomplete("search", " ");
        });

        if (arrChangeItems != undefined && arrChangeItems.length > 0) {
            var ItemNodes = $('#' + RequisitionItemsDTName).dataTable().fnGetNodes();
            for (var j = 0; j <= ItemNodes.length - 1; j++) {
                var hdnID = $(ItemNodes[j]).find('#hdnID').val();
                var findresult = $.grep(arrChangeItems, function (e) { return e.GUID == hdnID; });
                if (findresult != undefined && findresult != null && findresult.length > 0) {
                    var _projectSpendName = findresult[0].ProjectSpendName;
                    var _pullOrderNumber = findresult[0].PullOrderNumber;
                    /*$(ItemNodes[j]).find('#ProjectSpendGUID').val(_projectSpendGUID);*/
                    if ($(ItemNodes[j]).find('#txtPullOrderNumber').attr("class") == 'selectBox') {
                        $(ItemNodes[j]).find('#txtPullOrderNumber option:selected').text(_pullOrderNumber);
                    }
                    else {
                        $(ItemNodes[j]).find('#txtPullOrderNumber').val(_pullOrderNumber);
                    }
                    if ($(ItemNodes[j]).find('#txtProjectSpent').attr("class") == 'selectBox') {
                        $(ItemNodes[j]).find('#txtProjectSpent option:selected').text(_projectSpendName);
                    }
                    else {
                        $(ItemNodes[j]).find('#txtProjectSpent').val(_projectSpendName);
                    }
                    $(ItemNodes[j]).addClass("RowChanged");
                }

            }
            arrChangeItems = new Array();
        }

    });

    function TempSavePS() {
        var ItemNodes = $('#' + RequisitionItemsDTName).dataTable().fnGetNodes();
        for (var j = 0; j <= ItemNodes.length - 1; j++) {
            if ($(ItemNodes[j]).hasClass("RowChanged")) {
                var _hdnID = $(ItemNodes[j]).find('#hdnID').val();
                var _projectSpendName = '';
                var _pullOrderNumber = '';
                //if ($(ItemNodes[j]).find("#ProjectSpendGUID").length > 0 && $(ItemNodes[j]).find("#ProjectSpendGUID").val().length > 0) {
                //    _projectSpendGUID = $(ItemNodes[j]).find("#ProjectSpendGUID").val();
                //}
                if ($(ItemNodes[j]).find("#txtPullOrderNumber").length > 0) {
                    if ($(ItemNodes[j]).find('#txtPullOrderNumber').attr("class") == 'selectBox') {
                        _pullOrderNumber = $(ItemNodes[j]).find('#txtPullOrderNumber option:selected').text();
                    }
                    else {
                        _pullOrderNumber = $(ItemNodes[j]).find("#txtPullOrderNumber").val();
                    }

                }
                if ($(ItemNodes[j]).find("#txtProjectSpent").length > 0) {
                    if ($(ItemNodes[j]).find('#txtProjectSpent').attr("class") == 'selectBox') {
                        _projectSpendName = $(ItemNodes[j]).find('#txtProjectSpent option:selected').text();
                    }
                    else {
                        _projectSpendName = $(ItemNodes[j]).find("#txtProjectSpent").val();
                    }

                }
                var dataNew = {
                    "GUID": _hdnID, "ProjectSpendGUID": _projectSpendGUID, "PullOrderNumber": _pullOrderNumber
                };
                arrChangeItems.push(dataNew);
            }
        }
    }

    if ('@ViewBag.IsRecordEditableBag' == 'False') {

        $('select', RequisitionItemsDTName)
            .attr('disabled', 'disabled');

        $(':input[type=text], textarea', RequisitionItemsDTName)
            .attr('readonly', 'readonly');

        $('#saveRows').attr('style', 'display:none');
        $('#deleteRows1').attr('style', 'display:none');
    }

    if ('@Convert.ToString(ViewBag.RequisitionStatus).ToUpper()' == 'APPROVED'
            || '@Convert.ToString(ViewBag.RequisitionStatus).ToUpper()' == 'CLOSED') {
        $('#deleteRows1').attr('style', 'display:none');
    }

    $('#' + RequisitionItemsDTName + ' tbody tr').die('tap click');
    $('#deleteRows1').unbind("click");
    $('#Gobtn1').unbind("click");
    $('#clear_QLItem_filter').unbind("click");
    $('#saveRows').die('click');
    $('#PageNumber1').unbind("keydown");
    $('#btnModelYesInnerGrid').die('click');
    //$('#pullDrillDown').die('click');
    $('[name = "pullDrillDown"]').die("click");
    //$('#btnPullAll').die('click');

    function closeModalNoSelectModel() {
        $.modal.impl.close();
        $('#DivLoading').hide();
    }

    //$("#btnPullAll").live('click', function () {
    //    if ($('#' + RequisitionItemsDTName + ' tbody tr.row_selected').length <= 0) {
    //        $('#dlgNoSelectErrorMsg').modal();
    //    }
    //    else {
    //        $('#GlobalModalProcessing').modal();
    //        setTimeout('AddSingleItemToPullList($("#btnPullAll"))', 1000);
    //    }
    //});

    // To adjust the print block next to colvis button
    $('#btnblock').css({ 'margin-right': '45px' });
    var lastChecked1;
    var starttrvalue1 = "";
    var dtName = "";
    $('#' + RequisitionItemsDTName + ' tbody tr').live('tap click', function (e) {
        //$(this).toggleClass('row_selected');
        //return false;

        if ($(e.target).hasClass("control") == true || e.target.nodeName.toLowerCase() == "img" || e.target.type == "checkbox" || e.target.type == "radio" || e.target.type == "text" || e.target.type == "button" || $(e.target).is('a') == true || $(e.target).is('span') == true
            || $(e.target).hasClass("selectBox")
        ) {
            e.stopPropagation();
        }
        else {
            if (lastChecked1 !== undefined && lastChecked1 != null && !lastChecked1) {
                lastChecked1 = this;
            }

            if (e.shiftKey) {
                var start = $('#' + RequisitionItemsDTName + ' tbody tr').index(this);
                var end = $('#' + RequisitionItemsDTName + ' tbody tr').index(lastChecked1);

                var stringval1 = readCookieforshift("selectstartindex");
                if (stringval1 != null) {
                    var endindex = $(this).closest('tr').attr('id');
                    createCookieforshift("selectendindex", endindex, 1);
                    if ($("#hdnPageName").val() !== undefined) {
                        var pagename = '';
                        pagename = $("#hdnPageName").val();
                        GetOnlyIdsForPassPagesForshift(pagename, true);
                    }
                }

                for (i = Math.min(start, end); i <= Math.max(start, end); i++) {
                    if (!$('#' + RequisitionItemsDTName + ' tbody tr').eq(i).hasClass('row_selected')) {
                        $('#' + RequisitionItemsDTName + ' tbody tr').eq(i).addClass("row_selected");
                    }
                }
                if (window.getSelection) {
                    if (window.getSelection().empty) {  // Chrome
                        window.getSelection().empty();
                    } else if (window.getSelection().removeAllRanges) {  // Firefox
                        window.getSelection().removeAllRanges();
                    }
                } else if (document.selection) {  // IE?
                    document.selection.empty();
                }
            } else if ((e.metaKey || e.ctrlKey)) {
                $(this).toggleClass('row_selected');
            } else {
                $(this).toggleClass('row_selected');


                if ($(this).hasClass('row_selected')) {
                    (starttrvalue1 == "") ? starttrvalue1 = $(this).closest('tr').attr('id') : starttrvalue1 = starttrvalue1 + "," + $(this).closest('tr').attr('id');
                    createCookieforshift("selectstartindex", starttrvalue1, 1);
                } else {

                    var stringval = readCookieforshift("selectstartindex");
                    if (stringval != "undefined") {
                        if (stringval != null) {
                            var tmp = stringval.split(',');
                            var index = tmp.indexOf($(this).closest('tr').attr('id'));
                            if (index !== -1) {
                                tmp.splice(index, 1);
                                stringval = tmp.join(',');
                                createCookieforshift("selectstartindex", stringval, 1);
                            }
                        }
                    }

                }
            }

            lastChecked1 = this;
        }
    });


    //$('#' + RequisitionItemsDTName).on("click", "td", function (event) {
    //    event.preventDefault();
    //});

    /* Add a click handler for the delete rows multiple rows */


    /*Functions used for nasted data binding START*/
    //$('#pullDrillDown').live('click', function (event) {
    $('#' + RequisitionItemsDTName).on("click", '[name = "pullDrillDown"]', function (event) {
        var nTr = this.parentNode.parentNode;
        var i = $.inArray(nTr, anOpen);
        var dtTable = $('#' + RequisitionItemsDTName).dataTable();
        if (i === -1) {
            $(this).attr('src', sImageUrl1 + "drildown_close.jpg");
            dtTable.fnOpen(nTr, fnFormatDetails(dtTable, nTr), '');
            anOpen.push(nTr);
            dtTable.fnDraw();
            $('.requiredField').attr('style', 'margin-top: 50px !important');
        }
        else {
            $(this).attr('src', sImageUrl1 + "drildown_open.jpg");
            dtTable.fnClose(nTr);
            anOpen.splice(i, 1);
            $('.requiredField').attr('style', 'margin-top: 50px !important');
        }
    });

    function fnFormatDetails(oTableProjectItems, nTr) {
        var sOut = '';
        var hdnID = $(nTr).find('#hdnID').val();
        var hdnbigID = $(nTr).find('#hdnBigID').val();

        $('#DivLoading').show();
        $.ajax({
            "url": '@Url.Content("~/Consume/RequisitionPulls")',
            data: { RequisitionDetailGUID: hdnID, BigID: hdnbigID },
            "async": false,
            cache: false,
            "dataType": "text",
            "success": function (json) {

                sOut = json;
                $('#DivLoading').hide();
            },
            error: function (response) {
                //;
            }
        });
        return sOut;
    }

    $('#deleteRows1').click(function () {
        /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
        if ($("body").hasClass('DTTT_Print')) {
            return false;
        }
        /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */

        var anSelected = fnGetSelected(oTableProjectItems);
        var stringIDs = "";
        for (var i = 0; i <= anSelected.length - 1; i++) {
            //anSelected[0].cells[0].innerHTML
            stringIDs = stringIDs + $(anSelected[i]).find("#hdnID").val() + ",";
        }
        if (anSelected.length !== 0) {
            $('#Inner-Grid-basic-modal-content').modal();
            IsDeletePopupOpen = false;
        }


    });

    $("#btnModelYesInnerGrid").live("click", function () {

        var anSelected = fnGetSelected(oTableProjectItems);
        var stringIDs = "";
        for (var i = 0; i <= anSelected.length - 1; i++) {
            stringIDs = stringIDs + $(anSelected[i]).find("#hdnID").val() + ",";
        }
        if (anSelected.length !== 0) {
            $.ajax({
                'url': deleteURL1,
                data: { ids: stringIDs, RequisitionGUID: '@ViewBag.RequisitionGUID' },
                success: function (response) {
                    if (response == "ok") {
                        for (var i = 0; i <= anSelected.length - 1; i++) {
                            oTableProjectItems.fnDeleteRow(anSelected[i]);
                        }
                        if (anSelected.length > 0) {
                            $("#spanGlobalMessage").html('@ResCommon.RecordDeletedSuccessfully'.replace("{0}","(" + anSelected.length + ")"));
                        }
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);

                        //Edit tab call
                        ReDirectData();
                    }
                },
                error: function (response) {
                    // through errror message
                }
            });
            $.modal.impl.close();
        }
    });

    $('#PageNumber1').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#Gobtn1").click();
            return false;
        }
    });

    $("#Gobtn1").click(function () {
        var pval = $('#PageNumber1').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }
        if (pval == 0)
            return;
        $('#' + RequisitionItemsDTName).dataTable().fnPageChange(Number(pval - 1));
        $('#PageNumber1').val('');
    });

    /* global search function */
    function fnFilterGlobalPS() {
        //set filter only if more than 2 characters are pressed
        //if (typeof $("#InnerItem_filter") != 'undefined' && ($("#InnerItem_filter").val().length > 2 || $("#InnerItem_filter").val().length == 0)) {
        if (typeof $("#InnerItem_filter") != 'undefined') {
            bIsFilter = true;
            var searchtext = $("#InnerItem_filter").val().replace(/'/g, "''");

            $('#' + RequisitionItemsDTName + ' td').removeHighlight();

            $('#' + RequisitionItemsDTName).dataTable().fnFilter(searchtext, null, null, false);

            if (searchtext.length > 0)
                $('#' + RequisitionItemsDTName + ' td').highlight($("#InnerItem_filter").val());
        }
    }

    //var timeoutsc1;
    ////Apply filter
    //$("#InnerItem_filter").keyup(function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    var index = $.inArray(code, NotAllowedCharCodes);
    //    if (code == 13) {
    //    }
    //    else {
    //        clearTimeout(timeoutsc1);
    //        var self = this;
    //        timeoutsc1 = setTimeout(function () {
    //            fnFilterGlobalPS();
    //        }, 500);
    //    }
    //});

    ////Keydown event is required to handle ENTER KEY to work in IE
    //$("#InnerItem_filter").keydown(function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    if (code == 13) {
    //        fnFilterGlobalPS();
    //        return false;
    //    }
    //});

     var timeoutsc1;
    $(document).on('propertychange input', "#InnerItem_filter", function () {
        if ($("#InnerItem_filter").val().length > 0) {
            $("input#InnerItem_filter").focus();
        }
        clearTimeout(timeoutsc1);
        var self = this;
        timeoutsc1 = setTimeout(function () {
            if (SearchPattern == 2 || SearchPattern == "2") {
                fnFilterGlobalPS();
            }
            else {
                $('#InnerItem_filter').unbind("keypress");
                $('#InnerItem_filter').keypress(function (event) {
                    var keycode = (event.keyCode ? event.keyCode : event.which);
                    if (keycode == 13) {
                        fnFilterGlobalPS();
                    }
                });
                if ($("#InnerItem_filter").val().length == 0) {
                    setTimeout(function () { fnFilterGlobalPS(); }, 200);
                }
            }
        }, 500);
        return false;
    });

    //Clear Filter
    $("#clear_QLItem_filter").click(function () {
        if ($("#InnerItem_filter").val().length > 0) {
            $("#InnerItem_filter").val('');
            fnFilterGlobalPS();
        }
        $("#InnerItem_filter").focus();
        return false;
    });
    _Common.setGloblaSearch('InnerItem_filter', RequisitionItemsDTName);
    function callPrint1(DataTableName) {
        var oConfig = {
            "sInfo": "<h6>Print view</h6><p>Please use your browser's print function to " + "print this table. Press escape when finished.",
            "sMessage": null,
            "bShowAll": false,
            "sToolTip": "View print view",
            "sButtonClass": "DTTT_button_print",
            "sButtonText": "Print"
        };
        if (typeof (TableTools) != undefined && typeof (TableTools) != 'undefined')
            TableTools.fnGetInstance(DataTableName).fnPrint(true, oConfig);
    }

    /* DATA TABLE GRID COMMON FUNCTIONS END */

    $('#actionSelectAllLI').click(function () {
        var tblName = '#RequisitionItemsTable' + '@ViewBag.RequisitionID';
        if ($(tblName + ' tbody tr.row_selected').length < $(tblName + ' tbody tr').length) {
            $(tblName).find("tbody tr").removeClass("row_selected").addClass("row_selected");
        }
        else {
            $(tblName).find("tbody tr").removeClass("row_selected");
        }
    });


    $("#ColumnOrderSetup1").off('click')
    $("#ColumnOrderSetup1").on('click', function () {
        var reqId = 'RequisitionItemsTable' + '@ViewBag.RequisitionID';
        $("#divDetailGridReorderPopup").data({ 'DataTableName': reqId, 'ListName': '@ListName', 'ColumnObjectName': 'objDetailGridColumns' }).dialog("open");
        return false;
    });

    function FillDetailGridDiv() {
        $('#RequisitionLineItems').html('');
        $('#RequisitionLineItems').load('/Consume/LoadRequisitionItems', { RequisitionID: '@ViewBag.RequisitionID' }, function () {
            $('#DivLoading').hide();
            $("#divDetailGridReorderPopup").dialog("close");
        });
    }

    function CloseSelectedRequistionItem(btnObj) {

        if ($('[id^="RequisitionItemsTable"]').find("tbody").find("tr.row_selected").length <= 0) {
            $('#DivLoading').hide();
            $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', '');
            $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
            $('#dlgCommonErrorMsg').find("#pErrMessage").html('Please select record');
            $('#dlgCommonErrorMsg').modal({
                escClose: false,
                close: false
            });
            return false;
        }
        else {
            $('#CloseRequisitionLineItemDialog').modal();
        }
    }

    function closeModalCloseRequisitionLineItemDialog() {
        $.modal.impl.close();
    }
    //$("#dlgExpiredItemErrorMsg").on("click", "#btnYesForExpiredItem", function () {
    $("#btnYesForExpiredItem").click(function () {
        $.modal.impl.close();
        if ($('#dlgExpiredItemErrorMsg').find("#btnPullExItemGuid").val() == '00000000-0000-0000-0000-000000000000') {
            PullAllNewFlow(false);
        }
        else {
            ConfirmPullExpiredItems($('#dlgExpiredItemErrorMsg').find("#btnPullExItemGuid").val(), $('#dlgExpiredItemErrorMsg').find("#btnPullExReqGuid").val());
        }
    });
    $('#bntCloseRequisitionLineItemConfirmYes').click(function () {
        $('#DivLoading').show();
        var RequisitionDetailGUIDs = [];
        $('[id^="RequisitionItemsTable"]').find("tbody").find("tr.row_selected").each(function (index, tr) {

            var _hdnIsCloseItem = $(tr).find('#hdnIsCloseItem').val();
            if (_hdnIsCloseItem != "True") {
                var _RequisitionDetailGUID = $(tr).find('#hdnRequisitionDetailGUID').val();
                if (_RequisitionDetailGUID != null && _RequisitionDetailGUID != undefined && _RequisitionDetailGUID.length > 0) {
                    RequisitionDetailGUIDs.push(_RequisitionDetailGUID);
                }
            }

        });

        if (RequisitionDetailGUIDs != null && RequisitionDetailGUIDs != undefined && RequisitionDetailGUIDs.length > 0) {

            $.ajax({
                type: "POST",
                url: 'CloseSelectedRequistionItem',
                contentType: 'application/json',
                dataType: 'html',
                data: JSON.stringify(RequisitionDetailGUIDs),
                success: function (RetData) {
                    $('#DivLoading').hide();
                    if (RetData != null && RetData != undefined && RetData.trim() != '') {
                        var JSONResponse = JSON.parse(RetData);
                        if (JSONResponse.Status == 'ok') {
                            $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                            $("#spanGlobalMessage").html(JSONResponse.Message);
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            ShowEditTabGUIDTRUEOnly("RequisitionEdit?RequisitionGUID=" + '@ViewBag.RequisitionGUID', "frmRequisitionMaster");
                        }
                        else {
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            $("#spanGlobalMessage").html(JSONResponse.Message);
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        }
                    }

                    //$("#DivPullSelection").html("");
                    //$("#DivPullSelection").html(RetData);
                    //$("#DivPullSelection").dialog('open');
                    //$('#DivLoading').hide();
                },
                error: function (err) {
                    $('#DivLoading').hide();
                    alert(err);
                }
            });
        }
        else {
            $('#DivLoading').hide();
            $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', '');
            $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
            $('#dlgCommonErrorMsg').find("#pErrMessage").html('Please select record');
            $('#dlgCommonErrorMsg').modal({
                escClose: false,
                close: false
            });
            return false;
        }
        $.modal.impl.close();
    });

    $('.RequisitionToolCheckOut').on('click', function (e) {

        var obj = this;
        var txtQuantityRequisitioned = $(obj).parent().parent().find('#txtQuantityRequisitioned').val() == '' ? 0 : $(obj).parent().parent().find('#txtQuantityRequisitioned').val();
        var txtQuantityApproved = $(obj).parent().parent().find('#txtQuantityApproved').val() == '' ? 0 : $(obj).parent().parent().find('#txtQuantityApproved').val();
        var txtQuantityPulled = $(obj).parent().parent().find('#txtQuantityPulled').val() == '' ? 0 : $(obj).parent().parent().find('#txtQuantityPulled').val();
        var txxt = $(obj).parent().parent().find('#txtQty').val() == '' ? 0 : $(obj).parent().parent().find('#txtQty').val();

        var txtQty = parseFloat(txxt, 10);

        txtQuantityApproved = parseFloat(txtQuantityApproved, 10);
        txtQuantityPulled = parseFloat(txtQuantityPulled, 10);

        if ((txtQty + txtQuantityPulled) > txtQuantityApproved) {
            $("#spanGlobalMessage").html('@eTurns.DTO.ResRequisitionDetails.YoucanPullMaxtoApprovedQuantity  ' + (txtQuantityApproved - txtQuantityPulled));
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
            return false;
        }
        if (txtQty <= 0) {
            $("#spanGlobalMessage").html('@eTurns.DTO.ResRequisitionDetails.InvalidPullvalue');
            $('div#target').fadeToggle();
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
            return false;
        }

        if (txtQty != 'undefined' && txtQty > 0) {
            var trimtxtVal = txtQty.toString().replace(/ /g, '');

            if (trimtxtVal > 0) {
                trimtxtVal = parseFloat(trimtxtVal, 10);
            }
        }

        var vToolGUID = $(obj).parent().parent().find('#hdnToolGUID').val();
        var hdnID = $(obj).parent().parent().find('#hdnID').val();
        var hdnRequisitionGUID = $(obj).parent().parent().find('#hdnRequisitionGUID').val();

        var vUDF1 = ''; var vUDF2 = ''; var vUDF3 = ''; var vUDF4 = ''; var vUDF5 = '';
        var vUDF1ToolCommon = ''; var vUDF2ToolCommon = ''; var vUDF3ToolCommon = ''; var vUDF4ToolCommon = ''; var vUDF5ToolCommon = '';

        if ($("#UDF1ToolCommon") != null) {
            if ($("#UDF1ToolCommon").attr("class") == 'selectBox') {
                vUDF1ToolCommon = $("#UDF1ToolCommon option:selected").text();
            }
            else {
                vUDF1ToolCommon = $("#UDF1ToolCommon").val();
            }
        }

        if ($("#UDF2ToolCommon") != null) {
            if ($("#UDF2ToolCommon").attr("class") == 'selectBox') {
                vUDF2ToolCommon = $("#UDF2ToolCommon option:selected").text();
            }
            else {
                vUDF2ToolCommon = $("#UDF2ToolCommon").val();
            }
        }

        if ($("#UDF3ToolCommon") != null) {
            if ($("#UDF3ToolCommon").attr("class") == 'selectBox') {
                vUDF3ToolCommon = $("#UDF3ToolCommon option:selected").text();
            }
            else {
                vUDF3ToolCommon = $("#UDF3ToolCommon").val();
            }
        }

        if ($("#UDF4ToolCommon") != null) {
            if ($("#UDF4ToolCommon").attr("class") == 'selectBox') {
                vUDF4ToolCommon = $("#UDF4ToolCommon option:selected").text();
            }
            else {
                vUDF4ToolCommon = $("#UDF4ToolCommon").val();
            }
        }

        if ($("#UDF5ToolCommon") != null) {
            if ($("#UDF5ToolCommon").attr("class") == 'selectBox') {
                vUDF5ToolCommon = $("#UDF5ToolCommon option:selected").text();
            }
            else {
                vUDF5ToolCommon = $("#UDF5ToolCommon").val();
            }
        }

        if ($(obj).parent().parent().find('#UDF1TC').length > 0) {
            if ($(obj).parent().parent().attr("class") == 'selectBox') {
                vUDF1 = $(obj).parent().parent().find('#UDF1TC option:selected').text();
            }
            else {
                vUDF1 = $(obj).parent().parent().find('#UDF1TC').val();
            }
        }

        if ($(obj).parent().parent().find('#UDF2TC').length > 0) {
            if ($(obj).parent().parent().find('#UDF2TC').attr("class") == 'selectBox') {
                vUDF2 = $(obj).parent().parent().parent().find('#UDF2TC option:selected').text();
            }
            else {
                vUDF2 = $(obj).parent().parent().find('#UDF2TC').val();
            }
        }

        if ($(obj).parent().parent().find('#UDF3TC').length > 0) {
            if ($(obj).parent().parent().find('#UDF3TC').attr("class") == 'selectBox') {
                vUDF3 = $(obj).parent().parent().find('#UDF3TC option:selected').text();
            }
            else {
                vUDF3 = $(obj).parent().parent().find('#UDF3TC').val();
            }
        }

        if ($(obj).parent().parent().find('#UDF4TC').length > 0) {
            if ($(obj).parent().parent().find('#UDF4TC').attr("class") == 'selectBox') {
                vUDF4 = $(obj).parent().parent().find('#UDF4TC option:selected').text();
            }
            else {
                vUDF4 = $(obj).parent().parent().find('#UDF4TC').val();
            }
        }

        if ($(obj).parent().parent().find('#UDF5TC').length > 0) {
            if ($(obj).parent().parent().find('#UDF5TC').attr("class") == 'selectBox') {
                vUDF5 = $(obj).parent().parent().find('#UDF5TC option:selected').text();
            }
            else {
                vUDF5 = $(obj).parent().parent().find('#UDF5TC').val();
            }
        }

        var vTechnicianGUID = null;
        vTechnicianGUID = $(obj).parent().parent().find('#TechnicianGUID').val();


        if ($("#chkUseToolCommonUDF").is(":checked")) {
            vUDF1 = vUDF1ToolCommon != undefined ? vUDF1ToolCommon : '';
            vUDF2 = vUDF2ToolCommon != undefined ? vUDF2ToolCommon : '';
            vUDF3 = vUDF3ToolCommon != undefined ? vUDF3ToolCommon : '';
            vUDF4 = vUDF4ToolCommon != undefined ? vUDF4ToolCommon : '';
            vUDF5 = vUDF5ToolCommon != undefined ? vUDF5ToolCommon : '';
            vTechnicianGUID = $('#UseThisTechnicianGUID').val();
        }
        var woGuid = '@ViewBag.WorkOrderGUID'


        var reqToolCheckout = {
            "ID": 0, "PullCreditQuantity": txtQty, "BinID": 0, "PullCredit": 'checkout', "TempPullQTY": txtQty,
            "RequisitionDetailGUID": hdnID, "WorkOrderDetailGUID": woGuid, "RequisitionMasterGUID": hdnRequisitionGUID, "ToolGUID": vToolGUID,
            "TechnicianGUID": vTechnicianGUID, "ToolCheckoutUDF1": vUDF1, "ToolCheckoutUDF2": vUDF2, "ToolCheckoutUDF3": vUDF3,
            "ToolCheckoutUDF4": vUDF4, "ToolCheckoutUDF5": vUDF5
        };

        $('#DivLoading').show();
        var ajaxURL = '@Url.Content("~/Pull/RequisitionToolCheckout")';
        $.ajax({
            "url": ajaxURL,
            "data": JSON.stringify(reqToolCheckout),
            "type": 'POST',
            "dataType": "json",
            "contentType": "application/json",
            "success": function (response) {
                $('#DivLoading').hide();
                if (response.Status == "ok") {
                    ShowEditTabGUIDTRUEOnly("RequisitionEdit?RequisitionGUID=" + hdnRequisitionGUID, "frmRequisitionMaster");
                }
                else {
                    $("#spanGlobalMessage").html(response.Message);
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                }
            },
            "error": function (xhr) {
                $('#DivLoading').hide();
                $("#spanGlobalMessage").html(xhr.status + " " + xhr.statusText);
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            }
        });
    });


    function GetUDFValueFromTR(UdfName, tr) {
        var UdfValue
        if ($(tr).find('#' + UdfName).length > 0) {
            if ($(tr).find('#' + UdfName).attr("class") == 'selectBox') {
                UdfValue = $(tr).find('#' + UdfName + ' option:selected').text();
            }
            else {
                UdfValue = $(tr).find('#' + UdfName).val();
            }

        }
        return UdfValue;
    }

    function GetCommonUDFValue(UdfName) {
        var UdfValue
        if ($("#" + UdfName) != null) {
            if ($("#" + UdfName).attr("class") == 'selectBox') {
                UdfValue = $("#" + UdfName + " option:selected").text();
            }
            else {
                UdfValue = $("#" + UdfName).val();
            }
        }
        return UdfValue;
    }

    function SaveRequisitionLineItems(IsFormSubmit) {
        isDirtyForm = false;
        var arrItems = new Array();
        var arrApprovedItems = new Array();
        var ItemNodes = $('#' + RequisitionItemsDTName).dataTable().fnGetNodes();
        var arrItemsURL = '@Url.Content("~/Consume/AddItemToDetailTable")';
        var arrApprovedItemURL = '@(Url.Content("~/Consume/ApprovedRequisitionUDFUpdate"))';
        var ReqGuid = '@ViewBag.RequisitionGUID'
        for (var j = 0; j <= ItemNodes.length - 1; j++) {

            if ($(ItemNodes[j]).hasClass("RowChanged") || $("#chkUsePullCommonUDF").is(":checked") || $("#chkUseToolCommonUDF").is(":checked")) {

                var hdnItemGUID = $(ItemNodes[j]).find('#hdnItemGUID').val();
                var hdnToolGUID = $(ItemNodes[j]).find('#hdnToolGUID').val();
                var hdnItemCost = $(ItemNodes[j]).find("#hdnItemCost").val();
                var hdnID = $(ItemNodes[j]).find('#hdnID').val();
                var hdnRequisitionGUID = $(ItemNodes[j]).find('#hdnRequisitionGUID').val();
                var txtQuantityRequisitioned = $(ItemNodes[j]).find('#txtQuantityRequisitioned').val() == '' ? 0 : $(ItemNodes[j]).find('#txtQuantityRequisitioned').val();
                var txtQuantityApproved = $(ItemNodes[j]).find('#txtQuantityApproved').val() == '' ? 0 : $(ItemNodes[j]).find('#txtQuantityApproved').val();
                var txtQuantityPulled = $(ItemNodes[j]).find('#txtQuantityPulled').val() == '' ? 0 : $(ItemNodes[j]).find('#txtQuantityPulled').val();
                txtQuantityRequisitioned = parseFloat(txtQuantityRequisitioned, 10);
                txtQuantityApproved = parseFloat(txtQuantityApproved, 10);
                txtQuantityPulled = parseFloat(txtQuantityPulled, 10);
                var hdnToolCategoryID = $(ItemNodes[j]).find('#hdnToolCategoryID').val();

                if (isNaN(parseFloat(txtQuantityRequisitioned)) || parseFloat(txtQuantityRequisitioned) <= 0) {
                    $(ItemNodes[j]).css("background-color", "#F7BBC4");
                    $("#spanGlobalMessage").html('@ResRequisitionDetails.ValidRequisitionedQuantity');
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    showNotificationDialog();
                    $('#DivLoading').hide();
                    return false;
                }
                else if (txtQuantityApproved > txtQuantityRequisitioned) {
                    $(ItemNodes[j]).css("background-color", "#F7BBC4");
                    $("#spanGlobalMessage").html('@(eTurns.DTO.ResRequisitionDetails.YoucanapproveonlyRequisitionedQuantity)' + '  ' + txtQuantityRequisitioned);
                    $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                    showNotificationDialog();
                    $('#DivLoading').hide();
                    return false;
                }

                var item_BinID = $(ItemNodes[j]).find("#item_BinID").val();
                var ProjectSpendGUID = '';
                var hdnItemID = $(ItemNodes[j]).find('#hdnItemID').val();
                var hdnItemNumber = $(ItemNodes[j]).find('#hdnItemNumber').val();
                var QuickListItemGUID = $(ItemNodes[j]).find('#hdnQuickListItemGUID').val();
                if (QuickListItemGUID == null || QuickListItemGUID == undefined || QuickListItemGUID == '00000000-0000-0000-0000-000000000000')
                    QuickListItemGUID = null;
                var RequiredDate = $(ItemNodes[j]).find('#hiddenDatePicker' + hdnID).val();
                var vPullSupplierAccountNumber = "";

                var vUDF1 = ''; var vUDF2 = ''; var vUDF3 = ''; var vUDF4 = ''; var vUDF5 = '';
                var ProjectSpendGUIDCommon = '';
                var vUDF1Required = false; var vUDF2Required = false; var vUDF3Required = false; var vUDF4Required = false; var vUDF5Required = false;
                var tcUDF1 = ''; var tcUDF2; var tcUDF3 = ''; var tcUDF4; var tcUDF5; var vTechnicianGUID = '';
                var ToolUDF1Required = false; var ToolUDF2Required = false; var ToolUDF3Required = false; var ToolUDF4Required = false; var ToolUDF5Required = false;
                var hdnToolGUIDByCat = '';
                var vPullOrderNumber = "";
                var TechnicianName = '';
                var vProjectSpentName = "";
                if (hdnItemGUID != null && hdnItemGUID != undefined && hdnItemGUID != '00000000-0000-0000-0000-000000000000') {
                    //if ($('#ddlProjectSpendHeader').val().length > 0) {
                    //    ProjectSpendGUID = $('#ddlProjectSpendHeader').val();
                    //}
                    //else if ($("#chkUsePullCommonUDF").is(":checked") && $("#ProjectSpendGUIDCommon") != null) {
                    //    ProjectSpendGUID = $('#ProjectSpendGUIDCommon').val();
                    //}
                    //else if ($(ItemNodes[j]).find("#ProjectSpendGUID").length > 0 && $(ItemNodes[j]).find("#ProjectSpendGUID").val().length > 0) {
                    //    ProjectSpendGUID = $(ItemNodes[j]).find("#ProjectSpendGUID").val();
                    //}

                    if ($(ItemNodes[j]).find('#hdnSupplierAccountNumber') != null) {
                        vPullSupplierAccountNumber = $(ItemNodes[j]).find('#hdnSupplierAccountNumber').val();
                    }

                    if ($("#chkUsePullCommonUDF").is(":checked")) {
                        vUDF1 = GetCommonUDFValue('UDF1PullCommon');
                        vUDF2 = GetCommonUDFValue('UDF2PullCommon');
                        vUDF3 = GetCommonUDFValue('UDF3PullCommon');
                        vUDF4 = GetCommonUDFValue('UDF4PullCommon');
                        vUDF5 = GetCommonUDFValue('UDF5PullCommon');

                        vUDF1Required = $("#UDF1PullCommon").attr("udfrequired");
                        vUDF2Required = $("#UDF2PullCommon").attr("udfrequired");
                        vUDF3Required = $("#UDF3PullCommon").attr("udfrequired");
                        vUDF4Required = $("#UDF4PullCommon").attr("udfrequired");
                        vUDF5Required = $("#UDF5PullCommon").attr("udfrequired");

                        if ($('#txtPullOrderNumberCommon') != null) {
                            if ($('#txtPullOrderNumberCommon').attr("class") == 'selectBox') {
                                vPullOrderNumber = $('#txtPullOrderNumberCommon option:selected').text();
                            }
                            else {
                                vPullOrderNumber = $('#txtPullOrderNumberCommon').val();
                            }
                        }
                        if ($('#txtProjectSpentCommon') != null) {
                            if ($('#txtProjectSpentCommon').attr("class") == 'selectBox') {
                                vProjectSpentName = $('#txtProjectSpentCommon option:selected').text();
                            }
                            else {
                                vProjectSpentName = $('#txtProjectSpentCommon').val();
                            }
                        }
                    }
                    else {
                        vUDF1 = GetUDFValueFromTR("UDF1Pull", ItemNodes[j]);
                        vUDF2 = GetUDFValueFromTR("UDF2Pull", ItemNodes[j]);
                        vUDF3 = GetUDFValueFromTR("UDF3Pull", ItemNodes[j]);
                        vUDF4 = GetUDFValueFromTR("UDF4Pull", ItemNodes[j]);
                        vUDF5 = GetUDFValueFromTR("UDF5Pull", ItemNodes[j]);

                        vUDF1Required = $(ItemNodes[j]).find('#UDF1Pull').attr("udfrequired");
                        vUDF2Required = $(ItemNodes[j]).find('#UDF2Pull').attr("udfrequired");
                        vUDF3Required = $(ItemNodes[j]).find('#UDF3Pull').attr("udfrequired");
                        vUDF4Required = $(ItemNodes[j]).find('#UDF4Pull').attr("udfrequired");
                        vUDF5Required = $(ItemNodes[j]).find('#UDF5Pull').attr("udfrequired");

                        if ($(ItemNodes[j]).find('#txtPullOrderNumber') != null) {
                            if ($(ItemNodes[j]).find('#txtPullOrderNumber').attr("class") == 'selectBox') {
                                vPullOrderNumber = $(ItemNodes[j]).find('#txtPullOrderNumber option:selected').text();
                            }
                            else {
                                vPullOrderNumber = $(ItemNodes[j]).find('#txtPullOrderNumber').val();
                            }
                        }
                        if ($(ItemNodes[j]).find('#txtProjectSpent') != null) {
                            if ($(ItemNodes[j]).find('#txtProjectSpent').attr("class") == 'selectBox') {
                                vProjectSpentName = $(ItemNodes[j]).find('#txtProjectSpent option:selected').text();
                            }
                            else {
                                vProjectSpentName = $(ItemNodes[j]).find('#txtProjectSpent').val();
                            }
                        }


                    }

                    if ($("#chkUseToolCommonUDF").is(":checked")) {
                        vTechnicianGUID = $('#UseThisTechnicianGUID').val();

                        if (typeof ($("#txtUseThisTechnician")) != "undefined" && $("#txtUseThisTechnician") != null) {
                            TechnicianName = $("input#txtUseThisTechnician").val();
                        }
                    }
                    else {
                        TechnicianName = $(ItemNodes[j]).find('input#txtTechnician').val();
                    }
                    var UDfRequiredmsg = '';
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && vUDF1Required == "true" && $.trim(vUDF1) == "") {
                        UDfRequiredmsg += '@string.Format(ResMessage.MsgRequired, "UDF1")';
                    }
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && vUDF2Required == "true" && $.trim(vUDF2) == "") {
                          UDfRequiredmsg += '@string.Format(ResMessage.MsgRequired,"UDF2")';
                    }
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && vUDF3Required == "true" && $.trim(vUDF3) == "") {
                          UDfRequiredmsg += '@string.Format(ResMessage.MsgRequired,"UDF3")';
                    }
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && vUDF4Required == "true" && $.trim(vUDF4) == "") {
                          UDfRequiredmsg += '@string.Format(ResMessage.MsgRequired,"UDF4")';
                    }
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && vUDF5Required == "true" && $.trim(vUDF5) == "") {
                          UDfRequiredmsg += '@string.Format(ResMessage.MsgRequired,"UDF5")';
                    }

                    if ($.trim(UDfRequiredmsg) != "") {
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").html(UDfRequiredmsg);
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        $(ItemNodes[j]).css("background-color", "#F7BBC4");
                        $('#DivLoading').hide();
                        return false;
                    }
                }
                else if (hdnToolGUID != null && hdnToolGUID != undefined && hdnToolGUID != '00000000-0000-0000-0000-000000000000') {
                    if ($("#chkUseToolCommonUDF").is(":checked")) {
                        tcUDF1 = GetCommonUDFValue("UDF1ToolCommon");
                        tcUDF2 = GetCommonUDFValue("UDF2ToolCommon");
                        tcUDF3 = GetCommonUDFValue("UDF3ToolCommon");
                        tcUDF4 = GetCommonUDFValue("UDF4ToolCommon");
                        tcUDF5 = GetCommonUDFValue("UDF5ToolCommon");
                        vTechnicianGUID = $('#UseThisTechnicianGUID').val();

                        ToolUDF1Required = $("#UDF1ToolCommon").attr("udfrequired");
                        ToolUDF2Required = $("#UDF2ToolCommon").attr("udfrequired");
                        ToolUDF3Required = $("#UDF3ToolCommon").attr("udfrequired");
                        ToolUDF4Required = $("#UDF4ToolCommon").attr("udfrequired");
                        ToolUDF5Required = $("#UDF5ToolCommon").attr("udfrequired");

                        if (typeof ($("#txtUseThisTechnician")) != "undefined" && $("#txtUseThisTechnician") != null) {
                            //vTechnician = $("body").find("input#UseThisTechnicianGUID").val();
                            TechnicianName = $("input#txtUseThisTechnician").val();
                        }
                    }
                    else {
                        tcUDF1 = GetUDFValueFromTR("UDF1TC", ItemNodes[j]);
                        tcUDF2 = GetUDFValueFromTR("UDF2TC", ItemNodes[j]);
                        tcUDF3 = GetUDFValueFromTR("UDF3TC", ItemNodes[j]);
                        tcUDF4 = GetUDFValueFromTR("UDF4TC", ItemNodes[j]);
                        tcUDF5 = GetUDFValueFromTR("UDF5TC", ItemNodes[j]);
                        vTechnicianGUID = $(ItemNodes[j]).find('#TechnicianGUID').val();

                        ToolUDF1Required = $(ItemNodes[j]).find('#UDF1TC').attr("udfrequired");
                        ToolUDF2Required = $(ItemNodes[j]).find('#UDF2TC').attr("udfrequired");
                        ToolUDF3Required = $(ItemNodes[j]).find('#UDF3TC').attr("udfrequired");
                        ToolUDF4Required = $(ItemNodes[j]).find('#UDF4TC').attr("udfrequired");
                        ToolUDF5Required = $(ItemNodes[j]).find('#UDF5TC').attr("udfrequired");

                        TechnicianName = $(ItemNodes[j]).find('input#txtTechnician').val();
                    }

                    var UDfRequiredmsg = '';
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && ToolUDF1Required == "true" && $.trim(tcUDF1) == "") {
                        UDfRequiredmsg += "Tool Checkout UDF1 is required";
                    }
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && ToolUDF2Required == "true" && $.trim(tcUDF2) == "") {
                        UDfRequiredmsg += "Tool Checkout UDF2 is required";
                    }
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && ToolUDF3Required == "true" && $.trim(tcUDF3) == "") {
                        UDfRequiredmsg += "Tool Checkout UDF3 is required";
                    }
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && ToolUDF4Required == "true" && $.trim(tcUDF4) == "") {
                        UDfRequiredmsg += "Tool Checkout UDF4 is required";
                    }
                    if (($('#RequisitionStatus').val() == "Approved" || $('#RequisitionStatus').val() == "Submitted") && ToolUDF5Required == "true" && $.trim(tcUDF5) == "") {
                        UDfRequiredmsg += "Tool Checkout UDF5 is required";
                    }

                    if ($.trim(UDfRequiredmsg) != "") {
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").html(UDfRequiredmsg);
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        $(ItemNodes[j]).css("background-color", "#F7BBC4");
                        $('#DivLoading').hide();
                        return false;
                    }
                }

                if (TechnicianName == TechnicianText) {
                    TechnicianName = "";
                }
                if (typeof (TechnicianName) == "undefined") {
                    TechnicianName = "";
                }
                if (TechnicianName.indexOf('-') >= 0) {
                    if (TechnicianName.split('-')[0].trim() == '') {
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").html('@ResRequisitionDetails.Invalidtechincian');
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        $(ItemNodes[j]).css("background-color", "#F7BBC4");
                        $('#DivLoading').hide();
                        return false;
                    }
                    if (TechnicianName.indexOf(" --- ") >= 0) {
                        var technicianNameArray = TechnicianName.split(" --- ");
                        var technicianName = technicianNameArray[0];
                        var technicianCode = technicianNameArray[1];

                        if ((technicianName !== undefined && technicianName != null && technicianName != '' && technicianName.indexOf("---") >= 0)
                            || (technicianCode !== undefined && technicianCode != null && technicianCode != '' && technicianCode.indexOf("---") >= 0)) {

                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").html(msgInvalidTechnician);
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            $(ItemNodes[j]).css("background-color", "#F7BBC4");
                            $('#DivLoading').hide();
                            return false;
                        }
                    }
                    else {
                        if ((TechnicianName !== undefined && TechnicianName != null && TechnicianName != '' && TechnicianName.indexOf("---") >= 0)) {
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").html(msgInvalidTechnician);
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            $(ItemNodes[j]).css("background-color", "#F7BBC4");
                            $('#DivLoading').hide();
                            return false;
                        }
                    }
                }

                if ($(ItemNodes[j]).find("#ToolGUIDByCategory").length > 0 && $(ItemNodes[j]).find("#ToolGUIDByCategory").val().length > 0) {
                        hdnToolGUIDByCat = $(ItemNodes[j]).find("#ToolGUIDByCategory").val();
                        hdnToolGUID = hdnToolGUIDByCat;
                }
                else if(parseInt(hdnToolCategoryID)>0) {
                    hdnToolGUID='';
                }

                if (txtQuantityApproved > 0 && '@ViewBag.RequisitionStatus' == "Approved") {
                    var dataNew = {
                        "GUID": hdnID, "ItemGUID": hdnItemGUID, "RequisitionGUID": hdnRequisitionGUID, "ItemNumber": hdnItemNumber,
                        "QuantityRequisitioned": txtQuantityRequisitioned, "QuantityPulled": txtQuantityPulled, "QuantityApproved": txtQuantityApproved,
                        "ItemCost": hdnItemCost, "BinID": item_BinID, "ProjectSpendGUID": ProjectSpendGUID, "RequiredDateStr": RequiredDate, "PullUDF1": vUDF1,
                        "PullUDF2": vUDF2, "PullUDF3": vUDF3, "PullUDF4": vUDF4, "PullUDF5": vUDF5, "QuickListItemGUID": QuickListItemGUID,
                        "ToolGuid": hdnToolGUID, "ToolCheckoutUDF1": tcUDF1, "ToolCheckoutUDF2": tcUDF2, "ToolCheckoutUDF3": tcUDF3, "ToolCheckoutUDF4": tcUDF4,
                        "ToolCheckoutUDF5": tcUDF5, "TechnicianGUID": vTechnicianGUID, 'Technician': TechnicianName, SupplierAccountGuid : vPullSupplierAccountNumber, ToolCategoryID: hdnToolCategoryID, "PullOrderNumber": vPullOrderNumber
                        , "ProjectSpendName": vProjectSpentName};
                    arrApprovedItems.push(dataNew);
                }
                else {
                    var data = {
                        "GUID": hdnID, "ItemGUID": hdnItemGUID, "RequisitionGUID": hdnRequisitionGUID, "ItemNumber": hdnItemNumber,
                        "QuantityRequisitioned": txtQuantityRequisitioned, "QuantityPulled": txtQuantityPulled, "QuantityApproved": txtQuantityApproved,
                        "ItemCost": hdnItemCost, "BinID": item_BinID, "ProjectSpendGUID": ProjectSpendGUID, "RequiredDateStr": RequiredDate, "PullUDF1": vUDF1,
                        "PullUDF2": vUDF2, "PullUDF3": vUDF3, "PullUDF4": vUDF4, "PullUDF5": vUDF5, "QuickListItemGUID": QuickListItemGUID,
                        "ToolGuid": hdnToolGUID, "ToolCheckoutUDF1": tcUDF1, "ToolCheckoutUDF2": tcUDF2, "ToolCheckoutUDF3": tcUDF3, "ToolCheckoutUDF4": tcUDF4,
                        "ToolCheckoutUDF5": tcUDF5, "TechnicianGUID": vTechnicianGUID, 'Technician': TechnicianName, SupplierAccountGuid: vPullSupplierAccountNumber, ToolCategoryID: hdnToolCategoryID, "PullOrderNumber": vPullOrderNumber
                        , "ProjectSpendName": vProjectSpentName};
                    arrItems.push(data);
                }

            }
        }
        if (arrItems.length > 0) {
            return CallAjaxToSaveReqArrItems(arrItems, arrApprovedItems, IsFormSubmit);
        }
        else if (arrApprovedItems.length > 0) {
            return CallAjaxToSaveReqArrApprovedItems(arrItems, arrApprovedItems, IsFormSubmit);
        }
        else if (IsFormSubmit) {
            $('#frmRequisitionMaster').submit();
        }
    }

    function CallAjaxToSaveReqArrItems(arrItems, arrApprovedItems, IsFormSubmit) {

        var arrItemsURL = '@Url.Content("~/Consume/AddItemToDetailTable")';
        var ReqGuid = '@ViewBag.RequisitionGUID'
        if (arrItems.length > 0) {

            $('#DivLoading').show();
            $.ajax({
                url: arrItemsURL,
                data: { 'para': JSON.stringify(arrItems) },
                dataType: 'json',
                type: 'POST',
                async: true,
                timeout: 1200000,
                success: function (response) {
                    if (arrApprovedItems.length > 0) {
                        CallAjaxToSaveReqArrApprovedItems(new Array(), arrApprovedItems);
                    }
                    else {
                        $('#DivLoading').hide();
                        $("#spanGlobalMessage").html(response.Message);
                        if (response.Status == "ok") {
                            if (IsFormSubmit)
                                $('#frmRequisitionMaster').submit();
                            else {
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                                showNotificationDialog();
                                $('#DivLoading').hide();
                                ShowEditTabGUIDTRUEOnly("RequisitionEdit?RequisitionGUID=" + ReqGuid, "frmRequisitionMaster");
                            }
                        }
                        else {
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            showNotificationDialog();
                            $('#DivLoading').hide();
                            return false;
                        }
                    }
                }
            });
        }
    }

    function CallAjaxToSaveReqArrApprovedItems(arrItems, arrApprovedItems, IsFormSubmit) {
        var arrApprovedItemURL = '@(Url.Content("~/Consume/ApprovedRequisitionUDFUpdate"))';
        var ReqGuid = '@ViewBag.RequisitionGUID'
        if (arrApprovedItems.length > 0) {
            $('#DivLoading').show();
            $.ajax({
                url: arrApprovedItemURL,
                data: { 'para': JSON.stringify(arrApprovedItems) },
                dataType: 'json',
                type: 'POST',
                async: true,
                timeout: 1200000,
                success: function (response) {
                    if (arrItems.length > 0) {
                        CallAjaxToSaveReqArrItems(arrItems, new Array())
                    }
                    else {
                        $('#DivLoading').hide();
                        $("#spanGlobalMessage").html(response.Message);
                        if (response.Status == "ok") {
                            if (IsFormSubmit)
                                $('#frmRequisitionMaster').submit();
                            else {
                                $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                                showNotificationDialog();
                                $('#DivLoading').hide();
                                ShowEditTabGUIDTRUEOnly("RequisitionEdit?RequisitionGUID=" + ReqGuid, "frmRequisitionMaster");
                            }
                        }
                        else {
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                            showNotificationDialog();
                            $('#DivLoading').hide();
                            return false;
                        }
                    }
                }
            });
        }
    }

    $('#' + RequisitionItemsDTName + ', #tblPullCommonUDF').off('focus', "input.AutoPullOrderNumber");
    $('#' + RequisitionItemsDTName+', #tblPullCommonUDF').on('focus', "input.AutoPullOrderNumber", function (e) {
        var ajaxURL = '/Pull/GetPullOrderNumberForNewPullGrid';
        var tr = $(this).parent().parent().parent();
        //var itmGuid = _NewConsumePull.getItemDataFromRow($(tr)).spnItemGUID; //$(tr).find('#spnItemGUID').text();

        var $this = $(this);

        _AutoCompleteWrapper.init($this
            , ajaxURL
            , function (request) {
                var obj = JSON.stringify({ 'NameStartWith': request.term });
                return obj;
            },
            function (data) {
                return $.map(data, function (Items) {
                    return {
                        label: Items.Value,
                        value: Items.Value
                    }
                })
            }
            , function (curVal, selectedItem) {
                //        $(this).val(ui.item.value);
                $(tr).addClass("RowChanged");
            }
            , function (selectedItem) {

            }
            , true, true);


    });

    $('#' + RequisitionItemsDTName + ', #tblPullCommonUDF').off('focus', "input.AutoPullProjectSpents");
    $('#' + RequisitionItemsDTName + ', #tblPullCommonUDF').on('focus', "input.AutoPullProjectSpents", function (e) {
        var ajaxURL = '/ProjectSpend/GetProjectSpend';
        var tr = $(this).parent().parent().parent();
        //var itmGuid = _NewConsumePull.getItemDataFromRow($(tr)).spnItemGUID; //$(tr).find('#spnItemGUID').text();

        var $this = $(this);

        _AutoCompleteWrapper.init($this
            , ajaxURL
            , function (request) {
                var obj = JSON.stringify({ 'NameStartWith': request.term });
                return obj;
            },
            function (data) {
                return $.map(data, function (Items) {
                    return {
                        label: Items.Value,
                        value: Items.Value
                    }
                })
            }
            , function (curVal, selectedItem) {
                //        $(this).val(ui.item.value);
                $(tr).addClass("RowChanged");
            }
            , function (selectedItem) {

            }
            , true, true);


    });
</script>
