@model IEnumerable<eTurns.DTO.PullMasterViewDTO>
<div class="innerGrid" style="width: 99% !important; margin-left: 5px !important;
    float: left;">
    <table id="PullRequisitionTable@(ViewBag.RequisitionDetailHistoryID)" class="display">
        <thead>
            <tr>
                <th>
                </th>
                <th>@eTurns.DTO.ResPullMaster.PullCredit
                </th>
                <th>
                    @eTurns.DTO.ResPullMaster.PulledQuantity
                </th>
                <th>@eTurns.DTO.ResPullMaster.PullLocation</th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.ID
                </th>
                <th>
                    @eTurns.DTO.ResItemMaster.ItemNumber
                </th>
                @*<th>
                    @eTurns.DTO.ResItemMaster.OnHandQuantity
                </th>*@
                <th>
                    @eTurns.DTO.ResPullMaster.Created
                </th>
                <th>
                    @eTurns.DTO.ResPullMaster.Updated
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.AddedFrom
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.EditedFrom
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.ReceivedOnDate
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate
                </th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
<script language="javascript" type="text/javascript">
    var oTablePullRequisitionTable;
    $(document).ready(function () {
        var sImageUrl2 = "/Content/images/";
        var gaiSelected = [];
        var anOpenPullDetail = [];
        var TempTableName = "PullRequisitionTable" + '@ViewBag.RequisitionDetailHistoryID';

        oTablePullRequisitionTable = $('#' + TempTableName).dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "bAutoWidth": false,
            "sScrollX": "100%",
            "sDom": 'R<"top"lp<"clear">>rt<"bottom"i1<"clear">>',
            "oColVis": {},
            "aaSorting": [],
            "bRetrieve": true,
            //"bDestroy": true,
            "bInfo": false,
            "bPaginate": false,
            "bProcessing": true,
            "bStateSave": false,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                if (aData.IsDeleted == true && aData.IsArchived == true)
                    nRow.className = "GridDeleatedArchivedRow";
                else if (aData.IsDeleted == true)
                    nRow.className = "GridDeletedRow";
                else if (aData.IsArchived == true)
                    nRow.className = "GridArchivedRow";

                return nRow;
            },
            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
                //if (PostCount > 1) {
                $.ajax({
                    "url": '@Url.Content("~/Master/SaveGridState")',
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: 'PullMasterList' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        o = json;
                    }
                });
                //}
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'PullMasterList' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            },
            "bServerSide": true,
            "sAjaxSource": '@Url.Content("~/Consume/PullMasterListByRequisitionAjax")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                //PostCount = PostCount + 1;
                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;
                for (var i = 0; i <= objCols.length - 1; i++) {
                    arrCols.push(objCols[i].mDataProp);
                }
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }
                if (oSettings.aaSorting.length != 0)
                    aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                else
                    aoData.push({ "name": "SortingField", "value": "0" });

                aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });
                aoData.push({ "name": "RequisitionDetailGUID", "value": '@ViewBag.RequisitionDetailGUID' });

                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    cache: false,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback,
                    beforeSend: function () {
                        $('.dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    complete: function () {
                        $('.dataTables_scroll').css({ "opacity": 1 });
                    }
                })
            },
            "aoColumns": [
                             {
                                 "mDataProp": null,
                                 "bSortable": false,
                                 "sClass": "read_only control1 center",
                                 "sDefaultContent": '<img src="' + sImageUrl2 + 'drildown_open.jpg' + '">'
                             },
                            { "mDataProp": "PullCredit", "sClass": "read_only" },
                            { "mDataProp": "PoolQuantity", "sClass": "read_only" },
                            { "mDataProp": "BinNumber", "sClass": "read_only" },
			                { "mDataProp": "ID", "sClass": "read_only" },
                            { "mDataProp": "ItemNumber", "sClass": "read_only" },
                            { "mDataProp": "CreatedDate", "sClass": "read_only" },
                            { "mDataProp": "UpdatedDate", "sClass": "read_only" },
                            { "mDataProp": "AddedFrom", "sClass": "read_only" },
                            { "mDataProp": "EditedFrom", "sClass": "read_only" },
                            { "mDataProp": "ReceivedOnWeb", "sClass": "read_only",
                                "fnRender": function (obj, val) {
                                    return obj.aData.ReceivedOnWebDate;
                                }
                            },
			                { "mDataProp": "ReceivedOn", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                        return obj.aData.ReceivedOnDate;
			                    }
			                }

		    ]
        });

        /*Functions used for nasted data binding START*/
        $('#' + 'PullRequisitionTable' + '@ViewBag.RequisitionDetailHistoryID').on("click", "td.control1", function (event) {
            var currentTableName = this.parentNode.parentNode.parentElement.id;
            var nTr1 = this.parentNode;
            var i1 = $.inArray(nTr1, anOpenPullDetail);
            var tmpdtTable = $('#' + currentTableName).DataTable();

            if (i1 === -1) {
                $('img', this).attr('src', sImageUrl2 + "drildown_close.jpg");
                tmpdtTable.fnOpen(nTr1, fnFormatDetailsPullDetail(tmpdtTable, nTr1), '');
                $(nTr1).addClass("ExpandedNodeRequisitionpull");
                anOpenPullDetail.push(nTr1);
            }
            else {
                $('img', this).attr('src', sImageUrl2 + "drildown_open.jpg");
                $(nTr1).removeClass("ExpandedNodeRequisitionpull");
                tmpdtTable.fnClose(nTr1);
                anOpenPullDetail.splice(i1, 1);
            }
        });
    });
    function fnFormatDetailsPullDetail(oTablePullRequisitionTable, nTr) {
        var tmpCurrentTableName = nTr.parentNode.parentElement.id;
        var oData = $('#' + tmpCurrentTableName).DataTable().fnGetData(nTr);
        ItemName = oData.ItemNumber;
        ItemUniqueID = oData.GUID;
        var sOut = '';
        $('#DivLoading').show();

        $.ajax({
            "url": '@Url.Content("~/Pull/PullDetails")',
            data: { ItemID: oData.GUID },
            "async": false,
            cache: false,
            "dataType": "text",
            "success": function (json) {
                sOut = json;
                $('#DivLoading').hide();
            },
            error: function (response) {
            }
        });

        return sOut;
    }


</script>
