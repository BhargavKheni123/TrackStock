@model eTurns.DTO.QuickListMasterDTO
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
}
<div class="userHead">
    @using (Ajax.BeginForm("SaveQL", "QuickList", new AjaxOptions { HttpMethod = "Post", InsertionMode = InsertionMode.Replace }, new { @id = "frmQuickListHistory" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true)  
        
              
        <div class="infoBlock">
            <ul>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.RoomName)
                    </label>
                    : <span>@(Model.RoomName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Created)
                    </label>
                    : <span>@(Model.ReceivedOnDateWeb)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.CreatedByName)
                    </label>
                    : <span>@(Model.CreatedByName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.LastUpdated)
                    </label>
                    : <span>@(Model.ReceivedOnDate)</span></li>
                <li style="border: none">
                    <label for="RoomName">
                        @Html.LabelFor(model => model.UpdatedByName)
                    </label>
                    : <span>@(Model.UpdatedByName)</span></li>
            </ul>
        </div>
                      
        <div class="editorForm">
            <ul>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Name)<em> *</em>
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.Name, new { id = "Name", @class = "text-box", maxlength = 255 })
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Name)</span>
                        @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                        @Html.HiddenFor(model => model.GUID)
                        @Html.HiddenFor(model => model.Created)
                        @Html.HiddenFor(model => model.LastUpdated)
                        @Html.HiddenFor(model => model.CreatedBy)
                        @Html.HiddenFor(model => model.LastUpdatedBy)
                        @Html.HiddenFor(model => model.CompanyID)
                        @Html.HiddenFor(model => model.Room)
                        @Html.HiddenFor(model => model.RoomName)
                        @Html.HiddenFor(model => model.CreatedByName)
                        @Html.HiddenFor(model => model.UpdatedByName)
                        @Html.HiddenFor(model => model.IsDeleted)
                        @Html.HiddenFor(model => model.IsArchived)
                        @Html.HiddenFor(model => model.ReceivedOn)
                            @Html.HiddenFor(model => model.ReceivedOnWeb)
                            @Html.HiddenFor(model => model.AddedFrom)
                            @Html.HiddenFor(model => model.EditedFrom)
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Comment)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Comment, new { id = "Comment", @class = "text-box", maxlength = 1024 })
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Comment)</span>
                    </div>
                </li>
                <li>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Type)
                    </div>
                    <div class="editor-field">
                        @* @Html.TextBoxFor(model => model.Type, new { id = "Type", @class = "text-box", maxlength = 128 })*@
                        @Html.DropDownListFor(model => model.Type, (List<SelectListItem>)ViewBag.QuickListType, new { id = "ddlType", @class = "selectBox" })
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Type)</span>
                    </div>
                </li>
            </ul>
        </div>  
        <div class="editorForm padRightNone">
            <ul>
                @Html.Partial("UDFLayout", new eTurns.DTO.ResQuickList())
            </ul>
        </div> 
        <div class="editorForm">
            <ul>
                <li>
                    <div class="editor-label">
                        &nbsp;
                    </div>
                    <div class="BtnBlockform">
                        <input type="button" value="@ResCommon.Close" id="btnClose" class="CreateBtn" />
                    </div>
                </li>
            </ul>
        </div> 

    }
    <div id="divQuickListItemsHistory">
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {

        $('#btnClose').click(function () {
            //$(".ui-dialog-titlebar-close").click();
            $('#divQuickListLineItemHistory').dialog('close');
        });

        if ('@Model.ID' > 0) {
            var url = '@Url.Action("LoadQLLineItemsHistory")' + '?historyID=' + '@Model.HistoryID ';
            $.get(url, function (data) { $('#divQuickListItemsHistory').html(data); });
        }

        $(':input', '#frmQuickListHistory')
        .not('#btnClose')
        .attr('disabled', 'disabled');
    });
     
 
</script>
