@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("name"))
    {
        <th>
            <em>* </em>
            @ResCommon.Name
        </th>
    }
    @if (arrcolumns.Contains("qldetailnumber"))
    {
        <th>
            <em>* </em>
            @ResEnterpriseResources.QLDetailNumber
        </th>
    }
    @if (arrcolumns.Contains("quantity"))
    {
        <th>
            @ResCommon.Quantity
        </th>
    }    
</tr>
<script type="text/javascript">
    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.EnterpriseQuickList)') {
        $(function (event) {
            if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";

                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }
                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason.substring(0, 255);
                        return "<span id='Reason'  style='width:100px;'>" + tempUDF5 + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("name")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataToolName = obj.aData.Name == null ? "" : obj.aData.Name.substring(0, 100);
                        if (tempDataToolName != '') {
                            tempDataToolName = $.trim(tempDataToolName);
                        }
                        return "<input type='text' maxLength='100'  value='" + tempDataToolName + "'  class='importtext-box' id='aName_" + obj.aData.Id + "' style='width:200px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("qldetailnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.QLDetailNumber == null ? "" : obj.aData.QLDetailNumber.substring(0, 128);
                        if (tempDataPullQnt != '') {
                            tempDataPullQnt = $.trim(tempDataPullQnt);
                        }
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "'  class='importtext-box' id='aQLDetailNumber_" + obj.aData.Id + "' style='width:200px;' />" +
                            "<span id='Id' style='display:none'>" + obj.aData.Id + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("quantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.Quantity == null ? "" : obj.aData.Quantity;
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "' onblur='return ValidateValueWithDataType();'  onkeypress='return isNumberKey(event);' class='numericDecimalinput importtext-box' id='aQuantity_" + obj.aData.Id + "' style='width:100px;' />"
                    }
                });
            }            
        });
    }
</script>