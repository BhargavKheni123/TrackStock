@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("inventoryclassification"))
    {
        <th>
            <em>* </em>
            @ResInventoryClassificationMaster.InventoryClassification
        </th>
    }
    @if (arrcolumns.Contains("baseofinventory"))
    {
        <th>
            <em>* </em>
            @ResInventoryClassificationMaster.BaseOfInventory
        </th>
    }
    @if (arrcolumns.Contains("rangestart"))
    {
        <th>
            <em>* </em>
            @ResInventoryClassificationMaster.RangeStart
        </th>
    }
    @if (arrcolumns.Contains("rangeend"))
    {
        <th>
            <em>* </em>
            @ResInventoryClassificationMaster.RangeEnd
        </th>
    }
    @if (arrcolumns.Contains("udf1"))
    {
        <th>
            @ResInventoryClassificationMaster.UDF1
        </th>
    }
    @if (arrcolumns.Contains("udf2"))
    {
        <th>
            @ResInventoryClassificationMaster.UDF2
        </th>
    }
    @if (arrcolumns.Contains("udf3"))
    {
        <th>
            @ResInventoryClassificationMaster.UDF3
        </th>
    }
    @if (arrcolumns.Contains("udf4"))
    {
        <th>
            @ResInventoryClassificationMaster.UDF4
        </th>
    }
    @if (arrcolumns.Contains("udf5"))
    {
        <th>
            @ResInventoryClassificationMaster.UDF5
        </th>
    }
</tr>

<script type="text/javascript">
    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.InventoryClassificationMaster)') {
        $(function (event) {
            // ColumnObject.push({ mDataProp: "ID", sClass: "read_only" });
            if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";
                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }

                        // return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='Status' style='width:100px;color:" + forcol + ";border:1px solid " + bodcol + "' />"
                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason.substring(0, 255);
                        return "<span id='Reason'  style='width:100px;'>" + tempUDF5 + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("inventoryclassification")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.InventoryClassification == null ? "" : obj.aData.InventoryClassification.substring(0, 50);
                        return "<input type='text' value='" + tempDataPullQnt + "'  maxLength='50'  onblur='return ValidateValueWithDataType();' class='importtext-box' id='aInv_" + obj.aData.ID + "' style='width:300px;' />" +
                                                "<span id='InvID' style='display:none'>" + obj.aData.ID + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("baseofinventory")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt1 = obj.aData.BaseOfInventory == null ? "" : obj.aData.BaseOfInventory;
                        return "<input type='text' value='" + tempDataPullQnt1 + "'  maxLength='50'  onblur='return ValidateValueWithDataType();' class='importtext-box' id='aBase_" + obj.aData.ID + "' style='width:300px;' />" +
                                                "<span id='Base' style='display:none'>" + obj.aData.ID + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("rangestart")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt2 = obj.aData.RangeStart == null ? "" : obj.aData.RangeStart;
                        return "<input type='text' value='" + tempDataPullQnt2 + "'  maxLength='10'  class='numericDecimalinput importtext-box' id='aStart_" + obj.aData.ID + "' style='width:300px;' />" +
                                                "<span id='Start' style='display:none'>" + obj.aData.ID + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("rangeend")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt3 = obj.aData.RangeEnd == null ? "" : obj.aData.RangeEnd;
                        return "<input type='text' value='" + tempDataPullQnt3 + "'  maxLength='10'  class='numericDecimalinput importtext-box' id='aEnd_" + obj.aData.ID + "' style='width:300px;' />" +
                                                "<span id='End' style='display:none'>" + obj.aData.ID + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf1")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF1 = obj.aData.UDF1 == null ? "" : obj.aData.UDF1.substring(0, 255);
                        return "<input type='text' value='" + tempUDF1 + "'  maxLength='255'  class='importtext-box' id='aUDF1' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf2")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF2 = obj.aData.UDF2 == null ? "" : obj.aData.UDF2.substring(0, 255);
                        return "<input type='text' value='" + tempUDF2 + "'  maxLength='255'  class='importtext-box'  id='aUDF2' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf3")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF3 = obj.aData.UDF3 == null ? "" : obj.aData.UDF3.substring(0, 255);
                        return "<input type='text' value='" + tempUDF3 + "'  maxLength='255'  class='importtext-box'  id='aUDF3' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf4")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF4 = obj.aData.UDF4 == null ? "" : obj.aData.UDF4.substring(0, 255);
                        return "<input type='text' value='" + tempUDF4 + "'  maxLength='255'  class='importtext-box'  id='aUDF4' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf5")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.UDF5 == null ? "" : obj.aData.UDF5.substring(0, 255);
                        return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='aUDF5' style='width:100px;' />"
                    }
                });
            }

            UpdateURL = '@Url.Content("~/Import/UpdateDataInventoryClassificationSession")';
        });

    }

</script>