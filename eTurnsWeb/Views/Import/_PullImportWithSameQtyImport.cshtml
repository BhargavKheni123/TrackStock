@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("itemnumber"))
    {
        <th>
            <em>* </em>
            @eTurns.DTO.ResPullImport.ItemNumber
        </th>
    }
    @if (arrcolumns.Contains("pullquantity"))
    {
        <th>
            <em>* </em>
            @eTurns.DTO.ResPullImport.PullQuantity
        </th>
    }
    @if (arrcolumns.Contains("binnumber"))
    {
        <th>
          
            @eTurns.DTO.ResPullImport.BinNumber
        </th>
    }
    @if (arrcolumns.Contains("udf1"))
    {
        <th>
            @eTurns.DTO.ResPullImport.UDF1
        </th>
    }
    @if (arrcolumns.Contains("udf2"))
    {
        <th>
            @eTurns.DTO.ResPullImport.UDF2
        </th>
    }
    @if (arrcolumns.Contains("udf3"))
    {
        <th>
            @eTurns.DTO.ResPullImport.UDF3
        </th>
    }
    @if (arrcolumns.Contains("udf4"))
    {
        <th>
            @eTurns.DTO.ResPullImport.UDF4
        </th>
    }
    @if (arrcolumns.Contains("udf5"))
    {
        <th>
            @eTurns.DTO.ResPullImport.UDF5
        </th>
    }
    @if (arrcolumns.Contains("projectspendname"))
    {
        <th>
            @eTurns.DTO.ResPullImport.ProjectSpendName
        </th>
    }
    @if (arrcolumns.Contains("pullordernumber"))
    {
        <th>
            @eTurns.DTO.ResPullImport.PullOrderNumber
        </th>
    } 
    @if (arrcolumns.Contains("workorder"))
    {
        <th>
            @eTurns.DTO.ResPullImport.WorkOrder
        </th>
    }
    @if (arrcolumns.Contains("asset"))
    {
        <th>
            @eTurns.DTO.ResPullImport.Asset
        </th>
    }
    @if (arrcolumns.Contains("actiontype"))
    {
        <th>
            <em>* </em>
            @eTurns.DTO.ResPullImport.ActionType
        </th>
    }
    @if (arrcolumns.Contains("created"))
    {
        <th>            
            @eTurns.DTO.ResPullImport.Created
        </th>
    }
    @if (arrcolumns.Contains("itemcost"))
    {
        <th>
            @eTurns.DTO.ResPullImport.ItemCost
        </th>
    }
    @if (arrcolumns.Contains("costuomvalue"))
    {
        <th>
            @eTurns.DTO.ResPullImport.CostUOMValue
        </th>
    }
</tr>
<script type="text/javascript">
    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.PullImportWithSameQty)') {
        $(function (event) {
            if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";
                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }

                        // return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='Status' style='width:100px;color:" + forcol + ";border:1px solid " + bodcol + "' />"
                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason.substring(0, 255);
                        return "<span id='Reason'  style='width:100px;'>" + tempUDF5 + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("itemnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempItemNumber = obj.aData.ItemNumber == null ? "" : obj.aData.ItemNumber.substring(0, 128);
                        return "<input type='text' maxlength='128' value='" + tempItemNumber + "' onblur='return ValidateValueWithDataType();' class='importtext-box valid' id='aItemNumber_" + obj.aData.ID + "' style='width: 300px; border-color: rgb(221, 221, 221);'>" +
                               "<span id='InvLocId' style='display:none'>" + obj.aData.ID + "</span>";
                    }
                });
            }
            if ('@arrcolumns.Contains("pullquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempPullQuantity = obj.aData.PullQuantity == null ? "0" : obj.aData.PullQuantity;
                        return "<input maxlength='128' onkeypress='return isNumberKey(event);' onblur='return ValidateValueWithDataType();' value='" + tempPullQuantity + "' class='importtext-box valid' id='PullQuantity_" + obj.aData.ID + "' style='width:300px;' type='text'>"
                    }
                });
            }
            if ('@arrcolumns.Contains("binnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempLocation = obj.aData.BinNumber == null ? "" : obj.aData.BinNumber.substring(0, 128);
                        return "<input maxlength='128' value='" + tempLocation + "' onblur='return ValidateValueWithDataType();' class='importtext-box valid' id='aLocationName_" + obj.aData.ID + "' style='width: 300px; border-color: rgb(221, 221, 221);' type='text'>"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf1")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF1 = obj.aData.UDF1 == null ? "" : obj.aData.UDF1;
                        return "<input type='text' maxLength='128'   value='" + tempUDF1 + "'  class='importtext-box' id='aUDF1_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }
            if ('@arrcolumns.Contains("udf2")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF2 = obj.aData.UDF2 == null ? "" : obj.aData.UDF2;
                        return "<input type='text' maxLength='128'   value='" + tempUDF2 + "'  class='importtext-box' id='aUDF2_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }
            if ('@arrcolumns.Contains("udf3")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF3 = obj.aData.UDF3 == null ? "" : obj.aData.UDF3;
                        return "<input type='text' maxLength='128'   value='" + tempUDF3 + "'  class='importtext-box' id='aUDF3_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }
            if ('@arrcolumns.Contains("udf4")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF4 = obj.aData.UDF4 == null ? "" : obj.aData.UDF4;
                        return "<input type='text' maxLength='128'   value='" + tempUDF4 + "'  class='importtext-box' id='aUDF4_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }
            if ('@arrcolumns.Contains("udf5")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.UDF5 == null ? "" : obj.aData.UDF5;
                        return "<input type='text' maxLength='128'   value='" + tempUDF5 + "'  class='importtext-box' id='aUDF5_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }
            if ('@arrcolumns.Contains("projectspendname")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempProjectSpendName = obj.aData.ProjectSpendName == null ? "" : obj.aData.ProjectSpendName;
                        return "<input type='text' maxLength='128'   value='" + tempProjectSpendName + "'  class='importtext-box' id='aProjectSpendName_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }
            if ('@arrcolumns.Contains("pullordernumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempPullOrderNumber = obj.aData.PullOrderNumber == null ? "" : obj.aData.PullOrderNumber;
                        return "<input type='text' maxLength='128'   value='" + tempPullOrderNumber + "'  class='importtext-box' id='aPullOrderNumber_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }
            if ('@arrcolumns.Contains("workorder")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempWorkOrder = obj.aData.WorkOrder == null ? "" : obj.aData.WorkOrder;
                        return "<input type='text' maxLength='128'   value='" + tempWorkOrder + "'  class='importtext-box' id='aWorkOrder_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("asset")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAsset = obj.aData.Asset == null ? "" : obj.aData.Asset;
                        return "<input type='text' maxLength='128'   value='" + tempAsset + "'  class='importtext-box' id='aAsset_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("actiontype")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempActionType = obj.aData.ActionType == null ? "" : obj.aData.ActionType;
                        return "<input type='text' maxLength='128' onblur='return ValidateValueWithDataType();'  value='" + tempActionType + "'  class='importtext-box' id='aActionType_" + obj.aData.ID + "' style='width:300px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("created")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCreated = obj.aData.Created == null ? "" : obj.aData.Created;
                        return "<input type='text' maxLength='128' onblur='return ValidateValueWithDataType();'  value='" + tempCreated + "'  class='importtext-box' id='atempCreated_" + obj.aData.ID + "' style='width:300px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("itemcost")' ==  'True')
            {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function(obj, val) {
                        var tempItemCost = obj.aData.ItemCost == null ? "" : obj.aData.ItemCost;
                        return "<input type='text' maxLength='128' onblur='return ValidateValueWithDataType();'  value='" + tempItemCost + "'  class='importtext-box' id='aItemCost_" + obj.aData.ID + "' style='width:300px;' />"
                    }
                });
            }
              if ('@arrcolumns.Contains("costuomvalue")' ==  'True')
              {
                  ColumnObject.push({
                      "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                      "fnRender": function(obj, val) {
                          var tempCostUOMValue = obj.aData.CostUOMValue == null ? "" : obj.aData.CostUOMValue;
                          return "<input type='text' maxLength='128' onblur='return ValidateValueWithDataType();'  value='" + tempCostUOMValue + "'  class='importtext-box' id='aCostUOMValue_" + obj.aData.ID + "' style='width:300px;' />"
                      }
                  });
              }
            });

    }
</script>