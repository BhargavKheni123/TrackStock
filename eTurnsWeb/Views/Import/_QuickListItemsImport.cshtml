@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("name"))
    {
        <th>
            <em>* </em>
            @ResQuickList.Name
        </th>
    }
    @if (arrcolumns.Contains("type"))
    {
        <th>        
            <em>* </em>    
            @ResQuickList.ListType
        </th>
    }
    @if (arrcolumns.Contains("comment"))
    {
        <th>
            @ResQuickList.Comment
        </th>
    }
    @if (arrcolumns.Contains("itemnumber"))
    {
        <th>
            <em>* </em>
            @ResQuickList.ItemNumber
        </th>
    }
    @if (arrcolumns.Contains("binnumber"))
    {
        <th>
            @ResQuickList.BinNumber
        </th>
    }
    @if (arrcolumns.Contains("quantity"))
    {
        <th>
            <em>* </em>
            @ResQuickList.Quantity
        </th>
    }
    @if (arrcolumns.Contains("consignedquantity"))
    {
        <th>
            <em>* </em>
            @ResQuickList.ConsignedQuantity
        </th>
    }
    @if (arrcolumns.Contains("udf1"))
    {
        <th>
            @ResQuickList.UDF1
        </th>}
    @if (arrcolumns.Contains("udf2"))
    {
        <th>
            @ResQuickList.UDF2
        </th>
    }
    @if (arrcolumns.Contains("udf3"))
    {
        <th>
            @ResQuickList.UDF3
        </th>
    }
    @if (arrcolumns.Contains("udf4"))
    {
        <th>
            @ResQuickList.UDF4
        </th>
    }
    @if (arrcolumns.Contains("udf5"))
    {
        <th>
            @ResQuickList.UDF5
        </th>
    }
</tr>
<script type="text/javascript">
    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.QuickListPermission)') {
        $(function (event) {
            if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";
                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }

                        // return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='Status' style='width:100px;color:" + forcol + ";border:1px solid " + bodcol + "' />"
                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason.substring(0, 255);
                        return "<span id='Reason'  style='width:100px;'>" + tempUDF5 + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("name")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.QuickListname == null ? "" : obj.aData.QuickListname;
                        return "<input type='text' value='" + tempDataPullQnt + "'  maxLength='128'  onblur='return ValidateValueWithDataType();' class='importtext-box' id='aQuickListname_" + obj.aData.ID + "' style='width:300px;' />" +
                                            "<span id='QuickListID' style='display:none'>" + obj.aData.ID + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("type")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.Type == null ? "" : obj.aData.Type;
                        return "<input type='text' value='" + tempDataPullQnt + "'  maxLength='128'  onblur='return ValidateValueWithDataType();' class='importtext-box' id='aType_" + obj.aData.ID + "' style='width:300px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("comment")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.Comments == null ? "" : obj.aData.Comments;
                        return "<input type='text' value='" + tempDataPullQnt + "'  maxLength='128'  onblur='return ValidateValueWithDataType();' class='importtext-box' id='aComments_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("itemnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.ItemNumber == null ? "" : obj.aData.ItemNumber;
                        return "<input type='text' value='" + tempDataPullQnt + "'  maxLength='128'  onblur='return ValidateValueWithDataType();' class='importtext-box' id='aItemNumber_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("binnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataBinNumber = obj.aData.BinNumber == null ? "" : obj.aData.BinNumber;
                        return "<input type='text' value='" + tempDataBinNumber + "'  maxLength='128'  class='importtext-box' id='aBinNumber_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("quantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.Quantity == null ? "" : obj.aData.Quantity;
                        return "<input type='text' value='" + tempDataPullQnt + "'  maxLength='128' onkeypress='return isNumberKey(event);'  onblur='return ValidateValueWithDataType();' class='numericDecimalinput importtext-box' id='aQuantity_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("consignedquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.ConsignedQuantity == null ? "" : obj.aData.ConsignedQuantity;
                        return "<input type='text' value='" + tempDataPullQnt + "'  maxLength='128' onkeypress='return isNumberKey(event);'  onblur='return ValidateValueWithDataType();' class='numericDecimalinput importtext-box' id='aConsignedQuantity_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("udf1")' == 'True') {
                ColumnObject.push({

                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF1 = obj.aData.UDF1 == null ? "" : obj.aData.UDF1.substring(0, 255);
                        return "<input type='text' value='" + tempUDF1 + "'  maxLength='255'  class='importtext-box' id='aUDF1' style='width:100px;'  />"
                    }

                });

            }
            if ('@arrcolumns.Contains("udf2")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF2 = obj.aData.UDF2 == null ? "" : obj.aData.UDF2.substring(0, 255);
                        return "<input type='text' value='" + tempUDF2 + "'  maxLength='255'  class='importtext-box'  id='aUDF2' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf3")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF3 = obj.aData.UDF3 == null ? "" : obj.aData.UDF3.substring(0, 255);
                        return "<input type='text' value='" + tempUDF3 + "'  maxLength='255'  class='importtext-box'  id='aUDF3' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf4")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF4 = obj.aData.UDF4 == null ? "" : obj.aData.UDF4.substring(0, 255);
                        return "<input type='text' value='" + tempUDF4 + "'  maxLength='255'  class='importtext-box'  id='aUDF4' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf5")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.UDF5 == null ? "" : obj.aData.UDF5.substring(0, 255);
                        return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='aUDF5' style='width:100px;' />"
                    }
                });
            }

        });

    }

</script>