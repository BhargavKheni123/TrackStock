@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("itemnumber"))
    {
        <th>
            <em>* </em>
            @eTurns.DTO.ResItemMaster.ItemNumber
        </th>
    }
    @if (arrcolumns.Contains("locationname"))
    {
        <th>
            <em>* </em>
            @eTurns.DTO.ResBin.BinNumber
        </th>
    }
    @if (arrcolumns.Contains("customerownedquantity"))
    {
        <th>
            @eTurns.DTO.ResBin.CustomerOwnedQuantity
        </th>
    }
    @if (arrcolumns.Contains("consignedquantity"))
    {
        <th>
            @eTurns.DTO.ResBin.ConsignedQuantity
        </th>
    }
    @if (arrcolumns.Contains("cost"))
    {
        <th>
            @eTurns.DTO.ResItemLocationDetails.Cost
        </th>
    }
    @if (arrcolumns.Contains("serialnumber"))
    {
        <th>
            @eTurns.DTO.ResItemLocationDetails.SerialNumber
        </th>
    }
    @if (arrcolumns.Contains("lotnumber"))
    {
        <th>
            @eTurns.DTO.ResItemLocationDetails.LotNumber
        </th>
    }
    @if (arrcolumns.Contains("expirationdate"))
    {
        <th>
            @eTurns.DTO.ResItemLocationDetails.ExpirationDate
        </th>
    }
    @if (arrcolumns.Contains("receiveddate"))
    {
        <th>
            @eTurns.DTO.ResItemLocationDetails.ReceivedDate
        </th>
    }
    @if (arrcolumns.Contains("projectspend"))
    {
        <th>
            @eTurns.DTO.ResItemLocationDetails.ProjectSpend
        </th>
    }
    @if (arrcolumns.Contains("itemdescription"))
    {
        <th>
            @eTurns.DTO.ResInventoryCountDetail.CountLineItemDescription
        </th>
    }
    @if (arrcolumns.Contains("udf1"))
    {
        <th>
            @ResInventoryCount.UDF1
        </th>
}
    @if (arrcolumns.Contains("udf2"))
    {
        <th>
            @ResInventoryCount.UDF2
        </th>
    }
    @if (arrcolumns.Contains("udf3"))
    {
        <th>
            @ResInventoryCount.UDF3
        </th>
    }
    @if (arrcolumns.Contains("udf4"))
    {
        <th>
            @ResInventoryCount.UDF4
        </th>
    }
    @if (arrcolumns.Contains("udf5"))
    {
        <th>
            @ResInventoryCount.UDF5
        </th>
    }
</tr>
<script type="text/javascript">
    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.ManualCount)') {
        $(function (event) {
            if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";
                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }

                        // return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='Status' style='width:100px;color:" + forcol + ";border:1px solid " + bodcol + "' />"
                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason.substring(0, 255);
                        return "<span id='Reason'  style='width:100px;'>" + tempUDF5 + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("itemnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDataPullQnt = obj.aData.ItemNumber == null ? "" : obj.aData.ItemNumber.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aItemNumber_" + obj.aData.ID + "' style='width:200px;' />" +
                                                "<span id='InvLocId' style='display:none'>" + obj.aData.ID + "</span>"
                    }
                });
            }

            if ('@arrcolumns.Contains("locationname")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDataPullQnt = obj.aData.BinNumber == null ? "" : obj.aData.BinNumber.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aLocationName_" + obj.aData.ID + "' style='width:200px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("customerownedquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDatacustomerownedQnt = obj.aData.customerownedquantity == null ? "" : obj.aData.customerownedquantity;
                        return "<input type='text' maxLength='128'  onkeypress='return isNumberKey(event);' onblur='return ValidateValueWithDataType();' value='" + tempDatacustomerownedQnt + "'  class='importtext-box' id='acustomerownedquantity_" + obj.aData.ID + "' style='width:80px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("consignedquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDataconsignedQnt = obj.aData.consignedquantity == null ? "" : obj.aData.consignedquantity;
                        return "<input type='text' maxLength='128'  onkeypress='return isNumberKey(event);' onblur='return ValidateValueWithDataType();' value='" + tempDataconsignedQnt + "'  class='importtext-box' id='aconsignedquantity_" + obj.aData.ID + "' style='width:80px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("cost")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDatacost = obj.aData.Cost == null ? "" : obj.aData.Cost;
                        return "<input type='text' maxLength='128'  onkeypress='return isNumberKey(event);' onblur='return ValidateValueWithDataType();' value='" + tempDatacost + "'  class='importtext-box' id='acost_" + obj.aData.ID + "' style='width:100px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("serialnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDataserialnumber = obj.aData.SerialNumber == null ? "" : obj.aData.SerialNumber;
                        if (tempDataserialnumber != '')
                        {
                            tempDataserialnumber = $.trim(tempDataserialnumber);
                        }
                        return "<input type='text' maxLength='128'   value='" + tempDataserialnumber + "'  class='importtext-box' id='aSerialNumber_" + obj.aData.ID + "' style='width:250px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("lotnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDatalotnumber = obj.aData.LotNumber == null ? "" : obj.aData.LotNumber;
                        if (tempDatalotnumber != '') {
                            tempDatalotnumber = $.trim(tempDatalotnumber);
                        }
                        return "<input type='text' maxLength='128'   value='" + tempDatalotnumber + "'  class='importtext-box' id='aLotNumber_" + obj.aData.ID + "' style='width:250px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("expirationdate")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value

                        var tempDataexpirydate = obj.aData.Expiration == null ? "" : obj.aData.Expiration;
                        var Date = tempDataexpirydate.split(' ');
                        return "<input type='text' maxLength='128'   value='" + Date[0] + "'  class='importtext-box' id='aExpiration_" + obj.aData.ID + "' style='width:100px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("receiveddate")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDatareceivedate = obj.aData.Received == null ? "" : obj.aData.Received;
                        return "<input type='text' maxLength='128'   onblur='return ValidateValueWithDataType();' value='" + tempDatareceivedate + "'  class='importtext-box' id='aReceived_" + obj.aData.ID + "' style='width:100px;' />"

                    }
                });
            }

            if ('@arrcolumns.Contains("projectspend")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDataProjectSpend = obj.aData.ProjectSpend == null ? "" : obj.aData.ProjectSpend.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempDataProjectSpend + "' class='importtext-box' id='aProjectSpend_" + obj.aData.ID + "' style='width:250px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("itemdescription")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var itemDescription = obj.aData.ItemDescription == null ? "" : obj.aData.ItemDescription.substring(0, 1024);
                        return "<input type='text' maxLength='1024'  value='" + itemDescription + "' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aItemDescription_" + obj.aData.ID + "' style='width:400px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("udf1")' == 'True') {
                ColumnObject.push({

                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF1 = obj.aData.UDF1 == null ? "" : obj.aData.UDF1.substring(0, 255);
                        return "<input type='text' value='" + tempUDF1 + "'  maxLength='255'  class='importtext-box' id='aUDF1' style='width:100px;'  />"
                    }

                });

            }
            if ('@arrcolumns.Contains("udf2")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF2 = obj.aData.UDF2 == null ? "" : obj.aData.UDF2.substring(0, 255);
                        return "<input type='text' value='" + tempUDF2 + "'  maxLength='255'  class='importtext-box'  id='aUDF2' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf3")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF3 = obj.aData.UDF3 == null ? "" : obj.aData.UDF3.substring(0, 255);
                        return "<input type='text' value='" + tempUDF3 + "'  maxLength='255'  class='importtext-box'  id='aUDF3' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf4")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF4 = obj.aData.UDF4 == null ? "" : obj.aData.UDF4.substring(0, 255);
                        return "<input type='text' value='" + tempUDF4 + "'  maxLength='255'  class='importtext-box'  id='aUDF4' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf5")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.UDF5 == null ? "" : obj.aData.UDF5.substring(0, 255);
                        return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='aUDF5' style='width:100px;' />"
                    }
                });
            }

        });

    }
</script>