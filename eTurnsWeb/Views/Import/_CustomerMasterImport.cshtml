@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("customer"))
    {
        <th>
            <em>* </em>
            @ResCustomer.Customer
        </th>
    }
    @if (arrcolumns.Contains("account"))
    {
        <th>
            <em>* </em>
            @ResCustomer.Account
        </th>
    }
    @if (arrcolumns.Contains("contact"))
    {
        <th>
            @ResCustomer.Contact
        </th>
    }
    @if (arrcolumns.Contains("address"))
    {
        <th>
            @ResCommon.Address
        </th>
    }
    @if (arrcolumns.Contains("city"))
    {
        <th>
            @ResCommon.City
        </th>
    }
    @if (arrcolumns.Contains("state"))
    {
        <th>
            @ResCommon.State
        </th>
    }
    @if (arrcolumns.Contains("zipcode"))
    {
        <th>
            @ResCommon.ZipCode
        </th>
    }
    @if (arrcolumns.Contains("country"))
    {
        <th>
            @ResCommon.Country
        </th>
    }
    @if (arrcolumns.Contains("phone"))
    {
        <th>
            @ResCommon.Phone
        </th>
    }
    @if (arrcolumns.Contains("email"))
    {
        <th>
            <em>* </em>
            @ResCommon.Email
        </th>
    }
    @if (arrcolumns.Contains("udf1"))
    {
        <th>
            @ResCustomer.UDF1
        </th>
    }
    @if (arrcolumns.Contains("udf2"))
    {
        <th>
            @ResCustomer.UDF2
        </th>
    }
    @if (arrcolumns.Contains("udf3"))
    {
        <th>
            @ResCustomer.UDF3
        </th>
    }
    @if (arrcolumns.Contains("udf4"))
    {
        <th>
            @ResCustomer.UDF4
        </th>
    }
    @if (arrcolumns.Contains("udf5"))
    {
        <th>
            @ResCustomer.UDF5
        </th>
    }
    @if (arrcolumns.Contains("remarks"))
    {
        <th>
            @ResCustomer.Remarks
        </th>
    }
</tr>
<script type="text/javascript">
    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.CustomerMaster)') {
        $(function (event) {
            //ColumnObject.push({ mDataProp: "ID", sClass: "read_only" });
            if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";
                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }

                        // return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='Status' style='width:100px;color:" + forcol + ";border:1px solid " + bodcol + "' />"
                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason;//.substring(0, 255);
                        return "<span id='Reason'  style='width:100px;'>" + tempUDF5 + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("customer")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.Customer == null ? "" : obj.aData.Customer.substring(0, 255);
                        return "<input type='text' value='" + tempDataPullQnt + "'  maxLength='255' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aCustomer_" + obj.aData.ID + "' style='width:300px;' />" +
                                                "<span id='CustID' style='display:none'>" + obj.aData.ID + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("account")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAccount = obj.aData.Account == null ? "" : obj.aData.Account.substring(0, 255);
                        return "<input type='text' value='" + tempAccount + "'   maxLength='255'  onblur='return ValidateValueWithDataType();'  class='importtext-box' id='aAccount_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("contact")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempContact = obj.aData.Contact == null ? "" : obj.aData.Contact.substring(0, 512);
                        return "<input type='text' value='" + tempContact + "'  maxLength='512'  class='importtext-box' id='aContact_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("address")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAddress = obj.aData.Address == null ? "" : obj.aData.Address.substring(0, 1024);
                        return "<input type='text' value='" + tempAddress + "'   maxLength='1024' class='importtext-box' id='aAddress_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("city")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCity = obj.aData.City == null ? "" : obj.aData.City.substring(0, 255);
                        return "<input type='text' value='" + tempCity + "'   maxLength='255' class='importtext-box' id='aCity_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("state")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempState = obj.aData.State == null ? "" : obj.aData.State.substring(0, 255);
                        return "<input type='text' value='" + tempState + "'   maxLength='255' class='importtext-box' id='aState_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("zipcode")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempZipCode = obj.aData.ZipCode == null ? "" : obj.aData.ZipCode.substring(0, 24);
                        return "<input type='text' value='" + tempZipCode + "'   maxLength='24' class='importtext-box' id='aZipCode_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("country")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCountry = obj.aData.Country == null ? "" : obj.aData.Country.substring(0, 64);
                        return "<input type='text' value='" + tempCountry + "'  maxLength='64'  class='importtext-box' id='aCountry_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("phone")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempPhone = obj.aData.Phone == null ? "" : obj.aData.Phone.substring(0, 20);
                        return "<input type='text' value='" + tempPhone + "'  maxLength='20'  class='importtext-box' id='aPhone_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("email")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempEmail = obj.aData.Email == null ? "" : obj.aData.Email.substring(0, 255);
                        return "<input type='text' value='" + tempEmail + "'  maxLength='255'  onblur='return CheckEmailValidataion(this);' class='importtext-box' id='aEmail_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf1")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF1 = obj.aData.UDF1 == null ? "" : obj.aData.UDF1.substring(0, 255);
                        return "<input type='text' value='" + tempUDF1 + "'  maxLength='255'  class='importtext-box' id='aUDF1' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf2")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF2 = obj.aData.UDF2 == null ? "" : obj.aData.UDF2.substring(0, 255);
                        return "<input type='text' value='" + tempUDF2 + "'  maxLength='255'  class='importtext-box'  id='aUDF2' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf3")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF3 = obj.aData.UDF3 == null ? "" : obj.aData.UDF3.substring(0, 255);
                        return "<input type='text' value='" + tempUDF3 + "'  maxLength='255'  class='importtext-box'  id='aUDF3' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf4")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF4 = obj.aData.UDF4 == null ? "" : obj.aData.UDF4.substring(0, 255);
                        return "<input type='text' value='" + tempUDF4 + "'  maxLength='255'  class='importtext-box'  id='aUDF4' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf5")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.UDF5 == null ? "" : obj.aData.UDF5.substring(0, 255);
                        return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='aUDF5' style='width:100px;' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("remarks")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {


                        var remarks = obj.aData.Remarks == null ? "" : obj.aData.Remarks.substring(0, 255);
                        return "<input type='text' value='" + remarks + "'  maxLength='255'  class='importtext-box'  id='aRemarks_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }


            UpdateURL = '@Url.Content("~/Import/UpdateDataCustomerSession")';
        });

    }

</script>