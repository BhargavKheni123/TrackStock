@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("kitpartnumber"))
    {
        <th>
            <em>* </em>
            @ResKitMaster.KitPartNumber
        </th>
    }
    @if (arrcolumns.Contains("itemnumber"))
    {
        <th>
            <em>* </em>
            @ResItemMaster.ItemNumber
        </th>
    }
    @if (arrcolumns.Contains("quantityperkit"))
    {
        <th>
            <em>* </em>
            @ResKitMaster.QuantityPerKit
        </th>
    }
    @*@if (arrcolumns.Contains("onhandquantity"))
    {
        <th>
            @ResItemMaster.OnHandQuantity
        </th>
    }*@
    @if (arrcolumns.Contains("isbuildbreak"))
    {
        <th>
            @ResKitMaster.IsBuildBreak
        </th>
    }
    @if (arrcolumns.Contains("isdeleted"))
    {
        <th>
            @ResKitMaster.IsDeleted
        </th>
    }
    @*@if (arrcolumns.Contains("availableitemsinwip"))
    {
        <th>
            @ResKitMaster.AvailableItemsInWIP
        </th>
    }*@
    @*@if (arrcolumns.Contains("kitdemand"))
    {
        <th>
            @ResKitMaster.KitDemand
        </th>
    }*@
    @if (arrcolumns.Contains("availablekitquantity"))
    {
        <th>
            @ResKitMaster.AvailableKitQuantity
        </th>
    }
    @if (arrcolumns.Contains("description"))
    {
        <th>
            @ResKitMaster.Description
        </th>
    }
    @if (arrcolumns.Contains("criticalquantity"))
    {
        <th>
            @ResKitMaster.CriticalQuantity
        </th>
    }
    @if (arrcolumns.Contains("minimumquantity"))
    {
        <th>
            @ResKitMaster.MinimumKitQuantity
        </th>
    }
    @if (arrcolumns.Contains("maximumquantity"))
    {
        <th>
            @ResKitMaster.MaximumKitQuantity
        </th>
    }
    @if (arrcolumns.Contains("reordertype"))
    {
        <th>
            @ResKitMaster.ReOrderType
        </th>
    }
    @*@if (arrcolumns.Contains("kitcategory"))
    {
        <th>
            @ResKitMaster.KitCategory
        </th>
    }*@
    

    @if (arrcolumns.Contains("suppliername"))
    {
        <th>
            <em>* </em>
            @ResItemMaster.Supplier
        </th>
    }
    @if (arrcolumns.Contains("supplierpartno"))
    {
        <th>
            <em>* </em>
            @ResItemMaster.SupplierPartNo
        </th>
    }
    @if (arrcolumns.Contains("defaultlocation"))
    {
        <th>
            <em>* </em>
            @ResItemMaster.DefaultLocation
        </th>
    }
    @if (arrcolumns.Contains("costuomname"))
    {
        <th>
            <em>* </em>
            @ResItemMaster.CostUOMName
        </th>
    }
    @if (arrcolumns.Contains("uom"))
    {
        <th>
            <em>* </em>
            @ResItemMaster.UOMID
        </th>
    }
    @if (arrcolumns.Contains("defaultreorderquantity"))
    {
        <th>
            <em>* </em>
            @ResItemMaster.DefaultReorderQuantity
        </th>
    }
    @if (arrcolumns.Contains("defaultpullquantity"))
    {
        <th>
            <em>* </em>
            @ResItemMaster.DefaultPullQuantity
        </th>
    }
    @*@if (arrcolumns.Contains("itemtypename"))
    {
        <th>
            <em>* </em>
            @ResItemMaster.ItemType
        </th>
    }*@
    @if (arrcolumns.Contains("isitemlevelminmaxqtyrequired"))
    {
        <th>
            @ResItemMaster.IsItemLevelMinMaxQtyRequired
        </th>
    }
    @if (arrcolumns.Contains("serialnumbertracking"))
    {
        <th>
            @ResItemMaster.SerialNumberTracking
        </th>
    }
    @if (arrcolumns.Contains("lotnumbertracking"))
    {
        <th>
            @ResItemMaster.LotNumberTracking
        </th>
    }
    @if (arrcolumns.Contains("datecodetracking"))
    {
        <th>
            @ResItemMaster.DateCodeTracking
        </th>
    }
    @if (arrcolumns.Contains("isactive"))
    {
        <th>
            @ResItemMaster.IsActive
        </th>
    }
</tr>
<script type="text/javascript">
    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.Kits)') {
        $(function (event) {
            if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";
                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }

                        // return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='Status' style='width:100px;color:" + forcol + ";border:1px solid " + bodcol + "' />"
                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason.substring(0, 255);
                        return "<span id='Reason'  style='width:100px;'>" + tempUDF5 + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("kitpartnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempkitpartnumber = obj.aData.KitPartNumber == null ? "" : obj.aData.KitPartNumber;
                        return "<input type='text' value='" + tempkitpartnumber + "'  maxLength='128'  onblur='return ValidateValueWithDataType();' class='importtext-box' id='aKitPartNumber_" + obj.aData.ID + "' style='width:300px;' />" +
                                            "<span id='KitID' style='display:none'>" + obj.aData.ID + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("itemnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempKitItemNumber = obj.aData.ItemNumber == null ? "" : obj.aData.ItemNumber;
                        return "<input type='text' value='" + tempKitItemNumber + "'  maxLength='128'  onblur='return ValidateValueWithDataType();' class='importtext-box' id='aKitItemNumber_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("quantityperkit")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempquantityperkit = obj.aData.QuantityPerKit == null ? "" : obj.aData.QuantityPerKit;
                        return "<input type='text' value='" + tempquantityperkit + "'  maxLength='128' onblur='return ValidateValueWithDataType();'  class='numericDecimalinput importtext-box' id='aQuantityPerKit_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            @*if ('@arrcolumns.Contains("onhandquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var OnHandQuantity = obj.aData.OnHandQuantity == null ? "0" : obj.aData.OnHandQuantity;
                        return "<input type='text' value='" + OnHandQuantity + "'  maxLength='10' class='numericDecimalinput importtext-box' id='aOnHandQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });

            }*@

            if ('@arrcolumns.Contains("isbuildbreak")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var ItemIsBuildBreak = obj.aData.IsBuildBreak == null ? "" : obj.aData.IsBuildBreak;
                        if (ItemIsBuildBreak != "" || ItemIsBuildBreak == "true") {
                            ItemIsBuildBreak = "checked=\"checked\""
                        }
                        else { ItemIsDeleted = ""; }
                        return "<input type='checkbox'" + ItemIsBuildBreak + "id='aIsBuildBreak_" + obj.aData.ID + "'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("isdeleted")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var ItemIsDeleted = obj.aData.IsDeleted == null ? "" : obj.aData.IsDeleted;
                        if (ItemIsDeleted != "" || ItemIsDeleted == "true") {
                            ItemIsDeleted = "checked=\"checked\""
                        }
                        else { ItemIsDeleted = ""; }
                        return "<input type='checkbox'" + ItemIsDeleted + "id='aIsDeleted_" + obj.aData.ID + "'  />"
                    }
                });
            }
            @*if ('@arrcolumns.Contains("availablekitquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var AvailableItemsInWIP = obj.aData.AvailableItemsInWIP == null ? "" : obj.aData.AvailableItemsInWIP;
                        return "<input type='text' value='" + AvailableItemsInWIP + "'  maxLength='10' class='numericDecimalinput importtext-box' id='aAvailableItemsInWIP_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }*@
            @*if ('@arrcolumns.Contains("kitdemand")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var KitDemand = obj.aData.KitDemand == null ? "" : obj.aData.KitDemand;
                        return "<input type='text' value='" + KitDemand + "'  maxLength='10' class='numericDecimalinput importtext-box' id='aKitDemand_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }*@
            if ('@arrcolumns.Contains("availablekitquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var AvailableKitQuantity = obj.aData.AvailableKitQuantity == null ? "" : obj.aData.AvailableKitQuantity;
                        return "<input type='text' value='" + AvailableKitQuantity + "'  maxLength='10' class='numericDecimalinput importtext-box' id='aAvailableKitQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("description")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var Description = obj.aData.Description == null ? "" : obj.aData.Description;
                        return "<input type='text' value='" + Description + "'  maxLength='10' class='importtext-box' id='aDescription_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("criticalquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var CriticalQuantity = obj.aData.CriticalQuantity == null ? "" : obj.aData.CriticalQuantity;
                        return "<input type='text' value='" + CriticalQuantity + "'  maxLength='10' class='numericDecimalinput importtext-box' id='aCriticalQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("minimumquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var MinimumQuantity = obj.aData.MinimumQuantity == null ? "" : obj.aData.MinimumQuantity;
                        return "<input type='text' value='" + MinimumQuantity + "'  maxLength='10' class='numericDecimalinput importtext-box' id='aMinimumQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("maximumquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var MaximumQuantity = obj.aData.MaximumQuantity == null ? "" : obj.aData.MaximumQuantity;
                        return "<input type='text' value='" + MaximumQuantity + "'  maxLength='10' class='numericDecimalinput importtext-box' id='aMaximumQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("reordertype")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var ReOrderType = obj.aData.ReOrderType == null ? "" : obj.aData.ReOrderType;
                        return "<input type='text' value='" + ReOrderType + "'  maxLength='10' class='importtext-box' id='aReOrderType_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            @*if ('@arrcolumns.Contains("kitcategory")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var KitCategory = obj.aData.KitCategory == null ? "" : obj.aData.KitCategory;
                        return "<input type='text' value='" + KitCategory + "'  maxLength='10' class='importtext-box' id='aKitCategory_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }*@

            if ('@arrcolumns.Contains("suppliername")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var SupplierName = obj.aData.SupplierName == null ? "" : obj.aData.SupplierName;
                        return "<input type='text' value='" + SupplierName + "'  maxLength='50' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aSupplierName_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("supplierpartno")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var SupplierPartNo = obj.aData.SupplierPartNo == null ? "" : obj.aData.SupplierPartNo;
                        return "<input type='text' value='" + SupplierPartNo + "'  maxLength='50' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aSupplierPartNo_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("defaultlocation")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var DefaultLocation = obj.aData.DefaultLocationName == null ? "" : obj.aData.DefaultLocationName;
                        return "<input type='text' value='" + DefaultLocation + "'  maxLength='100' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aDefaultLocation_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("costuomname")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var CostUOMName = obj.aData.CostUOMName == null ? "" : obj.aData.CostUOMName;
                        return "<input type='text' value='" + CostUOMName + "'  maxLength='50' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aCostUOMName_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }


            if ('@arrcolumns.Contains("uom")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var UOM = obj.aData.UOM == null ? "" : obj.aData.UOM;
                        return "<input type='text' value='" + UOM + "'  maxLength='100' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aUOM_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("defaultreorderquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var DefaultReorderQuantity = obj.aData.DefaultReorderQuantity == null ? "" : obj.aData.DefaultReorderQuantity;
                        return "<input type='text' value='" + DefaultReorderQuantity + "' onblur='return ValidateValueWithDataType();'  maxLength='10' class='numericDecimalinput importtext-box' id='aDefaultReorderQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("defaultpullquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var DefaultPullQuantity = obj.aData.DefaultPullQuantity == null ? "" : obj.aData.DefaultPullQuantity;
                        return "<input type='text' value='" + DefaultPullQuantity + "' onblur='return ValidateValueWithDataType();'  maxLength='10' class='numericDecimalinput importtext-box' id='aDefaultPullQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            @*if ('@arrcolumns.Contains("itemtypename")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var ItemTypeName = obj.aData.ItemTypeName == null ? "" : obj.aData.ItemTypeName;
                        return "<input type='text' value='" + ItemTypeName + "' onblur='return ValidateValueWithDataType();'  maxLength='10' class='importtext-box' id='aItemTypeName_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }*@
            if ('@arrcolumns.Contains("isitemlevelminmaxqtyrequired")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var IsItemLevelMinMaxQtyRequired = obj.aData.IsItemLevelMinMaxQtyRequired == null ? "" : obj.aData.IsItemLevelMinMaxQtyRequired;
                        if (IsItemLevelMinMaxQtyRequired != "" || IsItemLevelMinMaxQtyRequired == "true") {
                            IsItemLevelMinMaxQtyRequired = "checked=\"checked\""
                        }
                        else { IsItemLevelMinMaxQtyRequired = ""; }
                        return "<input type='checkbox'" + IsItemLevelMinMaxQtyRequired + "id='aIsItemLevelMinMaxQtyRequired_" + obj.aData.ID + "'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("serialnumbertracking")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //var tempserialnumber = obj.aData.SerialNumber == null ? "" : obj.aData.SerialNumber;
                        //return "<input type='text' value='" + tempserialnumber + "'  maxLength='128'  class='importtext-box' id='aKitSerialNumber_" + obj.aData.ID + "' style='width:300px;' />"
                        var KitSerialNumber = obj.aData.SerialNumberTracking == null ? "" : obj.aData.SerialNumberTracking;
                        if (KitSerialNumber != "" || KitSerialNumber == "true") {
                            KitSerialNumber = "checked=\"checked\""
                        }
                        else { KitSerialNumber = ""; }
                        return "<input type='checkbox'" + KitSerialNumber + "id='aKitSerialNumber_" + obj.aData.ID + "'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("lotnumbertracking")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //var templotnumber = obj.aData.LotNumber == null ? "" : obj.aData.LotNumber;
                        //return "<input type='text' value='" + templotnumber + "'  maxLength='128'  class='importtext-box' id='aKitLotNumber_" + obj.aData.ID + "' style='width:300px;' />"
                        var KitLotNumber = obj.aData.LotNumberTracking == null ? "" : obj.aData.LotNumberTracking;
                        if (KitLotNumber != "" || KitLotNumber == "true") {
                            KitLotNumber = "checked=\"checked\""
                        }
                        else { KitLotNumber = ""; }
                        return "<input type='checkbox'" + KitLotNumber + "id='aKitLotNumber_" + obj.aData.ID + "'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("datecodetracking")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //var tempExpirationDate = obj.aData.ExpirationDate == null ? "" : obj.aData.ExpirationDate;
                        //return "<input type='text' value='" + tempExpirationDate + "'  maxLength='128'  class='importtext-box' id='aKitExpirationDate_" + obj.aData.ID + "' style='width:300px;' />"
                        var KitExpiration = obj.aData.DateCodeTracking == null ? "" : obj.aData.DateCodeTracking;
                        if (KitExpiration != "" || KitExpiration == "true") {
                            KitExpiration = "checked=\"checked\""
                        }
                        else { KitExpiration = ""; }
                        return "<input type='checkbox'" + KitExpiration + "id='aKitExpirationDate_" + obj.aData.ID + "'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("isactive")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var KitIsActive = obj.aData.IsActive == null ? "" : obj.aData.IsActive;
                        if (KitIsActive != "" || KitIsActive == "true") {
                            KitIsActive = "checked=\"checked\""
                        }
                        else { KitIsActive = ""; }
                        return "<input type='checkbox'" + KitIsActive + "id='aKitIsActive_" + obj.aData.ID + "'  />"
                    }
                });
            }
        });

    }

</script>