@using MvcCheckBoxList.Model;
@model List<eTurns.DTO.ReportFilterParam>
@{
    var htmlCheckboxInfo = new HtmlListInfo(HtmlTag.table, 4, new { @name = "chkStatus", }, TextLayout.Default, TemplateIsUsed.No);
    string nameofselectList = string.Empty;
    
    
}
<ul>
    @if (Model != null)
    {
        foreach (ReportFilterParam obj in Model)
        {
            nameofselectList = obj.FieldName;
        <li>
            @*<div class="editor-label" style="width: 20%;">*@
            <div class="editor-label">
                @Html.Label(obj.FieldName)
            </div>
            <div class="editor-field" style="float: left; width: 250px;">
                <select id="ddlModuleItemTypes" multiple="multiple" width="150px" name="example-basic"
                    size="5" class="text-box">
                    @if (obj.FieldFilterName != null && obj.FieldFilterName.Count > 0)
                    {      
                                              
@* @Html.CheckBoxListFor(x => obj.FieldFilterName, x => obj.FieldFilterName, Fields => Fields.key, Fields => Fields.value, Fields => Fields.chkvalue, htmlCheckboxInfo)*@
                    
                        foreach (var item in obj.FieldFilterName)
                        {
                            if (item.chkvalue)
                            {
                            <option selected="selected" value="@item.key">@item.value</option>     
                            }
                            else
                            {
                            <option value="@item.key">@item.value</option>     
                            }

                        }
                  
                    }
                </select>
            </div>
        </li>
        }


    }
    @*<li>
        <div class="editor-label">
            &nbsp;
        </div>
    </li>*@
</ul>
<script type="text/javascript">
    $(document).ready(function () {
        BindTypes();
    });
    function BindTypes() {
        $("#ddlModuleItemTypes").multiselect({
            noneSelectedText: '@nameofselectList', selectedList: 5,
            selectedText: function (numChecked, numTotal, checkedItems) {
                return '@nameofselectList' + ' ' + numChecked + ' ' + selected;
            }
        }).bind("multiselectclick multiselectcheckall multiselectuncheckall", function (event, ui) {
            if (ui.checked) {
                $("#ddlModuleItemTypes").multiselect("widget").find(":checkbox[value='" + ui.value + "']").attr("checked", "checked");
                $("#ddlModuleItemTypes option[value='" + ui.value + "']").attr("selected", 1);
                FillModuleItem();
            }
            else {
                FillModuleItem();
            }
        });
        //FillModuleItem();
    }
</script>
