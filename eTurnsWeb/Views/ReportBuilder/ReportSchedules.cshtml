@{

    ViewBag.Title = eTurns.DTO.ResSchedulerReportList.PageTitle;
    var settings = new GridHeaderSettings() { DataTableName = "myDataTable", ShowCloseButton = true, ShowSelectAll = true, DisplayUDFButton = true, UDFSetupFor = "InventoryCount&UDFHeader=" + @eTurns.DTO.ResSchedulerReportList.PageHeader, DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "ReportScheduleList", DisplayDeleteButton = true };
    var modelCommon = new eTurns.DTO.CommonDTO { PageName = "ReportScheduleList" };

    bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.BinMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.BinMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    string ReportSchedulePDFURL = string.Format("{0}?t={1}", "/Uploads/HelpDoc/ReportSchedule.pdf", DateTime.Now.Ticks);
    var version = eTurnsWeb.Helper.CommonUtility.GetReleaseNumber();
}
@section head{
    @if (SiteSettingHelper.IsBorderStateURL == "1" && SiteSettingHelper.EnableOktaLoginForSpecialUrls.Contains(eTurnsWeb.Helper.SessionHelper.CurrentDomainURL)){<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyleBS.css")" />}else{ <link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/tabstyle.css")" />}
    <style type="text/css">
        .dataTables_scrollBody {
            max-height: 410px;
            overflow-y: scroll;
        }
    </style>
    @*<script type='text/javascript' src="@Url.Content("~/Content/OpenAccess/jquery.cookie.js")"></script>*@
    <script type='text/javascript' src="@Url.Content("~/Scripts/TabCommon.js?v=" + version)"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/SiteScripts.js?v=" + version)"></script>
    <script type="text/javascript">
        var CountListColumnsArr = new Array();
        CountListColumnsArr.push({ mDataProp: "ScheduleName", sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val) { return "<a class='aEditLink' id='lnkEditMs_" + obj.aData.ScheduleID + "' onclick=' return ShowEditTab(&quot;ReportScheduleEdit?IcGuid=" + obj.aData.ScheduleID + "&quot;,&quot;frmInventoryCount&quot;)' href='JavaScript:void(0);'>" + val + "</a><input type='hidden' id='hdnUniqueID' value='" + obj.aData.ScheduleID.toString() + "' />"; } });
        CountListColumnsArr.push({ mDataProp: "ScheduleMode", sClass: "read_only" });
        CountListColumnsArr.push({ mDataProp: "Created", sClass: "read_only", fnRender: function (obj, val) { return GetDateInFullFormat(val); } });
        CountListColumnsArr.push({ mDataProp: "Updated", sClass: "read_only", fnRender: function (obj, val) { return GetDateInFullFormat(val); } });
        CountListColumnsArr.push({ mDataProp: "UpdatedByName", sClass: "read_only" });
        CountListColumnsArr.push({ mDataProp: "CreatedByName", sClass: "read_only" });

        var oTable;
        var IsRefreshGrid = false;
        var deleteURL = "/ReportBuilder/DeleteSchedules";
        //var PostCount = 0;
        var IsDeletePopupOpen = false;
        var AllowDeletePopup = true;
        var HistorySelected;
        var SelectedID = 0;
        var objColumns = {}

        $(document).ready(function () {
            objColumns = GetGridHeaderColumnsObject('myDataTable');
            LoadTabs();
            var gaiSelected = [];
            oTable = $('#myDataTable').dataTable({
                "bJQueryUI": true,
                "sScrollX": "120%",
                "bScrollCollapse": true,
                "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
                "oColVis": {},
                "aaSorting": [[1, "asc"]],
                "oColReorder": {},
                "sPaginationType": "full_numbers",
                "bProcessing": true,
                "bStateSave": true,
                "aoColumns": CountListColumnsArr,
                "oLanguage": {
                    "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                    "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                    "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                    "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
                },
                "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                    if (aData.IsDeleted == true && aData.IsArchived == true)
                        nRow.className = "GridDeleatedArchivedRow";
                    else if (aData.IsDeleted == true)
                        nRow.className = "GridDeletedRow";
                    else if (aData.IsArchived == true)
                        nRow.className = "GridArchivedRow";
                    if (aData.IsDeleted || aData.IsArchived) {
                        $(nRow).find("input,select").attr("disabled", "disabled");
                        $("#thUpdate").css("display", 'none');
                        $(nRow).find("input[type='button'][id^='btnUpdateCartItem']").parent("td").hide();
                    }
                    return nRow;
                },
                "fnStateSaveParams": function (oSettings, oData) {
                    oData.oSearch.sSearch = "";
                    $.ajax({
                        "url": '@Url.Content("~/Master/SaveGridState")',
                         "type": "POST",
                        data: { Data: JSON.stringify(oData), ListName: 'ReportScheduleList' },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        "success": function (json) {
                            o = json;
                        }
                    });
                },
                "fnStateLoad": function (oSettings) {
                    var o;
                    $.ajax({
                        "url": '@Url.Content("~/Master/LoadGridState")',
                        "type": "POST",
                        data: { ListName: 'ReportScheduleList' },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        "success": function (json) {
                            if (json.jsonData != '') {
                                o = JSON.parse(json.jsonData);
                            }
                        }
                    });
                    return o;
                },
                "bServerSide": true,
                "sAjaxSource": '@Url.Action("ReportScheduleListAjax", "ReportBuilder")',
                "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                    var arrCols = new Array();
                    var objCols = this.fnSettings().aoColumns;
                    for (var i = 0; i <= objCols.length - 1; i++) {
                        arrCols.push(objCols[i].mDataProp);
                    }
                    for (var j = 0; j <= aoData.length - 1; j++) {
                        if (aoData[j].name == "sColumns") {
                            aoData[j].value = arrCols.join("|");
                            break;
                        }
                    }
                    if (oSettings.aaSorting != null && oSettings.aaSorting.length != 0 )
                    {
                        var sortValue = "";
                        for (var i = 0; i <= oSettings.aaSorting.length - 1; i++) {
                            if (sortValue.length > 0)
                                sortValue += ", "
                            sortValue += arrCols[oSettings.aaSorting[i][0]] + ' ' + oSettings.aaSorting[i][1];
                        }
                        aoData.push({ "name": "SortingField", "value": sortValue });
                    }
//                        aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                    else
                        aoData.push({ "name": "SortingField", "value": "0" });
                    aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                    aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });

                    oSettings.jqXHR = $.ajax({
                        "dataType": 'json',
                        "type": "POST",
                        "url": sSource,
                        cache: false,
                        "data": aoData,
						"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                        "success": fnCallback,
                        beforeSend: function () {
                            $('#myDataTable').removeHighlight();
                            $('.dataTables_scroll').css({ "opacity": 0.2 });
                        },
                        complete: function () {
                            $('.dataTables_scroll').css({ "opacity": 1 });
                            if ($("#global_filter").val() != '') {
                                $('#myDataTable').highlight($("#global_filter").val());
                            }
                            //                            SetUDFSelected(oSettings);
                        }
                    })
                },
                "fnInitComplete": function () {
                    $('.ColVis').detach().appendTo(".setting-arrow");
                }
            }).makeEditable({
                sUpdateURL: '@Url.Content("~/Master/UpdateData")'
            });

            //HIDE PRINT CONTAINER
            $('.DTTT_container').css('z-index', '-1');

            $('#deleteRows').click(function () {
                /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
                if ($("body").hasClass('DTTT_Print')) {
                    return false;
                }
                /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */

                var anSelectedReq = fnGetSelected(oTable);
                var stringIDs = "";
                for (var i = 0; i <= anSelectedReq.length - 1; i++) {
                    stringIDs = stringIDs + $(anSelectedReq[i]).find('#hdnUniqueID').val() + ",";
                }
                if (stringIDs.length > 0) {
                    $('#basic-modal-content').modal();
                    IsDeletePopupOpen = true;
                }
            });
            /* HISTORY related data deleated and archived START */
            $('#IsDeletedRecords').live('click', function () {
                NarrowSearchInGrid('');
            });
            $('#IsArchivedRecords').live('click', function () {
                NarrowSearchInGrid('');
            });

            $('#ViewHistory').live('click', function () {
                HistorySelected = fnGetSelected(oTable);
                if (HistorySelected != undefined && HistorySelected.length == 1) {
                    $("#atab5").click();
                }
                else {
                    $('#tab5').html('');
                    $("#spanGlobalMessage").html('@ResCommon.msgSelectForViewHistory');
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    return false;
                }
            });
            /* HISTORY related data deleated and archived END */
        });
        /* HISTORY related data deleated and archived START */
        function fnGetSelected(oTableLocal) {
            return oTableLocal.$('tr.row_selected');
        }
        function HistoryTabClick() {
            GetHistoryData();
        }
        //        function GetHistoryData() {
        //            var trselected = oTable.$('tr.row_selected');
        //            if (trselected != undefined && trselected.length == 1) {
        //                var aData = oTable.fnGetData(trselected[0]);
        //                //if (SelectedID != aData.ID) {
        //                //SelectedID = aData.ID;
        //                $('#DivLoading').show();
        //                $("#CTab").hide();
        //                $("#CtabCL").show();
        //                $('#CtabCL').load('ReportScheduleListHistory/' + SelectedID, function () { $('#DivLoading').hide(); });
        //                //$('#tab5').load('MaterialStagingHistory', function () { $('#DivLoading').hide(); });
        //                //}
        //            }
        //            else {
        //                $('#CtabCL').html('');
        //                $("#spanGlobalMessage").html("@ResCommon.msgSelectForViewHistory");
        //                $('div#target').fadeToggle();
        //                $("div#target").delay(2000).fadeOut(200);
        //                return false;
        //            }
        //        }
        function GetHistoryData() {
            HistorySelected = fnGetSelected(oTable);
            if (HistorySelected != undefined && HistorySelected.length == 1) {
                //SelectedHistoryRecordID = HistorySelected[0].id;
                var CartGUID = $(HistorySelected).find('#hdnUniqueID')[0].value;
                SelectedID = CartGUID;
                $('#DivLoading').show();
                $("#CTab").hide();
                $("#CtabCL").show();
                $('#CtabCL').load('ReportScheduleListHistory/?GUID=' + SelectedID, function () { $('#DivLoading').hide(); });
            }
            else {
                $('#CtabCL').html('');
                $("#spanGlobalMessage").html('@ResCommon.msgSelectForViewHistory');
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                return false;
            }
        }
        /* HISTORY related data deleated and archived END */
    </script>
    <script type="text/javascript">
        var TabsArry = [new TabClass('tab1', '@eTurns.DTO.Resources.ResCommon.New', 'callbacknew();', true, true),
         new TabClass('tab5', '@eTurns.DTO.Resources.ResCommon.History', 'callbackhistory();', true, true),
         new TabClass('tab6', '@eTurns.DTO.Resources.ResCommon.ChangeLog', 'callbackCL();', false, true)
         ];
        function callbacknew() { ShowNewTab('InventoryCountCreate', 'frmInventoryCount'); }
        function callbackhistory() { }
        function callbackCL() { HistoryTabClick(); }
        function callbackSetup() {
            ShowNewTab('InventoryCountSetUp', 'frmInventoryCountSetup');
            //            ShowNewTab('InventoryCountCreate', 'frmInventoryCount');
        }
    </script>
}
<div class="userListingWrapper">
    <h2>
        @eTurns.DTO.ResSchedulerReportList.PageHeader
    </h2>
    <div class="Infoclass">
        <a href="@ReportSchedulePDFURL" target="_blank">
            <img src="~/Content/images/Info.png" alt="Help" />
        </a>
    </div>
    <div class="userListBlock">
        @Html.Hidden("hdnInsertRights", isInsert)
        @Html.Hidden("hdnUpdateRights", isUpdate)
        <ul class='tabs'></ul>
        <div id="Ctab" class="tabContener">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="global_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_global_filter" />
                        </a>
                    </div>
                </div>
            </div>
            @Html.GridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.Cart)
            @Html.Partial("NarrowSearchLayout", modelCommon)
            <div class="userContent ">
                <table id="myDataTable" class="display">
                    <thead>
                        <tr>
                            <th>
                                @ResSchedulerReportList.ScheduleName
                            </th>
                            <th>
                                @ResSchedulerReportList.ScheduleMode
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.CreatedOn
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.UpdatedOn
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.LastUpdatedBy
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.CreatedBy
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
                <div id="processing_message" style="display: none" title="Processing">
                    @eTurns.DTO.Resources.ResMessage.RequestProcessMessage
                </div>
            </div>
        </div>
        <div id="CtabCL" class="tabContener">
        </div>
        <div id="CtabNew" class="tabContener">
        </div>
    </div>
</div>

@*@if (false)
{
    <script src="../../Scripts/jquery-1.9.1-vsdoc.js" type="text/javascript"></script>
}*@
<script type="text/javascript">

    jQuery(function () {
        
    });
</script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Authorization.js?v=" + version)"></script>
