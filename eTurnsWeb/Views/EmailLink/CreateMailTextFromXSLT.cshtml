@model eTurns.DTO.CommonDTO
@using eTurnsWeb.Helper;
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>eMail Body</title>@*   <script src="../../Scripts/jquery-1.7.1.js" type="text/javascript"></script>
    <script type="text/javascript" language="javascript">

        function ParseXML(text) {
            if (window.DOMParser) {
                parser = new DOMParser();
                xmlDoc = parser.parseFromString(text, "text/xml");
                return xmlDoc;
            }
            else // Internet Explorer
            {
                xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
                xmlDoc.async = false;
                xmlDoc.loadXML(text);
                return xmlDoc;
            }

        }

        function loadXMLDoc(filename) {
            if (window.ActiveXObject) {
                xhttp = new ActiveXObject("Msxml2.XMLHTTP");
            }
            else {
                xhttp = new XMLHttpRequest();
            }
            xhttp.open("GET", filename, false);
            try { xhttp.responseType = "msxml-document" } catch (err) { } // Helping IE11
            xhttp.send("");

            return xhttp.responseXML;
        }

        function displayResult() {
            xml = ParseXML('@Model.Text');
            //xsl = loadXMLDoc("../../XLS/Orderl.xslt");
            xsl = loadXMLDoc('@Model');
            // code for IE
            if (window.ActiveXObject || xhttp.responseType == "msxml-document") {
                ex = xml.transformNode(xsl);
                document.getElementById("example").innerHTML = ex;
            }
            // code for Chrome, Firefox, Opera, etc.
            else if (document.implementation && document.implementation.createDocument) {
                xsltProcessor = new XSLTProcessor();
                xsltProcessor.importStylesheet(xsl);
                resultDocument = xsltProcessor.transformToFragment(xml, document);
                document.getElementById("example").appendChild(resultDocument);
            }

        }
    </script>*@
</head>
@*<body onload="">*@
<body>
    @Html.GetHTMLStringFromXSLT(Model.Text, Model.PageName)
</body>
</html>
