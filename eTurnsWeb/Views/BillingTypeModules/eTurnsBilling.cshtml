@model eTurnsBillingViewModel
@{
    ViewBag.Title = ResCommon.eTurnsBilling;

    List<SelectListItem> lstItems = new List<SelectListItem>();

    SelectListItem objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResCommon.Individual;
    objSelectListItem.Value = "1";
    lstItems.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResCommon.Addon;
    objSelectListItem.Value = "2";
    lstItems.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResCommon.TieredBranch;
    objSelectListItem.Value = "3";
    lstItems.Add(objSelectListItem);

    objSelectListItem = new SelectListItem();
    objSelectListItem.Text = ResCommon.TieredCompany;
    objSelectListItem.Value = "4";
    lstItems.Add(objSelectListItem);

    SelectList lstGrouping = new SelectList(lstItems, "Value", "Text");
}

<style>

    th, td {
        padding: 3px 8px;
    }

    .border_bottom th, .border_bottom td {
        border: 1px solid #999;
    }
</style>
<div class="userListingWrapper">
    <h2>@ResCommon.eTurnsBilling</h2>
    <div class="userListBlock">
        <div id="divTab" class="tabContener" style="width:99.5%">
            <div class="userHead">


                @Html.ValidationSummary(true)
                @Html.AntiForgeryToken()

                <div class="mainForm">
                    <div class="editorForm">
                        @*<h4>
                                @Html.LabelFor(model => model.BillingRoomType)
                            </h4>*@
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.EnterpriseID)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.EnterpriseID
                                                                           , Model.EnterpriseList
                                                                               , new { @class = "selectBox", onchange = "_billingTypeModule.Enterprise_change()" })
                                </div>
                            </li>
                        </ul>
                        <ul id="trAddNewPanel1" style="display:none">
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.BillingRoomTypeName)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.BillingRoomTypeName, new { id = "txtBillingRoomTypeName", @class = "text-box", maxlength = 50 })
                                    <label>
                                        <a onclick="_billingTypeModule.HidePanel();" id="btnHideNewBillingRoomTypeMaster" class="addNewLink">
                                            (@ResCommon.Cancel)
                                        </a>
                                    </label>
                                    <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.BillingRoomTypeName)</span>
                                </div>
                            </li>
                        </ul>
                        <ul id="trAddNewPanel3">
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.BillingRoomTypeId, new { id = "lblBillingRoomType" })
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.BillingRoomTypeId
                                          , Model.BillingRoomTypeList
                                              , new { @class = "selectBox", onchange = "_billingTypeModule.BillingRoomType_change(this)" })

                                    <label id="lblAddnew" style="display:none">
                                        <a onclick="_billingTypeModule.ShowPanel();" id="btnShowNewBillingRoomTypeMaster" class="addNewLink">
                                            (@ResCommon.AddNew)
                                        </a>
                                    </label>

                                </div>
                            </li>
                        </ul>
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.BaseCost)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.BaseCost, new { @class = "text-box", maxlength = 50 })
                                </div>
                            </li>
                        </ul>
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.OneTimeLicenceFee)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.OneTimeLicenceFee, new { @class = "text-box", maxlength = 50 })
                                </div>
                            </li>
                        </ul>
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Grouping)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.Grouping, lstGrouping, new { @class = "selectBox" })
                                </div>
                            </li>
                        </ul>
                        <ul>
                            <li>
                                <div class="editor-label">
                                    &nbsp;
                                </div>
                                <div class="editor-field">
                                    <input type="button"
                                           value="@eTurns.DTO.Resources.ResCommon.Save" id="btnSave" class="CreateBtn"
                                           style="float:left"
                                           onclick="return _billingTypeModule.saveBillingRoomTypeMaster()" />

                                </div>
                            </li>
                        </ul>
                        <ul>
                            <li>
                                <div class="editor-field">
                                    <table>
                                    </table>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
                <div id="CreateRolePermissionDIV">
                    <div class="mainForm">
                        <div class="container">
                            <ul class="tabs">
                                @*<li class="active"><a href="#Roomtab2">@ResRoleMaster.SupportTablesPermissions</a></li>*@
                                <li class="active"><a id="lnkMP" href="#MPtab3">@ResRoleMaster.ModulePermissions</a></li>
                            </ul>
                            <div id="MPtab3" class="tab_content">
                                <p>
                                    <table style="width:70%;" class="tableBorder">
                                        <tr class="border_bottom">
                                            <th width="45%" style="text-align:left">
                                                @ResCommon.Modules
                                            </th>
                                            <th style="text-align:left">
                                                @ResCommon.IsEnable
                                            </th>
                                            <th style="text-align:left">
                                                Cost
                                            </th>
                                        </tr>
                                        <tr class="border_bottom">
                                            <td>
                                            </td>

                                            <td>
                                                @Html.CheckBox("AllView",
                                               new
                                                    {
                                                        @class = "check-box",
                                                        id = "AllEnable",
                                                   onclick = "javascript:_billingTypeModule.checkAll(this);",
                                                   title = ResCommon.SelectAll
                                               })
                                                <label for="AllEnable">@ResCommon.SelectAll</label>
                                            </td>
                                            <td></td>
                                        </tr>
                                        @foreach (var mm in Model.ModuleMapping)
                                        {
                                            <tr class="border_bottom">
                                                <td>
                                                    @mm.ModuleNameFromResource
                                                </td>

                                                <td>
                                                    @Html.CheckBox("chk" + mm.ModuleId, mm.IsEnable
                                                   , new
                                                        {
                                                            id = "chk" + mm.ModuleId,
                                                            @class = "check-box"
                                                   ,
                                                            data_mid = mm.ModuleId
                                                   ,
                                                            data_mapid = mm.ID
                                                   })
                                                </td>
                                                <td>
                                                    <input type="text" id="txtCost_@mm.ModuleId" name="ModuleCost" value="@mm.Price" />
                                                </td>
                                            </tr>
                                        }
                                    </table>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var _billingTypeModule = (function ($) {
        var self = {};

        self.init = function () {
            $("#lnkMP").click();
        }

        self.checkAll = function (chk) {
            if ($(chk).is(":checked")) {
                $("#MPtab3 input:checkbox").attr("checked", "checked");
            }
            else {
                $("#MPtab3 input:checkbox").removeAttr("checked");
            }
        }

        self.BillingRoomType_change = function (BillingRoomType) {
            var billRoomTypeId = $("#BillingRoomTypeId").val();
            var entId = $("#EnterpriseID").val();

            if (typeof (billRoomTypeId) != "undefined" && billRoomTypeId != null && (parseInt(billRoomTypeId) || 0) > 0)
            {
                window.location.href = '/BillingTypeModules/eTurnsBilling?BillingRoomTypeId=' + (parseInt(billRoomTypeId) || 0) + '&EnterpriseId=' + (parseInt(entId) || 0);
            }
            

            //$('#DivLoading').show();
            //var billRoomType = $(BillingRoomType).val();
            //_AjaxUtil.getJson('/BillingTypeModules/GetBillingRoomTypeModuleMaster', { billRoomType: billRoomType }
            //    , function (res) {
            //        $('#DivLoading').hide();
            //        var list = res.list;
            //        $("#AllEnable").removeAttr('checked');
            //        if (typeof list !== 'undefined' && list != null && list.length) {

            //            var len = list.length;
            //            for (var i = 0; i < len; i++) {
            //                var obj = list[i];
            //                var chk = $("input:checkbox[data-mid='" + obj.ID + "']");
            //                if (chk.length) {
            //                    if (obj.IsEnable) {
            //                        chk.attr('checked', 'checked');
            //                    }
            //                    else {
            //                        chk.removeAttr('checked', 'checked');
            //                    }
            //                }
            //            }
            //        }

            //    }, function (error) {
            //        $('#DivLoading').hide();
            //        _notification.showError("Something went wrong !!");

            //    }, true, false);
        }

        self.Enterprise_change = function (BillingRoomType) {
            $('#DivLoading').show();
            var entId = $("#EnterpriseID").val();
            //var billRoomTypeId = $("#BillingRoomTypeId").val();

            //if (typeof (billRoomTypeId) != "undefined" && billRoomTypeId != null && (parseInt(billRoomTypeId) || 0) > 0) {
            //    window.location.href = '/BillingTypeModules/eTurnsBilling?BillingRoomTypeId=' + (parseInt(billRoomTypeId) || 0) + '&EnterpriseId=' + (parseInt(entId) || 0);
            //}
            //else
            //{
                window.location.href = '/BillingTypeModules/eTurnsBilling?EnterpriseId=' + (parseInt(entId) || 0);
            //}

            //SetBillingRoomTypeControls();
            //var ddlBillingRoomType = BillingRoomType != null && BillingRoomType != undefined ? $(BillingRoomType) : $("#BillingRoomTypeId");
            //ddlBillingRoomType.empty();

            //_AjaxUtil.getJson('/BillingTypeModules/GetBillingRoomTypeByEnt', { EntId: entId }
            //    , function (res) {
            //        $('#DivLoading').hide();
            //        var list = res.list;
            //        if (typeof list !== 'undefined' && list != null && list.length) {

            //            var len = list.length;
            //            for (var i = 0; i < len; i++) {
            //                var obj = list[i];
            //                ddlBillingRoomType.append($("<option></option>").val(obj.ID).html(obj.ResourceValue));
            //            }

            //            self.BillingRoomType_change(ddlBillingRoomType);
            //        }

            //    }, function (error) {
            //        $('#DivLoading').hide();
            //        _notification.showError("Something went wrong !!");

            //    }, true, false);
        }
        self.saveBillingRoomTypeMaster = function () {
            if ($("#txtBillingRoomTypeName").val() == null || $("#txtBillingRoomTypeName").val() == undefined || $('#trAddNewPanel1').is(':visible')==false) {
                return self.saveBillingRoomModuleMap();
            }
            else {
                if ($('#trAddNewPanel1').is(':visible') && $("#txtBillingRoomTypeName").val() == '') {
                    showNotificationDialog();
                    $("#spanGlobalMessage").html('@ResRoomMaster.Required');
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');

                    return;
                }
                var lst = [];

                $.each($("#MPtab3 input:checkbox").not("#AllEnable"), function (index, chk) {

                    var $chk = $(chk);
                    lst.push({
                        BillingRoomTypeID: _utils.parseNumber($("#BillingRoomType").val()),
                        MapID: _utils.parseNumber($chk.attr("data-id")),
                        ModuleID: _utils.parseNumber($chk.attr("data-mid")),
                        IsModuleEnabled: $chk.prop('checked')
                    });
                })
                _Common.showHideLoader(true);

                _AjaxUtil.postText('/BillingTypeModules/SaveBillingRoomTypeMaster'
                    , JSON.stringify({ EnterpriseID:$("#Enterprise").val(), newBillingRoomTypeName: $("#txtBillingRoomTypeName").val(), list: lst })
                    , function (res) {
                        var resJson = JSON.parse(res);
                        _Common.showHideLoader(false);

                        if (resJson.status != 0) {
                            _notification.showError(resJson.message);
                        }
                        else {
                            _notification.showSuccess(resJson.message);
                            //self.Enterprise_change($("#BillingRoomTypeName"));
                            self.Enterprise_change($("#BillingRoomType"));
                            self.HidePanel();
                            //var conf = confirm('\n' + resJson.message + '\n\nDo you want to update room permissions? (Click OK for "Yes", Cancel for "No")\nNote: It may take some minutes and will run in background.');

                            //if (conf) {
                            //    //alert("Under development");
                            //    self.UpdateUserRoleModulePermissions();
                            //}
                        }
                    }
                    , function (error) {
                        _Common.showHideLoader(false);
                        _notification.showError("Something went wrong !!");

                    }, true, false);

                return false;
            }
        }
        self.saveBillingRoomModuleMap = function () {
            var lst = [];

            $.each($("#MPtab3 input:checkbox").not("#AllEnable"), function (index, chk) {

                var $chk = $(chk);
                lst.push({
                    BillingRoomTypeId: _utils.parseNumber($("#BillingRoomTypeId").val()),
                    ID: _utils.parseNumber($chk.attr("data-id")),
                    ModuleId: _utils.parseNumber($chk.attr("data-mid")),
                    IsEnable: $chk.prop('checked'),
                    Price: (parseFloat($("#txtCost_" + _utils.parseNumber($chk.attr("data-mid"))).val()) || 0)
                });
            });

            _Common.showHideLoader(true);
            var billingRoomTypeId = $("#BillingRoomTypeId").val();
            var baseCost = (parseFloat($("#BaseCost").val()) || 0);
            var oneTimeLicenceFee = (parseFloat($("#OneTimeLicenceFee").val()) || 0);
            var grouping = (parseInt($("#Grouping").val()) || 0);
            _AjaxUtil.postText('/BillingTypeModules/SaveeTurnsBilling'
                , JSON.stringify({ BillingRoomTypeId: billingRoomTypeId, list: lst, BaseCost: baseCost, OneTimeLicenceFee: oneTimeLicenceFee, Grouping: grouping })
                , function (res) {
                    var resJson = JSON.parse(res);
                    _Common.showHideLoader(false);

                    if (resJson.status != 0) {
                        _notification.showError(resJson.message);
                    }
                    else {
                        _notification.showSuccess(resJson.message);
                    }
                }
                , function (error) {
                    _Common.showHideLoader(false);
                    _notification.showError("Something went wrong !!");

                }, true, false);

            return false;
        }

        self.ShowPanel = function () {
            @*$("#lblBillingRoomType").text("@ResRoomMaster.TakeReferenceFromBillingRoomType");
            $("#txtBillingRoomTypeName").val("");
            $('#trAddNewPanel1').show();
            $('#lblAddnew').hide();*@
        }
        self.HidePanel = function () {
            @*$("#lblBillingRoomType").text("@ResRoomMaster.BillingRoomType");
            $("#txtBillingRoomTypeName").val("");
            $('#trAddNewPanel1').hide();
            $('#lblAddnew').show();*@
        }
        return self;
    })(jQuery);

    $(function () {
        _billingTypeModule.init();
        SetBillingRoomTypeControls();
    })

    function SetBillingRoomTypeControls() {
        //_billingTypeModule.HidePanel();
        //var selectedEntId = $("#Enterprise").val();
        //if (selectedEntId > 0) {
        //    $('#lblAddnew').show();
        //} else {
        //    $('#lblAddnew').hide();
        //}

    }
</script>