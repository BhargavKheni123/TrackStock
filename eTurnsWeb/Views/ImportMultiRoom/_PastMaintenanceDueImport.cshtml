@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("schedulefor"))
    {
        <th>
            <em>* </em>
            @eTurns.DTO.ResToolsMaintenance.SchedulerFor
        </th>
    }
    @if (arrcolumns.Contains("maintenancedate"))
    {
        <th>
            <em>* </em>
            @eTurns.DTO.ResToolsMaintenance.MaintenanceDate
        </th>
    }
    @if (arrcolumns.Contains("assetname"))
    {
        <th>

            @eTurns.DTO.ResAssetMaster.AssetName
        </th>
    }
    @if (arrcolumns.Contains("toolname"))
    {
        <th>
            @eTurns.DTO.ResToolMaster.ToolName
        </th>
    }
    @if (arrcolumns.Contains("serial"))
    {
        <th>
            @eTurns.DTO.ResToolMaster.Serial
        </th>
    }
    @if (arrcolumns.Contains("schedulername"))
    {
        <th>
            <em>* </em>
            @eTurns.DTO.ResToolsScheduler.SchedulerName
        </th>
    }
    @if (arrcolumns.Contains("itemnumber"))
    {
        <th>
            @eTurns.DTO.ResItemMaster.ItemNumber
        </th>
    }
    @if (arrcolumns.Contains("itemcost"))
    {
        <th>
            @eTurns.DTO.ResItemMaster.PerItemCost
        </th>
    }
    @if (arrcolumns.Contains("quantity"))
    {
        <th>
            @eTurns.DTO.ResToolsScheduler.Quantity
        </th>
    }

</tr>
<script type="text/javascript">
    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.AssetMaintenance)') {
        $(function (event) {
            if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";
                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }

                        // return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='Status' style='width:100px;color:" + forcol + ";border:1px solid " + bodcol + "' />"
                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason.substring(0, 255);
                        return "<span id='Reason'  style='width:100px;'>" + tempUDF5 + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("schedulefor")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempSchedulerFor = obj.aData.ScheduleFor == null ? "" : obj.aData.ScheduleFor;
                        return "<input type='text' maxlength='128' value='" + tempSchedulerFor + "' onblur='return ValidateValueWithDataType();' class='importtext-box valid' id='aSchedulerFor_" + obj.aData.ID + "' style='width: 300px; border-color: rgb(221, 221, 221);'>" +
                               "<span id='InvLocId' style='display:none'>" + obj.aData.ID + "</span>";
                    }
                });
            }
            if ('@arrcolumns.Contains("maintenancedate")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempdisplayMaitenanceDate = obj.aData.displayMaitenanceDate == null ? "0" : obj.aData.displayMaitenanceDate;
                        return "<input maxlength='128'   onblur='return ValidateValueWithDataType();' value='" + tempdisplayMaitenanceDate + "' class='importtext-box valid' id='aMaintenanceDate_" + obj.aData.ID + "' style='width:300px;' type='text'>"
                    }
                });
            }
            if ('@arrcolumns.Contains("assetname")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAssetName = obj.aData.AssetName == null ? "" : obj.aData.AssetName;
                        return "<input maxlength='128' value='" + tempAssetName + "' onblur='return ValidateValueWithDataType();' class='importtext-box valid' id='aAssetName_" + obj.aData.ID + "' style='width: 300px; border-color: rgb(221, 221, 221);' type='text'>"
                    }
                });
            }
            if ('@arrcolumns.Contains("toolname")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempToolName = obj.aData.ToolName == null ? "" : obj.aData.ToolName;
                        return "<input type='text' maxLength='128'   value='" + tempToolName + "'  class='importtext-box' id='aToolName_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }
            if ('@arrcolumns.Contains("serial")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempSerial = obj.aData.Serial == null ? "" : obj.aData.Serial;
                        return "<input type='text' maxLength='128'   value='" + tempSerial + "'  class='importtext-box' id='aSerial_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }
            if ('@arrcolumns.Contains("schedulername")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempSchedulerName = obj.aData.SchedulerName == null ? "" : obj.aData.SchedulerName;
                        return "<input type='text' maxLength='128'   value='" + tempSchedulerName + "'  class='importtext-box' id='aSchedulerName_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }
            if ('@arrcolumns.Contains("itemnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempItemNumber = obj.aData.ItemNumber == null ? "" : obj.aData.ItemNumber;
                        return "<input type='text' maxLength='128'   value='" + tempItemNumber + "'  class='importtext-box' id='aItemNumber_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }
            if ('@arrcolumns.Contains("itemcost")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempItemCost = obj.aData.ItemCost == null ? "" : obj.aData.ItemCost;
                        return "<input type='text' maxLength='15' onkeypress='return isNumberKey(event);'   value='" + tempItemCost + "'  class='importtext-box' id='aItemCost_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }
            if ('@arrcolumns.Contains("quantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempQuantity = obj.aData.Quantity == null ? "" : obj.aData.Quantity;
                        return "<input type='text' maxLength='15' onkeypress='return isNumberKey(event);'  value='" + tempQuantity + "'  class='importtext-box' id='aQuantity_" + obj.aData.ID + "' style='width:300px;' />";
                    }
                });
            }

        });

    }
</script>