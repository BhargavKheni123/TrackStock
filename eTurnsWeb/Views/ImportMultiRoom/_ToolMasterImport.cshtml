@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("toolname"))
    {
        <th>
            <em>* </em>
            @ResToolMaster.ToolName
        </th>
    }
    @if (arrcolumns.Contains("serial"))
    {
        <th>
            <em>* </em>
            @ResToolMaster.Serial
        </th>
    }
    @if (arrcolumns.Contains("description"))
    {
        <th>
            @ResToolMaster.Description
        </th>
    }
    @if (arrcolumns.Contains("cost"))
    {
        <th>
            @ResToolMaster.Cost
        </th>
    }
    @if (arrcolumns.Contains("quantity"))
    {
        <th>
            <em>* </em>
            @ResToolMaster.Quantity
        </th>
    }
    @if (arrcolumns.Contains("toolcategory"))
    {
        <th>
            @ResToolMaster.ToolCategory
        </th>
    }
    @if (arrcolumns.Contains("location"))
    {
        <th>
            @ResToolMaster.Location
        </th>
    }
    @if (arrcolumns.Contains("udf1"))
    {
        <th>
            @ResToolMaster.UDF1
        </th>
    }
    @if (arrcolumns.Contains("udf2"))
    {
        <th>
            @ResToolMaster.UDF2
        </th>
    }
    @if (arrcolumns.Contains("udf3"))
    {
        <th>
            @ResToolMaster.UDF3
        </th>
    }
    @if (arrcolumns.Contains("udf4"))
    {
        <th>
            @ResToolMaster.UDF4
        </th>
    }
    @if (arrcolumns.Contains("udf5"))
    {
        <th>
            @ResToolMaster.UDF5
        </th>
    }
    @if (arrcolumns.Contains("isgroupofitems"))
    {
        <th>
            @ResToolMaster.IsGroupOfItems
        </th>
    }
    @if (arrcolumns.Contains("technician"))
    {
        <th>
            @ResToolMaster.Technician
        </th>
    }
    @if (arrcolumns.Contains("checkoutquantity"))
    {
        <th>
            @ResToolCheckInHistory.CheckedOutQTY
        </th>
    }
    @if (arrcolumns.Contains("checkinquantity"))
    {
        <th>
            @ResToolCheckInOutHistory.CheckinQuantity

        </th>
    }
    @if (arrcolumns.Contains("checkoutudf1"))
    {
        <th>
            @ResToolCheckInOutHistory.CheckOutUDF1
        </th>
    }
    @if (arrcolumns.Contains("checkoutudf2"))
    {
        <th>
            @ResToolCheckInOutHistory.CheckOutUDF2
        </th>
    }
    @if (arrcolumns.Contains("checkoutudf3"))
    {
        <th>
            @ResToolCheckInOutHistory.CheckOutUDF3
        </th>
    }
    @if (arrcolumns.Contains("checkoutudf4"))
    {
        <th>
            @ResToolCheckInOutHistory.CheckOutUDF4
        </th>
    }
    @if (arrcolumns.Contains("checkoutudf5"))
    {
        <th>
            @ResToolCheckInOutHistory.CheckOutUDF5
        </th>
    }
    @if (arrcolumns.Contains("imagepath"))
    {
        <th>
            @ResToolMaster.ImagePath
        </th>
    }
    @if (arrcolumns.Contains("toolimageexternalurl"))
    {
        <th>
            @ResToolMaster.ToolImageExternalURL
        </th>
    }
    @*@if (arrcolumns.Contains("serialnumbertracking"))
    {
        <th>
            @ResToolMaster.SerialNumberTracking
        </th>
    }*@
    
</tr>
<script type="text/javascript">
    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.ToolMaster)') {
        $(function (event) {
            if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";
                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }

                        // return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='Status' style='width:100px;color:" + forcol + ";border:1px solid " + bodcol + "' />"
                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason.substring(0, 255);
                        return "<span id='Reason'  style='width:100px;'>" + tempUDF5 + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("toolname")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDataPullQnt = obj.aData.ToolName == null ? "" : obj.aData.ToolName.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aToolName_" + obj.aData.ID + "' style='width:300px;' />" +
                                                "<span id='ToolID' style='display:none'>" + obj.aData.ID + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("serial")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDataPullQnt = obj.aData.Serial == null ? "" : obj.aData.Serial.substring(0, 128);
                        if (tempDataPullQnt != '')
                        {
                            tempDataPullQnt = $.trim(tempDataPullQnt);
                        }
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "'  class='importtext-box' id='aSerial_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("description")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDataPullQnt = obj.aData.Description == null ? "" : obj.aData.Description.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "' class='importtext-box' id='aDescription_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("cost")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDataPullQnt = obj.aData.Cost == null ? "" : obj.aData.Cost;
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "' onkeypress='return isNumberKey(event);' class='numericDecimalinput importtext-box' id='aCost_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("quantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDataPullQnt = obj.aData.Quantity == null ? "" : obj.aData.Quantity;
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "' onblur='return ValidateValueWithDataType();'  onkeypress='return isNumberKey(event);' class='numericDecimalinput importtext-box' id='aQuantity_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("toolcategory")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDataPullQnt = obj.aData.ToolCategory == null ? "" : obj.aData.ToolCategory.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "'  class='importtext-box' id='aToolCategory_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("location")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        var tempDataPullQnt = obj.aData.Location == null ? "" : obj.aData.Location.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "'  class='importtext-box' id='aLocation_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("udf1")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF1 = obj.aData.UDF1 == null ? "" : obj.aData.UDF1.substring(0, 255);
                        return "<input type='text' value='" + tempUDF1 + "' maxLength='255' class='importtext-box' id='aUDF1' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf2")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF2 = obj.aData.UDF2 == null ? "" : obj.aData.UDF2.substring(0, 255);
                        return "<input type='text' value='" + tempUDF2 + "' maxLength='255'  class='importtext-box'  id='aUDF2' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf3")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF3 = obj.aData.UDF3 == null ? "" : obj.aData.UDF3.substring(0, 255);
                        return "<input type='text' value='" + tempUDF3 + "'  maxLength='255'  class='importtext-box'  id='aUDF3' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf4")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF4 = obj.aData.UDF4 == null ? "" : obj.aData.UDF4.substring(0, 255);
                        return "<input type='text' value='" + tempUDF4 + "'  maxLength='255'  class='importtext-box'  id='aUDF4' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf5")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.UDF5 == null ? "" : obj.aData.UDF5.substring(0, 255);
                        return "<input type='text' value='" + tempUDF5 + "'  maxLength='255' class='importtext-box'  id='aUDF5' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("isgroupofitems")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempisgrpitems = obj.aData.IsGroupOfItems == null ? "0" : obj.aData.IsGroupOfItems;
                        if (tempisgrpitems != "" || tempisgrpitems == "1") {
                            tempisgrpitems = "checked=\"checked\""
                        }
                        else { tempisgrpitems = ""; }
                        return "<input type='checkbox'" + tempisgrpitems + " id='aisgroupofitems_" + obj.aData.ID + "' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("technician")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempTechnician = obj.aData.Technician == null ? "" : obj.aData.Technician.substring(0, 255);
                        return "<input type='text' value='" + tempTechnician + "'  maxLength='255' class='importtext-box'  id='aTechnician_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("checkoutquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCheckOutQty = obj.aData.CheckOutQuantity == null ? "" : obj.aData.CheckOutQuantity;
                        return "<input type='text' maxLength='128'  value='" + tempCheckOutQty + "' onblur='return ValidateValueWithDataType();'  onkeypress='return isNumberKey(event);' class='numericDecimalinput importtext-box' id='aCheckOutQty_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("checkinquantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCheckInQty = obj.aData.CheckInQuantity == null ? "" : obj.aData.CheckInQuantity;
                        return "<input type='text' maxLength='128'  value='" + tempCheckInQty + "' onblur='return ValidateValueWithDataType();'  onkeypress='return isNumberKey(event);' class='numericDecimalinput importtext-box' id='aCheckInQty_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("checkoutudf1")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCheckOutUDF1 = obj.aData.CheckOutUDF1 == null ? "" : obj.aData.CheckOutUDF1;
                        return "<input type='text' maxLength='128'  value='" + tempCheckOutUDF1 + "' class='importtext-box' id='aCheckOutUDF1' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("checkoutudf2")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCheckOutUDF2 = obj.aData.CheckOutUDF2 == null ? "" : obj.aData.CheckOutUDF2;
                        return "<input type='text' maxLength='128'  value='" + tempCheckOutUDF2 + "' class='importtext-box' id='aCheckOutUDF2' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("checkoutudf3")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCheckOutUDF3 = obj.aData.CheckOutUDF3 == null ? "" : obj.aData.CheckOutUDF3;
                        return "<input type='text' maxLength='128'  value='" + tempCheckOutUDF3 + "' class='importtext-box' id='aCheckOutUDF3' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("checkoutudf4")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCheckOutUDF4 = obj.aData.CheckOutUDF4 == null ? "" : obj.aData.CheckOutUDF4;
                        return "<input type='text' maxLength='128'  value='" + tempCheckOutUDF4 + "' class='importtext-box' id='aCheckOutUDF4' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("checkoutudf5")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCheckOutUDF5 = obj.aData.CheckOutUDF5 == null ? "" : obj.aData.CheckOutUDF5;
                        return "<input type='text' maxLength='128'  value='" + tempCheckOutUDF5 + "' class='importtext-box' id='aCheckOutUDF5' style='width:300px;' />"

                    }
                });
            }

            if ('@arrcolumns.Contains("imagepath")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var ImagePath = obj.aData.ImagePath == null ? "" : obj.aData.ImagePath.substring(0, 255);

                        return "<input type='text' value='" + ImagePath + "' maxLength='255'  class='importtext-box' id='aImagePath_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }

            if ('@arrcolumns.Contains("toolimageexternalurl")') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        return "<input type='text' maxLength='500'  value='" + obj.aData.ToolImageExternalURL + "' class='importtext-box' id='aToolImageExternalURL_" + obj.aData.ID + "'  />"
                    }
                });
            }
            @*if ('@arrcolumns.Contains("serialnumbertracking")') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var SerialNumberTracking = obj.aData.SerialNumberTracking == null ? "" : obj.aData.SerialNumberTracking;
                        if (SerialNumberTracking != "" || SerialNumberTracking == "true") {
                            SerialNumberTracking = "checked=\"checked\""
                        }
                        else { SerialNumberTracking = ""; }
                        return "<input type='checkbox'" + SerialNumberTracking + "id='aSerialNumberTracking_" + obj.aData.ID + "' onchange='CheckLotSerial(this);' />"
                    }
                });
            }*@
            
        });


    }

</script>