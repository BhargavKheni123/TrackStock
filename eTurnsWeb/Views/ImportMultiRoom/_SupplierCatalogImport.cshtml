@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("itemnumber"))
    {
        <th>
            <em>* </em>
            @ResItemMaster.ItemNumber
        </th>
    }
    @if (arrcolumns.Contains("description"))
    {
        <th>
            @ResItemMaster.Description
        </th>
    }
    @if (arrcolumns.Contains("sellprice"))
    {
        <th>
            @ResItemMaster.SellPrice
        </th>
    }
    @*@if (arrcolumns.Contains("packingquantity"))
    {
        <th>
            @ResItemMaster.PackingQuantity
        </th>
    }*@
    @if (arrcolumns.Contains("manufacturerpartnumber"))
    {
        <th>
            @ResItemMaster.ManufacturerpartNumber
        </th>
    }
    @if (arrcolumns.Contains("imagepath"))
    {
        <th>
            @ResItemMaster.ImagePath
        </th>
    }
    @if (arrcolumns.Contains("upc"))
    {
        <th>
            @ResItemMaster.UPC
        </th>
    }
    @if (arrcolumns.Contains("supplierpartnumber"))
    {
        <th>
            @*<em>* </em>*@
            @ResItemMaster.SupplierPartNumber
        </th>
    }
    @if (arrcolumns.Contains("suppliername"))
    {
        <th>
            @*<em>* </em>*@
            @ResItemMaster.Supplier
        </th>
    }
    @if (arrcolumns.Contains("manufacturername"))
    {
        <th>
            @ResItemMaster.ManufacturerName
        </th>
    }
    @*@if (arrcolumns.Contains("concatedcolumntext"))
    {
        <th>
            @ResItemMaster.ConcatedColumnText
        </th>
    }*@
    @if (arrcolumns.Contains("uom"))
    {
        <th>
            @*<em>* </em>*@
            @ResUnitMaster.Unit
        </th>
    }
    @if (arrcolumns.Contains("costuom"))
    {
        <th>
            @*<em>* </em>*@
            @ResCostUOMMaster.CostUOM
        </th>
    }
    @if (arrcolumns.Contains("cost"))
    {
        <th>
            @ResItemMaster.Cost
        </th>
    }
</tr>
<script type="text/javascript">

    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.Suppliercatalog)')
    {
        $(function (event) {
            if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";
                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }

                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason;//.substring(0, 255);
                        return "<span id='Reason'  style='width:450px;'>" + tempUDF5 + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("itemnumber")' == 'True')
            {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempItemNo = obj.aData.ItemNumber == null ? "" : obj.aData.ItemNumber.substring(0, 100);
                        return '<input type="text" value="' + tempItemNo + '"  maxLength="100" onblur="return ValidateValueWithDataType();" class="importtext-box" id="aItemNumber_' + obj.aData.Id + '" style="width:300px;" />' + "<span id='ItemID' style='display:none'>" + obj.aData.Id + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("description")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDescription = obj.aData.Description == null ? "" : obj.aData.Description.substring(0, 500);
                        return "<input type='text' value='" + tempDescription + "'  maxLength='500' class='importtext-box' id='aDescription_" + obj.aData.Id + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("sellprice")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var SellPrice = obj.aData.SellPrice == null ? "" : obj.aData.SellPrice;
                        return "<input type='text' value='" + SellPrice + "'   class='numericDecimalinput importtext-box' id='aSellPrice_" + obj.aData.Id + "' style='width:100px;'  />"
                    }
                });
            }
            @*if ('@arrcolumns.Contains("packingquantity")' == 'True')
            {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var packingquantity = obj.aData.PackingQuantity == null ? "" : obj.aData.PackingQuantity;
                        return "<input type='text' value='" + packingquantity + "'    class='numericDecimalinput importtext-box' id='aPackingQuantity_" + obj.aData.Id + "' style='width:100px;'  />"
                    }
                });
            }*@
            if ('@arrcolumns.Contains("manufacturerpartnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempManufacturerNumber = obj.aData.ManufacturerPartNumber == null ? "" : obj.aData.ManufacturerPartNumber.substring(0, 50);
                        return "<input type='text' value='" + tempManufacturerNumber + "'   maxLength='50' onblur='return ValidateValueWithDataType(this);' class='importtext-box' id='aManufacturerPartNumber_" + obj.aData.Id + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("imagepath")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var ImagePath = obj.aData.ImagePath == null ? "" : obj.aData.ImagePath.substring(0, 255);

                        return "<input type='text' value='" + ImagePath + "' maxLength='255'  class='importtext-box' id='aImagePath_" + obj.aData.Id + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("upc")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUPC = obj.aData.UPC == null ? "" : obj.aData.UPC.substring(0, 20);
                        return "<input type='text' value='" + tempUPC + "'  maxLength='20' class='importtext-box' id='aUPC_" + obj.aData.Id + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("supplierpartnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempSupplierPartNo = obj.aData.SupplierPartNumber == null ? "" : obj.aData.SupplierPartNumber.substring(0, 50);
                        return "<input type='text' value='" + tempSupplierPartNo + "'   onblur='return ValidateValueWithDataType(this);' maxLength='50' class='importtext-box' id='aSupplierPartNumber_" + obj.aData.Id + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("suppliername")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempSupplierName = obj.aData.SupplierName == null ? "" : obj.aData.SupplierName.substring(0, 150);
                        return "<input type='text' value='" + tempSupplierName + "'  maxLength='150'  onblur='return ValidateValueWithDataType(this);'  class='importtext-box' id='aSupplierName_" + obj.aData.Id + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("manufacturername")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempManufacturer = obj.aData.ManufacturerName == null ? "" : obj.aData.ManufacturerName.substring(0, 128);
                        return "<input type='text' value='" + tempManufacturer + "'  maxLength='128' onblur='return ValidateValueWithDataType(this);' class='importtext-box' id='aManufacturerName_" + obj.aData.Id + "' style='width:100px;'  />"
                    }
                });
            }
            @*if ('@arrcolumns.Contains("concatedcolumntext")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempBlanketOrderNumber = obj.aData.ConcatedColumnText == null ? "" : obj.aData.ConcatedColumnText;
                        return "<input type='text' value='" + tempBlanketOrderNumber + "'  onblur='return ValidateValueWithDataType(this);'  class='importtext-box' id='aConcatedColumnText_" + obj.aData.Id + "' style='width:100px;'  />"
                    }
                });
            }*@
            if ('@arrcolumns.Contains("uom")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUOM = obj.aData.UOM == null ? "" : obj.aData.UOM.substring(0, 128);
                        return "<input type='text' value='" + tempUOM + "' maxLength='128'  onblur='return ValidateValueWithDataType(this);' class='importtext-box' id='aUOM_" + obj.aData.Id + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("costuom")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCostUOM = obj.aData.CostUOM == null ? "" : obj.aData.CostUOM;
                        return "<input type='text' value='" + tempCostUOM + "'  class='importtext-box' id='aCostUOM_" + obj.aData.Id + "' style='width:100px;'  />"
                    }

                });
            }
            if ('@arrcolumns.Contains("cost")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var Cost = obj.aData.Cost == null ? "" : obj.aData.Cost;
                        return "<input type='text' value='" + Cost + "'    class='numericDecimalinput importtext-box' id='aCost_" + obj.aData.Id + "' style='width:100px;'  />"
                    }
                });

            }            
            //UpdateURL = '@Url.Content("~/ImportMultiRoom/UpdateDataItemSession")';
        });

    }

</script>