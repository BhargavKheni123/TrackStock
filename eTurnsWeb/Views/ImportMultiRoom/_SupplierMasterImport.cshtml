@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("suppliername"))
    {
        <th>
            <em>* </em>
            @ResSupplierMaster.Supplier
        </th>
    }
    @if (arrcolumns.Contains("suppliercolor"))
    {
        <th>
            <em>* </em>
            @ResSupplierMaster.SupplierColor
        </th>
    }
    @if (arrcolumns.Contains("description"))
    {
        <th>
            @ResSupplierMaster.Description
        </th>
    }
    @*@if (arrcolumns.Contains("receiverid"))
        {
            <th>
                @ResSupplierMaster.ReceiverID
            </th>
        }*@
    @if (arrcolumns.Contains("branchnumber"))
    {
        <th>
            @ResSupplierMaster.BranchNumber
        </th>
    }
    @if (arrcolumns.Contains("maximumordersize"))
    {
        <th>
            @ResSupplierMaster.MaximumOrderSize
        </th>
    }
    @if (arrcolumns.Contains("address"))
    {
        <th>
            @ResCommon.Address
        </th>
    }
    @if (arrcolumns.Contains("city"))
    {
        <th>
            @ResCommon.City
        </th>
    }
    @if (arrcolumns.Contains("state"))
    {
        <th>
            @ResCommon.State
        </th>
    }
    @if (arrcolumns.Contains("zipcode"))
    {
        <th>
            @ResCommon.ZipCode
        </th>
    }
    @if (arrcolumns.Contains("country"))
    {
        <th>
            @ResCommon.Country
        </th>
    }
    @if (arrcolumns.Contains("contact"))
    {
        <th>
            <em>* </em>
            @ResSupplierMaster.Contact
        </th>
    }
    @if (arrcolumns.Contains("phone"))
    {
        <th>
            <em>* </em>
            @ResCommon.Phone
        </th>
    }
    @if (arrcolumns.Contains("fax"))
    {
        <th>
            @ResSupplierMaster.Fax
        </th>
    }
    @if (arrcolumns.Contains("email"))
    {
        <th>
            @ResCommon.Email
        </th>
    }
    @if (arrcolumns.Contains("issendtovendor"))
    {
        <th>
            @ResSupplierMaster.IsSendtoVendor
        </th>
    }
    @if (arrcolumns.Contains("isvendorreturnasn"))
    {
        <th>
            @ResSupplierMaster.IsVendorReturnAsn
        </th>
    }
    @if (arrcolumns.Contains("issupplierreceiveskitcomponents"))
    {
        <th>
            @ResSupplierMaster.IsSupplierReceivesKitComponents
        </th>
    }
    @if (arrcolumns.Contains("ordernumbertypeblank"))
    {
        <th>
            @ResSupplierMaster.optBlank
        </th>
    }
    @if (arrcolumns.Contains("ordernumbertypefixed"))
    {
        <th>
            @ResSupplierMaster.optFixed
        </th>
    }
    @if (arrcolumns.Contains("ordernumbertypeblanketordernumber"))
    {
        <th>
            @ResSupplierMaster.optBlanketOrder
        </th>
    }
    @if (arrcolumns.Contains("ordernumbertypeincrementingordernumber"))
    {
        <th>
            @ResSupplierMaster.optIncreamentingbyOrder
        </th>
    }
    @if (arrcolumns.Contains("ordernumbertypeincrementingbyday"))
    {
        <th>
            @ResSupplierMaster.optIncreamentingbyDay
        </th>
    }
    @if (arrcolumns.Contains("ordernumbertypedateincrementing"))
    {
        <th>
            @ResSupplierMaster.optDateIncrementing
        </th>
    }
    @if (arrcolumns.Contains("ordernumbertypedate"))
    {
        <th>
            @ResSupplierMaster.optDate
        </th>
    }
    @*
        @if (arrcolumns.Contains("isemailpoinbody"))
        {
            <th>
                @ResSupplierMaster.EmailPOInBody
            </th>
        }
        @if (arrcolumns.Contains("isemailpoinpdf"))
        {
            <th>
                @ResSupplierMaster.EmailPOInPDF
            </th>
        }
        @if (arrcolumns.Contains("isemailpoincsv"))
        {
            <th>
                @ResSupplierMaster.EmailPOInCSV
            </th>
        }
        @if (arrcolumns.Contains("isemailpoinx12"))
        {
            <th>
                @ResSupplierMaster.EmailPOInX12
            </th>
        }*@
    @if (arrcolumns.Contains("udf1"))
    {
        <th>
            @ResSupplierMaster.UDF1
        </th>
    }
    @if (arrcolumns.Contains("udf2"))
    {
        <th>
            @ResSupplierMaster.UDF2
        </th>
    }
    @if (arrcolumns.Contains("udf3"))
    {
        <th>
            @ResSupplierMaster.UDF3
        </th>
    }
    @if (arrcolumns.Contains("udf4"))
    {
        <th>
            @ResSupplierMaster.UDF4
        </th>
    }
    @if (arrcolumns.Contains("udf5"))
    {
        <th>
            @ResSupplierMaster.UDF5
        </th>
    }
    @if (arrcolumns.Contains("udf6"))
    {
        <th>
            @ResSupplierMaster.UDF6
        </th>
    }
    @if (arrcolumns.Contains("udf7"))
    {
        <th>
            @ResSupplierMaster.UDF7
        </th>
    }
    @if (arrcolumns.Contains("udf8"))
    {
        <th>
            @ResSupplierMaster.UDF8
        </th>
    }
    @if (arrcolumns.Contains("udf9"))
    {
        <th>
            @ResSupplierMaster.UDF9
        </th>
    }
    @if (arrcolumns.Contains("udf10"))
    {
        <th>
            @ResSupplierMaster.UDF10
        </th>
    }
    @if (arrcolumns.Contains("accountnumber"))
    {
        <th>
            <em>* </em>
            @ResSupplierAccountDetails.AccountNo
        </th>
    }
    @if (arrcolumns.Contains("accountname"))
    {
        <th>
            <em>* </em>
            @ResSupplierAccountDetails.AccountName
        </th>
    }
    @if (arrcolumns.Contains("accountaddress"))
    {
        <th>
            @ResSupplierAccountDetails.AccountAddress
        </th>
    }
    @if (arrcolumns.Contains("accountcity"))
    {
        <th>
            @ResSupplierAccountDetails.AccountCity
        </th>
    }
    @if (arrcolumns.Contains("accountstate"))
    {
        <th>
            @ResSupplierAccountDetails.AccountState
        </th>
    }
    @if (arrcolumns.Contains("accountzip"))
    {
        <th>
            @ResSupplierAccountDetails.AccountZip
        </th>
    }
    @if (arrcolumns.Contains("accountcountry"))
    {
        <th>
            @ResCommon.Country
        </th>
    }
    @if (arrcolumns.Contains("accountshiptoid"))
    {
        <th>
            @ResSupplierAccountDetails.ShipToID
        </th>
    }
    @if (arrcolumns.Contains("accountisdefault"))
    {
        <th>
            @ResSupplierAccountDetails.AccountIsDefault
        </th>
    }
    @if (arrcolumns.Contains("blanketponumber"))
    {
        <th>
            @ResSupplierBlanketPODetails.BlanketPO
        </th>
    }
    @if (arrcolumns.Contains("startdate"))
    {
        <th>
            @ResSupplierBlanketPODetails.StartDate
        </th>
    }
    @if (arrcolumns.Contains("enddate"))
    {
        <th>
            @ResSupplierBlanketPODetails.Enddate
        </th>
    }
    @if (arrcolumns.Contains("maxlimit"))
    {
        <th>
            @ResSupplierBlanketPODetails.MaxLimit
        </th>
    }
    @if (arrcolumns.Contains("donotexceed"))
    {
        <th>
            @ResSupplierBlanketPODetails.IsNotExceed
        </th>
    }

    @if (arrcolumns.Contains("maxlimitqty"))
    {
        <th>
            @ResSupplierBlanketPODetails.MaxLimitQty
        </th>
    }
    @if (arrcolumns.Contains("donotexceedqty"))
    {
        <th>
            @ResSupplierBlanketPODetails.IsNotExceedQty
        </th>
    }

    @if (arrcolumns.Contains("pullpurchasenumberfixed"))
    {
        <th>
            @ResSupplierMaster.PullPurchaseNumberFixed
        </th>
    }
    @if (arrcolumns.Contains("pullpurchasenumberblanketorder"))
    {
        <th>
            @ResSupplierMaster.PullPurchaseNumberBlanketOrder
        </th>
    }
    @if (arrcolumns.Contains("pullpurchasenumberdateincrementing"))
    {
        <th>
            @ResSupplierMaster.PullPurchaseNumberDateIncrementing
        </th>
    }
    @if (arrcolumns.Contains("pullpurchasenumberdate"))
    {
        <th>
            @ResSupplierMaster.PullPurchaseNumberDate
        </th>
    }
    @if (arrcolumns.Contains("lastpullpurchasenumberused"))
    {
        <th>
            @ResSupplierMaster.LastPullPurchaseNumberUsed
        </th>
    }
    @if (arrcolumns.Contains("isblanketdeleted"))
    {
        <th>
            @ResSupplierMaster.IsBlanketDeleted
        </th>
    }
    @if (arrcolumns.Contains("supplierimage"))
    {
        <th>
            @ResSupplierMaster.SupplierImage
        </th>
    }
    @if (arrcolumns.Contains("imageexternalurl"))
    {
        <th>
            @ResSupplierMaster.ImageExternalURL
        </th>
    }
</tr>
<script type="text/javascript">
    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.SupplierMaster)') {
        $(function (event) {
            // ColumnObject.push({ mDataProp: "ID", sClass: "read_only" });
            if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";
                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }

                        // return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='Status' style='width:100px;color:" + forcol + ";border:1px solid " + bodcol + "' />"
                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason;//.substring(0, 255);
                        return "<span id='Reason'  style='width:100px;'>" + tempUDF5 + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("suppliername")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.SupplierName == null ? "" : obj.aData.SupplierName.substring(0, 255);
                        return "<input type='text' value='" + tempDataPullQnt + "'  maxLength='255' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aSupplier_" + obj.aData.ID + "' style='width:300px;' />" +
                                                "<span id='SupplierID' style='display:none'>" + obj.aData.ID + "</span>"
                    }
                });
            }
            if ('@arrcolumns.Contains("suppliercolor")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempSupplierColor = obj.aData.SupplierColor == null ? "" : obj.aData.SupplierColor.substring(0, 127);
                        return "<input type='text' value='" + tempSupplierColor + "'  maxLength='127' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aSupplierColor_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("description")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDescription = obj.aData.Description == null ? "" : obj.aData.Description.substring(0, 1024);
                        return "<input type='text' value='" + tempDescription + "'  maxLength='1024' class='importtext-box' id='aDescription_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
                //                ColumnObject.push({ "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                //                    "fnRender": function (obj, val) {
                //                        var tempAccountNo = obj.aData.AccountNo == null ? "" : obj.aData.AccountNo.substring(0, 64);
                //                        return "<input type='text' value='" + tempAccountNo + "'  maxLength='64'  class='importtext-box' id='aAccountNo_" + obj.aData.ID + "' style='width:100px;'  />"
                //                    }
                //                });
            }
            //                if ('@arrcolumns.Contains("receiverid")' == 'True') {
            //                    ColumnObject.push({
            //                        "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
            //                        "fnRender": function (obj, val) {
            //                            var tempReceiverID = obj.aData.ReceiverID == null ? "" : obj.aData.ReceiverID.substring(0, 64);
            //                            return "<input type='text' value='" + tempReceiverID + "'  maxLength='64' class='importtext-box' id='aReceiverID_" + obj.aData.ID + "' style='width:100px;'  />"
            //                        }
            //                    });
            //                }

            if ('@arrcolumns.Contains("branchnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempBranchNumber = obj.aData.BranchNumber == null ? "" : obj.aData.BranchNumber.substring(0, 127);
                        return "<input type='text' value='" + tempBranchNumber + "'  maxLength='127' class='importtext-box' id='aBranchNumber_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }

            if ('@arrcolumns.Contains("maximumordersize")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempMaximumOrderSize = obj.aData.MaximumOrderSize == null ? "" : obj.aData.MaximumOrderSize;
                        return "<input type='text' value='" + tempMaximumOrderSize + "'  maxLength='127' class='importtext-box' id='aMaximumOrderSize_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("address")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAddress = obj.aData.Address == null ? "" : obj.aData.Address.substring(0, 1027);
                        return "<input type='text' value='" + tempAddress + "'  maxLength='1027' class='importtext-box' id='aAddress_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("city")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCity = obj.aData.City == null ? "" : obj.aData.City.substring(0, 127);
                        return "<input type='text' value='" + tempCity + "'  maxLength='127' class='importtext-box' id='aCity_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("state")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempState = obj.aData.State == null ? "" : obj.aData.State.substring(0, 255);
                        return "<input type='text' value='" + tempState + "'  maxLength='255' class='importtext-box' id='aState_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("zipcode")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempZipCode = obj.aData.ZipCode == null ? "" : obj.aData.ZipCode.substring(0, 20);
                        return "<input type='text' value='" + tempZipCode + "'  maxLength='20' class='importtext-box' id='aZipCode_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("country")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCountry = obj.aData.Country == null ? "" : obj.aData.Country.substring(0, 127);
                        return "<input type='text' value='" + tempCountry + "'  maxLength='127' class='importtext-box' id='aCountry_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("contact")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempContact = obj.aData.Contact == null ? "" : obj.aData.Contact.substring(0, 127);
                        return "<input type='text' value='" + tempContact + "'  maxLength='127' class='importtext-box' id='aContact_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("phone")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempPhone = obj.aData.Phone == null ? "" : obj.aData.Phone.substring(0, 20);
                        return "<input type='text' value='" + tempPhone + "'  maxLength='20' class='importtext-box' id='aPhone_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("fax")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempFax = obj.aData.Fax == null ? "" : obj.aData.Fax.substring(0, 20);
                        return "<input type='text' value='" + tempFax + "' maxLength='20'  class='importtext-box' id='aFax_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("email")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempEmail = obj.aData.Email == null ? "" : obj.aData.Email.substring(0, 255);
                        return "<input type='text' value='" + tempEmail + "' maxLength='255'   onblur='return ValidateValueWithDataType();' class='importtext-box' id='aEmail_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("issendtovendor")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempIsSendtoVendor = obj.aData.IsSendtoVendor == null ? "" : obj.aData.IsSendtoVendor;
                        if (tempIsSendtoVendor != "" || tempIsSendtoVendor == "true") {
                            tempIsSendtoVendor = "checked=\"checked\""
                        }
                        else { tempIsSendtoVendor = ""; }
                        return "<input type='checkbox'" + tempIsSendtoVendor + " id='aIsSendtoVendor_" + obj.aData.ID + "' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("isvendorreturnasn")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempIsVendorReturnAsn = obj.aData.IsVendorReturnAsn == null ? "" : obj.aData.IsVendorReturnAsn;
                        if (tempIsVendorReturnAsn != "" || tempIsVendorReturnAsn == "true") {
                            tempIsVendorReturnAsn = "checked=\"checked\""
                        }
                        else { tempIsVendorReturnAsn = ""; }
                        return "<input type='checkbox'" + tempIsVendorReturnAsn + " id='aIsVendorReturnAsn_" + obj.aData.ID + "' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("issupplierreceiveskitcomponents")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempIsSupplierReceivesKitComponents = obj.aData.IsSupplierReceivesKitComponents == null ? "" : obj.aData.IsSupplierReceivesKitComponents;
                        if (tempIsSupplierReceivesKitComponents != "" || tempIsSupplierReceivesKitComponents == "true") {
                            tempIsSupplierReceivesKitComponents = "checked=\"checked\""
                        }
                        else { tempIsSupplierReceivesKitComponents = ""; }
                        return "<input type='checkbox'" + tempIsSupplierReceivesKitComponents + " id='aIsSupplierReceivesKitComponents_" + obj.aData.ID + "' />"
                    }
                });
            }


            //                if ('@arrcolumns.Contains("isemailpoinbody")' == 'True') {
            //                    ColumnObject.push({
            //                        "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
            //                        "fnRender": function (obj, val) {
            //                            var tempIsEmailPOInBody = obj.aData.IsEmailPOInBody == null ? "false" : obj.aData.IsEmailPOInBody;
            //                            if (tempIsEmailPOInBody != "" || tempIsEmailPOInBody == "true") {
            //                                tempIsEmailPOInBody = "checked=\"checked\""
            //                            }
            //                            else { tempIsEmailPOInBody = ""; }
            //                            return "<input type='checkbox' " + tempIsEmailPOInBody + " id='aIsEmailPOInBody_" + obj.aData.ID + "'  />"
            //                        }
            //                    });
            //                }
            //                if ('@arrcolumns.Contains("isemailpoinpdf")' == 'True') {
            //                    ColumnObject.push({
            //                        "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
            //                        "fnRender": function (obj, val) {
            //                            var tempIsEmailPOInPDF = obj.aData.IsEmailPOInPDF == null ? "false" : obj.aData.IsEmailPOInPDF;
            //                            if (tempIsEmailPOInPDF != "" || tempIsEmailPOInPDF == "true") {
            //                                tempIsEmailPOInPDF = "checked=\"checked\""
            //                            }
            //                            else { tempIsEmailPOInPDF = ""; }
            //                            return "<input type='checkbox' " + tempIsEmailPOInPDF + " id='aIsEmailPOInPDF_" + obj.aData.ID + "'  />"
            //                        }
            //                    });
            //                }
            //                if ('@arrcolumns.Contains("isemailpoincsv")' == 'True') {
            //                    ColumnObject.push({
            //                        "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
            //                        "fnRender": function (obj, val) {
            //                            var tempIsEmailPOInCSV = obj.aData.IsEmailPOInCSV == null ? "false" : obj.aData.IsEmailPOInCSV;
            //                            if (tempIsEmailPOInCSV != "" || tempIsEmailPOInCSV == "true") {
            //                                tempIsEmailPOInCSV = "checked=\"checked\""
            //                            }
            //                            else { tempIsEmailPOInCSV = ""; }
            //                            return "<input type='checkbox' " + tempIsEmailPOInCSV + " id='aIsEmailPOInCSV_" + obj.aData.ID + "'  />"
            //                        }
            //                    });
            //                }
            //                if ('@arrcolumns.Contains("isemailpoinx12")' == 'True') {
            //                    ColumnObject.push({
            //                        "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
            //                        "fnRender": function (obj, val) {
            //                            var tempIsEmailPOInX12 = obj.aData.IsEmailPOInX12 == null ? "" : obj.aData.IsEmailPOInX12;
            //                            if (tempIsEmailPOInX12 != "" || tempIsEmailPOInX12 == "true") {
            //                                tempIsEmailPOInX12 = "checked=\"checked\""
            //                            }
            //                            else { tempIsEmailPOInX12 = ""; }
            //                            return "<input type='checkbox'" + tempIsEmailPOInX12 + "id='aIsEmailPOInX12_" + obj.aData.ID + "' />"
            //                        }
            //                    });
            //                }
            if ('@arrcolumns.Contains("ordernumbertypeblank")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempOrderNumberTypeBlank = obj.aData.OrderNumberTypeBlank == null ? "" : obj.aData.OrderNumberTypeBlank;
                        if (tempOrderNumberTypeBlank != "" || tempOrderNumberTypeBlank == "true") {
                            tempOrderNumberTypeBlank = "checked=\"checked\""
                        }
                        else { tempOrderNumberTypeBlank = ""; }
                        return "<input type='checkbox'" + tempOrderNumberTypeBlank + " id='aOrderNumberTypeBlank_" + obj.aData.ID + "' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("ordernumbertypefixed")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempOrderNumberTypeFixed = obj.aData.OrderNumberTypeFixed == null ? "" : obj.aData.OrderNumberTypeFixed;
                        if (tempOrderNumberTypeFixed != "" || tempOrderNumberTypeFixed == "true") {
                            tempOrderNumberTypeFixed = "checked=\"checked\""
                        }
                        else { tempOrderNumberTypeFixed = ""; }
                        return "<input type='checkbox'" + tempOrderNumberTypeFixed + " id='aOrderNumberTypeFixed_" + obj.aData.ID + "' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("ordernumbertypeblanketordernumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempOrderNumberTypeBlanketOrderNumber = obj.aData.OrderNumberTypeBlanketOrderNumber == null ? "" : obj.aData.OrderNumberTypeBlanketOrderNumber;
                        if (tempOrderNumberTypeBlanketOrderNumber != "" || tempOrderNumberTypeBlanketOrderNumber == "true") {
                            tempOrderNumberTypeBlanketOrderNumber = "checked=\"checked\""
                        }
                        else { tempOrderNumberTypeBlanketOrderNumber = ""; }
                        return "<input type='checkbox'" + tempOrderNumberTypeBlanketOrderNumber + " id='aOrderNumberTypeBlanketOrderNumber_" + obj.aData.ID + "' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("ordernumbertypeincrementingordernumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempOrderNumberTypeIncrementingOrderNumber = obj.aData.OrderNumberTypeIncrementingOrderNumber == null ? "" : obj.aData.OrderNumberTypeIncrementingOrderNumber;
                        if (tempOrderNumberTypeIncrementingOrderNumber != "" || tempOrderNumberTypeIncrementingOrderNumber == "true") {
                            tempOrderNumberTypeIncrementingOrderNumber = "checked=\"checked\""
                        }
                        else { tempOrderNumberTypeIncrementingOrderNumber = ""; }
                        return "<input type='checkbox'" + tempOrderNumberTypeIncrementingOrderNumber + " id='aOrderNumberTypeIncrementingOrderNumber_" + obj.aData.ID + "' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("ordernumbertypeincrementingbyday")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempOrderNumberTypeIncrementingbyDay = obj.aData.OrderNumberTypeIncrementingbyDay == null ? "" : obj.aData.OrderNumberTypeIncrementingbyDay;
                        if (tempOrderNumberTypeIncrementingbyDay != "" || tempOrderNumberTypeIncrementingbyDay == "true") {
                            tempOrderNumberTypeIncrementingbyDay = "checked=\"checked\""
                        }
                        else { tempOrderNumberTypeIncrementingbyDay = ""; }
                        return "<input type='checkbox' " + tempOrderNumberTypeIncrementingbyDay + " id='aOrderNumberTypeIncrementingbyDay_" + obj.aData.ID + "' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("ordernumbertypedateincrementing")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempOrderNumberTypeDateIncrementing = obj.aData.OrderNumberTypeDateIncrementing == null ? "" : obj.aData.OrderNumberTypeDateIncrementing;
                        if (tempOrderNumberTypeDateIncrementing != "" || tempOrderNumberTypeDateIncrementing == "true") {
                            tempOrderNumberTypeDateIncrementing = "checked=\"checked\""
                        }
                        else { tempOrderNumberTypeDateIncrementing = ""; }
                        return "<input type='checkbox' " + tempOrderNumberTypeDateIncrementing + " id='aOrderNumberTypeDateIncrementing_" + obj.aData.ID + "' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("ordernumbertypedate")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempOrderNumberTypeDate = obj.aData.OrderNumberTypeDate == null ? "" : obj.aData.OrderNumberTypeDate;
                        if (tempOrderNumberTypeDate != "" || tempOrderNumberTypeDate == "true") {
                            tempOrderNumberTypeDate = "checked=\"checked\""
                        }
                        else { tempOrderNumberTypeDate = ""; }
                        return "<input type='checkbox' " + tempOrderNumberTypeDate + " id='aOrderNumberTypeDate_" + obj.aData.ID + "' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf1")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF1 = obj.aData.UDF1 == null ? "" : obj.aData.UDF1.substring(0, 255);
                        return "<input type='text' value='" + tempUDF1 + "'  maxLength='255'  class='importtext-box' id='aUDF1' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf2")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF2 = obj.aData.UDF2 == null ? "" : obj.aData.UDF2.substring(0, 255);
                        return "<input type='text' value='" + tempUDF2 + "'  maxLength='255'  class='importtext-box'  id='aUDF2' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf3")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF3 = obj.aData.UDF3 == null ? "" : obj.aData.UDF3.substring(0, 255);
                        return "<input type='text' value='" + tempUDF3 + "'  maxLength='255'  class='importtext-box'  id='aUDF3' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf4")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF4 = obj.aData.UDF4 == null ? "" : obj.aData.UDF4.substring(0, 255);
                        return "<input type='text' value='" + tempUDF4 + "'  maxLength='255'  class='importtext-box'  id='aUDF4' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf5")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.UDF5 == null ? "" : obj.aData.UDF5.substring(0, 255);
                        return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='aUDF5' style='width:100px;' />"
                    }
                });
            }
             if ('@arrcolumns.Contains("udf6")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF6 = obj.aData.UDF6 == null ? "" : obj.aData.UDF6.substring(0, 255);
                        return "<input type='text' value='" + tempUDF6 + "'  maxLength='255'  class='importtext-box'  id='aUDF6' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf7")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF7 = obj.aData.UDF7 == null ? "" : obj.aData.UDF7.substring(0, 255);
                        return "<input type='text' value='" + tempUDF7 + "'  maxLength='255'  class='importtext-box'  id='aUDF7' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf8")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF8 = obj.aData.UDF8 == null ? "" : obj.aData.UDF8.substring(0, 255);
                        return "<input type='text' value='" + tempUDF8 + "'  maxLength='255'  class='importtext-box'  id='aUDF8' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf9")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF9 = obj.aData.UDF9 == null ? "" : obj.aData.UDF9.substring(0, 255);
                        return "<input type='text' value='" + tempUDF9 + "'  maxLength='255'  class='importtext-box'  id='aUDF9' style='width:100px;' />"
                    }
                });
            }
             if ('@arrcolumns.Contains("udf10")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF10 = obj.aData.UDF10 == null ? "" : obj.aData.UDF10.substring(0, 255);
                        return "<input type='text' value='" + tempUDF10 + "'  maxLength='255'  class='importtext-box'  id='aUDF10' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("accountnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAccountNumber = obj.aData.AccountNumber == null ? "" : obj.aData.AccountNumber.substring(0, 255);
                        return "<input type='text' value='" + tempAccountNumber + "'  maxLength='255'  class='importtext-box'  id='aAccountNumber_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("accountname")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAccountName = obj.aData.AccountName == null ? "" : obj.aData.AccountName.substring(0, 255);
                        return "<input type='text' value='" + tempAccountName + "'  maxLength='255'  class='importtext-box'  id='aAccountName_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("accountaddress")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAccountAddress = obj.aData.AccountAddress == null ? "" : obj.aData.AccountAddress.substring(0, 255);
                        return "<input type='text' value='" + tempAccountAddress + "'  maxLength='255'  class='importtext-box'  id='aAccountAddress_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("accountcity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAccountCity = obj.aData.AccountCity == null ? "" : obj.aData.AccountCity.substring(0, 255);
                        return "<input type='text' value='" + tempAccountCity + "'  maxLength='255'  class='importtext-box'  id='aAccountCity_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("accountstate")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAccountState = obj.aData.AccountState == null ? "" : obj.aData.AccountState.substring(0, 255);
                        return "<input type='text' value='" + tempAccountState + "'  maxLength='255'  class='importtext-box'  id='aAccountState_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("accountzip")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAccountZip = obj.aData.AccountZip == null ? "" : obj.aData.AccountZip.substring(0, 255);
                        return "<input type='text' value='" + tempAccountZip + "'  maxLength='255'  class='importtext-box'  id='aAccountZip_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("accountcountry")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAccountCountry = obj.aData.AccountCountry == null ? "" : obj.aData.AccountCountry.substring(0, 127);
                        return "<input type='text' value='" + tempAccountCountry + "'  maxLength='127'  class='importtext-box'  id='aAccountCountry_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("accountshiptoid")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAccountShipToID = obj.aData.AccountShipToID == null ? "" : obj.aData.AccountShipToID.substring(0, 127);
                        return "<input type='text' value='" + tempAccountShipToID + "'  maxLength='127'  class='importtext-box'  id='aAccountShipToID_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("accountisdefault")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempAccountIsDefault = obj.aData.AccountIsDefault == null ? "" : obj.aData.AccountIsDefault;
                        if (tempAccountIsDefault != "" || tempAccountIsDefault == "true") {
                            tempAccountIsDefault = "checked=\"checked\""
                        }
                        else { tempAccountIsDefault = ""; }
                        return "<input type='checkbox'" + tempAccountIsDefault + " id='aAccountIsDefault_" + obj.aData.ID + "' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("blanketponumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempBlanketPONumber = obj.aData.BlanketPONumber == null ? "" : obj.aData.BlanketPONumber.substring(0, 255);
                        return "<input type='text' value='" + tempBlanketPONumber + "'  maxLength='255'  class='importtext-box'  id='aBlanketPONumber_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("startdate")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempStartDate = obj.aData.StartDate == null ? "" : JSONDate(obj.aData.StartDate);
                        return "<input type='text' value='" + tempStartDate + "'  maxLength='255'  class='importtext-box'  id='aStartDate_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("enddate")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempEndDate = obj.aData.EndDate == null ? "" : JSONDate(obj.aData.EndDate);
                        return "<input type='text' value='" + tempEndDate + "'  maxLength='255'  class='importtext-box'  id='aEndDate_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("maxlimit")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempMaxLimit = obj.aData.MaxLimit == null ? "" : obj.aData.MaxLimit;
                        return "<input type='text' value='" + tempMaxLimit + "'  maxLength='8'  onkeypress='return isNumberKey(event);' class='importtext-box'  id='aMaxLimit_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("donotexceed")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDoNotExceed = obj.aData.IsNotExceed == null ? "" : obj.aData.IsNotExceed;
                        if (tempDoNotExceed != "" || tempDoNotExceed == "true") {
                            tempDoNotExceed = "checked=\"checked\""
                        }
                        else { tempDoNotExceed = ""; }
                        return "<input type='checkbox' " + tempDoNotExceed + " id='aDoNotExceed_" + obj.aData.ID + "' />"
                    }
                });
            }


            if ('@arrcolumns.Contains("maxlimitqty")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempMaxLimitQty = obj.aData.MaxLimitQty == null ? "" : obj.aData.MaxLimitQty;
                        return "<input type='text' value='" + tempMaxLimitQty + "' onkeypress='return isNumberKey(event);'  maxLength='8'  class='importtext-box'  id='aMaxLimitQty_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("donotexceedqty")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDoNotExceedQty = obj.aData.IsNotExceedQty == null ? "" : obj.aData.IsNotExceedQty;
                        if (tempDoNotExceedQty != "" || tempDoNotExceedQty == "true") {
                            tempDoNotExceedQty = "checked=\"checked\""
                        }
                        else { tempDoNotExceedQty = ""; }
                        return "<input type='checkbox' " + tempDoNotExceedQty + " id='aDoNotExceedQty_" + obj.aData.ID + "' />"
                    }
                });
            }


            if ('@arrcolumns.Contains("pullpurchasenumberfixed")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempPullPurchaseNumberFixed = obj.aData.PullPurchaseNumberFixed == null ? "" : obj.aData.PullPurchaseNumberFixed;
                        if (tempPullPurchaseNumberFixed != "" || tempPullPurchaseNumberFixed == "true") {
                            tempPullPurchaseNumberFixed = "checked=\"checked\""
                        }
                        else { tempPullPurchaseNumberFixed = ""; }
                        return "<input type='checkbox'" + tempPullPurchaseNumberFixed + " id='aPullPurchaseNumberFixed_" + obj.aData.ID + "' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("pullpurchasenumberblanketorder")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempPullPurchaseNumberBlanketOrder = obj.aData.PullPurchaseNumberBlanketOrder == null ? "" : obj.aData.PullPurchaseNumberBlanketOrder;
                        if (tempPullPurchaseNumberBlanketOrder != "" || tempPullPurchaseNumberBlanketOrder == "true") {
                            tempPullPurchaseNumberBlanketOrder = "checked=\"checked\""
                        }
                        else { tempPullPurchaseNumberBlanketOrder = ""; }
                        return "<input type='checkbox'" + tempPullPurchaseNumberBlanketOrder + " id='aPullPurchaseNumberBlanketOrder_" + obj.aData.ID + "' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("pullpurchasenumberdateincrementing")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempPullPurchaseNumberDateIncrementing = obj.aData.PullPurchaseNumberDateIncrementing == null ? "" : obj.aData.PullPurchaseNumberDateIncrementing;
                        if (tempPullPurchaseNumberDateIncrementing != "" || tempPullPurchaseNumberDateIncrementing == "true") {
                            tempPullPurchaseNumberDateIncrementing = "checked=\"checked\""
                        }
                        else { tempPullPurchaseNumberDateIncrementing = ""; }
                        return "<input type='checkbox'" + tempPullPurchaseNumberDateIncrementing + " id='aPullPurchaseNumberDateIncrementing_" + obj.aData.ID + "' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("pullpurchasenumberdate")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempPullPurchaseNumberDate = obj.aData.PullPurchaseNumberDate == null ? "" : obj.aData.PullPurchaseNumberDate;
                        if (tempPullPurchaseNumberDate != "" || tempPullPurchaseNumberDate == "true") {
                            tempPullPurchaseNumberDate = "checked=\"checked\""
                        }
                        else { tempPullPurchaseNumberDate = ""; }
                        return "<input type='checkbox'" + tempPullPurchaseNumberDate + " id='aPullPurchaseNumberDate_" + obj.aData.ID + "' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("lastpullpurchasenumberused")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempLastPullPurchaseNumberUsed = obj.aData.LastPullPurchaseNumberUsed == null ? "" : obj.aData.LastPullPurchaseNumberUsed.substring(0, 20);
                        return "<input type='text' value='" + tempLastPullPurchaseNumberUsed + "' maxLength='20'  class='importtext-box' id='aLastPullPurchaseNumberUsed_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("isblanketdeleted")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempIsBlanketDeleted = obj.aData.IsBlanketDeleted == null ? "" : obj.aData.IsBlanketDeleted;
                        if (tempIsBlanketDeleted != "" || tempIsBlanketDeleted == "true") {
                            tempIsBlanketDeleted = "checked=\"checked\""
                        }
                        else { tempIsBlanketDeleted = ""; }
                        return "<input type='checkbox'" + tempIsBlanketDeleted + " id='aIsBlanketDeleted_" + obj.aData.ID + "' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("supplierimage")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var SupplierImage = obj.aData.SupplierImage == null ? "" : obj.aData.SupplierImage.substring(0, 255);

                        return "<input type='text' value='" + SupplierImage + "' maxLength='255'  class='importtext-box' id='aSupplierImage_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }

            if ('@arrcolumns.Contains("imageexternalurl")') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        return "<input type='text' maxLength='500'  value='" + obj.aData.ImageExternalURL + "' class='importtext-box' id='aImageExternalURL_" + obj.aData.ID + "'  />"
                    }
                });
            }

            UpdateURL = '@Url.Content("~/ImportMultiRoom/UpdateDataSupplierSession")';
        });

    }
</script>