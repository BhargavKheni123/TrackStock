@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("projectspendname"))
    {
        <th>
            <em>* </em>
            @ResProjectMaster.ProjectSpendName
        </th>
    }
    @if (arrcolumns.Contains("description"))
    {
        <th>
            @ResProjectMaster.Description
        </th>
    }
    @if (arrcolumns.Contains("dollarlimitamount"))
    {
        <th>
            <em>* </em>
            @ResProjectMaster.DollarLimitAmount
        </th>
    }
    @if (arrcolumns.Contains("trackallusageagainstthis"))
    {
        <th>
            @ResProjectMaster.TrackAllUsageAgainstThis
        </th>
    }
    @if (arrcolumns.Contains("isclosed"))
    {
        <th>
            @ResProjectMaster.IsClosed
        </th>
    }
    @if (arrcolumns.Contains("isdeleted"))
    {
        <th>
            @ResProjectMaster.IsDeleted
        </th>
    }
    @if (arrcolumns.Contains("udf1"))
    {
        <th>
            @ResProjectMaster.UDF1
        </th>
    }
    @if (arrcolumns.Contains("udf2"))
    {
        <th>
            @ResProjectMaster.UDF2
        </th>
    }
    @if (arrcolumns.Contains("udf3"))
    {
        <th>
            @ResProjectMaster.UDF3
        </th>
    }
    @if (arrcolumns.Contains("udf4"))
    {
        <th>
            @ResProjectMaster.UDF4
        </th>
    }
    @if (arrcolumns.Contains("udf5"))
    {
        <th>
            @ResProjectMaster.UDF5
        </th>
    }
    @if (arrcolumns.Contains("itemnumber"))
    {
        <th>
            <em>* </em>
            @ResItemMaster.ItemNumber
        </th>
    }
    @if (arrcolumns.Contains("itemdollarlimitamount"))
    {
        <th>
            @ResProjectMaster.DollarLimitAmount
        </th>
    }
    @if (arrcolumns.Contains("itemquantitylimitamount"))
    {
        <th>
            @ResProjectSpendItems.QuantityLimit
        </th>
    }
    @if (arrcolumns.Contains("islineitemdeleted"))
    {
        <th>
            @ResProjectSpendItems.IsDeleted
        </th>
    }
   

</tr>

<script type="text/javascript">
    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.ProjectMaster)') {
        $(function (event) {

         if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";
                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }

                        // return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='Status' style='width:100px;color:" + forcol + ";border:1px solid " + bodcol + "' />"
                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF6 = obj.aData.Reason == null ? "" : obj.aData.Reason.substring(0, 255);
                        return "<span id='Reason'  style='width:100px;'>" + tempUDF6 + "</span>"
                    }
                });
            }
           
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempProjectSpendName = obj.aData.ProjectSpendName == null ? "" : obj.aData.ProjectSpendName.substring(0, 128);
                        
                        return "<input type='text' maxLength='128'  value='" + tempProjectSpendName + "' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aProjectSpendName_" + obj.aData.ID + "' style='width:300px;' />" +
                                               "<span id='ProjectMasterID' style='display:none'>" + obj.aData.ID + "</span>"
                    }
                });
                
            if ('@arrcolumns.Contains("description")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {

                        //  alert("Description" + obj.aData.Description);
                        var tempDataDescription = obj.aData.Description == null ? "" : obj.aData.Description.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempDataDescription + "'  class='importtext-box'  id='aDescription_" + obj.aData.ID + "' style='width:300px;' />";

                    }
                });
            }
            if ('@arrcolumns.Contains("dollarlimitamount")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {

                        //    alert("DollarLimitAmount" + obj.aData.DollarLimitAmount);
                        var tempDataDollarLimitAmount = obj.aData.DollarLimitAmount == null ? "" : obj.aData.DollarLimitAmount;
                        return "<input type='text' maxLength='128'  value='" + tempDataDollarLimitAmount + "' onblur='return ValidateValueWithDataType();' onkeypress='return isNumberKey(event);'  class='numericDecimalinput importtext-box' id='aDollarLimitAmount_" + obj.aData.ID + "' style='width:300px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("trackallusageagainstthis")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //   alert("TrackAllUsageAgainstThis" + obj.aData.TrackAllUsageAgainstThis);
                        var TrackAllUsageAgainstThis = obj.aData.TrackAllUsageAgainstThis == null ? "false" : obj.aData.TrackAllUsageAgainstThis;
                        if (TrackAllUsageAgainstThis != "" || TrackAllUsageAgainstThis == "true") {
                            TrackAllUsageAgainstThis = "checked=\"checked\""
                        }
                        else { TrackAllUsageAgainstThis = ""; }
                        return "<input type='checkbox' " + TrackAllUsageAgainstThis + " id='aTrackAllUsageAgainstThis_" + obj.aData.ID + "'  />"

                    }
                });
            }

            if ('@arrcolumns.Contains("isclosed")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //    alert("isClosed" + obj.aData.IsClosed);
                        var isClosed = obj.aData.IsClosed == null ? "false" : obj.aData.IsClosed;
                        if (isClosed != "" || isClosed == "true") {
                            isClosed = "checked=\"checked\""
                        }
                        else { isClosed = ""; }
                        return "<input type='checkbox' " + isClosed + " id='aIsClosed_" + obj.aData.ID + "'  />";

                    }
                });
            }
            if ('@arrcolumns.Contains("isdeleted")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        // alert("IsDeleted" + obj.aData.IsDeleted);
                        var isDeleted = obj.aData.IsDeleted == null ? "false" : obj.aData.IsDeleted;
                        if (isDeleted != "" || isDeleted == "true") {
                            isDeleted = "checked=\"checked\""
                        }
                        else { isDeleted = ""; }
                        return "<input type='checkbox' " + isDeleted + " id='aIsDeleted_" + obj.aData.ID + "'  />";

                    }
                });
            }
            if ('@arrcolumns.Contains("udf1")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        //   alert("UDF1" + obj.aData.UDF1);
                        var tempUDF1 = obj.aData.UDF1 == null ? "" : obj.aData.UDF1.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempUDF1 + "'  class='importtext-box' id='aUDF1_" + obj.aData.ID + "' style='width:300px;' />";

                    }
                });
            }
            if ('@arrcolumns.Contains("udf2")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        //  alert("UDF2" + obj.aData.UDF2);
                        var tempUDF2 = obj.aData.UDF2 == null ? "" : obj.aData.UDF2.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempUDF2 + "'  class='importtext-box' id='aUDF2_" + obj.aData.ID + "' style='width:300px;' />";

                    }
                });
            }
            if ('@arrcolumns.Contains("udf3")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        // alert("UDF3" + obj.aData.UDF3);
                        var tempUDF3 = obj.aData.UDF3 == null ? "" : obj.aData.UDF3.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempUDF3 + "'  class='importtext-box' id='aUDF3_" + obj.aData.ID + "' style='width:300px;' />";

                    }
                });
            }
            if ('@arrcolumns.Contains("udf4")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        //   alert("UDF4" + obj.aData.UDF4);
                        var tempUDF4 = obj.aData.UDF4 == null ? "" : obj.aData.UDF4.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempUDF4 + "'  class='importtext-box' id='aUDF4_" + obj.aData.ID + "' style='width:300px;' />";

                    }
                });
            }
            if ('@arrcolumns.Contains("udf5")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        //  alert("UDF5" + obj.aData.UDF5);
                        var tempUDF5 = obj.aData.UDF5 == null ? "" : obj.aData.UDF5.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempUDF5 + "'  class='importtext-box' id='aUDF5_" + obj.aData.ID + "' style='width:300px;' />";

                    }
                });
            }
            if ('@arrcolumns.Contains("itemnumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        // alert("ItemNumber" + obj.aData.ItemNumber);
                        var tempItemNumber = obj.aData.ItemNumber == null ? "" : obj.aData.ItemNumber.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempItemNumber + "'  onblur='return ValidateValueWithDataType();' class='importtext-box' id='aItemNumber_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("itemdollarlimitamount")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        //  alert("ItemDollarLimitAmount" + obj.aData.ItemDollarLimitAmount);
                        var tempItemDollarLimitAmount = obj.aData.ItemDollarLimitAmount == null ? "" : obj.aData.ItemDollarLimitAmount;
                        return "<input type='text' maxLength='128'  value='" + tempItemDollarLimitAmount + "' onkeypress='return isNumberKey(event);'  class='numericDecimalinput importtext-box' id='aItemDollarLimitAmount_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("itemquantitylimitamount")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //limitField.value
                        // alert("ItemQuantityLimitAmount" + obj.aData.ItemQuantityLimitAmount);
                        var tempItemQuantityLimitAmount = obj.aData.ItemQuantityLimitAmount == null ? "" : obj.aData.ItemQuantityLimitAmount;
                        return "<input type='text' maxLength='128'  value='" + tempItemQuantityLimitAmount + "' onkeypress='return isNumberKey(event);'  class='numericDecimalinput importtext-box' id='aItemQuantityLimitAmount_" + obj.aData.ID + "' style='width:300px;' />"

                    }
                });
            }

            if ('@arrcolumns.Contains("islineitemdeleted")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        //alert("IsLineItemDeleted" + obj.aData.IsLineItemDeleted);
                        var isLineItemDeleted = obj.aData.IsLineItemDeleted == null ? "false" : obj.aData.IsLineItemDeleted;
                        if (isLineItemDeleted != "" || isLineItemDeleted == "true") {
                            isLineItemDeleted = "checked=\"checked\""
                        }
                        else { isLineItemDeleted = ""; }
                        return "<input type='checkbox' " + isLineItemDeleted + " id='aIsLineItemDeleted_" + obj.aData.ID + "'  />";
                    }
                });
            }
            
        });


    }

</script>