@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (arrcolumns.Contains("roomname"))
    {
        <th>
            <em>* </em>
            @ResBomItemMaster.Room
        </th>
    }
    @if (arrcolumns.Contains("itemnumber"))
    {
        <th>
            <em>* </em>
            @ResBomItemMaster.ItemNumber
        </th>
    }
    @if (arrcolumns.Contains("blanketordernumber"))
    {
        <th>
            @ResSupplierBlanketPODetails.BlanketPO
        </th>
    }
    @if (arrcolumns.Contains("defaultreorderquantity"))
    {
        <th>
            @ResBomItemMaster.DefaultReorderQuantity
        </th>
    }
    @if (arrcolumns.Contains("defaultpullquantity"))
    {
        <th>
            @ResBomItemMaster.DefaultPullQuantity
        </th>
    }
    @if (arrcolumns.Contains("leadtimeindays"))
    {
        <th>
            @ResBomItemMaster.LeadTimeInDays
        </th>
    }
    @if (arrcolumns.Contains("link1"))
    {
        <th>
            @ResBomItemMaster.Link1
        </th>
    }
    @if (arrcolumns.Contains("link2"))
    {
        <th>
            @ResBomItemMaster.Link2
        </th>
    }
    @if (arrcolumns.Contains("taxable"))
    {
        <th>
            @ResBomItemMaster.Taxable
        </th>
    }
    @if (arrcolumns.Contains("consignment"))
    {
        <th>
            @ResBomItemMaster.Consignment
        </th>
    }
    @if (arrcolumns.Contains("onhandquantity"))
    {
        <th>
            @ResBomItemMaster.OnHandQuantity
        </th>
    }
    @if (arrcolumns.Contains("criticalquantity"))
    {
        <th>
            @ResBomItemMaster.CriticalQuantity
        </th>
    }
    @if (arrcolumns.Contains("minimumquantity"))
    {
        <th>
            @ResBomItemMaster.MinimumQuantity
        </th>
    }
    @if (arrcolumns.Contains("maximumquantity"))
    {
        <th>
            @ResBomItemMaster.MaximumQuantity
        </th>
    }
    @if (arrcolumns.Contains("weightperpiece"))
    {
        <th>
            @ResBomItemMaster.WeightPerPiece
        </th>
    }
    @if (arrcolumns.Contains("itemuniquenumber"))
    {
        <th>
            @ResBomItemMaster.ItemUniqueNumber
        </th>
    }
    @if (arrcolumns.Contains("istransfer"))
    {
        <th>
            @ResBomItemMaster.IsTransfer
        </th>
    }
    @if (arrcolumns.Contains("ispurchase"))
    {
        <th>
            @ResBomItemMaster.IsPurchase
        </th>
    }
    @if (arrcolumns.Contains("inventrylocation"))
    {
        <th>
            <em>* </em>
            @ResItemMaster.DefaultLocation
        </th>
    }
    @if (arrcolumns.Contains("inventoryclassification"))
    {
        <th>
            @ResBomItemMaster.InventoryClassification
        </th>
    }
    @if (arrcolumns.Contains("serialnumbertracking"))
    {
        <th>
            @ResBomItemMaster.SerialNumberTracking
        </th>
    }
    @if (arrcolumns.Contains("lotnumbertracking"))
    {
        <th>
            @ResBomItemMaster.LotNumberTracking
        </th>
    }
    @if (arrcolumns.Contains("datecodetracking"))
    {
        <th>
            @ResBomItemMaster.DateCodeTracking
        </th>
    }
    @if (arrcolumns.Contains("itemtype"))
    {
        <th>
            @ResBomItemMaster.ItemType
        </th>
    }
    @if (arrcolumns.Contains("imagepath"))
    {
        <th>
            @ResBomItemMaster.ImagePath
        </th>
    }
    @if (arrcolumns.Contains("udf1"))
    {
        <th>
            @ResBomItemMaster.UDF1
        </th>
    }
    @if (arrcolumns.Contains("udf2"))
    {
        <th>
            @ResBomItemMaster.UDF2
        </th>
    }
    @if (arrcolumns.Contains("udf3"))
    {
        <th>
            @ResBomItemMaster.UDF3
        </th>
    }
    @if (arrcolumns.Contains("udf4"))
    {
        <th>
            @ResBomItemMaster.UDF4
        </th>
    }
    @if (arrcolumns.Contains("udf5"))
    {
        <th>
            @ResBomItemMaster.UDF5
        </th>
    }
    @if (arrcolumns.Contains("islotserialexpirycost"))
    {
        <th>
            @ResBomItemMaster.IsLotSerialExpiryCost
        </th>
    }
    @if (arrcolumns.Contains("isitemlevelminmaxqtyrequired"))
    {
        <th>
            @ResBomItemMaster.IsItemLevelMinMaxQtyRequired
        </th>
    }
    @if (arrcolumns.Contains("trendingsetting"))
    {
        <th>
            @ResItemMaster.TrendingSetting
        </th>
    }
    @if (arrcolumns.Contains("enforcedefaultpullquantity"))
    {
        <th>
            @ResItemMaster.PullQtyScanOverride
        </th>
    }
    @if (arrcolumns.Contains("enforcedefaultreorderquantity"))
    {
        <th>
            @ResItemMaster.IsEnforceDefaultReorderQuantity
        </th>
    }
    @if (arrcolumns.Contains("isautoinventoryclassification"))
    {
        <th>
            @ResItemMaster.IsAutoInventoryClassification
        </th>
    }
    @if (arrcolumns.Contains("isbuildbreak"))
    {
        <th>
            @ResBomItemMaster.IsBuildBreak
        </th>
    }
    @if (arrcolumns.Contains("ispackslipmandatoryatreceive"))
    {
        <th>
            @ResItemMaster.IsPackslipMandatoryAtReceive
        </th>
    }
    @if (arrcolumns.Contains("itemimageexternalurl"))
    {
        <th>
            @ResItemMaster.ItemImageExternalURL
        </th>
    }
    @if (arrcolumns.Contains("itemdocexternalurl"))
    {
        <th>
            @ResBomItemMaster.ItemDocExternalURL
        </th>
    }
    @if (arrcolumns.Contains("isdeleted"))
    {
        <th>
            @ResBomItemMaster.IsDeleted
        </th>
    }
    @if (arrcolumns.Contains("itemlink2externalurl"))
    {
        <th>
            @ResItemMaster.ItemLink2ExternalURL
        </th>
    }
    @if (arrcolumns.Contains("isactive"))
    {
        <th>
            @ResItemMaster.IsActive
        </th>
    }
    @if (arrcolumns.Contains("udf6"))
    {
        <th>
            @ResBomItemMaster.UDF6
        </th>
    }
    @if (arrcolumns.Contains("udf7"))
    {
        <th>
            @ResBomItemMaster.UDF7
        </th>
    }
    @if (arrcolumns.Contains("udf8"))
    {
        <th>
            @ResBomItemMaster.UDF8
        </th>
    }
    @if (arrcolumns.Contains("udf9"))
    {
        <th>
            @ResBomItemMaster.UDF9
        </th>
    }
    @if (arrcolumns.Contains("udf10"))
    {
        <th>
            @ResBomItemMaster.UDF10
        </th>
    }
    @if (arrcolumns.Contains("isallowordercostuom"))
    {
        <th>
            @ResItemMaster.IsAllowOrderCostuom
        </th>
    }
    @if (arrcolumns.Contains("elabelkey"))
    {
        <th>
            @ResItemMaster.eLabelKey
        </th>
    }
    @if (arrcolumns.Contains("poitemlinenumber"))
    {
        <th>
            @ResItemMaster.POItemLineNumber
        </th>
    }


</tr>
<script type="text/javascript">
   if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.CommonBOMToItem)') {


       $(function (event) {

           if ('@arrcolumns.Count()' > 0) {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                       var forcol = "#000000";
                       var bodcol = "#DDD";
                       if (obj.aData.Status != null && obj.aData.Status == "fail") {
                           forcol = "Red";
                           bodcol = "Red";
                       }

                       else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                           forcol = "Green";
                           bodcol = "Green";
                       }

                       // return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='Status' style='width:100px;color:" + forcol + ";border:1px solid " + bodcol + "' />"
                       return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                   }
               });
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var forcol = "#000000";
                       var bodcol = "#DDD";
                       if (obj.aData.Status != null && obj.aData.Status == "fail") {
                           forcol = "Red";
                           bodcol = "Red";
                       }

                       else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                           forcol = "Green";
                           bodcol = "Green";
                       }
                       var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason.substring(0, 255);
                       return "<span id='Reason'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                   }
               });
           }
           ColumnObject.push({
               "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
               "fnRender": function (obj, val) {
                   var tempDataPullQnt = obj.aData.RoomName == null ? "" : obj.aData.RoomName.substring(0, 100);
                   return "<input type='text' value='" + tempDataPullQnt + "'  maxLength='100' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aBOMRoomName_" + obj.aData.ID + "' style='width:300px;' />";

               }
           });
           ColumnObject.push({
               "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
               "fnRender": function (obj, val) {
                   var tempDataPullQnt = obj.aData.ItemNumber == null ? "" : obj.aData.ItemNumber.substring(0, 100);
                   return "<input type='text' value='" + tempDataPullQnt + "'  maxLength='100' onblur='return ValidateValueWithDataType();' class='importtext-box' id='aBOMItemNumber_" + obj.aData.ID + "' style='width:300px;' />" +
                                           "<span id='BOMItemID' style='display:none'>" + obj.aData.ID + "</span>"
               }
           });

            if ('@arrcolumns.Contains("blanketordernumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempBlanketOrderNumber = obj.aData.BlanketOrderNumber == null ? "" : obj.aData.BlanketOrderNumber.substring(0, 255);
                        return "<input type='text' value='" + tempBlanketOrderNumber + "'  maxLength='255'  onblur='return ValidateValueWithDataType(this);'  class='importtext-box' id='aBlanketOrderNumber_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });
            }

           if ('@arrcolumns.Contains("defaultreorderquantity")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var DefaultReorderQuantity = obj.aData.DefaultReorderQuantity == null ? "" : obj.aData.DefaultReorderQuantity;
                       return "<input type='text' value='" + DefaultReorderQuantity + "'  onkeypress='return isNumberKey(event);'  onblur='return ValidateValueWithDataType(this);'   class='numericDecimalinput importtext-box' id='aBOMDefaultReorderQuantity_" + obj.aData.ID + "' style='width:100px;'  />"

                   }
               });

           }

           if ('@arrcolumns.Contains("defaultpullquantity")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var DefaultPullQuantity = obj.aData.DefaultPullQuantity == null ? "" : obj.aData.DefaultPullQuantity;
                       return "<input type='text' value='" + DefaultPullQuantity + "'  onkeypress='return isNumberKey(event);'  onblur='return ValidateValueWithDataType(this);'   class='numericDecimalinput importtext-box' id='aBOMDefaultPullQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });

           }

            if ('@arrcolumns.Contains("leadtimeindays")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var LeadTimeInDays = obj.aData.LeadTimeInDays == null ? "" : obj.aData.LeadTimeInDays;
                       return "<input type='text' value='" + LeadTimeInDays + "'  onkeypress='return isNumberKey(event);'  class='importtext-box' id='aLeadTimeInDays_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
            if ('@arrcolumns.Contains("link1")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       return "<input type='text' maxLength='128'  value='" + obj.aData.Link1 + "' class='importtext-box' id='aBOMLink1_" + obj.aData.ID + "'  />"
                   }
               });
           }
            if ('@arrcolumns.Contains("link2")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       return "<input type='text' maxLength='128'  value='" + obj.aData.Link2 + "' class='importtext-box' id='aBOMLink2_" + obj.aData.ID + "'  />"
                   }
               });
           }
            if ('@arrcolumns.Contains("taxable")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var Taxable = obj.aData.Taxable == null ? "false" : obj.aData.Taxable;
                       if (Taxable != "" || Taxable == "true") {
                           Taxable = "checked=\"checked\""
                       }
                       else { Taxable = ""; }
                       return "<input type='checkbox' " + Taxable + " id='aBOMTaxable_" + obj.aData.ID + "'  />"
                   }
               });
           }

            if ('@arrcolumns.Contains("consignment")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       if (obj.aData.IsBlankConsignment) {
                           return "<input type='checkbox'  id='aBOMConsignment_" + obj.aData.ID + "'/> <input type='hidden' id='aBOMConsignmentBlank_"+ obj.aData.ID + "'/>";
                       } else {
                           var Consignment = obj.aData.Consignment;
                           if (Consignment != "" || Consignment == "true") {
                               Consignment = "checked=\"checked\""
                           }
                           else { Consignment = ""; }
                           return "<input type='checkbox' " + Consignment + " id='aBOMConsignment_" + obj.aData.ID + "'  />"
                       }
                   }
               });
           }

            if ('@arrcolumns.Contains("onhandquantity")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var OnHandQuantity = obj.aData.OnHandQuantity == null ? "" : obj.aData.OnHandQuantity;
                       return "<input type='text' value='" + OnHandQuantity + "'  onkeypress='return isNumberKey(event);'  onblur='return ValidateValueWithDataType(this);'   class='numericDecimalinput importtext-box' id='aBOMDefaultOnHandQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });

           }

            if ('@arrcolumns.Contains("criticalquantity")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var CriticalQuantity = obj.aData.CriticalQuantity == null ? "" : obj.aData.CriticalQuantity;
                       return "<input type='text' value='" + CriticalQuantity + "'  onkeypress='return isNumberKey(event);'  onblur='return ValidateValueWithDataType(this);'   class='numericDecimalinput importtext-box' id='aBOMDefaultCriticalQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });

           }

            if ('@arrcolumns.Contains("minimumquantity")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var MinimumQuantity = obj.aData.MinimumQuantity == null ? "" : obj.aData.MinimumQuantity;
                       return "<input type='text' value='" + MinimumQuantity + "' onkeypress='return isNumberKey(event);'   onblur='return ValidateValueWithDataType(this);'   class='numericDecimalinput importtext-box' id='aBOMMinimumQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }

            if ('@arrcolumns.Contains("maximumquantity")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var MaximumQuantity = obj.aData.MaximumQuantity == null ? "" : obj.aData.MaximumQuantity;
                       return "<input type='text' value='" + MaximumQuantity + "' onkeypress='return isNumberKey(event);'  onblur='return ValidateValueWithDataType(this);'   class='numericDecimalinput importtext-box' id='aBOMMaximumQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }

           if ('@arrcolumns.Contains("weightperpiece")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var WeightPerPiece = obj.aData.WeightPerPiece == null ? "" : obj.aData.WeightPerPiece;
                       return "<input type='text' value='" + WeightPerPiece + "' onkeypress='return isNumberKey(event);'  onblur='return ValidateValueWithDataType(this);'   class='numericDecimalinput importtext-box' id='aBOMWeightPerPiece_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }

            if ('@arrcolumns.Contains("itemuniquenumber")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var ItemUniqueNumber = obj.aData.ItemUniqueNumber == null ? "" : obj.aData.ItemUniqueNumber.substring(0, 10);
                       return "<input type='text' value='" + ItemUniqueNumber + "'  maxLength='10' class='importtext-box' id='aBOMItemUniqueNumber_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }

            if ('@arrcolumns.Contains("istransfer")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var IsTransfer = obj.aData.IsTransfer == null ? "" : obj.aData.IsTransfer;
                       if (IsTransfer != "" || IsTransfer == "true") {
                           IsTransfer = "checked=\"checked\""
                       }
                       else { IsTransfer = ""; }
                       return "<input type='checkbox'" + IsTransfer + "id='aBOMIsTransfer_" + obj.aData.ID + "'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("ispurchase")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var IsPurchase = obj.aData.IsPurchase == null ? "" : obj.aData.IsPurchase;
                       if (IsPurchase != "" || IsPurchase == "true") {
                           IsPurchase = "checked=\"checked\""
                       }
                       else { IsPurchase = ""; }
                       return "<input type='checkbox'" + IsPurchase + "id='aBOMIsPurchase_" + obj.aData.ID + "'  />"
                   }
               });
           }

           if ('@arrcolumns.Contains("inventrylocation")' == 'True') {
                 ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                           var InventryLocation = obj.aData.InventryLocation == null ? "" : obj.aData.InventryLocation.substring(0, 128);
                           return "<input type='text' value='" + InventryLocation + "'  maxLength='128' class='importtext-box' id='aBOMInventryLocation_" + obj.aData.ID + "' style='width:100px;'  />"
                           }
                 });
           }

           if ('@arrcolumns.Contains("inventoryclassification")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var InventoryClassification = obj.aData.InventoryClassificationName == null ? "" : obj.aData.InventoryClassificationName;
                       return "<input type='text' value='" + InventoryClassification + "'    class='importtext-box' id='aBOMInventoryClassification_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }

          if ('@arrcolumns.Contains("serialnumbertracking")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var SerialNumberTracking = obj.aData.SerialNumberTracking == null ? "" : obj.aData.SerialNumberTracking;
                       if (SerialNumberTracking != "" || SerialNumberTracking == "true") {
                           SerialNumberTracking = "checked=\"checked\""
                       }
                       else { SerialNumberTracking = ""; }
                       return "<input type='checkbox'" + SerialNumberTracking + "id='aBOMSerialNumberTracking_" + obj.aData.ID + "'  />"
                   }
               });
           }

           if ('@arrcolumns.Contains("lotnumbertracking")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var LotNumberTracking = obj.aData.LotNumberTracking == null ? "" : obj.aData.LotNumberTracking;
                       if (LotNumberTracking != "" || LotNumberTracking == "true") {
                           LotNumberTracking = "checked=\"checked\""
                       }
                       else { LotNumberTracking = ""; }
                       return "<input type='checkbox'" + LotNumberTracking + "id='aBOMLotNumberTracking_" + obj.aData.ID + "'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("datecodetracking")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var DateCodeTracking = obj.aData.DateCodeTracking == null ? "" : obj.aData.DateCodeTracking;
                       if (DateCodeTracking != "" || DateCodeTracking == "true") {
                           DateCodeTracking = "checked=\"checked\""
                       }
                       else { DateCodeTracking = ""; }
                       return "<input type='checkbox'" + DateCodeTracking + "id='aBOMDateCodeTracking_" + obj.aData.ID + "'  />"
                   }
               });
           }

           if ('@arrcolumns.Contains("itemtype")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var ItemTypeName = obj.aData.ItemTypeName == null ? "" : obj.aData.ItemTypeName.substring(0, 10);
                       return "<input type='text' value='" + ItemTypeName + "'  onblur='return ValidateValueWithDataType();' maxLength='10' class='importtext-box' id='aBOMItemType_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }

           if ('@arrcolumns.Contains("imagepath")' == 'True') {
                   ColumnObject.push({
                       "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                           var ImagePath = obj.aData.ImagePath == null ? "" : obj.aData.ImagePath.substring(0, 255);
                           return "<input type='text' value='" + ImagePath + "' maxLength='255'  class='importtext-box' id='aImagePath_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
                   });
           }

           if ('@arrcolumns.Contains("udf1")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUDF1 = obj.aData.UDF1 == null ? "" : obj.aData.UDF1.substring(0, 255);
                       return "<input type='text' value='" + tempUDF1 + "'  maxLength='255'  class='importtext-box' id='aBOMUDF1' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("udf2")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUDF2 = obj.aData.UDF2 == null ? "" : obj.aData.UDF2.substring(0, 255);
                       return "<input type='text' value='" + tempUDF2 + "'  maxLength='255'  class='importtext-box'  id='aBOMUDF2' style='width:100px;' />"
                   }
               });
           }
           if ('@arrcolumns.Contains("udf3")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUDF3 = obj.aData.UDF3 == null ? "" : obj.aData.UDF3.substring(0, 255);
                       return "<input type='text' value='" + tempUDF3 + "'  maxLength='255'  class='importtext-box'  id='aBOMUDF3' style='width:100px;' />"
                   }
               });
           }
           if ('@arrcolumns.Contains("udf4")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUDF4 = obj.aData.UDF4 == null ? "" : obj.aData.UDF4.substring(0, 255);
                       return "<input type='text' value='" + tempUDF4 + "'  maxLength='255'  class='importtext-box'  id='aBOMUDF4' style='width:100px;' />"
                   }
               });
           }
           if ('@arrcolumns.Contains("udf5")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUDF5 = obj.aData.UDF5 == null ? "" : obj.aData.UDF5.substring(0, 255);
                       return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='aBOMUDF5' style='width:100px;' />"
                   }
               });
           }

           if ('@arrcolumns.Contains("islotserialexpirycost")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var IsLotSerialExpiryCost = obj.aData.IsLotSerialExpiryCost == null ? "" : obj.aData.IsLotSerialExpiryCost.substring(0, 10);
                        return "<input type='text' value='" + IsLotSerialExpiryCost + "'  maxLength='10' class='importtext-box' id='aIsLotSerialExpiryCost_" + obj.aData.ID + "' style='width:100px;'  />"
                    }
                });

            }


            if ('@arrcolumns.Contains("isitemlevelminmaxqtyrequired")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var ItemLevelMinMaxQtyRequired = obj.aData.IsItemLevelMinMaxQtyRequired == null ? "false" : obj.aData.IsItemLevelMinMaxQtyRequired;
                       if (ItemLevelMinMaxQtyRequired != "" || ItemLevelMinMaxQtyRequired == "true") {
                           ItemLevelMinMaxQtyRequired = "checked=\"checked\""
                       }
                       else { ItemLevelMinMaxQtyRequired = ""; }
                       return "<input type='checkbox' " + ItemLevelMinMaxQtyRequired + " id='aBOMItemLevelMinMaxQtyRequired_" + obj.aData.ID + "'  />"
                   }
               });
           }

           if ('@arrcolumns.Contains("trendingsetting")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var TrendingSettingName = obj.aData.TrendingSettingName == null ? "" : obj.aData.TrendingSettingName.substring(0, 255);
                        return "<input type='text' value='" + TrendingSettingName + "'  maxLength='255'  class='importtext-box'  id='atrendingsetting_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }

            if ('@arrcolumns.Contains("enforcedefaultpullquantity")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var IsPullQtyScanOverride = obj.aData.PullQtyScanOverride == null ? "" : obj.aData.PullQtyScanOverride;
                       if (IsPullQtyScanOverride != "" || IsPullQtyScanOverride == "true") {
                           IsPullQtyScanOverride = "checked=\"checked\""
                       }
                       else { IsPullQtyScanOverride = ""; }
                       return "<input type='checkbox'" + IsPullQtyScanOverride + "id='aBOMPullQtyScanOverride_" + obj.aData.ID + "'  />"
                   }
               });
           }

          if ('@arrcolumns.Contains("enforcedefaultreorderquantity")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var IsEnforceDefaultReorderQuantity = obj.aData.IsEnforceDefaultReorderQuantity == null ? "" : obj.aData.IsEnforceDefaultReorderQuantity;
                       if (IsEnforceDefaultReorderQuantity != "" || IsEnforceDefaultReorderQuantity == "true") {
                           IsEnforceDefaultReorderQuantity = "checked=\"checked\""
                       }
                       else { IsEnforceDefaultReorderQuantity = ""; }
                       return "<input type='checkbox'" + IsEnforceDefaultReorderQuantity + "id='aBOMEnforceDefaultReorderQuantity_" + obj.aData.ID + "'  />"
                   }
               });
           }

            if ('@arrcolumns.Contains("isautoinventoryclassification")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var IsAutoInventoryClassification = obj.aData.IsAutoInventoryClassification == null ? "" : obj.aData.IsAutoInventoryClassification;
                        if (IsAutoInventoryClassification != "" || IsAutoInventoryClassification == "true") {
                            IsAutoInventoryClassification = "checked=\"checked\""
                        }
                        else { IsAutoInventoryClassification = ""; }
                        return "<input type='checkbox'" + IsAutoInventoryClassification + "id='aIsAutoInventoryClassification_" + obj.aData.ID + "'  />"
                    }
                });
            }

           if ('@arrcolumns.Contains("isbuildbreak")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var Isbuildbreak = obj.aData.IsBuildBreak == null ? "" : obj.aData.IsBuildBreak;
                        if (Isbuildbreak != "" || Isbuildbreak == "true") {
                            Isbuildbreak = "checked=\"checked\""
                        }
                        else { Isbuildbreak = ""; }
                        return "<input type='checkbox'" + Isbuildbreak + "id='aIsBuildBreak_" + obj.aData.ID + "'  />"
                    }
                });
           }

            if ('@arrcolumns.Contains("ispackslipmandatoryatreceive")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var IsPackslipMandatoryAtReceive = obj.aData.IsPackslipMandatoryAtReceive == null ? "" : obj.aData.IsPackslipMandatoryAtReceive;
                        if (IsPackslipMandatoryAtReceive != "" || IsPackslipMandatoryAtReceive == "true") {
                            IsPackslipMandatoryAtReceive = "checked=\"checked\""
                        }
                        else { IsPackslipMandatoryAtReceive = ""; }
                        return "<input type='checkbox'" + IsPackslipMandatoryAtReceive + "id='aIsPackslipMandatoryAtReceive_" + obj.aData.ID + "'  />"
                    }
                });
            }

          if ('@arrcolumns.Contains("itemimageexternalurl")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       return "<input type='text' maxLength='500'  value='" + obj.aData.ItemImageExternalURL + "' class='importtext-box' id='aBOMItemImageExternalURL_" + obj.aData.ID + "'  />"
                   }
               });
           }

         if ('@arrcolumns.Contains("itemdocexternalurl")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       return "<input type='text' maxLength='500'  value='" + obj.aData.ItemDocExternalURL + "' class='importtext-box' id='aBOMItemDocExternalURL_" + obj.aData.ID + "'  />"
                   }
               });
           }

          if ('@arrcolumns.Contains("isdeleted")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var ItemIsDeleted = obj.aData.IsDeleted == null ? "" : obj.aData.IsDeleted;
                        if (ItemIsDeleted != "" || ItemIsDeleted == "true") {
                            ItemIsDeleted = "checked=\"checked\""
                        }
                        else { ItemIsDeleted = ""; }
                        return "<input type='checkbox'" + ItemIsDeleted + "id='aItemIsDeleted_" + obj.aData.ID + "'  />"
                    }
                });
           }

         if ('@arrcolumns.Contains("itemlink2externalurl")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       return "<input type='text' maxLength='128'  value='" + obj.aData.ItemLink2ExternalURL + "' class='importtext-box' id='aBOMItemLink2ExternalURL_" + obj.aData.ID + "'  />"
                   }
               });
           }

         if ('@arrcolumns.Contains("isactive")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var ItemIsActive = obj.aData.IsActive == null ? "" : obj.aData.IsActive;
                       if (ItemIsActive != "" || ItemIsActive == "true") {
                           ItemIsActive = "checked=\"checked\""
                       }
                       else { ItemIsActive = ""; }
                       return "<input type='checkbox'" + ItemIsActive + "id='aBOMItemIsActive_" + obj.aData.ID + "'  />"
                   }
               });
           }

           if ('@arrcolumns.Contains("udf6")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF6 = obj.aData.UDF6 == null ? "" : obj.aData.UDF6.substring(0, 255);
                        return "<input type='text' value='" + tempUDF6 + "'  maxLength='255'  class='importtext-box' id='aUDF6' style='width:100px;'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf7")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF7 = obj.aData.UDF7 == null ? "" : obj.aData.UDF7.substring(0, 255);
                        return "<input type='text' value='" + tempUDF7 + "'  maxLength='255'  class='importtext-box'  id='aUDF7' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf8")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF8 = obj.aData.UDF8 == null ? "" : obj.aData.UDF8.substring(0, 255);
                        return "<input type='text' value='" + tempUDF8 + "'  maxLength='255'  class='importtext-box'  id='aUDF8' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf9")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF9 = obj.aData.UDF9 == null ? "" : obj.aData.UDF9.substring(0, 255);
                        return "<input type='text' value='" + tempUDF9 + "'  maxLength='255'  class='importtext-box'  id='aUDF9' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("udf10")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF10 = obj.aData.UDF10 == null ? "" : obj.aData.UDF10.substring(0, 255);
                        return "<input type='text' value='" + tempUDF10 + "'  maxLength='255'  class='importtext-box'  id='aUDF10' style='width:100px;' />"
                    }
                });
           }

            if ('@arrcolumns.Contains("isallowordercostuom")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {

                        var ItemIsAllowOrderCostuom = obj.aData.IsAllowOrderCostuom == null ? "" : obj.aData.IsAllowOrderCostuom;
                        if (ItemIsAllowOrderCostuom != "" || ItemIsAllowOrderCostuom == "true") {
                            ItemIsAllowOrderCostuom = "checked=\"checked\""
                        }
                        else { ItemIsAllowOrderCostuom = ""; }
                        return "<input type='checkbox'" + ItemIsAllowOrderCostuom + "id='aItemIsAllowOrderCostuom_" + obj.aData.ID + "'  />"
                    }
                });
            }
            if ('@arrcolumns.Contains("elabelkey")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var eLabelKey = obj.aData.eLabelKey == null ? "" : obj.aData.eLabelKey.substring(0, 255);
                        return "<input type='text' value='" + eLabelKey + "'  maxLength='255'  class='importtext-box'  id='aeLabelKey_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
           }

            if ('@arrcolumns.Contains("poitemlinenumber")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var POItemLineNumber = obj.aData.POItemLineNumber == null ? '' : obj.aData.POItemLineNumber;
                        return "<input type='text' value='" + POItemLineNumber + "'  maxLength='255'  class='importtext-box'  id='aPOItemLineNumber_" + obj.aData.ID + "' style='width:100px;' />"
                    }
                });
            }


           @*if ('@arrcolumns.Contains("manufacturernumber")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempManufacturerNumber = obj.aData.ManufacturerNumber == null ? "" : obj.aData.ManufacturerNumber.substring(0, 20);
                       return "<input type='text' value='" + tempManufacturerNumber + "'   maxLength='20' class='importtext-box' id='aBOMManufacturerNumber_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("suppliername")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempSupplierName = obj.aData.SupplierName == null ? "" : obj.aData.SupplierName.substring(0, 255);
                       return "<input type='text' value='" + tempSupplierName + "'  maxLength='255'  onblur='return ValidateValueWithDataType();'  class='importtext-box' id='aBOMSupplierName_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("supplierpartno")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempSupplierPartNo = obj.aData.SupplierPartNo == null ? "" : obj.aData.SupplierPartNo.substring(0, 20);
                       return "<input type='text' value='" + tempSupplierPartNo + "' onblur='return ValidateValueWithDataType();'  maxLength='20' class='importtext-box' id='aBOMSupplierPartNo_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("upc")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUPC = obj.aData.UPC == null ? "" : obj.aData.UPC.substring(0, 20);
                       return "<input type='text' value='" + tempUPC + "'  maxLength='20' class='importtext-box' id='aBOMUPC_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("unspsc")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUNSPSC = obj.aData.UNSPSC == null ? "" : obj.aData.UNSPSC.substring(0, 20);
                       return "<input type='text' value='" + tempUNSPSC + "'  maxLength='20' class='importtext-box' id='aBOMUNSPSC_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("description")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempDescription = obj.aData.Description == null ? "" : obj.aData.Description.substring(0, 500);
                       return "<input type='text' value='" + tempDescription + "'  maxLength='500' class='importtext-box' id='aBOMDescription_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }

           if ('@arrcolumns.Contains("categoryname")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempCategoryName = obj.aData.CategoryName == null ? "" : obj.aData.CategoryName.substring(0, 128);
                       return "<input type='text' value='" + tempCategoryName + "'  maxLength='128' class='importtext-box' id='aBOMCategoryName_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("glaccount")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempGLAccount = obj.aData.GLAccount == null ? "" : obj.aData.GLAccount.substring(0, 128);
                       return "<input type='text' value='" + tempGLAccount + "'  maxLength='128' class='importtext-box' id='aBOMGLAccount_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("uom")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUOM = obj.aData.UOM == null ? "" : obj.aData.UOM.substring(0, 128);
                       return "<input type='text' value='" + tempUOM + "' maxLength='128' onblur='return ValidateValueWithDataType();'  class='importtext-box' id='aBOMUnit_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("leadtimeindays")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var LeadTimeInDays = obj.aData.LeadTimeInDays == null ? "" : obj.aData.LeadTimeInDays;
                       return "<input type='text' value='" + LeadTimeInDays + "'  onkeypress='return isNumberKey(event);'  class='importtext-box' id='aLeadTimeInDays_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("taxable")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var Taxable = obj.aData.Taxable == null ? "false" : obj.aData.Taxable;
                       if (Taxable != "" || Taxable == "true") {
                           Taxable = "checked=\"checked\""
                       }
                       else { Taxable = ""; }
                       return "<input type='checkbox' " + Taxable + " id='aBOMTaxable_" + obj.aData.ID + "'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("consignment")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var Consignment = obj.aData.Consignment == null ? "false" : obj.aData.Consignment;
                       if (Consignment != "" || Consignment == "true") {
                           Consignment = "checked=\"checked\""
                       }
                       else { Consignment = ""; }
                       return "<input type='checkbox' " + Consignment + " id='aBOMConsignment_" + obj.aData.ID + "'  />"
                   }
               });
           }


           if ('@arrcolumns.Contains("istransfer")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var IsTransfer = obj.aData.IsTransfer == null ? "" : obj.aData.IsTransfer;
                       if (IsTransfer != "" || IsTransfer == "true") {
                           IsTransfer = "checked=\"checked\""
                       }
                       else { IsTransfer = ""; }
                       return "<input type='checkbox'" + IsTransfer + "id='aBOMIsTransfer_" + obj.aData.ID + "'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("ispurchase")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var IsPurchase = obj.aData.IsPurchase == null ? "" : obj.aData.IsPurchase;
                       if (IsPurchase != "" || IsPurchase == "true") {
                           IsPurchase = "checked=\"checked\""
                       }
                       else { IsPurchase = ""; }
                       return "<input type='checkbox'" + IsPurchase + "id='aBOMIsPurchase_" + obj.aData.ID + "'  />"
                   }
               });
           }
           //                if ('@arrcolumns.Contains("inventrylocation")' == 'True') {
           //                    ColumnObject.push({
           //                        "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
           //                        "fnRender": function (obj, val) {
           //                            var InventryLocation = obj.aData.InventryLocation == null ? "" : obj.aData.InventryLocation.substring(0, 128);
           //                            return "<input type='text' value='" + InventryLocation + "'  maxLength='128' class='importtext-box' id='aBOMInventryLocation_" + obj.aData.ID + "' style='width:100px;'  />"
           //                        }
           //                    });
           //                }

           if ('@arrcolumns.Contains("serialnumbertracking")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var SerialNumberTracking = obj.aData.SerialNumberTracking == null ? "" : obj.aData.SerialNumberTracking;
                       if (SerialNumberTracking != "" || SerialNumberTracking == "true") {
                           SerialNumberTracking = "checked=\"checked\""
                       }
                       else { SerialNumberTracking = ""; }
                       return "<input type='checkbox'" + SerialNumberTracking + "id='aBOMSerialNumberTracking_" + obj.aData.ID + "'  />"
                   }
               });
           }

           if ('@arrcolumns.Contains("itemtype")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var ItemTypeName = obj.aData.ItemTypeName == null ? "" : obj.aData.ItemTypeName.substring(0, 10);
                       return "<input type='text' value='" + ItemTypeName + "'  onblur='return ValidateValueWithDataType();' maxLength='10' class='importtext-box' id='aBOMItemType_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("minimumquantity")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var MinimumQuantity = obj.aData.MinimumQuantity == null ? "" : obj.aData.MinimumQuantity;
                       return "<input type='text' value='" + MinimumQuantity + "' onkeypress='return isNumberKey(event);'   onblur='return ValidateValueWithDataType(this);'   class='numericDecimalinput importtext-box' id='aBOMMinimumQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("maximumquantity")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var MaximumQuantity = obj.aData.MaximumQuantity == null ? "" : obj.aData.MaximumQuantity;
                       return "<input type='text' value='" + MaximumQuantity + "' onkeypress='return isNumberKey(event);'  onblur='return ValidateValueWithDataType(this);'   class='numericDecimalinput importtext-box' id='aBOMMaximumQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("cost")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var Cost = obj.aData.Cost == null ? "" : obj.aData.Cost;
                       return "<input type='text' value='" + Cost + "'    class='numericDecimalinput importtext-box' id='aBOMCost_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });

           }
           if ('@arrcolumns.Contains("markup")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var Markup = obj.aData.Markup == null ? "" : obj.aData.Markup;
                       return "<input type='text' value='" + Markup + "'    class='numericDecimalinput importtext-box' id='aBOMMarkup_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("sellprice")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var SellPrice = obj.aData.SellPrice == null ? "" : obj.aData.SellPrice;
                       return "<input type='text' value='" + SellPrice + "'   class='numericDecimalinput importtext-box' id='aBOMSellPrice_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("costuom")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempCostUOM = obj.aData.CostUOMName == null ? "" : obj.aData.CostUOMName;
                       return "<input type='text' value='" + tempCostUOM + "'  class='importtext-box' id='aBOMCostUOM_" + obj.aData.ID + "' style='width:100px;'  />"
                   }

               });
           }

           if ('@arrcolumns.Contains("defaultpullquantity")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var DefaultPullQuantity = obj.aData.DefaultPullQuantity == null ? "" : obj.aData.DefaultPullQuantity;
                       return "<input type='text' value='" + DefaultPullQuantity + "'  onkeypress='return isNumberKey(event);'  onblur='return ValidateValueWithDataType(this);'   class='numericDecimalinput importtext-box' id='aBOMDefaultPullQuantity_" + obj.aData.ID + "' style='width:100px;'  />"
                   }
               });

           }
           if ('@arrcolumns.Contains("link2")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       return "<input type='text' maxLength='128'  value='" + obj.aData.Link2 + "' class='importtext-box' id='aBOMLink2_" + obj.aData.ID + "'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("udf1")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUDF1 = obj.aData.UDF1 == null ? "" : obj.aData.UDF1.substring(0, 255);
                       return "<input type='text' value='" + tempUDF1 + "'  maxLength='255'  class='importtext-box' id='aBOMUDF1' style='width:100px;'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("udf2")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUDF2 = obj.aData.UDF2 == null ? "" : obj.aData.UDF2.substring(0, 255);
                       return "<input type='text' value='" + tempUDF2 + "'  maxLength='255'  class='importtext-box'  id='aBOMUDF2' style='width:100px;' />"
                   }
               });
           }
           if ('@arrcolumns.Contains("udf3")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUDF3 = obj.aData.UDF3 == null ? "" : obj.aData.UDF3.substring(0, 255);
                       return "<input type='text' value='" + tempUDF3 + "'  maxLength='255'  class='importtext-box'  id='aBOMUDF3' style='width:100px;' />"
                   }
               });
           }
           if ('@arrcolumns.Contains("udf4")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUDF4 = obj.aData.UDF4 == null ? "" : obj.aData.UDF4.substring(0, 255);
                       return "<input type='text' value='" + tempUDF4 + "'  maxLength='255'  class='importtext-box'  id='aBOMUDF4' style='width:100px;' />"
                   }
               });
           }
           if ('@arrcolumns.Contains("udf5")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       var tempUDF5 = obj.aData.UDF5 == null ? "" : obj.aData.UDF5.substring(0, 255);
                       return "<input type='text' value='" + tempUDF5 + "'  maxLength='255'  class='importtext-box'  id='aBOMUDF5' style='width:100px;' />"
                   }
               });
           }








           if ('@arrcolumns.Contains("longdescription")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       return "<input type='text' maxLength='128'  value='" + obj.aData.LongDescription + "' class='importtext-box' id='aBOMItemLongDescription_" + obj.aData.ID + "'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("enrichedproductdata")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       return "<input type='text' maxLength='128'  value='" + obj.aData.EnrichedProductData + "' class='importtext-box' id='aBOMItemEnrichedProductData_" + obj.aData.ID + "'  />"
                   }
               });
           }
           if ('@arrcolumns.Contains("enhanceddescription")' == 'True') {
               ColumnObject.push({
                   "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       return "<input type='text' maxLength='128'  value='" + obj.aData.EnhancedDescription + "' class='importtext-box' id='aBOMItemEnhancedDescription_" + obj.aData.ID + "'  />"
                   }
               });
           }*@
       });

   }

</script>