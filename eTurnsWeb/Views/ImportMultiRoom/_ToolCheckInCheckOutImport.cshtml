@model ImportModuleModel
@{
    string[] arrcolumns = Model.arrcolumns;
}
<tr>
    @if (arrcolumns.Count() > 0)
    {
        <th>
            @ResCommon.Status
        </th>
        <th>
            @ResCommon.Reason
        </th>
    }
    @if (eTurnsWeb.Helper.SessionHelper.AllowToolOrdering && arrcolumns.Contains("toolname"))
    {
        <th>
            <em>* </em>
            @ResToolMaster.ToolName
        </th>
    }
    @if (arrcolumns.Contains("serial"))
    {
        <th>
            <em>* </em>
            @ResToolMaster.Serial
        </th>
    }
    @if (eTurnsWeb.Helper.SessionHelper.AllowToolOrdering && arrcolumns.Contains("location"))
    {
        <th>
            <em>* </em>
            @ResToolMaster.Location
        </th>
    }
    @if (arrcolumns.Contains("techniciancode"))
    {
        <th>
            <em>* </em>
            @ResTechnician.TechnicianCode
        </th>
    }
    @if (arrcolumns.Contains("quantity"))
    {
        <th>
            <em>* </em>
            @ResToolCheckInOutHistory.Quantity
        </th>
    }
    @if (arrcolumns.Contains("operation"))
    {
        <th>
            @ResToolCheckInOutHistory.Operation
        </th>
    }    
    @if (arrcolumns.Contains("checkoutudf1"))
    {
        <th>
            @ResToolCheckInOutHistory.UDF1
        </th>
    }
    @if (arrcolumns.Contains("checkoutudf2"))
    {
        <th>
            @ResToolCheckInOutHistory.UDF2
        </th>
    }
    @if (arrcolumns.Contains("checkoutudf3"))
    {
        <th>
            @ResToolCheckInOutHistory.UDF3
        </th>
    }
    @if (arrcolumns.Contains("checkoutudf4"))
    {
        <th>
            @ResToolCheckInOutHistory.UDF4
        </th>
    }
    @if (arrcolumns.Contains("checkoutudf5"))
    {
        <th>
            @ResToolCheckInOutHistory.UDF5
        </th>
    }    
</tr>
<script type="text/javascript">
    if (selectedModuleVal == '@((int)eTurnsWeb.Helper.SessionHelper.ModuleList.ToolCheckInCheckOut)') {
        $(function (event) {
            if ('@arrcolumns.Count()' > 0) {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Status == null ? "" : obj.aData.Status.substring(0, 255);
                        var forcol = "#000000";
                        var bodcol = "#DDD";

                        if (obj.aData.Status != null && obj.aData.Status == "Fail") {
                            forcol = "Red";
                            bodcol = "Red";
                        }

                        else if (obj.aData.Status != null && obj.aData.Status == "Success") {
                            forcol = "Green";
                            bodcol = "Green";
                        }
                        return "<span id='Status'  style='width:100px;color:" + forcol + ";'>" + tempUDF5 + "</span>"
                    }
                });
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempUDF5 = obj.aData.Reason == null ? "" : obj.aData.Reason.substring(0, 255);
                        return "<span id='Reason'  style='width:100px;'>" + tempUDF5 + "</span>"
                    }
                });
            }
            if ('@eTurnsWeb.Helper.SessionHelper.AllowToolOrdering.ToString().ToLower()' == 'true')
            {
                if ('@arrcolumns.Contains("toolname")' == 'True') {
                    ColumnObject.push({
                        "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                        "fnRender": function (obj, val) {
                            var tempDataToolName = obj.aData.ToolName == null ? "" : obj.aData.ToolName.substring(0, 128);
                            if (tempDataToolName != '') {
                                tempDataToolName = $.trim(tempDataToolName);
                            }
                            return "<input type='text' maxLength='128'  value='" + tempDataToolName + "'  class='importtext-box' id='aToolName_" + obj.aData.Id + "' style='width:200px;' />"
                        }
                    });
                }
            }
            if ('@arrcolumns.Contains("serial")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.Serial == null ? "" : obj.aData.Serial.substring(0, 128);
                        if (tempDataPullQnt != '') {
                            tempDataPullQnt = $.trim(tempDataPullQnt);
                        }
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "'  class='importtext-box' id='aSerial_" + obj.aData.Id + "' style='width:200px;' />" +
                            "<span id='Id' style='display:none'>" + obj.aData.Id + "</span>"

                    }
                });
            }
            if ('@eTurnsWeb.Helper.SessionHelper.AllowToolOrdering.ToString().ToLower()' == 'true') {
                if ('@arrcolumns.Contains("location")' == 'True') {
                    ColumnObject.push({
                        "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                        "fnRender": function (obj, val) {
                            var tempLocation = obj.aData.Location == null ? "" : obj.aData.Location.substring(0, 255);
                            return "<input type='text' value='" + tempLocation + "'  maxLength='255' class='importtext-box'  id='aLocation_" + obj.aData.Id + "' style='width:100px;' />"
                        }
                    });
                }
            }

            if ('@arrcolumns.Contains("techniciancode")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempTechnician = obj.aData.TechnicianCode == null ? "" : obj.aData.TechnicianCode.substring(0, 255);
                        return "<input type='text' value='" + tempTechnician + "'  maxLength='255' class='importtext-box'  id='aTechnicianCode_" + obj.aData.Id + "' style='width:100px;' />"
                    }
                });
            }
            if ('@arrcolumns.Contains("quantity")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.Quantity == null ? "" : obj.aData.Quantity;
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "' onblur='return ValidateValueWithDataType();'  onkeypress='return isNumberKey(event);' class='numericDecimalinput importtext-box' id='aQuantity_" + obj.aData.Id + "' style='width:100px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("operation")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempDataPullQnt = obj.aData.Operation == null ? "" : obj.aData.Operation.substring(0, 128);
                        return "<input type='text' maxLength='128'  value='" + tempDataPullQnt + "' class='importtext-box' id='aOperation_" + obj.aData.Id + "' style='width:100px;' />"

                    }
                });
            }

            if ('@arrcolumns.Contains("checkoutudf1")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCheckOutUDF1 = obj.aData.CheckOutUDF1 == null ? "" : obj.aData.CheckOutUDF1;
                        return "<input type='text' maxLength='128'  value='" + tempCheckOutUDF1 + "' class='importtext-box' id='aCheckOutUDF1' style='width:200px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("checkoutudf2")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCheckOutUDF2 = obj.aData.CheckOutUDF2 == null ? "" : obj.aData.CheckOutUDF2;
                        return "<input type='text' maxLength='128'  value='" + tempCheckOutUDF2 + "' class='importtext-box' id='aCheckOutUDF2' style='width:200px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("checkoutudf3")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCheckOutUDF3 = obj.aData.CheckOutUDF3 == null ? "" : obj.aData.CheckOutUDF3;
                        return "<input type='text' maxLength='128'  value='" + tempCheckOutUDF3 + "' class='importtext-box' id='aCheckOutUDF3' style='width:200px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("checkoutudf4")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCheckOutUDF4 = obj.aData.CheckOutUDF4 == null ? "" : obj.aData.CheckOutUDF4;
                        return "<input type='text' maxLength='128'  value='" + tempCheckOutUDF4 + "' class='importtext-box' id='aCheckOutUDF4' style='width:200px;' />"

                    }
                });
            }
            if ('@arrcolumns.Contains("checkoutudf5")' == 'True') {
                ColumnObject.push({
                    "mDataProp": null, "sClass": "read_only", "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        var tempCheckOutUDF5 = obj.aData.CheckOutUDF5 == null ? "" : obj.aData.CheckOutUDF5;
                        return "<input type='text' maxLength='128'  value='" + tempCheckOutUDF5 + "' class='importtext-box' id='aCheckOutUDF5' style='width:200px;' />"

                    }
                });
            }
        });
    }

</script>