@model List<eTurns.DTO.ItemQuantityDetail>
@{
    GridHeaderSettings settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplaySaveButton = false, DisplayUDFButton = false, UDFSetupFor = "", DisplaySettings = false, DisplayColumnSetupButton = false, DisplayContextMenu = false, DisplayPrintBlock = false, DisplayDeleteButton = false, DataTableName = "ItemQuantityDetail" };
    bool IsOrderInsertRights = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Orders, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool IsOrderEditRights = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Orders, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    bool IsReturnOrderInsertRights = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.ReturnOrder, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool IsReturnOrderEditRights = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.ReturnOrder, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
}
<div class="userListingWrapper">
    <div class="userListBlock">
        <div id="tab7" class="tabContener" style="width: 99.5%">
            <div class="searchWrapper">
                <div class="searchBlock" style="margin: -1px 15px; float: left;">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search</span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="txtSearch" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clarchtxtSearch" />
                        </a>
                    </div>
                </div>
            </div>
            <div style="margin: 3px; float: left; width: 99%">
                @Html.QuickListItemsGridTopHeader(settings)
            </div>
            <div class="userContent" style="width: 99% !important; margin-left: 5px !important;
                float: left;">
                <table id="ItemQuantityDetail" class="display">
                    <thead>
                        <tr>
                            <th>
                                @ResItemMaster.ItemNumber
                            </th>
                            <th>
                                @ResOrder.Bin
                            </th>
                            <th>
                                @ResOrder.OrderNumber
                            </th>
                            <th>
                                @ResOrder.ReleaseNumber
                            </th>
                            <th>
                                @ResItemMaster.PendingQuantity
                            </th>
                            <th>
                                @ResOrder.RequiredDate
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Count > 0)
                        {
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @item.ItemNo
                                    </td>
                                    <td>
                                        @item.BinNumber
                                    </td>
                                    <td>
                                        @*<a href="../Order/OrderList?FromItem=true&OrderStatus=@item.status&OID=@item.ID" id="aOrderId">@item.Name</a>*@
                                        @if (item.ItemQuantityType == "OnOrderQuantity" && (IsOrderInsertRights == true || IsOrderEditRights == true))
                                        {
                                            <a href="@Url.Action("OrderList", "Order", new { FromItem = "true", OrderStatus = item.status, OID = item.ID })" id="aOrderId">@item.Name</a>
                                        }
                                        else if (item.ItemQuantityType == "ReturnOrderQuantity" && (IsReturnOrderInsertRights == true || IsReturnOrderEditRights == true))
                                        {
                                            <a href="@Url.Action("ReturnOrderList", "Order", new { FromItem = "true", OrderStatus = item.status, OID = item.ID })" id="aOrderId">@item.Name</a>
                                        }
                                        else
                                        {
                                            @item.Name
                                        }
                                        <input id="hdnID" type="hidden" value="@item.ID" />
                                    </td>
                                    <td>
                                        @item.ReleaseNumber
                                    </td>
                                    <td>
                                        @item.qty
                                    </td>
                                    <td>
                                        @item.requirdate
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script language="javascript" type="text/javascript">
    var NotAllowedCharCodes = [9, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40];
    function GoToOrderPage(id) {
    }
    $(document).ready(function () {
        var bIsFilter = false;
        var ColumnObject = new Array();
        ColumnObject.push({ "bSortable": true });
        ColumnObject.push({ "bSortable": true });
        ColumnObject.push({ "bSortable": true });
        ColumnObject.push({ "bSortable": true });
        ColumnObject.push({ "bSortable": true });
        ColumnObject.push({ "bSortable": true });

        var gaiSelected = [];
        oItemQuantityDetail = $('#ItemQuantityDetail').dataTable({
            "bJQueryUI": true,
            "bRetrieve": true,
            "bDestroy": true,
            "bScrollCollapse": true,
            "sScrollX": "80%",
            "sDom": '<"top"lp<"clear">>rt<"bottom"i<"clear">>',
            "oColVis": {},
            "aaSorting": [[0, "desc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },

            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
              //  if (!bIsFilter) {
                    $.ajax({
                        "url": '@Url.Content("~/Master/SaveGridState")',
                        "type": "POST",
                        data: { Data: JSON.stringify(oData), ListName: 'QuantityDetail' },
                        "async": true,
                        "dataType": "json",
                        "success": function (json) {
                            if (json.jsonData != '')
                                o = json;
                        }
                    });
              //  }
                bIsFilter = false;
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'QuantityDetail' },
                    "async": true,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            }
            , "aoColumns": ColumnObject
        });

    });

    _Common.setGloblaSearch('txtSearch', "ItemQuantityDetail", function (txtSearch) {

        var txtFilerId = 'txtSearch';
        var filterVal = _Common.getGlobalFilterVal(false, txtFilerId);
        var filterValTrimmed = _Common.getGlobalFilterVal(true, txtFilerId);
        _Common.trimStartGlobalFilter(txtFilerId);
        if (filterValTrimmed.length > 2 || filterVal.length === 0) {
            var searchtext = $("#txtSearch").val().replace(/'/g, "''").replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;");
            $('#ItemQuantityDetail').dataTable().fnFilter(searchtext,null,null,null);
            _Common.highlightTextInTable(txtFilerId, 'ItemQuantityDetail');
        }
        else {
            _Common.highlightTextInTable(txtFilerId, 'ItemQuantityDetail');
        }
     },
        function (txtSearch, keycode) {
         var txtFilerId = 'txtSearch';
         var filterVal = _Common.getGlobalFilterVal(false, txtFilerId);
         var filterValTrimmed = _Common.getGlobalFilterVal(true, txtFilerId);
         _Common.trimStartGlobalFilter(txtFilerId);
         //if (typeof $("#global_filter") != 'undefined' && (KeyCode == 13 || $("#global_filter").val().length == 0)) {
            if ((filterValTrimmed.length > 0 && keycode === 13) || filterVal.length === 0) {
                var searchtext = $("#txtSearch").val().replace(/'/g, "''").replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;");
                $('#ItemQuantityDetail').dataTable().fnFilter(searchtext, null, null, null);
                _Common.highlightTextInTable(txtFilerId, 'ItemQuantityDetail');
         }
         else {
             _Common.highlightTextInTable(txtFilerId, 'ItemQuantityDetail');
         }

     });


    //function fnFilterOnOrderItem() {
    //    bIsFilter = true;
    //    var searchtext = $("#txtSearch").val().replace(/'/g, "''");
    //    $('#ItemQuantityDetail').dataTable().fnFilter(
    //                            searchtext,
    //                            null,
    //                            null,
    //                            null
    //                        );

    //    $('#ItemQuantityDetail' + ' td').removeHighlight();

    //    if (searchtext.length > 0)
    //        $('#ItemQuantityDetail' + ' td').highlight($("#txtSearch").val());
    //    // }
    //}

    //$("#txtSearch").on("keyup", function (e) {

    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    var index = $.inArray(code, NotAllowedCharCodes);
    //    if (index >= 0) return false;

    //    fnFilterOnOrderItem();

    //});

    //$("#txtSearch").on("keydown", function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    if (code == 13) {
    //        fnFilterOnOrderItem();
    //    }

    //});


    $("#clarchtxtSearch").click(function () {
        $("#txtSearch").val('');
        $("#txtSearch").trigger('propertychange');
        $("#txtSearch").focus();
        return false;
    });

    $('#PageNumber1').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#Gobtn1").click();
            return false;
        }
    });

    $("#Gobtn1").click(function () {
        var pval = $('#PageNumber1').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }
        if (pval == 0)
            return;

        $('#ItemQuantityDetail').dataTable().fnPageChange(Number(pval - 1));
        $('#PageNumber1').val('');
    });
</script>
