@model InventoryCountDTO
@{  
    var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, ShowLocationCombo = false, ShowSelectAll = false, ShowApplyButton = false, DisplaySaveButton = false, DisplayUDFButton = false, UDFSetupFor = "CountLineItems", DisplaySettings = false, DisplayColumnSetupButton = true, DisplayContextMenu = false, DisplayPrintBlock = false, DisplayDeleteButton = true, ColumnSetupFor = "GetIcLineItems" + Model.ID };
}
<div class="userListingWrapper">
    <div class="userListBlock">
        <div id="tab7" class="tabContener" style="width: 99.5%">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search</span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="MSLItem_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_MSLItem_filter" /></a>
                    </div>
                </div>
                <input type="button" id="btnDiv" value="Div" style="visibility: hidden" />
            </div>
            @Html.QuickListItemsGridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.Count)
            <div class="userContent" style="width: 99% !important; margin-left: 5px !important;
                float: left;">
                <table id="CountLineItem@(Model.ID)" class="display">
                    <thead>
                        <tr>
                            <th>
                                @eTurns.DTO.ResInventoryCountDetail.CountCustomerOwnedQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResInventoryCountDetail.CountConsignedQuantityEntry
                            </th>
                            <th>
                                @eTurns.DTO.ResInventoryCountDetail.CusOwnedDifference
                            </th>
                            <th>
                                @eTurns.DTO.ResInventoryCountDetail.ConsignedDifference
                            </th>
                            <th>
                                @eTurns.DTO.ResInventoryCountDetail.ItemNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResInventoryCountDetail.BinNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResItemLocationDetails.CustomerOwnedQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemLocationDetails.ConsignedQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResInventoryCountDetail.CountLineItemDescription
                            </th>
                            <th>
                                @eTurns.DTO.ResInventoryCountDetail.IsApplied
                            </th>
                            <th>
                                @eTurns.DTO.ResInventoryCountDetail.ItemTypeCategory
                            </th>
                            <th>
                                @eTurns.DTO.ResInventoryCountDetail.IsStagingLocationCount
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.AddedFrom
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.EditedFrom
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ReceivedOnDate
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.CountLineItemsList != null && Model.CountLineItemsList.Count > 0)
                        {
                            foreach (var item in Model.CountLineItemsList)
                            { 
                            <tr>
                                <td>
                                    @item.CountCustomerOwnedQuantity
                                </td>
                                <td>
                                    @item.CountConsignedQuantityEntry
                                </td>
                                <td>
                                    @item.CusOwnedDifference
                                </td>
                                <td>
                                    @item.ConsignedDifference
                                </td>
                                <td>
                                    @item.ItemNumber
                                </td>
                                <td>
                                    @item.BinNumber
                                </td>
                                <td>
                                    @item.CustomerOwnedQuantity
                                </td>
                                <td>
                                    @item.ConsignedQuantity
                                </td>
                                <td>
                                    @item.CountLineItemDescription
                                </td>
                                <td>
                                    @item.IsApplied
                                </td>
                                <td>
                                    @item.InventoryClassificationCode
                                </td>
                                <td>
                                    @item.IsStagingLocationCount
                                </td>
                                <td>
                                    @item.AddedFrom
                                </td>
                                <td>
                                    @item.EditedFrom
                                </td>
                                <td>
                                    @item.ReceivedOnDate
                                </td>
                                <td>
                                    @item.ReceivedOnDateWeb
                                </td>
                            </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var oTableProjectItems;
    var DTName = 'CountLineItem' + '@Model.ID';
    var bIsCLIHFilter = false;
    var anOpen = [];
    var sImageUrl1 = "/Content/images/";
    function ReDirectData() {
        ShowEditTab("WOEdit/" + '@Model.ID', "frmWOMaster");
    }
    $(document).ready(function () {
        var DTName = 'CountLineItem' + '@Model.ID';
        $(".text-boxPriceFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdCostcentsLimit').val(), 10)
        });
        $(".text-boxQuantityFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdQuantitycentsLimit').val(), 10)
        });

        var gaiSelected = [];
        oTableProjectItems = $('#' + DTName).dataTable({
            "bJQueryUI": true,
            "bRetrieve": true,
            "bDestroy": true,
            "bScrollCollapse": true,
            "sScrollX": "900px",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>',
            "aaSorting": [],
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
                if (!bIsCLIHFilter) {
                    $.ajax({
                        "url": '@Url.Content("~/Master/SaveGridState")',
                        "type": "POST",
                        data: { Data: JSON.stringify(oData), ListName: 'ProjectItemsList' },
                        "async": false,
                        cache: false,
                        "dataType": "json",
                        "success": function (json) {
                            o = json;
                        }
                    });
                }
                bIsCLIHFilter = false;
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'ProjectItemsList' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            }
        });
        $('.DTTT_container').css('z-index', '-1');

        $("#MSLItem_filter").keyup(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
            }
            else {
                fnFilterCountLineItemsHistory();
            }
        });

        //Keydown event is required to handle ENTER KEY to work in IE
        $("#MSLItem_filter").keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                fnFilterCountLineItemsHistory();
            }
        });

        //Clear Filter
        $("#clear_MSLItem_filter").click(function () {
            $("#MSLItem_filter").val('');
            fnFilterCountLineItemsHistory();
            $("#MSLItem_filter").focus();
            return false;
        });

        var timeoutscheduler;
        $(document).on('propertychange input', "#MSLItem_filter", function () {
            clearTimeout(timeoutscheduler);
            timeoutscheduler = setTimeout(function () {
                if (SearchPattern == 2 || SearchPattern == "2") {
                    fnFilterCountLineItemsHistory();
                }
                else {
                    $('#MSLItem_filter').unbind("keypress");
                    $('#MSLItem_filter').keypress(function (event) {
                        var keycode = (event.keyCode ? event.keyCode : event.which);
                        if (keycode == 13) {
                            fnFilterCountLineItemsHistory();
                        }
                    });
                    if ($("#MSLItem_filter").val().length == 0) {
                        setTimeout(function () { fnFilterCountLineItemsHistory(); }, 200);
                    }
                }
            }, 500);
        });
    });   

    function fnFilterCountLineItemsHistory() {
        //set filter only if more than 2 characters are pressed
        if (typeof $("#MSLItem_filter") != 'undefined' && ($("#MSLItem_filter").val().length > 2 || $("#MSLItem_filter").val().length == 0)) {
            //if (typeof $("#MSLItem_filter") != 'undefined') {
            bIsCLIHFilter = true;
            var searchtext = $("#MSLItem_filter").val().replace(/'/g, "''");

            $('#' + DTName + ' td').removeHighlight();

            $('#' + DTName).dataTable().fnFilter(
                searchtext,
                null,
                null,
                null
            );

            if (searchtext.length > 0)
                $('#' + DTName + ' td').highlight($("#MSLItem_filter").val());
        }
    }

</script>
