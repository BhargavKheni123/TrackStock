 @{ 
     string ItemsGuids=Convert.ToString(ViewBag.itemsguids);
 }
<div id="div1" style="width: 99.5%; min-height: 140px">
    <div>
        <div>
            <div style="text-align: center; float: left; width: 85%;">
                <span id="spanErrorMsg" style="color: Green;"></span>
            </div>            
            <div style="float: right; width: 10%;">
                <div style="text-align: center; bottom: auto; float: right; width: 10%; padding-bottom: 5px;">
                    <input type="button" id="btnPrintLabel" value='@ResCommon.PrintLabel' class="CreateBtn" />
                </div>
            </div>
            <div style="float: right; width: 5%; padding-top:6px;">
                <a title="Select all" href="javascript:void(null);" id="actionSelectAll" class="tblItemsBinSelectAll">
                    <img src="/content/images/selectall.png" alt="Select all">
                </a>
                <a title="Select all" style="display:none" href="javascript:void(null);" id="actionDeSelectAll" class="tblItemsBinDeSelectAll">
                    <img src="/content/images/UnSelectAll.png" alt="Select all">
                </a>
            </div>
        </div>
    </div>
    <div class="userContentInnerGrid" style="width: 99% !important; margin-left: 5px !important;
        float: left; height: 380px; overflow-y: auto;">
        <table id="tblItemsBin" class="display">
            <thead>
                <tr>
                    <th>
                        @eTurns.DTO.ResItemMaster.ItemNumber
                        <input id="FirstColumnFieldName" class="ColumnName" type="hidden" value="ItemNumber" />
                    </th>
                    <th>
                        @eTurns.DTO.ResBin.BinNumber
                        <input id="SecondColumnFieldName" class="ColumnName" type="hidden" value="BinNumber" />
                    </th>
                    <th data-orderable="false">
                        @eTurns.DTO.ResItemMaster.OnHandQuantity
                       
                    </th>
                    <th data-orderable="false">
                        @eTurns.DTO.ResItemLocationQTY.Quantity
                       
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
<script type="text/javascript">
    var oTableItemsBins;
    $(document).ready(function () {
        var gaiSelected = [];

        oTableItemsBins = $('#tblItemsBin').dataTable({
            "bScrollCollapse": true,
            "sScrollX": "99%",
            "oColVis": {},
            "bSort": true,
            "aaSorting": [[0, "asc"]],
            "bPaginate": false,
            "bProcessing": false,
            "bStateSave": false,
            "bLengthChange": false,
            "bFilter": false,
            "bAutoWidth": false,
            "bInfo": false,
            "bAutoWidth": false,
            "bRetrieve": false,
            "bDestroy": false,
            "bServerSide": true,
            "sAjaxSource": '@Url.Content("~/Inventory/GetItemsBinForLabelsListAjax")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {


                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;
                for (var i = 0; i <= objCols.length - 1; i++) {
                    arrCols.push(objCols[i].mDataProp);
                }
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }

                if (oSettings.aaSorting.length != 0) {
                    var sortValue = "";
                    for (var k = 0; k <= oSettings.aaSorting.length - 1; k++) {
                        if (sortValue.length > 0)
                            sortValue += ", "
                        sortValue += arrCols[oSettings.aaSorting[k][0]] + ' ' + oSettings.aaSorting[k][1];

                    }
                    aoData.push({ "name": "SortingField", "value": sortValue });
                }
                else
                    aoData.push({ "name": "SortingField", "value": "0" });

                aoData.push({ "name": "IsArchived", "value": false });
                aoData.push({ "name": "IsDeleted", "value": false });

                aoData.push({ "name": "ItemGuids", "value": '@ItemsGuids' });
                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    "cache": false,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback,
                    "beforeSend": function () {
                        $('#tblItemsBin').removeHighlight();
                        $('div#tblItemsBin_wrapper').find('.dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    "error": function (xhr, status, error) {


                    },
                    "complete": function () {
                        $('div#tblItemsBin_wrapper').find('.dataTables_scroll').css({ "opacity": 1 });
                    }
                })
            },
            "aoColumns": [
                {
                    "mDataProp": "ItemNumber",
                    "bSortable": true,
                    "sClass": "read_only control NotHide",
                    "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        return obj.aData.ItemNumber+'<input id="hdnBinGuid" type="hidden" value="'+obj.aData.BinGuid+'" /><input id="hdnItemGuid" type="hidden" value="'+obj.aData.ItemGuid+'" /><input id="hdnBinID" type="hidden" value="'+obj.aData.BinID+'" /><input id="hdnItemID" type="hidden" value="'+obj.aData.ItemID+'" />';
                    }
                },
                {
                    "mDataProp": "BinNumber",
                    "bSortable": true,
                    "sClass": "read_only control NotHide",
                    "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        return obj.aData.BinNumber;
                    }
                },
               {
                   "mDataProp": "OnHandQuantity",
                   "bSortable": false,
                   "sClass": "read_only control  NotHide numericalign",
                   "sDefaultContent": '',
                   "fnRender": function (obj, val) {
                       return obj.aData.OnHandQuantity;
                   }
               },
                {
                    "mDataProp": "BinQuantity",
                    "bSortable": false,
                    "sClass": "read_only control NotHide numericalign",
                    "sDefaultContent": '',
                    "fnRender": function (obj, val) {
                        return obj.aData.BinQuantity;
                    }
                }]
        });
        $('.DTTT_container').css('z-index', '-1');

        SetShiftSelectTblItemsBin();


        $(document).on("click", "a.tblItemsBinSelectAll", function () {
            $("#tblItemsBin").find("tbody tr").removeClass("row_selected").addClass("row_selected");
            $(this).next("a.tblItemsBinDeSelectAll").css('display', '');
            $(this).css('display', 'none');
        });

        $(document).on("click", "a.tblItemsBinDeSelectAll", function () {
            $("#tblItemsBin").find("tbody tr").removeClass("row_selected");
            $(this).prev("a.tblItemsBinSelectAll").css('display', '');
            $(this).css('display', 'none');
        });
    });

    var TblItemsBinLastChecked;

    function SetShiftSelectTblItemsBin() {

        //$('#tblItemsBin tbody').on('click', 'tr', function () {
        //    if ($(this).hasClass('row_selected')) {
        //        $(this).removeClass('row_selected');
        //    }
        //    else {
        //        $(this).addClass('row_selected');
        //    }
        //});

        $("#tblItemsBin tbody").on("tap click", "tbody tr", function (e) {
            if (e.target.type == "checkbox" || e.target.type == "select" || e.target.type == "radio" || e.target.type == "button") {
                e.stopPropagation();
            } else {
                //if (IsDeleteItemPictureViewRecord) {
                //    //$(this).parent().parent().parent().parent().parent().toggleClass('row_selected');
                //}
                //else {

                    if (!TblItemsBinLastChecked) {
                        TblItemsBinLastChecked = this;
                    }



                    if (e.shiftKey) {
                        var start = $('#tblItemsBin tbody tr').index(this);
                        var end = $('#tblItemsBin tbody tr').index(TblItemsBinLastChecked);

                        for (i = Math.min(start, end) ; i <= Math.max(start, end) ; i++) {
                            if (!$('#tblItemsBin tbody tr').eq(i).hasClass('row_selected')) {
                                $('#tblItemsBin tbody tr').eq(i).addClass("row_selected");
                            }
                        }
                        if (window.getSelection) {
                            if (window.getSelection().empty) {  // Chrome
                                window.getSelection().empty();
                            } else if (window.getSelection().removeAllRanges) {  // Firefox
                                window.getSelection().removeAllRanges();
                            }
                        } else if (document.selection) {  // IE?
                            document.selection.empty();
                        }
                    } else if ((e.metaKey || e.ctrlKey)) {
                        $(this).toggleClass('row_selected');
                    } else {
                        $(this).toggleClass('row_selected');
                    }

                    TblItemsBinLastChecked = this;
                //}



                return false;
            }
        });

    }

    $('#btnPrintLabel').on('click', function (e) {
        var arrCols = new Array();
        var objCols = $('#tblItemsBin').dataTable().fnSettings().aoColumns;
        for (var i = 0; i <= objCols.length - 1; i++) {
            arrCols.push(objCols[i].mDataProp);
        }

        var sortValue = "";
        for (var i = 0; i <= $('#tblItemsBin').dataTable().fnSettings().aaSorting.length - 1; i++) {
            if (sortValue.length > 0)
                sortValue += ", "
            sortValue += arrCols[$('#tblItemsBin').dataTable().fnSettings().aaSorting[i][0]] + ' ' + $('#tblItemsBin').dataTable().fnSettings().aaSorting[i][1];
        }
        //$("div.userContentInnerGrid").find("div.dataTables_scrollHead").find("table.dataTable thead tr th").each(function () {
        //    if ($(this).attr("class") != "sorting" && $(this).attr("class") != "sorting_disabled")
        //    {
        //        var clas = $(this).attr("class");
        //        var Columnname = $(this).find("input.ColumnName").val();

        //        if (clas != '') {
        //            if (sortValue.length > 0)
        //                sortValue += ", "
        //            sortValue += Columnname+' '+ clas.split("_")[1];
        //        }
        //    }
        //});

        if ($.trim(sortValue).length <= 0) {
            sortValue = "ItemNumber Desc";
        }

        var anSelected = fnGetSelected($('#myDataTable').dataTable());

        var strIDs = "";
        var strBinIds = "";
        $('#tblItemsBin tbody tr.row_selected').each(function (i) {
            var itemID = $(this).find('#hdnItemID').val();
            var binID = $(this).find('#hdnBinID').val();
            if (strIDs.length > 0)
                strIDs = strIDs + ',';

            if (strBinIds.length > 0)
                strBinIds = strBinIds + ',';

            strIDs = strIDs + itemID;
            strBinIds = strBinIds + itemID + '#' + binID;
        });

        if (strIDs.length > 0 && strBinIds.length > 0) {
            $('#divLabelPrintPopup').data({ "IDs": strIDs, "ModuleID": 2, "SortFields": sortValue, "ROTDIds": strBinIds, "CallFrom": "ItemsBinsBarcode" }).dialog('open');
            return false;
        }
        else {
            showNotificationDialog();
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            $("#spanGlobalMessage").html('@ResCommon.ReqRowSelection');
            return false;
        }

    });

</script>
