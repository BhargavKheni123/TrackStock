@model eTurns.DTO.ItemTransationInfo
@{
    GridHeaderSettings settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplaySaveButton = false, DisplayUDFButton = false, UDFSetupFor = "", DisplaySettings = false, DisplayColumnSetupButton = false, DisplayContextMenu = false, DisplayPrintBlock = false, DisplayDeleteButton = false, DataTableName = "ItemQuantityDetail" };
    var Dateformat = "MM/dd/yyyy";
    //if (eTurnsWeb.Helper.SessionHelper.CompanyConfig != null && !string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.CompanyConfig.DateFormatCSharp))
    //{
    //    Dateformat = eTurnsWeb.Helper.SessionHelper.CompanyConfig.DateFormatCSharp;
    //}
    if (!string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.RoomDateFormat))
    {
        Dateformat = eTurnsWeb.Helper.SessionHelper.RoomDateFormat;
    }
}
<div class="userListingWrapper">
    <div class="userListBlock">
        <div id="tab7" class="tabContener" style="width: 99.5%">
            <div style="margin-bottom: 40px">
                <table style="margin: 3px; float: left; width: 99%">
                    <tr>
                        <td>
                            <label for="RoomName">
                                @Html.Label(@eTurns.DTO.ResItemMaster.ItemNumber)
                            </label>
                            : <span>@(Model.ItemNumber)</span>
                        </td>
                        <td>
                            <label for="RoomName">
                                @Html.Label(@eTurns.DTO.ResItemMaster.MeasureMethod)
                            </label>
                            : <span>
                                @if (Model.AUMeasureMethod == null)
                                {

                                }
                                else
                                {
                                    @(Model.AUMeasureMethod)
                                }
                            </span>
                        </td>
                        <td>
                            <label for="RoomName">
                                @Html.Label(@eTurns.DTO.ResItemMaster.TotalQuantity)
                            </label>
                            : <span>@(Model.TotalQty)</span>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label for="RoomName">
                                @Html.Label(@eTurns.DTO.ResItemMaster.TransctionStartDate)
                            </label>
                            : <span>@(Model.TxnStartDate.Value.Date.ToString(Dateformat))</span>
                        </td>
                        <td>
                            <label for="RoomName">
                                @Html.Label(@eTurns.DTO.ResItemMaster.TransctionEndDate)
                            </label>
                            : <span>@(Model.TxnEndDate.Value.Date.ToString(Dateformat))</span>
                        </td>
                        <td>
                            <label for="RoomName">
                                @Html.Label(@eTurns.DTO.ResQuoteMaster.TotalCost)
                            </label>
                            : <span>@(Model.TotalTxnValue)</span>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label for="RoomName">
                                @Html.Label(@eTurns.DTO.ResItemMaster.Daysofsapmple)
                            </label>
                            : <span>@(Model.RoomAnalyticSettings.AUDayOfUsageToSample ?? 0)</span>
                        </td>
                        <td>&nbsp;</td>
                        <td>&nbsp;</td>
                    </tr>
                </table>
            </div>
            <div class="searchWrapper">
                <div class="searchBlock" style="margin: -1px 15px; float: left;">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search</span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="txtSearch" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clarchtxtSearch" />
                        </a>
                    </div>
                </div>
            </div>
            <div style="margin: 3px; float: left; width: 99%">
                @Html.QuickListItemsGridTopHeader(settings)
            </div>
            <div class="userContent" style="width: 99% !important; margin-left: 5px !important;
                float: left;">
                @if (Model != null)
                {
                    <table id="ItemQuantityDetail" class="display">
                        <thead>
                            <tr>
                                <th>
                                    @ResCommon.Date
                                </th>
                                @if (Model.AUMeasureMethod == ResDashboard.MeasurementPullTransferValue)
                                {
                                    <th>
                                        @ResPullMaster.PulledCost
                                    </th>
                                }
                                else
                                {
                                    <th>
                                        @ResCommon.Qty
                                    </th>
                                }
                                <th>@ResItemMaster.txnType </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.TxtHistory != null && Model.TxtHistory.Count() > 0)
                            {
                                foreach (var item in Model.TxtHistory)
                                {
                                    <tr>
                                        <td>
                                            @item.TxnstringDate
                                        </td>
                                        @if (Model.AUMeasureMethod == ResDashboard.MeasurementPullTransferValue)
                                        {
                                            <td>
                                                @item.TxnValue
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                @item.TxnQty
                                            </td>
                                        }
                                        <td>@item.TxnType</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
</div>
<script language="javascript" type="text/javascript">
    var NotAllowedCharCodes = [9, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40];
    function GoToOrderPage(id) {
    }
    $(document).ready(function () {
        var bIsFilter = false;
        var ColumnObject = new Array();
        ColumnObject.push({ "bSortable": true });
        ColumnObject.push({ "bSortable": true });
        ColumnObject.push({ "bSortable": true });
        var gaiSelected = [];
        oItemQuantityDetail = $('#ItemQuantityDetail').dataTable({
            "bJQueryUI": true,
            "bRetrieve": true,
            "bDestroy": true,
            "bScrollCollapse": true,
            "sScrollX": "80%",
            "sDom": '<"top"lp<"clear">>rt<"bottom"i<"clear">>',
            "oColVis": {},
            "aaSorting": [[0, "desc"]],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },

            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
              //  if (!bIsFilter) {
                    $.ajax({
                        "url": '@Url.Content("~/Master/SaveGridState")',
                        "type": "POST",
                        data: { Data: JSON.stringify(oData), ListName: 'TurnsQuantityDetail' },
                        "async": true,
                        "dataType": "json",
                        "success": function (json) {
                            if (json.jsonData != '')
                                o = json;
                        }
                    });
                //}
                bIsFilter = false;
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'TurnsQuantityDetail' },
                    "async": true,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            }
            , "aoColumns": ColumnObject
        });

    });


    //function fnFilterOnOrderItem() {
    //    bIsFilter = true;
    //    var searchtext = $("#txtSearch").val().replace(/'/g, "''");
    //    $('#ItemQuantityDetail').dataTable().fnFilter(
    //                            searchtext,
    //                            null,
    //                            null,
    //                            null
    //                        );

    //    $('#ItemQuantityDetail' + ' td').removeHighlight();

    //    if (searchtext.length > 0)
    //        $('#ItemQuantityDetail' + ' td').highlight($("#txtSearch").val());
    //    // }
    //}

    //$("#txtSearch").on("keyup", function (e) {

    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    var index = $.inArray(code, NotAllowedCharCodes);
    //    if (index >= 0) return false;

    //    fnFilterOnOrderItem();

    //});

    //$("#txtSearch").on("keydown", function (e) {
    //    var code = (e.keyCode ? e.keyCode : e.which);
    //    if (code == 13) {
    //        fnFilterOnOrderItem();
    //    }

    //});

    _Common.setGloblaSearch('txtSearch', "ItemQuantityDetail", function (txtSearch) {

        var txtFilerId = 'txtSearch';
        var filterVal = _Common.getGlobalFilterVal(false, txtFilerId);
        var filterValTrimmed = _Common.getGlobalFilterVal(true, txtFilerId);
        _Common.trimStartGlobalFilter(txtFilerId);
        if (filterValTrimmed.length > 2 || filterVal.length === 0) {
            var searchtext = $("#txtSearch").val().replace(/'/g, "''").replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;");
            $('#ItemQuantityDetail').dataTable().fnFilter(searchtext, null, null, null);
            _Common.highlightTextInTable(txtFilerId, 'ItemQuantityDetail');
        }
        else {
            _Common.highlightTextInTable(txtFilerId, 'ItemQuantityDetail');
        }
    },
        function (txtSearch, keycode) {
            var txtFilerId = 'txtSearch';
            var filterVal = _Common.getGlobalFilterVal(false, txtFilerId);
            var filterValTrimmed = _Common.getGlobalFilterVal(true, txtFilerId);
            _Common.trimStartGlobalFilter(txtFilerId);
            //if (typeof $("#global_filter") != 'undefined' && (KeyCode == 13 || $("#global_filter").val().length == 0)) {
            if ((filterValTrimmed.length > 0 && keycode === 13) || filterVal.length === 0) {
                var searchtext = $("#txtSearch").val().replace(/'/g, "''").replace(/&/g, "&amp;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/"/g, "&quot;");
                $('#ItemQuantityDetail').dataTable().fnFilter(searchtext, null, null, null);
                _Common.highlightTextInTable(txtFilerId, 'ItemQuantityDetail');
            }
            else {
                _Common.highlightTextInTable(txtFilerId, 'ItemQuantityDetail');
            }

        });

    $("#clarchtxtSearch").click(function () {
        $("#txtSearch").val('');
        //fnFilterOnOrderItem();
        $("#txtSearch").trigger('propertychange');
        $("#txtSearch").focus();
        return false;
    });

    $('#PageNumber1').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#Gobtn1").click();
            return false;
        }
    });

    $("#Gobtn1").click(function () {
        var pval = $('#PageNumber1').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }
        if (pval == 0)
            return;

        $('#ItemQuantityDetail').dataTable().fnPageChange(Number(pval - 1));
        $('#PageNumber1').val('');
    });
</script>
