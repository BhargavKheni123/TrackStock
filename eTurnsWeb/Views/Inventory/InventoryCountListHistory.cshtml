@using eTurns.DTO
@using eTurns.DTO.Resources
@{    
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplayDeleteButton = false, DataTableName = "HistoryTable", ColumnSetupFor = "CountChangeLog" };
    Guid SelectedID = (Guid)ViewBag.SelectedGUID;
}
<script type="text/javascript">
    var oHistoryTable;
    var historyDTName = 'HistoryTable';
    var CountListColumnsArr = new Array();
    CountListColumnsArr.push({ mDataProp: "CountName", sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val) {
        return "<a onclick='return openModel(" + obj.aData.HistoryID + ")' href='JavaScript:void(0);'>" + val + "</a>";
    }
    });
    CountListColumnsArr.push({ "mDataProp": "ReleaseNumber", "sClass": "read_only" });
    CountListColumnsArr.push({ mDataProp: "CountDate", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.InventoryCountDate; } });
    CountListColumnsArr.push({ mDataProp: "CountItemDescription", sClass: "read_only" });
    CountListColumnsArr.push({ mDataProp: "CountType", sClass: "read_only" });
    CountListColumnsArr.push({ mDataProp: "IsApplied", sClass: "read_only", "fnRender": function (obj, val) { return GetBoolInFormat(obj, val); } });
    CountListColumnsArr.push({ mDataProp: "TotalItemsWithinCount", sClass: "read_only" });
    CountListColumnsArr.push({ mDataProp: "IsClosed", sClass: "read_only", "fnRender": function (obj, val) { return GetBoolInFormat(obj, val); } });
    CountListColumnsArr.push(@Html.RenderColumnsArray("InventoryCount",false));
    CountListColumnsArr.push({ mDataProp: "Created", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.CreatedDate;} });
    CountListColumnsArr.push({ mDataProp: "Updated", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.UpdatedDate;} });
    CountListColumnsArr.push({ mDataProp: "UpdatedByName", sClass: "read_only" });
    CountListColumnsArr.push({ mDataProp: "CreatedByName", sClass: "read_only" });
    CountListColumnsArr.push({ mDataProp: "AddedFrom", sClass: "read_only" });
    CountListColumnsArr.push({ mDataProp: "EditedFrom", sClass: "read_only" });
    CountListColumnsArr.push({ mDataProp: "ReceivedOn", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.ReceivedOnDate; } });
    CountListColumnsArr.push({ mDataProp: "ReceivedOnWeb", sClass: "read_only", fnRender: function (obj, val) { return obj.aData.ReceivedOnDateWeb; } });
//    CountListColumnsArr.push({ mDataProp: "ReceivedOnDate", sClass: "read_only" });
//    CountListColumnsArr.push({ mDataProp: "ReceivedOnDateWeb", sClass: "read_only" });


    $(document).ready(function () {

        var gaiSelected = [];
        oHistoryTable = $('#HistoryTable').dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "bAutoWidth": true,
            "sDom": 'R<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "sScrollX": "100%",
            //"aaSorting": [[1, "asc"]],
            "oColReorder": {},
            "bSort": false,
            "sPaginationType": "full_numbers",
            "sAjaxSource": '@Url.Content("~/Master/GetHistoryDataGUID")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                aoData.push({ "name": "PageType", "value": "InventoryCount" });
                aoData.push({ "name": "PageID", "value": '@SelectedID' });
                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback
                })
            },
            "fnInitComplete": function () {
                compareHistoryRows(this);
            },
            "aoColumns": CountListColumnsArr,
             "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries',
                "sZeroRecords": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfoFiltered": ""
            }
        });
        //HIDE PRINT CONTAINER
        $('.DTTT_container').css('z-index', '-1');

        $("#HistoryText").keyup(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
            }
            else {
                fnFilterInventoryCountHistory();
            }
        });

        //Keydown event is required to handle ENTER KEY to work in IE
        $("#HistoryText").keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                fnFilterInventoryCountHistory();
            }
        });

        //Clear Filter
        $("#HistoryClear").click(function () {
            $("#HistoryText").val('');
            fnFilterInventoryCountHistory();
            $("#HistoryText").focus();
            return false;
        });

        var timeoutscheduler;
        $(document).on('propertychange input', "#HistoryText", function () {
            clearTimeout(timeoutscheduler);
            timeoutscheduler = setTimeout(function () {
                if (SearchPattern == 2 || SearchPattern == "2") {
                    fnFilterInventoryCountHistory();
                }
                else {
                    $('#HistoryText').unbind("keypress");
                    $('#HistoryText').keypress(function (event) {
                        var keycode = (event.keyCode ? event.keyCode : event.which);
                        if (keycode == 13) {
                            fnFilterInventoryCountHistory();
                        }
                    });
                    if ($("#HistoryText").val().length == 0) {
                        setTimeout(function () { fnFilterInventoryCountHistory(); }, 200);
                    }
                }
            }, 500);
        });
        _Common.setGloblaSearch('HistoryText', 'HistoryTable');
    });

    function fnFilterInventoryCountHistory() {
        //set filter only if more than 2 characters are pressed
        //if (typeof $("#HistoryText") != 'undefined' && ($("#HistoryText").val().length > 2 || $("#HistoryText").val().length == 0)) {
        if (typeof $("#HistoryText") != 'undefined') {
            var searchtext = $("#HistoryText").val().replace(/'/g, "''");

            $('#' + historyDTName + ' td').removeHighlight();

            $('#' + historyDTName).dataTable().fnFilter(
                searchtext,
                null,
                null,
                null
            );

            if (searchtext.length > 0)
                $('#' + historyDTName + ' td').highlight($("#HistoryText").val());
        }
    }
</script>
<div class="searchWrapper">
    <div class="searchBlock">
        <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
        <div class="searchinputB">
            <input type="text" class="searchinput" id="HistoryText" />
            <a href="javascript:void(0);" class="xclose">
                <img src="~/Content/images/x.png" alt="X" id="HistoryClear" /></a>
        </div>
    </div>
</div>
@Html.GridTopHeaderForHistory(settings)
<div style="margin: 0 0.4% 1%">
    <table id="HistoryTable" class="display">
        <thead>
            <tr>
                <th>
                    @ResInventoryCount.CountName
                </th>
                <th>
                    @ResInventoryCount.ReleaseNumber
                </th>
                <th>
                    @ResInventoryCount.CountDate
                </th>
                <th>
                    @ResInventoryCount.CountItemDescription
                </th>
                <th>
                    @ResInventoryCount.CountType
                </th>
                <th>
                    @ResInventoryCount.IsApplied
                </th>
                <th>
                    @ResInventoryCount.TotalItemsWithinCount
                </th>
                <th>
                    @ResInventoryCount.IsClosed
                </th>
                @Html.RenderColumnsHeader("InventoryCount", typeof(eTurns.DTO.ResInventoryCount))
                <th>
                    @ResInventoryCount.Created
                </th>
                <th>
                    @ResInventoryCount.Updated
                </th>
                <th>
                    @ResInventoryCount.LastUpdatedBy
                </th>
                <th>
                    @ResInventoryCount.CreatedBy
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.AddedFrom
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.EditedFrom
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.ReceivedOnDate
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate
                </th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
<div id="divWOLineItemHistory">
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#divWOLineItemHistory").dialog({
            autoOpen: false,
            modal: true,
            draggable: true,
            resizable: true,
            width: '95%',
            height: 720,
            title: 'Inventory count history',
            open: function () {
                $('#DivLoading').show();
                $("#divWOLineItemHistory").empty();
                $.get('InventoryCountHistoryView', { ID: $(this).data("cid") }, function (data) {
                    $("#divWOLineItemHistory").html(data);
                });
            },
            close: function () {
                $("#divWOLineItemHistory").empty();
            }
        });
    });
    function openModel(id) {

        $('#divWOLineItemHistory').data("cid", id).dialog('open')
        return false;
    }
</script>
