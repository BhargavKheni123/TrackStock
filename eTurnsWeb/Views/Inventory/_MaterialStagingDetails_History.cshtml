@model eTurns.DTO.MaterialStagingDTO
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
}
<div class="userHead">
    @{             
        bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.WorkOrders, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
        bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.WorkOrders, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    }
    @using (Ajax.BeginForm("SaveMaterialStaging", "Inventory", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmMaterialStaging" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)   
        @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
        if (Model.ID != 0)
        { 
        <div class="infoBlock">
            <ul>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.RoomName)
                    </label>
                    : <span>@(Model.RoomName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Created)
                    </label>
                    : <span>@(Model.ReceivedOnDateWeb)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.CreatedByName)
                    </label>
                    : <span>@(Model.CreatedByName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Updated)
                    </label>
                    : <span>@(Model.ReceivedOnDate)</span></li>
                <li style="border: none">
                    <label for="RoomName">
                        @Html.LabelFor(model => model.UpdatedByName)
                    </label>
                    : <span>@(Model.UpdatedByName)</span></li>
            </ul>
        </div>        
        }
        <div class="mainForm">
            <div class="editorForm">
                <ul>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.StagingName)<em>*</em>
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.StagingName, new { id = "txtStagingName", @class = "text-box", maxlength = 256 })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.StagingName)</span>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Description)
                        </div>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Description, new { id = "txtDescription", @class = "text-box", maxlength = 1024 })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Description)</span>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.BinName)
                        </div>
                        @if (ViewBag.LineItemCount > 0)
                        {
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.BinName, new { @id = "txtBinName", @class = "text-box", maxlength = 256, @style = "width:237px; background: none repeat scroll 0 0 #CCCCCC;", @disabled = "disabled" })
                                @Html.HiddenFor(model => model.BinName)
                                @Html.HiddenFor(model => model.BinID)
                            </div>
                        }
                        else
                        {
                            <div class="editor-field">
                                @Html.TextBoxFor(model => model.BinName, new { @id = "txtBinName", @class = "text-box watermarkText", maxlength = 256, @style = "width:237px;" })
                                @Html.HiddenFor(model => model.BinID)
                            </div>
                        }
                    </li>
                </ul>
            </div>
            <div class="editorForm padRightNone">
                <ul>
                    @Html.Partial("UDFLayout")
                </ul>
            </div>
            <div>
                <ul>
                    <li>
                        <div class="editor-label">
                            &nbsp;
                        </div>
                        <div class="BtnBlockform">
                            <input type="button" value="@ResCommon.Close" id="btnCancelInHistory" class="CreateBtn" />
                        </div>
                    </li>
                </ul>
            </div>
        </div>

    }
</div>
<div id="WOLineItemsHistory">
</div>
<div id="ItemModelTemp">
</div>
<script type="text/javascript">
    var HinstoryID = '@Model.HinstoryID';
    $(document).ready(function () {
        CallThisFunctionFromModel('success');
    });

    function CallThisFunctionFromModel(msg) {
        if (msg == 'success') {
            $('#DivLoading').show();
            $('#WOLineItemsHistory').empty();
            var url = '@Url.Action("LoadMaterialStagingLineItemsHistory")'; // + '?orderID=' + OrderID;
            $.get(url, { 'HistoryID': HinstoryID }, function (data) {
                $('#WOLineItemsHistory').html(data);
                $('#DivLoading').hide();
            });
        }
        else if (json.Status == 'fail') {
            alert(json.Message);
            return false;
        }
    }

    disableControls('frmMaterialStaging'); 
    $('#btnCancelInHistory').removeAttr('disabled');
    $('#btnCancelInHistory').unbind('click');
    $('#btnCancelInHistory').click(function (e) {
        $('#divWOLineItemHistory').dialog('close');
    });
    
</script>