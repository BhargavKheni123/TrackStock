@model eTurns.DTO.ItemMasterDTO

<div class="contentSection">
    <table width="100%" cellspacing="0" cellpadding="0" border="0" id="ItemPicturView">
        <tbody>
            <tr>
                <td width="30%" valign="top" align="left" class="read_only bordernone">
                    <input type="hidden" id="ItemGUID" value="@(Model.GUID)" />
                    <div class="proImg">
                        @*<img alt="@(Model.ItemNumber)" width="120px" height="120px" src="@( "/InventoryPhoto/" + eTurnsWeb.Helper.SessionHelper.CompanyID.ToString() + "/" + Model.ImagePath)">*@
                        @if (!string.IsNullOrEmpty(Model.ImagePath) && (!string.IsNullOrWhiteSpace(Model.ImageType)) && Model.ImageType.ToLower() == "imagepath")
                        {
                            string Imagepath = "/Uploads/InventoryPhoto/";
                            string Enterpriseid = eTurnsWeb.Helper.SessionHelper.EnterPriceID.ToString();
                            string CompanyId = eTurnsWeb.Helper.SessionHelper.CompanyID.ToString();
                            string Roomid = eTurnsWeb.Helper.SessionHelper.RoomID.ToString();
                            <img style="cursor:pointer;" onclick="return ShowEditTabGUID('ItemEdit?ItemGUID=@(Model.GUID)','frmItem')" alt="@(Model.ItemNumber)" id="ItemImageBox" width="120px" height="120px" src="/Consume/Get?path=@(Imagepath+"/"+Enterpriseid+"/"+ CompanyId + "/"+ Roomid + "/" + Model.ID+  "/" + Model.ImagePath)">
                        }
                        else if (!string.IsNullOrEmpty(Model.ItemImageExternalURL) && (!string.IsNullOrWhiteSpace(Model.ImageType)) && Model.ImageType.ToLower() == "externalimage")
                        {
                            string imgURL = Model.ItemImageExternalURL;
                            <img style="cursor:pointer;" onclick="return ShowEditTabGUID('ItemEdit?ItemGUID=@(Model.GUID)','frmItem')" alt="@(Model.ItemNumber)" id="ItemImageBox" width="120px" height="120px" src="/Consume/Get?path=@(imgURL)">
                        }
                        else
                        {
                            <img style="cursor:pointer;" onclick="return ShowEditTabGUID('ItemEdit?ItemGUID=@(Model.GUID)','frmItem')" id="ItemImageBox" width="120px" height="120px" alt="No Image" src="~/Content/images/no-image.jpg" />
                        }
                    </div>
                    <div class="proInfo">
                        <a href="javascript:void(null);" onclick="return ShowEditTabGUID('ItemEdit?ItemGUID=@(Model.GUID)','frmItem')">@(Model.ItemNumber)</a>
                        <br />
                        <p class="title" onclick="">
                            @(Model.Description)
                        </p>
                        <div class="comment more">
                            @(Model.LongDescription)
                        </div>
                        @*<a class="view" href="ItemMasterList">View more &gt;</a>*@
                    </div>
                    @*<div class="proQty">
                        <input type="checkbox" class="inputcheck">
                        <input type="text" class="inputText">
                        <span class="qty">Qty</span></div>*@
                </td>
                <td width="70%" valign="top" align="left" class="read_only righttd bordernone">
                    <table width="100%" cellspacing="0" cellpadding="0" border="0" class="dataTable">
                        <tr>
                            <td class="read_only">
                                @*Item Customer owned quantity Here*@
                                <label>@eTurns.DTO.ResItemLocationDetails.CustomerOwnedQuantity</label>
                            </td>
                            <td class="read_only">
                                @*Item Consigned owned quantity Here*@
                                <label>@eTurns.DTO.ResItemLocationDetails.ConsignedQuantity</label>
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.SuggestedOrderQuantity)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.OnOrderQuantity)
                            </td>
                            <td>
                                @Html.LabelFor(model => model.OnTransferQuantity)
                            </td>
                            <td>
                                @Html.LabelFor(model => model.RequisitionedQuantity)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.MinimumQuantity)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.MaximumQuantity)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.Cost)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.ExtendedCost)
                            </td>
                        </tr>
                        <tr>
                            <td class="blue read_only">
                                @*Item Customer owned quantity Here*@
                                @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.CustomerOwnedQuantity, 2)
                                @*@Html.ConvertNullToDouble(Model.CustomerOwnedQuantity)*@
                            </td>
                            <td class="blue read_only">
                                @*Item Consigned owned quantity Here*@
                                @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.ConsignedQuantity, 2)
                                @*@Html.ConvertNullToDouble(Model.ConsignedQuantity)*@
                            </td>
                            <td class="blue read_only">
                                @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.SuggestedOrderQuantity, 2)
                                @*@Html.ConvertNullToDouble(Model.SuggestedOrderQuantity)*@
                            </td>
                            <td class="blue read_only">
                                @if (Model.OnOrderQuantity == 0 || Model.OnOrderQuantity == null)
                                {
                                    @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.OnOrderQuantity, 2)
                                    @*@Html.ConvertNullToDouble(Model.OnOrderQuantity)*@
                                }
                                else
                                {
                                    <a id="aOnOrderQty_@Model.GUID" href="javascript:void(0)" onclick="return DisplayOnOrderQty(this);">
                                        @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.OnOrderQuantity, 2)
                                    </a>
                                }
                            </td>
                            <td class="blue read_only">
                                @if (Model.OnTransferQuantity == 0 || Model.OnTransferQuantity == null)
                                {
                                    @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.OnTransferQuantity, 2)
                                    @*@Html.ConvertNullToDouble(Model.OnTransferQuantity)*@
                                }
                                else
                                {
                                    <a id="aOnTransferQty_@Model.GUID" href="javascript:void(0)" onclick="return DisplayOnTransferQty(this);">
                                        @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.OnTransferQuantity, 2)
                                    </a>
                                }
                            </td>
                            <td class="blue read_only">
                                @if (Model.RequisitionedQuantity == 0 || Model.RequisitionedQuantity == null)
                                {
                                    @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.RequisitionedQuantity, 2)
                                    @*@Html.ConvertNullToDouble(Model.RequisitionedQuantity)*@
                                }
                                else
                                {
                                    <a id="aRequisitionedQty_@Model.GUID" href="javascript:void(0)" onclick="return DisplayRequisitionedQty(this);">
                                        @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.RequisitionedQuantity, 2)
                                    </a>
                                }
                            </td>
                            <td class="blue read_only">
                                @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.MinimumQuantity, 2)
                                @*@Html.ConvertNullToDouble(Model.MinimumQuantity)*@
                            </td>
                            <td class="blue read_only">
                                @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.MaximumQuantity, 2)
                                @*@Html.ConvertNullToDouble(Model.MaximumQuantity)*@
                            </td>
                            <td class="blue read_only">
                                @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.Cost, 1)
                                @*$@Html.ConvertNullToDouble(Model.Cost)*@
                            </td>
                            <td class="blue read_only">
                                @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.ExtendedCost, 1)
                                @*$@Html.ConvertNullToDouble(Model.ExtendedCost)*@
                            </td>
                        </tr>
                        <tr>
                            <td class="read_only">
                                @Html.LabelFor(model => model.CategoryName)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.ItemType)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.AverageUsage)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.Turns)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.InventoryClassification)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.SupplierName)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.SupplierPartNo)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.ManufacturerName)
                            </td>
                            <td class="read_only">
                                @Html.LabelFor(model => model.ManufacturerNumber)
                            </td>
                            <td class="read_only">
                            </td>
                        </tr>
                        <tr>
                            <td class="blue read_only">
                                @Html.Encode(Model.CategoryName)
                            </td>
                            <td class="blue read_only">
                                @if ((Model.ItemType) == 1)
                                {
                                    <span>Item</span>
                                }
                                else if ((Model.ItemType) == 2)
                                {
                                    <span>Quick List</span>
                                }
                                else if ((Model.ItemType) == 3)
                                {
                                    <span>Kit</span>
                                }
                                else if ((Model.ItemType) == 4)
                                {
                                    <span>Labor</span>
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </td>
                            <td class="blue read_only">
                                @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.AverageUsage, 4)
                                @*@Html.ConvertNullToDouble(Model.AverageUsage)*@
                            </td>
                            <td class="blue read_only">
                                @eTurnsWeb.Helper.CommonUtility.GetFormatedCostQtyValues(Model.Turns, 4)
                                @*@Html.ConvertNullToDouble(Model.Turns)*@
                            </td>
                            <td class="blue read_only">

                                @*
                                      // WI-8184
                                      @if ((Model.InventoryClassification) == 1)
                                    {
                                        <span>A</span>
                                    }
                                    else if ((Model.InventoryClassification) == 2)
                                    {
                                        <span>B</span>
                                    }
                                    else if ((Model.InventoryClassification) == 3)
                                    {
                                        <span>C</span>
                                    }
                                    else
                                    {
                                        <span>-</span>
                                    }*@
                                @if ((Model.InventoryClassificationName) != null && (Model.InventoryClassificationName) != "")
                                {
                                    @Html.Encode(Model.InventoryClassificationName)
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </td>
                            <td class="blue read_only">
                                @if (Model.ItemType != 4) // Hide data if ItemType is Labor (4)
                                {
                                    @Html.Encode(Model.SupplierName)
                                }
                                </td>
                            <td class="blue read_only">
                                @if (Model.ItemType != 4) // Hide data if ItemType is Labor (4)
                                {
                                    @Html.Encode(Model.SupplierPartNo)
                                }
                                </td>
                            <td class="blue read_only">
                                @Html.Encode(Model.ManufacturerName)
                            </td>
                            <td class="blue read_only">
                                @Html.Encode(Model.ManufacturerNumber)
                            </td>
                            <td class="blue read_only">
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </tbody>
    </table>
</div>