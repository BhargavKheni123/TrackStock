@model MaterialStagingDTO
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    string LineItemsURL = Url.Action("LoadStagingLineItems", "Inventory", new { MSGUID = Model.GUID });
    List<SelectListItem> lstStatus = new List<SelectListItem>();

    SelectListItem obj = new SelectListItem();
    obj.Text = eTurns.DTO.Resources.ResCommon.StatusOpen;
    obj.Value = "1";

    lstStatus.Add(obj);
    obj = new SelectListItem();
    obj.Text = eTurns.DTO.Resources.ResCommon.StatusClosed;
    obj.Value = "0";

    lstStatus.Add(obj);
}
<style type="text/css">
    /*ul.ui-menu {
        height: 210px;
        overflow-y: scroll;
    }*/

    .watermarkText {
        color: silver;
        font-style: italic;
    }
</style>
@*<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/jquery-ui.css")" />*@
@{
    bool isUpdate;
    bool isInsert;
    if (ViewBag.ViewOnly == true)
    {
        isUpdate = false;
        isInsert = false;
    }
    else
    {
        isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Materialstaging, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
        isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Materialstaging, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    }
    if (Model != null && Model.ID > 0 && ((Model.IsArchived ?? false) || (Model.IsDeleted ?? false)))
    {
        isUpdate = false;
        isInsert = false;
    }
}
@using (Ajax.BeginForm("SaveMaterialStaging", "Inventory", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure", OnBegin = "OnMSDBegin" }, new { @id = "frmMaterialStaging" }))
{
    @Html.AntiForgeryToken()
    <div class="userHead">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
        @Html.HiddenFor(model => model.GUID, new { id = "hiddenGUID" })
        @if (Model.ID != 0)
        {
            <div class="infoBlock">
                <ul>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.RoomName)
                        </label>
                        : <span>@(Model.RoomName)</span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.Created)
                        </label>
                        : <span>@(Model.ReceivedOnDateWeb)</span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.CreatedByName)
                        </label>
                        : <span>@(Model.CreatedByName)</span>
                    </li>
                    <li>
                        <label for="RoomName">
                            @Html.LabelFor(model => model.Updated)
                        </label>
                        : <span>@(Model.ReceivedOnDate)</span>
                    </li>
                    <li style="border: none">
                        <label for="RoomName">
                            @Html.LabelFor(model => model.UpdatedByName)
                        </label>
                        : <span>@(Model.UpdatedByName)</span>
                    </li>
                </ul>
            </div>
        }
        <div class="mainForm">
            <div class="editorForm">
                <ul>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.StagingName)<em>*</em>
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.StagingName, new { id = "txtStagingName", @class = "text-box", maxlength = 128 })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.StagingName)</span>
                            @Html.HiddenFor(model => model.IsOnlyFromItemUI)
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.StagingStatus)<em>*</em>
                        </div>
                        <div class="editor-field">
                            @Html.DropDownListFor(model => model.StagingStatus, lstStatus, new { @class = "selectBox" })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.StagingStatus)</span>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Description)
                        </div>
                        <div class="editor-field">
                            @Html.TextAreaFor(model => model.Description, new { id = "txtDescription", @class = "text-box", maxlength = 1024 })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Description)</span>
                        </div>
                    </li>
                    <li>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.StagingLocationName)
                        </div>
                        @if (Model.ID > 0)
                        {
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.StagingLocationName, new { @id = "txtBinName", @class = "text-box", maxlength = 256, @style = "width:237px; background: none repeat scroll 0 0 #CCCCCC;", @disabled = "disabled" })
                        @Html.HiddenFor(model => model.StagingLocationName)
                        @Html.HiddenFor(model => model.BinID)
                        
                    </div>
                        }
                        else
                        {
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.StagingLocationName, new { @id = "txtBinName", @class = "text-box", maxlength = 256, @style = "width:237px;" })
                        @Html.HiddenFor(model => model.BinID)
                        <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.StagingLocationName)</span>
                    </div>
                        }
                    </li>
                    <li>
                        <div class="editor-label">
                            &nbsp;
                        </div>
                        <div class="BtnBlockform">
                            <input type="button" value="@eTurns.DTO.Resources.ResCommon.Cancel" id="btnCancel" class="CreateBtn" />
                            @if (Model.StagingStatus != 0 && ((isInsert == true && Model.ID == 0) || (isUpdate == true && Model.ID > 0) || Convert.ToString(Session["IsInsert"]) == "True"))
                            {
                                <input type="submit" value="@eTurns.DTO.Resources.ResCommon.Save" id="btnSave" class="CreateBtn" />
                            }
                            else //if (isUpdate == false && isInsert == false)
                            {
                                <script type="text/javascript">
                                    disableControls('frmMaterialStaging');
                                </script>
                            }
                        </div>
                    </li>
                    <li>
                        <div class="BtnBlockform">
                            @if (Model.ID > 0)
                            {
                                if ((isUpdate == true || Convert.ToString(Session["IsInsert"]) == "True" ) && Model.StagingStatus != 0)
                                {

                                    <input type="button" value="@eTurns.DTO.Resources.ResCommon.AddNew" id="btnAddNewItem" class="CreateBtn" style="float: left; margin-left: 20px;" />
                                }
                            }
                        </div>
                    </li>
                </ul>
            </div>
            <div class="editorForm padRightNone">
                <ul>
                    @Html.Partial("UDFLayout", new eTurns.DTO.ResMaterialStaging())
                </ul>
            </div>
        </div>
    </div>
    <div id="MSLineItems">
    </div>
}
<div id="ItemModelForMS" style="top: -924.75px;">
</div>
<div id="dvItemLocations" style="padding-bottom: 20px;">
</div>
<div class="dialog" id="mdlConfirm" style="display: none;">
    <div class="inner">
        <p class="text">
            @eTurns.DTO.Resources.ResMessage.DeleteConfirm
        </p>
        <a href="JavaScript:void(0)" id="btnModelYesInnerGrid" class="yes" onclick="DeleteConfirmed();">
            <img src="~/Content/images/yes.png" alt="Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="javascript:void(0)" class="no" onclick="closeModal()">
            <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div>
@Html.Partial("_RequiredMessages")
<div id="divMoveMaterialPopup">
</div>
<div id="divStageLotSerialelection"></div>
<div class="dialog" id="dlgCommonErrorMsg" style="display: none; width: 600px;">
    <div class="inner" style="width: 600px; max-height: 300px; overflow: scroll;">
        <p class="text" id="pErrMessage" style="text-align: left; padding-left: 10px;">
        </p>
        <p id="pOkbtn" class="text" style="text-align: center; padding-left: 10px; display: none;">
            <a href="#" class="no" onclick="closeModal()">
                <img src="~/Content/images/yes.png" alt="@eTurns.DTO.Resources.ResMessage.InformOk" />@eTurns.DTO.Resources.ResMessage.InformOk
            </a>
        </p>
        <p id="pYesNobtn" class="text" style="text-align: center; padding-left: 10px; display: none;">
            <a href="JavaScript:void{}" id="btnYesForPS" class="yes">
                <img src="~/Content/images/yes.png" alt="Yes" />
                @eTurns.DTO.Resources.ResMessage.ConfirmYes
            </a><a href="#" class="no" onclick="closeModal()">
                <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
            </a>
        </p>
    </div>
</div>
@if (Model == null || Model.ID < 1)
{
    <script type="text/javascript">
        $("#MSLineItems").hide();
        $("#btnAddNewItem").hide();
    </script>

}
<script type="text/javascript">
    var MSGUID = '@Model.GUID';
    var MsgSelectRowToDelete = '@ResPullMaster.MsgSelectRowToDelete';
    var Staginghint = '@ResMaterialStaging.HintStagingName';
    //    if ($.trim($("#txtBinName").val()) == "" && $("#txtBinName").attr("disabled") != "disabled") {
    //        $("#txtBinName").val(Staginghint);
    //    }
    $("#MSLineItems").on("keydown", "#PageNumber1", function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#Gobtn1").click();
            return false;
        }
    });


    $("#MSLineItems").on("click", "#Gobtn1", function () {
        var pval = $('#PageNumber1').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }
        if (pval == 0)
            return;
        $('#' + MSLIObjectTable).dataTable().fnPageChange(Number(pval - 1));
        $('#PageNumber1').val('');
    });


    $("#MSLineItems").on("change", "input[type='text'][name='txtLineItemStagingBin']", function (e) {
        if (oTableMSItem != undefined) {
            var aPos = oTableMSItem.fnGetPosition($(this).parent()[0]);
            var aData = oTableMSItem.fnGetData(aPos[0]);
            oTableMSItem.fnGetData(aPos[0]).RoomName = e.target.value;
        }
    });

    $("#ItemModelForMS").on("change", "input[type='text'][name='txtLineItemStagingBin']", function (e) {
        $(this).parent().parent().parent().find("input[type='hidden'][name='hdnStagingBinName']").val(e.target.value);
    });


    $("#frmMaterialStaging").submit(function (e) {
        $.validator.unobtrusive.parse("#frmMaterialStaging");
        if ($(this).valid()) {
            rememberUDFValues($("#hdnPageName").val(), '@Model.ID');
        }
        e.preventDefault();
    });



    function MoveMaterial(curobj, ids, MsGuid, ItemID, StageBinId) {
        $("#divMoveMaterialPopup").empty();
        var objData = { "ItemGUID": ItemID, "MoveType": '@((int)MoveType.StagToInv)', "OpenFrom": '@MoveDialogOpenFrom.FromStage', "SourceBinID": StageBinId, 'SourceStagingHeaderGuid': MsGuid };
        $('#divMoveMaterialPopup').data({ "objData": objData }).dialog('open');
    }
    var IsLoadMoreLotsClicked = false;
    $(document).ready(function () {

        window.location.hash = '';
        $('form').areYouSure();
        $("#divMoveMaterialPopup").dialog(
          {
              autoOpen: false, show: "blind", hide: "explode", height: 450, width: 800
            , modal: true, title: '@ResMoveMaterial.DailogTitle',
              open: function () {
                  $('#DivLoading').show();
                  var obj = $(this).data("objData");
                  OpenMoveMaterialPopupByItemGuid(obj)
              },
              close: function () {
                  $("#divMoveMaterialPopup").empty();
                  refressLineItems();

                  $('#DivLoading').hide();

                  //$('#ItemModeDataTable').dataTable().fnDraw();
              }
          });

        $("#divStageLotSerialelection").dialog({
            autoOpen: false,
            show: "blind",
            hide: "explode",
            height: 700,
            title: "Stage Details",
            width: 900,
            modal: true,
            open: function () {
            },
            beforeClose: function () {
            },
            close: function () {
                //$('.ui-widget-overlay').css('position', 'absolute');
                IsRefreshGrid = true;
                $('#DivLoading').hide();
                $("#divStageLotSerialelection").empty();


            }
        });

        $("#ItemModelForMS").dialog({
            autoOpen: false,
            modal: true,
            draggable: true,
            resizable: true,
            width: '90%',
            height: 710,
            title: '@ResMaterialStaging.AddItemsForMaterialStaging',
            open: function () {

                //                if ($.trim($("#ItemModelForMS").html()) == "") {
                $("#ItemModelForMS").load('@Url.Action("LoadItemMasterModel", "Inventory")?' + $(this).data("data"), function () {
                    $('#DivLoading').hide();
                });

                $('#DivLoading').hide();
            },
            close: function () {
                refressLineItems();
            }
        });


        if ('@Model.ID' > 0) {
            SelectedHistoryRecordID = '@Model.ID';
        }


        $("#btnCancel").click(function (e) {
            //            if (IsRefreshGrid)
            //                $("#NarroSearchClear").click();
            SwitchTextTab(0, 'MaterialStagingCreate', 'frmMaterialStaging');
            if (oTable !== undefined && oTable != null) {
                oTable.fnDraw();
            }
            $('#NarroSearchClear').click();
        })


        $("#dvItemLocations").dialog({
            autoOpen: false,
            modal: true,
            draggable: true,
            resizable: true,
            width: '80%',
            height: 600,
            title: 'Add Quantity',
            open: function () {
                var arrdata = $(this).data("data").split("~");
                var itmid = arrdata[0];
                var msid = arrdata[1];
                var StageBinID = arrdata[2];
                $("#dvItemLocations").load('@Url.Action("ItemLocDet", "Inventory")' + '?ItemId=' + itmid + '&MsId=' + msid + '&StageBinId=' + StageBinID, function () {
                    $('#DivLoading').hide();
                });
            },
            close: function () {
                // CallThisFunctionFromModel('success');
            }
        });



        //        $.get('@LineItemsURL', {}, function (data) {
        //            $('#MSLineItems').html(data);

        //        }, "html");
        refressLineItems();

        $('#btnAddNewItem').click(function () {
            OpenItemPopup();
        });

        $('#ancHideShowContent').click(function () {

            if ($('#ExpandedContent').css('display') == 'none') {
                $('#CollapsedContent').css('display', 'none');
                $('#ExpandedContent').css('display', '');
                $('#ancHideShowContent img').attr('src', '/Content/images/drildown_close.jpg');
            }
            else {

                $('#ExpandedContent').css('display', 'none');
                $('#CollapsedContent').css('display', '');
                $('#ancHideShowContent img').attr('src', '/Content/images/drildown_open.jpg');
            }
        });
        $('#ExpandedContent').css('display', 'none');
        $('#CollapsedContent').css('display', '');
        $('#DivLoading').hide();

        if ('@Model.ID' > 0) {
            //// need to call below block in case of New Item saved and open POPUP Item ... START
            if (NeedToOpenItemPopupNow) {
                NeedToOpenItemPopupNow = false;
                setTimeout("OpenItemPopup()", 3000);
                //return false;
            }
            //// need to call below block in case of New Item saved and open POPUP Item ... END
        }

        checkRememberUDFValues($("#hdnPageName").val(), '@Model.ID');
    });

    function refressLineItems() {
        $('#DivLoading').show();
        $('#MSLineItems').empty();
        var url = '@Url.Action("LoadStagingLineItems", "Inventory")'; // + '?orderID=' + OrderID;
        $.get(url, { 'MSGUID': MSGUID }, function (data) {
            $('#MSLineItems').html(data);
            $('#DivLoading').hide();
        });
    }

    function OpenItemPopup() {
        ClearVariables();
        $('#DivLoading').show();
        //$('#ItemModelForMS').data("data", '@Model.ID').dialog('open');
        var strData = 'ParentId=@Model.ID&ParentGuid=@Model.GUID';
        $('#ItemModelForMS').data("data", strData).dialog('open');
        if ($("input#global_filter").length > 0) {
            $("input#global_filter").focus();
            setTimeout(function () {
                $("input#global_filter").focus();
            }, 600);
        }
        if ($("input.searchinput").length > 0) {
            $("input.searchinput").focus();
            setTimeout(function () {
                $("input.searchinput").focus();
            }, 600);

        }
        //   $('#ItemModelForMS').dialog({ position: 'top' });
    }
    function BinChanged(curobj, ItmId, ids) {
        if ($(curobj).val() != "") {
            GetAvailableQty($(curobj).val(), ItmId, ids);
        }
        else {
            $("#spnAvailQty_" + ids).text("");
            $("#spncoAvailQty_" + ids).text("");
            $("#spnconsAvailQty_" + ids).text("");
        }
    }
    function GetAvailableQty(binId, itmId, ids) {
        //var currentId = $("#hdnMSDtlID_" + ids).val();
        var currentId = ids.split('_');
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetAvailableQty", "Inventory")',
            contentType: 'application/json',
            dataType: 'json',
            data: "{BinId:'" + parseInt(binId) + "' , ItemGUID: '" + itmId + "',MsdtlGUID:'" + currentId[0] + "'}",
            success: function (retdt) {
                $("#spncoAvailQty_" + ids).text(FormatedCostQtyValues(retdt.CustOwnQty, 2));
                $("#spnconsAvailQty_" + ids).text(FormatedCostQtyValues(retdt.ConsignQty, 2));
                $("#spnAvailQty_" + ids).text(FormatedCostQtyValues(retdt.AvalQTY, 2));
                $("#txtpullQty_" + ids).focus();
            },
            error: function (err) {
                alert("There is some Error");
            }
        });
    }

    var globalItmId = "";
    function DeleteMSDetailsItems(itmID) {
        var datatbl = $("#MaterialStagingdtl_" + itmID).DataTable();
        var GetSelected = datatbl.$('tr.row_selected');
        var stringIDs = "";
        for (var i = 0; i <= GetSelected.length - 1; i++) {
            stringIDs = stringIDs + GetSelected[i].id + ",";
        }
        if (GetSelected.length !== 0) {
            globalItmId = itmID;
            $('#mdlConfirm').modal();

        }
    }

    function DeleteConfirmed() {
        var ItmId = globalItmId;
        var datatbl = $("#MaterialStagingdtl_" + ItmId).DataTable();
        var GetSelected = datatbl.$('tr.row_selected');
        var oTableDynemicDeleteURL = '@Url.Action("DeleteMSDtlItem", "Inventory")';
        var stringIDs = "";
        for (var i = 0; i <= GetSelected.length - 1; i++) {
            //stringIDs = stringIDs + GetSelected[i].id + ",";
            var objRow = GetSelected[i];
            var rowGUId = $(objRow).find("input[type='hidden'][name='hdnStagingDetailGUID']")[0].value;
            stringIDs = stringIDs + rowGUId + ",";
        }
        if (GetSelected.length !== 0) {

            $.ajax({
                'url': oTableDynemicDeleteURL,
                data: { ids: stringIDs },
                success: function (response) {
                    if (response == "ok") {
                        for (var i = 0; i <= GetSelected.length - 1; i++) {
                            datatbl.fnDeleteRow(GetSelected[i]);
                        }

                        //                        if (datatbl.fnGetData().length < 1) {
                        //                            var dararowsprnt = $("#" + MSLIObjectTable).dataTable();
                        //                            $("#" + MSLIObjectTable).dataTable().fnDeleteRow(dararowsprnt);
                        //                        }
                        if (GetSelected.length > 0) {
                            $("#spanGlobalMessage").html("@ResCommon.RecordDeletedSuccessfully".replace("{0}", "(" + GetSelected.length + ")"));
                        }

                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $.modal.impl.close();
                    }
                },
                error: function (response) {

                    // through errror message
                }
            });

        }
    }

    function EditRec(curobj, ids) {

        var aPos = $('#MaterialStagingdtl_' + ids).dataTable().fnGetPosition($(curobj).parent()[0]);
        var aData = $('#MaterialStagingdtl_' + ids).dataTable().fnGetData(aPos[0]);
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetMSDtlItem", "Inventory")',
            contentType: 'application/json',
            dataType: 'json',
            //data: "{id:'" + aData.ID + "' }",
            data: "{GUID:'" + aData.GUID + "' }",
            success: function (retdt) {


                $("#spncoAvailQty_" + ids).text(FormatedCostQtyValues(retdt.CustOwnQty, 2));
                $("#spnconsAvailQty_" + ids).text(FormatedCostQtyValues(retdt.ConsignQty, 2));
                $("#spnAvailQty_" + ids).text(retdt.AvalQTY);
                //$("#hdnMSDtlID_" + ids).val(retdt.objDTO.ID);
                $("#hdnMSDtlID_" + ids).val(retdt.objDTO.GUID);
                if ($("#BinId_" + ids).find("option[value='" + retdt.objDTO.BinID + "']").length < 1) {
                    $("#BinId_" + ids).append("<option value='" + retdt.objDTO.BinID + "' selected='selected'>" + retdt.objDTO.BinName + "</option>");
                }
                $("#BinId_" + ids).val(retdt.objDTO.BinID);
                $("#txtpullQty_" + ids).val(retdt.objDTO.Quantity);
                $("#txtpullQty_" + ids).focus();
            },
            error: function (err) {

                alert("There is some Error");
            }
        });
    }

    function CancelEntry(curobj, ids, MsId, ItemID, StageBinId) {
        $(curobj).closest("div.innerGrid").closest("tr").prev().find("td.control").click();
    }



    function SaveEntry(curobj, ids, MsId, ItemID, StageBinId) {

        var stagingBinName = $(curobj).closest("div.innerGrid").closest("tr").prev().find("input[type='hidden'][name='hdnStagingBinName']").val();


        var Errmsg = "";
        if ($.trim(stagingBinName) == "") {
            stagingBinName = "[|EmptyStagingBin|]";
            @*Errmsg += '@eTurns.DTO.ResMaterialStagingDetail.errEnterStagingBin';*@
        }
        if ($("#BinId_" + ids).val() == "" || parseInt($("#BinId_" + ids).val()) < 1) {
            Errmsg += '\n' + '@eTurns.DTO.ResMaterialStagingDetail.errInventoryLocation';
        }
        if ($.trim($("#txtpullQty_" + ids).val()) == "" || isNaN($.trim($("#txtpullQty_" + ids).val()))) {
            Errmsg += '\n' + '@eTurns.DTO.ResMaterialStagingDetail.errNOQtyZero';
        }
        if (Errmsg == "") {
            $('#DivLoading').show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("SaveItemToStaging", "Inventory")',
                contentType: 'application/json',
                dataType: 'json',
                //data: "{msID:'" + parseInt(MsId) + "' , msdtlID: '" + parseInt($("#hdnMSDtlID_" + ids).val()) + "', ItmID: '" + parseInt(ItemID) + "', Qty: '" + parseInt($("#txtpullQty_" + ids).val()) + "', BinID: '" + parseInt($("#BinId_" + ids).val()) + "',StagingBinID: '" + parseInt(StageBinId) + "',StagingBinName:'" + stagingBinName + "'}",
                data: "{msGUID:'" + MsId + "' , msdtlGUID: '" + $("#hdnMSDtlID_" + ids).val() + "', ItemGUID: '" + ItemID + "', Qty: '" + parseFloat($("#txtpullQty_" + ids).val()) + "', BinID: '" + parseInt($("#BinId_" + ids).val()) + "',StagingBinID: '" + parseInt(StageBinId) + "',StagingBinName:'" + stagingBinName + "'}",
                success: function (response) {

                    if (response.Status == "ok") {
                        $("#spncoAvailQty_" + ids).text("");
                        $("#spnconsAvailQty_" + ids).text("");
                        $("#spnAvailQty_" + ids).text("");
                        //$("#hdnMSDtlID_" + ids).val("0");
                        $("#hdnMSDtlID_" + ids).val("");
                        $("#BinId_" + ids).val("");
                        $("#txtpullQty_" + ids).val("");
                        $("#txtpullQty_" + ids).focus();
                        $("#BinId_" + ids).focus();
                        $(curobj).closest("div.innerGrid").closest("tr").prev().find("span[id='spnQty']").text(response.TotalQuantity);
                        $('div#target').css("z-index", 100000);
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").html(response.Message);
                        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                        $("#MaterialStagingdtl_" + ids).DataTable().fnDraw();
                        GetAvailableQty($("#BinId_" + ids).val(), ItemID, ids);
                    }
                    else {
                        $('div#target').css("z-index", 100000);
                        $("#spanGlobalMessage").html(response.Message);
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    }
                    $('#DivLoading').hide();
                },
                error: function (err) {
                    alert("There is some Error");
                }
            });
        }
        else {
            $("#spanGlobalMessage").html(Errmsg);
            $('div#target').fadeToggle();
            $('div#target').css("z-index", 100000);
            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
        }


    }

    $("#BinId").change(function () {

    });

    function onSuccess(response) {
        var retstat;
        IsRefreshGrid = true;
        $('div#target').fadeToggle();
        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
        $("#spanGlobalMessage").html(response.Message);
        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
        var idValue = $("#hiddenID").val();
        if (idValue < 1 || idValue == "") {

            retstat = response.Status;
            switch (retstat) {
                case "fail":
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');

                    break;
                case "duplicate":
                    $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
                    break;
                case "ok":

                    if (oTable !== undefined && oTable != null) {
                        oTable.fnDraw();
                        RefressFilterMS("MaterialStaging");
                    }
                    NeedToOpenItemPopupNow = true;
                    ShowEditTabGUID("MaterialStagingEdit?MSGUID=" + response.UpdatedDTO.GUID, "frmMaterialStaging");

                    if (response !== undefined && response != null && response.UpdatedDTO !== undefined && response.UpdatedDTO != null && parseInt(response.UpdatedDTO.StagingStatus) == 0)
                    {
                        $("#btnAddNewItem,#btnSave").hide();
                    }
                    break;
            }
        }
        else if (idValue > 0) {
            retstat = response.Status;
            switch (retstat) {
                case "fail":
                    $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    break;
                case "duplicate":
                    $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
                    break;
                case "ok":
                    if (oTable !== undefined && oTable != null) {
                        oTable.fnDraw();
                        RefressFilterMS("MaterialStaging");
                    }
                    //                    TabItemClickedEditMatStag("MaterialStagingEdit/" + response.UpdatedDTO.ID, "frmMaterialStaging");
                    if (response !== undefined && response != null && response.UpdatedDTO !== undefined && response.UpdatedDTO != null &&
                            parseInt(response.UpdatedDTO.StagingStatus) == 0)
                    {
                        $("#btnAddNewItem,#btnSave").hide();
                    }
                    break;
            }
        }


    }

    function onFailure(message) {

        $("#spanGlobalMessage").html(message.statusText);
        $('div#target').fadeToggle();
        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
        $("#txtStagingName").focus();
    }
    function OnMSDBegin(xhr)
    {
        //xhr.setRequestHeader("__RequestVerificationToken", $("input[name='__RequestVerificationToken'][type='hidden']").val())
    }

</script>

@if (Model != null && (Model.BinID == null || Model.BinID.Value == 0))
{
    <script type="text/javascript">

        //        $("#MSLineItems").on('blur', "input[type='text'][name='txtLineItemStagingBin']", function (e) {
        //            $(this).filter(function () {
        //                return $(this).val() == "";
        //            }).addClass("watermarkText").val(Staginghint);
        //        });

        $("#MSLineItems").on('focus', "input[type='text'][name='txtLineItemStagingBin']", function (e) {

            //            $(this).filter(function () {
            //                return $(this).val() == "" || $(this).val() == Staginghint;
            //            }).removeClass("watermarkText ").val("");

            var objCurtxt = $(this);
            var aPos = oTableMSItem.fnGetPosition($(objCurtxt).parent()[0]);
            var aData = oTableMSItem.fnGetData(aPos[0]);

            $(this).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Inventory/GetBins',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: {
                            featureClass: "P",
                            style: "full",
                            maxRows: 1000,
                            name_startsWith: request.term,
                            StagingGUID: aData.MaterialStagingGUID,
                            ItemGUID: aData.ItemGUID
                        },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.BinNumber,
                                    value: item.BinNumber,
                                    selval: item.ID
                                }
                            }));
                        },
                        error: function (err) {
                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    //                    //                    $(objCurtxt).parent().parent().find("input[type='hidden'][name='hdnStagingBin']").val(ui.item.selval);
                    //                    //                    $(objCurtxt).parent().parent().find("input[type='hidden'][name='hdnStagingBinName']").val(ui.item.label);
                    //                    $(objCurtxt).trigger("change");
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                    $(this).autocomplete('widget').css('z-index', 100);
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                    $(objCurtxt).trigger("change");
                },
                change: function (event, ui) {
                    //                    $(objCurtxt).parent().parent().find("input[type='hidden'][name='hdnStagingBinName']").val($(objCurtxt).val());
                },
                response: function (event, ui) {
                }
            });
        });

        //        $("#ItemModelForMS").on('blur', "input[type='text'][name='txtLineItemStagingBin']", function (e) {
        //            $(this).filter(function () {
        //                return $(this).val() == "";
        //            }).addClass("watermarkText").val(Staginghint);
        //        });

        $("#ItemModelForMS").on('focus', "input[type='text'][name='txtLineItemStagingBin']", function (e) {
            //            $(this).filter(function () {
            //                return $(this).val() == "" || $(this).val() == Staginghint;
            //            }).removeClass("watermarkText ").val("");
            var objCurtxt = $(this);
            var aPos = oTableItemModelMS.fnGetPosition($(objCurtxt).parent().parent()[0]);
            var aData = oTableItemModelMS.fnGetData(aPos[0]);

            $(this).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Inventory/GetBins',
                        contentType: 'application/json',
                        dataType: 'json',
                        data: {
                            featureClass: "P",
                            style: "full",
                            maxRows: 1000,
                            name_startsWith: request.term,
                            StagingGUID: '@Model.GUID',
                            ItemGUID: aData.GUID
                        },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.BinNumber,
                                    value: item.BinNumber,
                                    selval: item.ID
                                }
                            }));
                        },
                        error: function (err) {

                        }
                    });
                },
                autoFocus: false,
                minLength: 1,
                select: function (event, ui) {
                    //                    $(objCurtxt).parent().parent().find("input[type='hidden'][name='hdnStagingBin']").val(ui.item.selval);
                    //                    $(objCurtxt).parent().parent().find("input[type='hidden'][name='hdnStagingBinName']").val(ui.item.label);
                },
                open: function () {
                    $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                },
                close: function () {
                    $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                    $(objCurtxt).trigger("change");
                },
                change: function (event, ui) {
                    //                    $(objCurtxt).parent().parent().find("input[type='hidden'][name='hdnStagingBinName']").val($(objCurtxt).val());
                }
            });
        });

        $('input#btnAddAllNew').die('click');
        $('input#btnInLineAdd').die('click');

        function AddSingleItemToStaginList(obj)
        {
            if ($(obj)[0].value == undefined)
                return false;
            $('#DivLoading').show();

            if ($(obj)[0].value == 'Pull QL') {

                var IsGlobalErrorMsgShow = false;
                var IsPSRedirectToReq = false;
                var IsQLSuccessfullyDone = true;
                var errGBLMsg = '';
                $('#ItemModeDataTable tbody tr').each(function (i) {
                    if ($(this).attr('class').indexOf('row_selected') != -1) {
                        $(this).toggleClass('row_selected');
                        var RowObject = $(this);
                        var aPos = $('#ItemModeDataTable').dataTable().fnGetPosition($(this)[0]);
                        var aData = $('#ItemModeDataTable').dataTable().fnGetData(aPos);
                        var errorMsg = '';

                        var txxt = $(this).find('#txtQty');

                        var vBinID;
                        var vProjectID;

                        var itemType = $(this).find('#spnOrderItemType').text();
                        var txtQty = txxt.val();

                        if (itemType != '4') {
                            vBinID = $(this).find('#BinID')[0].value == '' ? 0 : $(this).find('#BinID')[0].value;

                            if ($("#chkUsePullCommonUDF").is(":checked")) {
                                if ($('#ProjectIDCommon') != undefined)
                                    vProjectID = $('#ProjectIDCommon').val() == "" ? "" : $('#ProjectIDCommon').val();
                                else
                                    vProjectID = "";
                                if ($('#txtProjectSpentCommon').val() != '') {
                                    ProjectSpendName = $('#txtProjectSpentCommon').val();
                                }
                            }
                            else {
                                if ($(this).find('#ProjectID')[0] != undefined)
                                    vProjectID = $(this).find('#ProjectID')[0].value == "" ? "" : $(this).find('#ProjectID')[0].value;
                                else
                                    vProjectID = "";
                                if ($(this).find('#txtProjectSpent').val() != '') {
                                    ProjectSpendName = $(this).find('#txtProjectSpent').val();
                                }
                            }

                            //vProjectID = $(this).find('#ProjectID')[0].value == "" ? "" : $(this).find('#ProjectID')[0].value;

                            if (!(!isNaN(parseFloat(txtQty)) && parseFloat(txtQty) > 0)) {
                                $(this).css('background-color', 'Olive');
                                IsGlobalErrorMsgShow = true;
                                errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": "+'@ResPullMaster.MsgQtyToPullMandatory'+".</b><br/>"
                            }

                            if (!(!isNaN(parseInt(vBinID)) && parseInt(vBinID) > 0)) {
                                $(this).css('background-color', 'Olive');
                                IsGlobalErrorMsgShow = true;
                                errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": " + '@ResPullMaster.InventoryLocationMandatory' + ".</b><br/>"
                            }


                        }
                        else {

                            if (!(!isNaN(parseFloat(txtQty)) && parseFloat(txtQty) > 0)) {
                                $(this).css('background-color', 'Olive');
                                IsGlobalErrorMsgShow = true;
                                errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": " + '@ResPullMaster.MsgLabourItemRequiredHours'+".</b><br/>"
                            }
                            vBinID = 0;
                            vProjectID = '';
                            ProjectSpendName = '';
                        }


                        if (errorMsg.length <= 0) {
                            var vItemID = $(this).find('#spnItemID').text();
                            var vItemGUID = $(this).find('#spnItemGUID').text();
                            var vspnOn_HandQuantity = $(this).find('#spnOn_HandQuantity').text() == "" ? 0 : $(this).find('#spnOn_HandQuantity').text();
                            var vPullCreditText = "pull"; //$(obj)[0].value;//$(obj).parent().parent().find('input[name=colors'+vItemID+']:checked')[0].value;
                            var VspnDefaultPullQuantity = $(this).find('#spnDefaultPullQuantity').text() == "" ? 0 : $(this).find('#spnDefaultPullQuantity').text();
                            var vUDF1 = ''; var vUDF2 = ''; var vUDF3 = ''; var vUDF4 = ''; var vUDF5 = '';
                            var vUDF1PullCommon = ''; var vUDF2PullCommon = ''; var vUDF3PullCommon = ''; var vUDF4PullCommon = ''; var vUDF5PullCommon = '';

                            //var vPullOrderNumber = "";
                            //if ($(this).find('#txtPullOrderNumber') != null) {
                            //    vPullOrderNumber = $(this).find('#txtPullOrderNumber').val();
                            //}
                            var vPullOrderNumber = "";

                            if ($("#chkUsePullCommonUDF").is(":checked")) {
                                if ($('#txtPullOrderNumberCommon') != null) {
                                    if ($('#txtPullOrderNumberCommon').attr("class") == 'selectBox') {
                                        vPullOrderNumber = $('#txtPullOrderNumberCommon option:selected').text();
                                    }
                                    else {
                                        vPullOrderNumber = $('#txtPullOrderNumberCommon').val();
                                    }
                                }
                            }
                            else {
                                if ($(this).find('#txtPullOrderNumber') != null) {
                                    if ($(this).find('#txtPullOrderNumber').attr("class") == 'selectBox') {
                                        vPullOrderNumber = $(this).find('#txtPullOrderNumber option:selected').text();
                                    }
                                    else {
                                        vPullOrderNumber = $(this).find('#txtPullOrderNumber').val();
                                    }
                                }
                            }
                            if ($("#UDF1PullCommon") != null) {
                                if ($("#UDF1PullCommon").attr("class") == 'selectBox') {
                                    vUDF1PullCommon = $("#UDF1PullCommon option:selected").text();
                                }
                                else {
                                    vUDF1PullCommon = $("#UDF1PullCommon").val();
                                }
                            }

                            if ($("#UDF2PullCommon") != null) {
                                if ($("#UDF2PullCommon").attr("class") == 'selectBox') {
                                    vUDF2PullCommon = $("#UDF2PullCommon option:selected").text();
                                }
                                else {
                                    vUDF2PullCommon = $("#UDF2PullCommon").val();
                                }
                            }

                            if ($("#UDF3PullCommon") != null) {
                                if ($("#UDF3PullCommon").attr("class") == 'selectBox') {
                                    vUDF3PullCommon = $("#UDF3PullCommon option:selected").text();
                                }
                                else {
                                    vUDF3PullCommon = $("#UDF3PullCommon").val();
                                }
                            }

                            if ($("#UDF4PullCommon") != null) {
                                if ($("#UDF4PullCommon").attr("class") == 'selectBox') {
                                    vUDF4PullCommon = $("#UDF4PullCommon option:selected").text();
                                }
                                else {
                                    vUDF4PullCommon = $("#UDF4PullCommon").val();
                                }
                            }

                            if ($("#UDF5PullCommon") != null) {
                                if ($("#UDF5PullCommon").attr("class") == 'selectBox') {
                                    vUDF5PullCommon = $("#UDF5PullCommon option:selected").text();
                                }
                                else {
                                    vUDF5PullCommon = $("#UDF5PullCommon").val();
                                }
                            }

                            if ($(this).find('#UDF1') != null) {
                                if ($(this).find('#UDF1').attr("class") == 'selectBox') {
                                    vUDF1 = $(this).find('#UDF1 option:selected').text();
                                }
                                else {
                                    vUDF1 = $(this).find('#UDF1').val();
                                }
                            }

                            if ($(this).find('#UDF2') != null) {
                                if ($(this).find('#UDF2').attr("class") == 'selectBox') {
                                    vUDF2 = $(this).parent().find('#UDF2 option:selected').text();
                                }
                                else {
                                    vUDF2 = $(this).find('#UDF2').val();
                                }
                            }

                            if ($(this).find('#UDF3') != null) {
                                if ($(this).find('#UDF3').attr("class") == 'selectBox') {
                                    vUDF3 = $(this).find('#UDF3 option:selected').text();
                                }
                                else {
                                    vUDF3 = $(this).find('#UDF3').val();
                                }
                            }

                            if ($(this).find('#UDF4') != null) {
                                if ($(this).find('#UDF4').attr("class") == 'selectBox') {
                                    vUDF4 = $(this).find('#UDF4 option:selected').text();
                                }
                                else {
                                    vUDF4 = $(this).find('#UDF4').val();
                                }
                            }

                            if ($(this).find('#UDF5') != null) {
                                if ($(this).find('#UDF5').attr("class") == 'selectBox') {
                                    vUDF5 = $(this).find('#UDF5 option:selected').text();
                                }
                                else {
                                    vUDF5 = $(this).find('#UDF5').val();
                                }
                            }

                            if ($("#chkUsePullCommonUDF").is(":checked")) {
                                vUDF1 = vUDF1PullCommon;
                                vUDF2 = vUDF2PullCommon;
                                vUDF3 = vUDF3PullCommon;
                                vUDF4 = vUDF4PullCommon;
                                vUDF5 = vUDF5PullCommon;
                            }

                            $('#DivLoading').show();
                            ///////////////////////////////////// UPDATE PULL DATA CALL//////////////////////////////////////////START
                            $.ajax({
                                "url": '@Url.Content("~/Pull/UpdatePullData")',
                                //data: { ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectID, BinID: vBinID, PullCreditQuantity: (txtQty * QuickListPULLQty), PullCredit: vPullCreditText, TempPullQTY: (txtQty * QuickListPULLQty), UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, RequisitionDetailID: "", WorkOrderDetailGUID: '@TempData["WorkOrderGUID"]', ProjectSpendName: ProjectSpendName },
                                data: { ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectID, BinID: vBinID, PullCreditQuantity: (txtQty), PullCredit: vPullCreditText, TempPullQTY: (txtQty), UDF1: vUDF1, UDF2: vUDF2, UDF3: vUDF3, UDF4: vUDF4, UDF5: vUDF5, RequisitionDetailID: "", WorkOrderDetailGUID: '@TempData["WorkOrderGUID"]', ProjectSpendName: ProjectSpendName, PullOrderNumber: vPullOrderNumber },
                                "async": false,
                                cache: false,
                                "dataType": "json",
                                success: function (response) {

                                    $('#DivLoading').hide();
                                    if (response.Status == "ok") {
                                        if (response.LocationMSG != "") {
                                            if (response.PSLimitExceed) {
                                                $(RowObject).css('background-color', 'Yellow');
                                                IsPSRedirectToReq = true;
                                                IsGlobalErrorMsgShow = true;
                                                IsQLSuccessfullyDone = false;
                                                errorMsg += "<b style='color:Olive'>" + aData.ItemNumber + ": " + response.LocationMSG + " " + "do you want to create new requisition for the same ?</b><br>"
                                            }
                                            else {
                                                $(RowObject).css('background-color', 'Olive');
                                                //IsPSRedirectToReq = false;
                                                IsGlobalErrorMsgShow = true;
                                                IsQLSuccessfullyDone = false;
                                                errorMsg += "<b style='color:Olive'>" + aData.ItemNumber + ": " + response.LocationMSG + "</b><br>"
                                            }
                                        }
                                        else {

                                            UDFInsertNewForGrid(RowObject);
                                            $(RowObject).css('background-color', 'Green');
                                            errorMsg += "<b style='color:Green'>" + aData.ItemNumber + ": " + response.Message + "</b><br>"
                                        }
                                    }
                                    else {
                                        $(RowObject).css('background-color', 'Red');
                                        IsPSRedirectToReq = false;
                                        IsGlobalErrorMsgShow = true;
                                        IsQLSuccessfullyDone = false;
                                        errorMsg += "<b style='color:Red'>" + aData.ItemNumber + ": " + response.Message + "</b><br>"
                                    }
                                    txxt.val(VspnDefaultPullQuantity);
                                },
                                error: function (response) {

                                    $(RowObject).css('background-color', 'Red');
                                    IsPSRedirectToReq = false;
                                    IsGlobalErrorMsgShow = true;
                                    IsQLSuccessfullyDone = false;
                                    errorMsg += "<b style='color:Red'>" + aData.ItemNumber + ": Unexpected error occurred.</b><br>"
                                }
                            });
                            ///////////////////////////////////// UPDATE PULL DATA CALL//////////////////////////////////////////END
                        }

                        //////////////////////////////////////END//////////////////////////////////////
                    }
                    errGBLMsg += errorMsg;
                });

                $('#DivLoading').show();
                if (IsQLSuccessfullyDone) {
                    $.modal.impl.close();
                    $('#DivLoading').hide();
                    LoadAllItemDataWithFilter();
                }
                else if (IsPSRedirectToReq) {
                    $.modal.impl.close();
                    errGBLMsg = "<b>Some of the Item(s) is(are) not able to Stage(s) Due to following reasons.</b><br /><br />" + errGBLMsg;
                    $('#DivLoading').hide();
                    $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', 'none');
                    $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', '');
                    $('#dlgCommonErrorMsg').find("#pErrMessage").html(errGBLMsg);
                    $('#dlgCommonErrorMsg').modal()
                }
                else if (IsGlobalErrorMsgShow) {
                    $.modal.impl.close();
                    $('#DivLoading').hide();
                    errGBLMsg = "<b>Some of the Item(s) is(are) not able to Stage(s) Due to following reasons.</b><br /><br />" + errGBLMsg;
                    $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', '');
                    $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
                    $('#dlgCommonErrorMsg').find("#pErrMessage").html(errGBLMsg);

                    $('#dlgCommonErrorMsg').modal()
                }
            }
        }

        $('input#btnInLineAdd').live('click', function (e) {
            var nTR = $(this).parent().parent();
            var qty = $(nTR).find('input#txtQtyToAdd').val();
            var stageBinID = $(nTR).find('input#hdnStagingBin').val();
            var stageBinName = $(nTR).find('input#hdnStagingBinName').val();

            if ($.trim(stageBinName).length <= 0) {
                stageBinName = $(nTR).find('input#txtLineItemStagingBin').val();
            }
            var oData = $("#ItemModeDataTable").dataTable().fnGetData($(nTR)[0]);

            if (oData.SerialNumberTracking == "Yes" || oData.LotNumberTracking == "Yes" || oData.DateCodeTracking == "Yes") {
                OpenPullPopup($(this));
                return false;
            }

            var itemGuid = oData.GUID;
            //var sourceBinID = $(nTR).find('#ddlItemSourceBins').val();
            var sourceBinID = $(nTR).find('#BinID').val();

            var Errmsg = "";
            if ($.trim(stageBinName).length <= 0) {
                stageBinName = "[|EmptyStagingBin|]";
            }
            if (parseInt(sourceBinID) <= 0) {
                Errmsg += '\n' + '@eTurns.DTO.ResMaterialStagingDetail.errInventoryLocation';
            }
            if (parseFloat(qty) <= 0) {
                Errmsg += '\n' + '@eTurns.DTO.ResMaterialStagingDetail.errNOQtyZero';
            }

            if (Errmsg == "") {
                $('#DivLoading').show();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SaveItemToStaging", "Inventory")',
                    dataType: 'json',
                    async: false,
                    cache: false,
                    data: { 'msGUID': MSGUID, 'msdtlGUID': '', 'ItemGUID': itemGuid, 'Qty': qty, 'BinID': sourceBinID, 'StagingBinID': stageBinID, 'StagingBinName': stageBinName },
                    success: function (response) {
                        if (response.Status == "ok") {
                            $(nTR).find('input#txtQtyToAdd').val('');
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").html(response.Message);
                            $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                            oTableItemModelMS.fnDraw();
                        }
                        else {
                            $('div#target').css("z-index", 100000);
                            $("#spanGlobalMessage").html(response.Message);
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        }
                        $('#DivLoading').hide();
                    },
                    error: function (err) {
                        showNotificationDialog();
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        $("#spanGlobalMessage").html(MsgErrorInProcess);
                    }
                });
            }
            else {
                $("#spanGlobalMessage").html(Errmsg);
                $('div#target').fadeToggle();
                $('div#target').css("z-index", 100000);
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            }


        });

    $('input#btnAddAllNew').live('click', function (e) {

        if ($('#ItemModeDataTable tbody tr.row_selected').length <= 0 || $('#ItemModeDataTable tbody tr.row_selected').find(".dataTables_empty").length > 0) {
                $("#spanGlobalMessage").html("@ResItemMaster.ReqSelectItem");
                $('div#target').fadeToggle();
                $('div#target').css("z-index", 100000);
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            }
            else {
                if ($('#ItemModeDataTable tbody tr.row_selected').length > 0) {
                    var isLotSerial = false;
                    $('#ItemModeDataTable tbody tr.row_selected').each(function (i) {
                        $('#DivLoading').show();
                        var nTR = $(this);
                        var qty = $(nTR).find('input#txtQtyToAdd').val();
                        var stageBinID = $(nTR).find('input#hdnStagingBin').val();
                        var stageBinName = $(nTR).find('input#hdnStagingBinName').val();

                        if ($.trim(stageBinName).length <= 0) {
                            stageBinName = $(nTR).find('input#txtLineItemStagingBin').val();
                        }
                        var oData = $("#ItemModeDataTable").dataTable().fnGetData($(nTR)[0]);
                        if (oData.SerialNumberTracking == "Yes" || oData.LotNumberTracking == "Yes" || oData.DateCodeTracking == "Yes") {
                            isLotSerial = true;
                            return false;
                        }
                    });
                    if (isLotSerial) {
                        OpenPullPopup($(this));
                        return false;
                    }

                    $('#ItemModeDataTable tbody tr.row_selected').each(function (i) {
                        $('#DivLoading').show();
                        var nTR = $(this);
                        var qty = $(nTR).find('input#txtQtyToAdd').val();
                        var stageBinID = $(nTR).find('input#hdnStagingBin').val();
                        var stageBinName = $(nTR).find('input#hdnStagingBinName').val();

                        if ($.trim(stageBinName).length <= 0) {
                            stageBinName = $(nTR).find('input#txtLineItemStagingBin').val();
                        }
                        var oData = $("#ItemModeDataTable").dataTable().fnGetData($(nTR)[0]);


                        var itemGuid = oData.GUID;
                        //var sourceBinID = $(nTR).find('#ddlItemSourceBins').val();
                        var sourceBinID = $(nTR).find('#BinID').val();
                        var Errmsg = "";
                        if ($.trim(stageBinName).length <= 0) {
                            stageBinName = "[|EmptyStagingBin|]";
                        }
                        if (parseInt(sourceBinID) <= 0) {
                            Errmsg += '\n' + '@eTurns.DTO.ResMaterialStagingDetail.errInventoryLocation';
                        }
                        if (parseFloat(qty) <= 0) {
                            Errmsg += '\n' + '@eTurns.DTO.ResMaterialStagingDetail.errNOQtyZero';
                        }

                        if (Errmsg == "") {
                            $('#DivLoading').show();
                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("SaveItemToStaging", "Inventory")',
                                dataType: 'json',
                                async: false,
                                cache: false,
                                data: { 'msGUID': MSGUID, 'msdtlGUID': '', 'ItemGUID': itemGuid, 'Qty': qty, 'BinID': sourceBinID, 'StagingBinID': stageBinID, 'StagingBinName': stageBinName },
                                success: function (response) {
                                    if (response.Status == "ok") {
                                        $(nTR).removeClass('row_selected')
                                        $(nTR).css('background-color', 'Green');
                                        $(nTR).find('input#txtQtyToAdd').val('');
                                        $('div#target').fadeToggle();
                                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                        $("#spanGlobalMessage").html(response.Message);
                                        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');

                                        if ($(nTR).find('#ddlItemSourceBins').length > 0) {
                                            var staLocName = $(nTR).find("input[type='hidden'][name='hdnStagingBinName']").val();
                                            $.ajax({
                                                "url": '@Url.Content("~/Master/GetBinsOfItem")',
                                                "data": { 'StagingName': '', NameStartWith: '', ItemGUID: itemGuid, QtyRequired: true, OnlyHaveQty: true },
                                                "async": false,
                                                "cache": false,
                                                "dataType": "json",
                                                "success": function (result) {
                                                    if (result.length > 0) {
                                                        if ($(nTR).find('#txtLineItemStagingBin').length > 0) {
                                                            $(nTR).find('#txtLineItemStagingBin').val('');
                                                        }
                                                        $(nTR).find('input#txtQtyToAdd').val('');
                                                        $(nTR).find('#ddlItemSourceBins').empty();
                                                        for (var i = 0; i < result.length; i++) {
                                                            if (result[i].OtherInfo1 == "DefaultLocation") {
                                                                $(nTR).find('#ddlItemSourceBins').append('<option value="' + result[i].ID + '" selected="selected" >' + result[i].Key + '</options>');
                                                            }
                                                            else {
                                                                $(nTR).find('#ddlItemSourceBins').append('<option value="' + result[i].ID + '">' + result[i].Key + '</options>');
                                                            }
                                                        }
                                                    }
                                                }
                                            });
                                        }
                                    }
                                    else {
                                        $('div#target').css("z-index", 100000);
                                        $("#spanGlobalMessage").html(response.Message);
                                        $('div#target').fadeToggle();
                                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                                    }

                                },
                                error: function (err) {
                                    alert("There is some Error");
                                }
                            });


                        }
                        else {
                            $("#spanGlobalMessage").html(Errmsg);
                            $('div#target').fadeToggle();
                            $('div#target').css("z-index", 100000);
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                        }
                        $('#DivLoading').hide();
                    });
                }

                if ($('#ItemModeDataTable tbody tr.row_selected').length <= 0) {
                    setTimeout(function () { $('#ItemModeDataTable').dataTable().fnDraw(); }, 2000);
                }

        }
		});



        function closeModal() {
            $.modal.impl.close();
        }

        var BoolTrueString = '@Boolean.TrueString';
        var StagePullItemQuantityUrl = '@Url.Action("StagePulltemQuantity", "Inventory")';
        var PullPageName = "";
        function OpenPullPopup(btnObj) {

            var errorMsg = '';
            $('#DivLoading').show();
            var PullInfo = new Array();
            if ($(btnObj).prop("id") == "btnAddAllNew") {
                $('#ItemModeDataTable').find("tbody").find("tr.row_selected").each(function (index, tr) {
                    var aPos = $('#ItemModeDataTable').dataTable().fnGetPosition($(tr)[0]);
                    var aData = $('#ItemModeDataTable').dataTable().fnGetData(aPos);
                    errorMsg = '';
                    var txxt = $(tr).find('input#txtQtyToAdd');
                    var vBinID;
                    var txtQty = txxt.val();
                    vBinID = $(tr).find('#BinID')[0].value == '' ? 0 : $(tr).find('#BinID')[0].value;
                    if (!(!isNaN(parseFloat(txtQty)) && parseFloat(txtQty) > 0)) {
                        $(tr).css('background-color', 'Olive');
                        IsGlobalErrorMsgShow = true;
                        errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": "+'@ResPullMaster.MsgQtyToPullMandatory'+".</b><br/>"
                    }

                    if (!(!isNaN(parseInt(vBinID)) && parseInt(vBinID) > 0)) {
                        $(tr).css('background-color', 'Olive');
                        IsGlobalErrorMsgShow = true;
                        errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": " + '@ResPullMaster.InventoryLocationMandatory' + ".</b><br/>"
                    }

                    var stageBinID = $(tr).find('input#hdnStagingBin').val();
                    var stageBinName = $(tr).find('input#hdnStagingBinName').val();

                    if ($.trim(stageBinName).length <= 0) {
                        stageBinName = $(tr).find('input#txtLineItemStagingBin').val();
                    }

                    if (errorMsg.length <= 0) {
                        var vItemID = $(tr).find('#spnItemID').text();
                        var vItemGUID = $(tr).find('#spnItemGUID').text();
                        var vspnOn_HandQuantity = $(tr).find('#spnOn_HandQuantity').text() == "" ? 0 : $(tr).find('#spnOn_HandQuantity').text();

                        PullInfo.push({
                            ID: index, ItemID: vItemID, PoolQuantity: txtQty,
                            ItemGUID: vItemGUID, BinID: vBinID, StageBinName: stageBinName, StagingBinId: stageBinID
                        });
                    }
                });
            }
            else if ($(btnObj).prop("id") == "btnInLineAdd") {

                var tr = $(btnObj).parent().parent()[0];
                var aPos = $('#ItemModeDataTable').dataTable().fnGetPosition($(tr)[0]);
                var aData = $('#ItemModeDataTable').dataTable().fnGetData(aPos);

                var txxt = $(tr).find('input#txtQtyToAdd');
                var vBinID;
                var txtQty = txxt.val();
                vBinID = $(tr).find('#BinID')[0].value == '' ? 0 : $(tr).find('#BinID')[0].value;


                if (!(!isNaN(parseFloat(txtQty)) && parseFloat(txtQty) > 0)) {
                    $(tr).css('background-color', 'Olive');
                    IsGlobalErrorMsgShow = true;
                    errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": Qty to Pull is Mandatory.</b><br/>"
                }

                if (!(!isNaN(parseInt(vBinID)) && parseInt(vBinID) > 0)) {
                    $(tr).css('background-color', 'Olive');
                    IsGlobalErrorMsgShow = true;
                    errorMsg += "<b style='color:Olive;'>" + aData.ItemNumber + ": Inventory Location are Mandatory.</b><br/>"
                }

                var stageBinID = $(tr).find('input#hdnStagingBin').val();
                var stageBinName = $(tr).find('input#hdnStagingBinName').val();

                if ($.trim(stageBinName).length <= 0) {
                    stageBinName = $(tr).find('input#txtLineItemStagingBin').val();
                }



                if (errorMsg.length <= 0) {
                    var vItemID = $(tr).find('#spnItemID').text();
                    var vItemGUID = $(tr).find('#spnItemGUID').text();
                    var vspnOn_HandQuantity = $(tr).find('#spnOn_HandQuantity').text() == "" ? 0 : $(tr).find('#spnOn_HandQuantity').text();

                    PullInfo.push({ ID: 0, ItemID: vItemID, PoolQuantity: txtQty, ItemGUID: vItemGUID, BinID: vBinID, StageBinName: stageBinName, StagingBinId: stageBinID, MSGUID: MSGUID });
                }
            }

            if (errorMsg.length <= 0) {

                $.ajax({
                    type: "POST",
                    url: StagePullItemQuantityUrl,
                    contentType: 'application/json',
                    dataType: 'html',
                    data: JSON.stringify(PullInfo),
                    success: function (RetData) {
                        $("#divStageLotSerialelection").html("");
                        $("#divStageLotSerialelection").html(RetData);
                        $("#divStageLotSerialelection").dialog('open');
                        $('#DivLoading').hide();
                    },
                    error: function (err) {
                        alert(err.statusText + ' ' + err.responseText);
                    }
                });
            }
            else {
                $('#DivLoading').hide();
                $('#dlgCommonErrorMsg').find("#pOkbtn").css('display', '');
                $('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
                $('#dlgCommonErrorMsg').find("#pErrMessage").html(errorMsg);
                $('#dlgCommonErrorMsg').modal({
                    escClose: false,
                    close: false
                });
            }
            return false;
        }

        var LenBeforeRebind = 0;
        var LenAfterRebind = 0;
        var isDeleteSrLotRow = false;
        var pullLotSerailSelection = '@Url.Content("~/Pull/PullLotSrSelection")';
        function PrepareStagePullDataTable(objPullItemDTO) {

            var columnarrIL = new Array();
            columnarrIL.push({
                mDataProp: null, sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val) {
                    if (objPullItemDTO.ViewRight == "ViewOverwrite") {
                        var strReturn = "<span style='position:relative'>";
                        strReturn = strReturn + "<input type='text' value='" + obj.aData.LotOrSerailNumber + "' id='txtLotOrSerailNumber' name='txtLotOrSerailNumber' class='text-boxinner AutoSerialLot' />";
                        strReturn = strReturn + '<a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsSL" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                        return strReturn;
                    }
                    else if (objPullItemDTO.ViewRight == "NoRight") // && IsCheckViewRight == false)
                    {
                        var strReturn = "<span style='position:relative'>";
                        strReturn = strReturn + "<input type='text' value='" + obj.aData.LotOrSerailNumber + "' id='txtLotOrSerailNumberNoRight' name='txtLotOrSerailNumberNoRight' class='text-boxinner' />";
                        //strReturn = strReturn + '<a id="lnkShowAllOptions" href="javascript:void(0);" style="position:absolute; right:5px; top:0px;" class="ShowAllOptionsSL" ><img src="/Content/images/arrow_down_black.png" alt="select" /></a></span>';
                        return strReturn;
                    }
                    else if (objPullItemDTO.ViewRight == "ViewOnly") {
                        var strReturn = "<input type='text' value='" + obj.aData.LotOrSerailNumber + "' id='txtLotOrSerailNumberViewOnly' name='txtLotOrSerailNumberViewOnly' class='text-boxinner' />";
                        return strReturn;
                    }
                    else {
                        var strReturn = "<input type='text' value='" + obj.aData.LotOrSerailNumber + "' id='txtLotOrSerailNumberViewOnly' name='txtLotOrSerailNumberViewOnly' class='text-boxinner' />";
                        return strReturn;
                    }
                }
            });
            //columnarrIL.push({ mDataProp: "BinNumber", sClass: "read_only" });
            columnarrIL.push({
                mDataProp: null, sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val) {
                    var strReturn = "<span name='spnLotSerialQuantity' id='spnLotSerialQuantity_" + obj.aData.ID + "'>" + obj.aData.LotSerialQuantity + "</span>";
                    return strReturn;
                }
            });
            columnarrIL.push({
                mDataProp: null, sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val) {


                    var strReturn = "<input type='hidden' name='hdnRowUniqueId' value='" + obj.aData.ID + "_" + obj.aData.ItemGUID + "' />";
                    strReturn = strReturn + "<input type='hidden' name='hdnLotNumberTracking' value='" + obj.aData.LotNumberTracking + "' />";
                    strReturn = strReturn + "<input type='hidden' name='hdnSerialNumberTracking' value='" + obj.aData.SerialNumberTracking + "' />";
                    strReturn = strReturn + "<input type='hidden' name='hdnDateCodeTracking' value='" + obj.aData.DateCodeTracking + "' />";
                    strReturn = strReturn + "<input type='hidden' name='hdnExpiration' value='" + obj.aData.Expiration + "' />";
                    strReturn = strReturn + "<input type='hidden' name='hdnExpirationDate' value='" + obj.aData.strExpirationDate + "' />";
                    strReturn = strReturn + "<input type='hidden' name='hdnBinNumber' value='" + obj.aData.BinNumber + "' />";
                    strReturn = strReturn + "<input type='hidden' name='hdnStageBinName' value='" + objPullItemDTO.StageBinName + "' />";

                    if (objPullItemDTO.SerialNumberTracking == BoolTrueString) {
                        strReturn = strReturn + "<input type='text' value='" + FormatedCostQtyValues(obj.aData.PullQuantity, 2) + "' id='txtPullQty_" + obj.aData.ID + "' name='txtPullQty' class='text-boxinner pull-quantity' readonly='readonly' />";
                    }
                    else {
                        strReturn = strReturn + "<input type='text' value='" + FormatedCostQtyValues(obj.aData.PullQuantity, 2) + "' id='txtPullQty_" + obj.aData.ID + "' name='txtPullQty' class='text-boxinner pull-quantity' />";
                    }
                    return strReturn;
                }
            });
            columnarrIL.push({ mDataProp: "Received", sClass: "read_only" });
            columnarrIL.push({ mDataProp: "Expiration", sClass: "read_only" });

            //alert(JSON.stringify(columnarrIL));

            var Curtable = $('#' + objPullItemDTO.tableID).dataTable({
                "bPaginate": false,
                "bLengthChange": false,
                "bFilter": false,
                "bSort": false,
                "bInfo": false,
                "bAutoWidth": false,
                "sScrollX": "100%",
                "bRetrieve": true,
                "bDestroy": true,
                "bProcessing": true,
                "bServerSide": true,
                "aoColumns": columnarrIL,
                "sAjaxSource": pullLotSerailSelection,
                "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                    if (aData.IsConsignedLotSerial == true) {
                        nRow.className = "even trconsigned";
                    }
                },
                "fnInitComplete": function (oSettings) {
                    var strAllSelected = "";

                    $("#hdnSelectedId_" + objPullItemDTO.ItemGUID).val();
                    if (objPullItemDTO.LotNumberTracking != BoolTrueString && objPullItemDTO.SerialNumberTracking != BoolTrueString) {
                        $('#' + objPullItemDTO.tableID).dataTable().fnSetColumnVis(0, false);
                    }
                    if (objPullItemDTO.DateCodeTracking != BoolTrueString) {
                        $('#' + objPullItemDTO.tableID).dataTable().fnSetColumnVis(4, false);
                    }
                },
                "fnServerData": function (sSource, aoData, fnCallback, oSettings) {

                    aoData.push({ "name": "ItemGUID", "value": objPullItemDTO.ItemGUID });
                    aoData.push({ "name": "BinID", "value": objPullItemDTO.BinID });
                    aoData.push({ "name": "PullQuantity", "value": FormatedCostQtyValues($("#txtPoolQuantity_" + objPullItemDTO.ItemGUID).val(), 2) });
                    aoData.push({ "name": "InventoryConsuptionMethod", "value": objPullItemDTO.InventoryConsuptionMethod });
                    aoData.push({ "name": "CurrentLoaded", "value": $("#hdnCurrentLoadedIds_" + objPullItemDTO.ItemGUID).val() });
                    aoData.push({ "name": "ViewRight", "value": objPullItemDTO.ViewRight });
                    aoData.push({ "name": "IsDeleteRowMode", "value": isDeleteSrLotRow });
                    aoData.push({ "name": "MSGUID", "value": MSGUID });

                    oSettings.jqXHR = $.ajax({
                        dataType: 'json',
                        type: "POST",
                        url: sSource,
                        cache: false,
                        "data": aoData,
						"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                        success: fnCallback,
                        beforeSend: function () {
                            LenBeforeRebind = $('#' + objPullItemDTO.tableID).find("tbody").find("tr").length;
                            $('.dataTables_scroll').css({ "opacity": 0.2 });
                        },
                        complete: function () {
                            $('.dataTables_scroll').css({ "opacity": 1 });
                            isDeleteSrLotRow = false;
                            $('.ShowAllOptionsSL').click(function () {
                                $(this).siblings('.AutoSerialLot').trigger("focus");
                                $(this).siblings(".AutoSerialLot").autocomplete("search", "");
                            });

                            if (objPullItemDTO.ViewRight == "ViewOnly") {
                                $("input[type='text'][name='txtLotOrSerailNumberViewOnly']").keypress(function () {
                                    return false;
                                });

                                $("#divStageLotSerialelection input[type='text'][name='txtPullQty']").keypress(function () {
                                    return false;
                                });
                            }

                            LenAfterRebind = $('#' + objPullItemDTO.tableID).find("tbody").find("tr").length;
                            if (LenBeforeRebind == LenAfterRebind && IsLoadMoreLotsClicked == true) {
                                alert("No location found to add.");
                            }
                            IsLoadMoreLotsClicked = false;
                        }
                    });
                }
            });
        }


        $("#divStageLotSerialelection").off("click", "input[type='button'][name='btnPullPopup']");
        $("#divStageLotSerialelection").on("click", "input[type='button'][name='btnPullPopup']", function () {
            var vItemGUID = $(this).prop("id").split('_')[1];
            var dtID = "#tblItemPull_" + vItemGUID

            var ArrItem = new Array();
            var arrItemDetails;
            var ErrorMessage = ValidateSinglePull(vItemGUID);

            if (ErrorMessage == "") {

                arrItemDetails = new Array();
                var ID = vItemGUID;
                var SpanQty = $("#divStageLotSerialelection").find("#txtPoolQuantity_" + vItemGUID);

                var dt = $("#tblItemPull_" + vItemGUID).dataTable();
                var currentData = dt.fnGetData();

                var strpullobj = JSON.parse($("#hdnPullMasterDTO_" + vItemGUID).val());

                $("#tblItemPull_" + vItemGUID).find("tbody").find("tr").each(function (index, tr) {
                    var txtPullQty = $(tr).find("input[type='text'][name='txtPullQty']").val();
                    var hdnLotNumberTracking = $(tr).find("input[name='hdnLotNumberTracking']").val();
                    var hdnSerialNumberTracking = $(tr).find("input[name='hdnSerialNumberTracking']").val();
                    var hdnDateCodeTracking = $(tr).find("input[name='hdnDateCodeTracking']").val();
                    var txtPullQty = $(tr).find("input[type='text'][name='txtPullQty']").val();
                    var hdnBinNumber = $(tr).find("input[name='hdnBinNumber']").val();
                    var hdnExpiration = $(tr).find("input[name='hdnExpiration']").val();

                    if (txtPullQty != "") {
                        var txtLotOrSerailNumber = "";
                        if (hdnLotNumberTracking == "true" || hdnSerialNumberTracking == "true")
                            var txtLotOrSerailNumber = $(tr).find("input[type='text'][name^='txtLotOrSerailNumber']").val();

                        var vSerialNumber = "";
                        var vLotNumber = "";
                        var vExpiration = "";

                        if (hdnSerialNumberTracking == "true")
                            vSerialNumber = txtLotOrSerailNumber;
                        if (hdnLotNumberTracking == "true")
                            vLotNumber = txtLotOrSerailNumber;
                        if (hdnDateCodeTracking == "true")
                            vExpiration = hdnExpiration;

                        var obj = {
                            "LotOrSerailNumber": txtLotOrSerailNumber, "BinNumber": hdnBinNumber,
                            "PullQuantity": parseFloat(txtPullQty.toString()),
                            "LotNumberTracking": hdnLotNumberTracking,
                            "SerialNumberTracking": hdnSerialNumberTracking,
                            "DateCodeTracking": hdnDateCodeTracking,
                            "Expiration": hdnExpiration, "SerialNumber": vSerialNumber, "LotNumber": vLotNumber
                                        , "ItemGUID": strpullobj.ItemGUID, "BinID": strpullobj.BinID, "ID": strpullobj.BinID
                        };

                        arrItemDetails.push(obj);
                    }
                });

                var pullQty = parseFloat($(SpanQty).val().toString());

                var PullItem = {
                    ID: 1,
                    ItemGUID: strpullobj.ItemGUID,

                    ItemID: strpullobj.ItemID,
                    ItemNumber: strpullobj.ItemNumber,
                    BinID: strpullobj.BinID,
                    BinNumber: strpullobj.BinNumber,
                    PullQuantity: pullQty,
                    StageBinNumber: strpullobj.StageBinName,
                    StageBinID: strpullobj.StagingBinId,
                    lstItemPullDetails: arrItemDetails,
                    MSGUID: MSGUID
                };

                ArrItem.push(PullItem);

                if (ArrItem.length > 0) {
                    PullMultipleItemNew(ArrItem);
                }
            }
            else {
                alert(ErrorMessage);
            }
        });


        $("#divStageLotSerialelection").off("click", "input[type='button'][name='btnPullAllPopUp']");
        $("#divStageLotSerialelection").on("click", "input[type='button'][name='btnPullAllPopUp']", function () {
            PullAllNewFlow();
        });


        function PullAllNewFlow() {
            var ArrItem = new Array();
            var arrItemDetails;
            var ErrorMessage = ValidateAllPull();

            if (ErrorMessage == "") {
                $("#divStageLotSerialelection").find("table[id^='tblItemPullheader']").each(function (indx, tblHeader) {
                    var strpullobj = JSON.parse($(tblHeader).find("input[name='hdnPullMasterDTO']").val());
                    arrItemDetails = new Array();
                    var ID = $(tblHeader).prop("id").split('_')[1];
                    var SpanQty = 0;
                    SpanQty = $(tblHeader).find("#txtPoolQuantity_" + ID);
                    var dt = null;
                    if ($("#tblItemPull_" + ID).length > 0)
                        dt = $("#tblItemPull_" + ID).dataTable();

                    if ($("#tblItemPull_" + ID).length > 0) {
                        var currentData = dt.fnGetData();
                        $("#tblItemPull_" + ID).find("tbody").find("tr").each(function (index, tr) {
                            var txtPullQty = $(tr).find("input[type='text'][name='txtPullQty']").val();
                            var hdnLotNumberTracking = $(tr).find("input[name='hdnLotNumberTracking']").val();
                            var hdnSerialNumberTracking = $(tr).find("input[name='hdnSerialNumberTracking']").val();
                            var hdnDateCodeTracking = $(tr).find("input[name='hdnDateCodeTracking']").val();
                            var txtPullQty = $(tr).find("input[type='text'][name='txtPullQty']").val();
                            var hdnBinNumber = $(tr).find("input[name='hdnBinNumber']").val();
                            var hdnExpiration = $(tr).find("input[name='hdnExpiration']").val();

                            if (txtPullQty != "") {
                                var txtLotOrSerailNumber = "";
                                if (hdnLotNumberTracking == "true" || hdnSerialNumberTracking == "true")
                                    var txtLotOrSerailNumber = $(tr).find("input[type='text'][name^='txtLotOrSerailNumber']").val();

                                var vSerialNumber = "";
                                var vLotNumber = "";
                                var vExpiration = "";

                                if (hdnSerialNumberTracking == "true")
                                    vSerialNumber = txtLotOrSerailNumber;
                                if (hdnLotNumberTracking == "true")
                                    vLotNumber = txtLotOrSerailNumber;
                                if (hdnDateCodeTracking == "true")
                                    vExpiration = hdnExpiration;

                                var obj = {
                                    "LotOrSerailNumber": txtLotOrSerailNumber, "BinNumber": hdnBinNumber, "PullQuantity": parseFloat(txtPullQty.toString())
                                                , "LotNumberTracking": hdnLotNumberTracking, "SerialNumberTracking": hdnSerialNumberTracking, "DateCodeTracking": hdnDateCodeTracking
                                                , "Expiration": hdnExpiration, "SerialNumber": vSerialNumber, "LotNumber": vLotNumber
                                                , "ItemGUID": strpullobj.ItemGUID, "BinID": strpullobj.BinID, "ID": strpullobj.BinID
                                };
                                arrItemDetails.push(obj);
                            }
                        });
                    }

                    var pullQty = parseFloat($(SpanQty).val());

                    var PullItem = {
                        ID: indx,
                        ItemGUID: strpullobj.ItemGUID,
                        ItemID: strpullobj.ItemID,
                        ItemNumber: strpullobj.ItemNumber,
                        BinID: strpullobj.BinID,
                        BinNumber: strpullobj.BinNumber,
                        PullQuantity: pullQty,
                        StageBinNumber: strpullobj.StageBinName,
                        StageBinID: strpullobj.StagingBinId,
                        lstItemPullDetails: arrItemDetails,
                        MSGUID: MSGUID
                    };

                    ArrItem.push(PullItem);
                });

                if (ArrItem.length > 0) {
                    PullMultipleItemNew(ArrItem);
                }
            }
            else {
                alert(ErrorMessage);
            }
        }


        function ValidateSinglePull(vItemGUID) {

            var returnVal = true;
            var errormsg = "";
            var isMoreQty = false;
            var dtID = "#tblItemPull_" + vItemGUID;

            var SpanQty = $("#divStageLotSerialelection").find("#txtPoolQuantity_" + vItemGUID);

            var TotalEntered = 0;
            $("#tblItemPull_" + vItemGUID).find("tbody").find("tr").each(function (index, tr) {
                var txtPullQty = $(tr).find("input[type='text'][name='txtPullQty']").val();
                var spnLotSerialQuantity = $(tr).find("span[name='spnLotSerialQuantity']").text();

                if (parseFloat(txtPullQty) > parseFloat(spnLotSerialQuantity)) {
                    errormsg = "\nYou can not pull more QTY than available QTY.";
                    isMoreQty = true;
                    return errormsg;
                }

                TotalEntered = TotalEntered + parseFloat(txtPullQty);
            });

            if (isMoreQty == false) {
                var pullQty = parseFloat($(SpanQty).val().toString());
                if (TotalEntered != pullQty) {
                    errormsg = errormsg + "\n You have entered :" + TotalEntered + " QTY. You had entered Pulled Qty :" + pullQty;
                }
            }
            else {
                errormsg = "You can not pull more QTY than available QTY.";
            }

            return errormsg;
        }


        function ValidateAllPull() {
            var returnVal = true;
            var errormsg = "";
            var isMoreQty = false;
            $("#divStageLotSerialelection").find("table[id^='tblItemPullheader']").each(function (indx, tblHeader) {
                var ID = $(tblHeader).prop("id").split('_')[1];
                var SpanQty = $("table[id^='tblItemPullheader']").find("#txtPoolQuantity_" + ID);

                var TotalEntered = 0;
                if ($("#tblItemPull_" + ID).length > 0) {
                    $("#tblItemPull_" + ID).find("tbody").find("tr").each(function (index, tr) {
                        var txtPullQty = $(tr).find("input[type='text'][name='txtPullQty']").val();
                        var spnLotSerialQuantity = $(tr).find("span[name='spnLotSerialQuantity']").text();

                        if (parseFloat(txtPullQty) > parseFloat(spnLotSerialQuantity)) {
                            errormsg = "\nYou can not pull more QTY than available QTY.";
                            isMoreQty = true;
                            return errormsg;
                        }

                        TotalEntered = TotalEntered + parseFloat(txtPullQty);
                    });


                    if (isMoreQty == false) {
                        var pullQty = parseFloat($(SpanQty).val().toString());
                        if (TotalEntered != pullQty) {
                            ////errormsg = errormsg + "\nentered :" + TotalEntered + "\tPull Qty :" + pullQty;
                            errormsg = errormsg + "\n You have entered :" + TotalEntered + " QTY. You had entered Pulled Qty :" + pullQty;
                        }
                    }
                    else {
                        errormsg = "You can not pull more QTY than available QTY.";
                    }
                }
            });

            return errormsg;
        }


        var PullSerialsAndLotsNewUrl = '@Url.Action("PullSerialsAndLotsNew", "Inventory")';
        function PullMultipleItemNew(ArrItem) {
            $('#DivLoading').show();
            $.ajax({
                type: "POST",
                url: PullSerialsAndLotsNewUrl,
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(ArrItem),
                success: function (RetData) {
                    var errorMessage = "";

                    $.each(RetData, function (indx, RetDataItem) {
                        if (RetDataItem.ErrorMessage != null && RetDataItem.ErrorMessage != undefined && RetDataItem.ErrorMessage.trim() > '') {
                            errorMessage += RetDataItem.ErrorMessage + "<br />";
                        }
                        else if (RetDataItem.ErrorList.length > 0) {
                            $.each(RetDataItem.ErrorList, function (indx, ErrorListItem) {
                                errorMessage += ErrorListItem.ErrorMessage + "<br />";
                            });
                        }
                        else {
                            $('#divItem_' + RetDataItem.ItemGUID).attr('style', '');
                            $('#divItem_' + RetDataItem.ItemGUID).remove();
                        }
                    });

                    $('#DivLoading').hide();
                    if (errorMessage != "") {
                        $.modal.impl.close();
                        errorMessage = "<b>Some of the Item(s) is(are) not able to Pull(s) Due to following reasons.</b><br /><br />" + errorMessage;
                        $('#dlgCommonErrorMsgPopup').find("#pOkbtn").css('display', '');
                        //$('#dlgCommonErrorMsg').find("#pYesNobtn").css('display', 'none');
                        $('#dlgCommonErrorMsgPopup').find("#pErrMessage").html(errorMessage);
                        $('#dlgCommonErrorMsgPopup').modal();
                        $('#dlgCommonErrorMsgPopup').css("z-index", "1104");
                        $('#simplemodal-overlay').css("z-index", "1103");
                        $('#simplemodal-container').css("z-index", "1104");
                    }
                    else {
                        var IsFromPullMaster = false;

                        $("#spanGlobalMessage").html("@ResPullMaster.AllPulldon");
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                        if ($('div[id^="divItem_"]').length <= 0) {
                            $('#divStageLotSerialelection').dialog('close');
                            $('#ItemModeDataTable').dataTable().fnStandingRedraw();
                        }
                    }
                },
                error: function (err) {
                    $('#DivLoading').hide();
                    $.modal.impl.close();
                    $('#dlgCommonErrorMsgPopup').find("#pOkbtn").css('display', '');
                    $('#dlgCommonErrorMsgPopup').find("#pErrMessage").html("Not saved, error occured");
                    $('#dlgCommonErrorMsgPopup').modal();
                    $('#dlgCommonErrorMsgPopup').css("z-index", "1004");
                    $('#simplemodal-overlay').css("z-index", "1003");
                    $('#simplemodal-container').css("z-index", "1004");
                },
                complete: function () {
                }
            });
        }

        $("#divStageLotSerialelection").off('focus', "input[type='text'][name^='txtLotOrSerailNumber']");
        $("#divStageLotSerialelection").on('focus', "input[type='text'][name^='txtLotOrSerailNumber']", function (e) {
            var objCurtxt = $(this);
            //var ids = $(this).parent().parent().parent().find("input[type='hidden'][name='hdnRowUniqueId']").val().split('_');
            var ids = $(this).parent().parent().parent().parent().parent().parent().parent().parent().parent().find("[id^='hdnPullIds_']").val().split('_');
            var aPos = $("#tblItemPull_" + ids[1].toString()).dataTable().fnGetPosition($(this).parent().parent().parent()[0]);
            var aData = $("#tblItemPull_" + ids[1].toString()).dataTable().fnGetData(aPos);

            var dtItemPull = "#tblItemPull_" + ids[1].toString();
            var strSerialLotNos = "";

            $(dtItemPull).find("tbody").find("tr").each(function (index, tr) {

                if (index != aPos) {
                    var hdnLotNumberTracking = $(tr).find("input[name='hdnLotNumberTracking']").val();
                    var hdnSerialNumberTracking = $(tr).find("input[name='hdnSerialNumberTracking']").val();
                    var hdnDateCodeTracking = $(tr).find("input[name='hdnDateCodeTracking']").val();

                    if (hdnLotNumberTracking == "true" || hdnSerialNumberTracking == "true") {
                        var txtLotOrSerailNumber = $(tr).find("input[type='text'][name^='txtLotOrSerailNumber']").val();
                        if (txtLotOrSerailNumber != undefined)
                            strSerialLotNos = strSerialLotNos + txtLotOrSerailNumber + "|#|";
                    }
                    else if (hdnDateCodeTracking == "true") {
                        var hdnExpiration = $(tr).find("input[name='hdnExpiration']").val();
                        if (hdnExpiration != undefined)
                            strSerialLotNos = strSerialLotNos + hdnExpiration + "|#|";
                    }
                    else {
                        var hdnBinNumber = $(tr).find("input[name='hdnBinNumber']").val();
                        if (hdnBinNumber != undefined)
                            strSerialLotNos = strSerialLotNos + hdnBinNumber + "|#|";
                    }
                }

            });

            if ($(this).hasClass("AutoSerialLot")) {
                $(this).autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '/Pull/GetLotOrSerailNumberList',
                            contentType: 'application/json',
                            dataType: 'json',
                            data: {
                                maxRows: 1000,
                                name_startsWith: request.term,
                                ItemGuid: ids[1].toString(),
                                BinID: aData.BinID,
                                prmSerialLotNos: strSerialLotNos
                            },
                            success: function (data) {
                                response($.map(data, function (item) {
                                    return {
                                        label: item.LotOrSerailNumber,
                                        value: item.LotOrSerailNumber,
                                        selval: item.LotOrSerailNumber
                                    }
                                }));
                            },
                            error: function (err) {

                            }
                        });
                    },
                    autoFocus: false,
                    minLength: 0,
                    select: function (event, ui) {
                        //                    $(objCurtxt).parent().parent().find("input[type='hidden'][name='hdnStagingBin']").val(ui.item.selval);
                        //                    $(objCurtxt).parent().parent().find("input[type='hidden'][name='hdnStagingBinName']").val(ui.item.label);
                    },
                    open: function () {
                        $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
                        $(this).autocomplete('widget').css('z-index', 9000);
                        $('ul.ui-autocomplete').css('overflow-y', 'auto');
                        $('ul.ui-autocomplete').css('max-height', '300px');
                    },
                    close: function () {
                        $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
                        $(objCurtxt).trigger("change");
                    }
                });
            }
        });

        $("#divStageLotSerialelection").off("click", "input[type='button'][name='btnLoadMoreLots']");
        $("#divStageLotSerialelection").on("click", "input[type='button'][name='btnLoadMoreLots']", function () {

            var vItemGUID = $(this).prop("id").split('_')[1];

            var dtID = "#tblItemPull_" + vItemGUID;
            var strIds = "";

            var MaxQuantity = $("#txtPoolQuantity_" + vItemGUID)[0].value;
            var TotalQuantity = 0;
            $("#tblItemPull_" + vItemGUID).find("[id*='txtPullQty_']").each(function () {
                TotalQuantity = TotalQuantity + parseInt($(this)[0].value);
            });

            if (MaxQuantity > TotalQuantity) {
                IsLoadMoreLotsClicked = true;
                $(dtID).find("tbody").find("tr").each(function (index, tr) {

                    var hdnLotNumberTracking = $(tr).find("input[name='hdnLotNumberTracking']").val();
                    var hdnSerialNumberTracking = $(tr).find("input[name='hdnSerialNumberTracking']").val();
                    var hdnDateCodeTracking = $(tr).find("input[name='hdnDateCodeTracking']").val();
                    var txtPullQty = $(tr).find("input[type='text'][name='txtPullQty']").val();

                    if (txtPullQty != undefined) {
                        if (txtPullQty == "") {
                            txtPullQty = "0";
                        }
                        //if (hdnLotNumberTracking == "true" || hdnSerialNumberTracking == "true") {
                        //    var txtLotOrSerailNumber = $(tr).find("input[type='text'][name^='txtLotOrSerailNumber']").val();
                        //    if (txtLotOrSerailNumber != undefined && !IsLotSerialExistsInCurrentLoaded(strIds, txtLotOrSerailNumber))
                        //        strIds = strIds + txtLotOrSerailNumber + "_" + txtPullQty + ",";
                        //}
                        //else if (hdnDateCodeTracking == "true") {
                        //    var hdnExpiration = $(tr).find("input[name='hdnExpiration']").val();
                        //    if (hdnExpiration != undefined && !IsLotSerialExistsInCurrentLoaded(strIds, hdnExpiration))
                        //        strIds = strIds + hdnExpiration + "_" + txtPullQty + ",";
                        //}
                        //else {
                        //    var hdnBinNumber = $(tr).find("input[name='hdnBinNumber']").val();
                        //    if (hdnBinNumber != undefined && !IsLotSerialExistsInCurrentLoaded(strIds, hdnBinNumber))
                        //        strIds = strIds + hdnBinNumber + "_" + txtPullQty + ",";
                        //}

                        if ((hdnLotNumberTracking == "true" && hdnDateCodeTracking == "false")
                        || (hdnSerialNumberTracking == "true" && hdnDateCodeTracking == "false")) {
                            var txtLotOrSerailNumber = $.trim($(tr).find("input[type='text'][name^='txtLotOrSerailNumber']").val());
                            if (txtLotOrSerailNumber != undefined && !IsLotSerialExistsInCurrentLoaded(strIds, txtLotOrSerailNumber))
                                strIds = strIds + txtLotOrSerailNumber + "_" + txtPullQty + ",";
                        }
                            //else if (hdnDateCodeTracking == "true") {
                        else if ((hdnLotNumberTracking == "true" && hdnDateCodeTracking == "true")
                            || (hdnSerialNumberTracking == "true" && hdnDateCodeTracking == "true")) {
                            var hdnExpiration = $(tr).find("input[name='hdnExpirationDate']").val();
                            var txtLotOrSerailNumber = $.trim($(tr).find("input[type='text'][name^='txtLotOrSerailNumber']").val());
                            if (txtLotOrSerailNumber != undefined && hdnExpiration != undefined && !IsLotSerialExistsInCurrentLoaded(strIds, hdnExpiration))
                                strIds = strIds + txtLotOrSerailNumber + "_" + hdnExpiration + "_" + txtPullQty + ",";
                        }
                        else if (hdnLotNumberTracking == "false" && hdnSerialNumberTracking == "false" && hdnDateCodeTracking == "true") {
                            var hdnExpiration = $(tr).find("input[name='hdnExpirationDate']").val();
                            if (hdnExpiration != undefined)
                                strIds = strIds + hdnExpiration + "_" + txtPullQty + ",";
                        }
                        else {
                            var hdnBinNumber = $(tr).find("input[name='hdnBinNumber']").val();
                            if (hdnBinNumber != undefined && !IsLotSerialExistsInCurrentLoaded(strIds, hdnBinNumber))
                                strIds = strIds + hdnBinNumber + "_" + txtPullQty + ",";
                        }
                    }
                });

                $("#hdnCurrentLoadedIds_" + vItemGUID).val(strIds);

                var dt = $(dtID).dataTable();
                dt.fnStandingRedraw();
            }
            else {
                showNotificationDialog();
                $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
                $("#spanGlobalMessage").html('@ResToolMaster.MsgPullCreditQuantity');

            }
        });


        function IsLotSerialExistsInCurrentLoaded(strIds, SerialLot) {
            if (SerialLot.trim() == '')
                return true;

            if (strIds.trim() == '')
                return false

            var ArrIds = strIds.split(',');
            var i = 0;
            for (i = 0; i < ArrIds.length; i++) {
                if (ArrIds[i].split('_')[0].toLowerCase() == SerialLot.toLowerCase()) {
                    return true;
                }
            }

            return false;
        }

        $("#divStageLotSerialelection").off('click', "input[type='button'][name='btnDeleteLots']");
        $("#divStageLotSerialelection").on('click', "input[type='button'][name='btnDeleteLots']", function (e) {

            var vItemGUID = $(this).prop("id").split('_')[1];

            var dtID = "#tblItemPull_" + vItemGUID;

            var TotalRows = $(dtID + ' tbody tr').length;
            var SelectedRows = $(dtID + ' tbody tr.row_selected').length;
            var RemainingRows = TotalRows - SelectedRows;

            if (SelectedRows <= 0) {
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                $("#spanGlobalMessage").html(MsgSelectRowToDelete);
                $("#spanGlobalMessage").removeClass('succesIcon errorIcon').addClass('WarningIcon');
            }
            else {
                if (RemainingRows >= 1) {
                    $(dtID).find("tbody").find("tr.row_selected").each(function (index, tr) {
                        $(tr).remove();
                    });

                    var strIds = "";
                    $(dtID).find("tbody").find("tr").each(function (index, tr) {

                        var hdnLotNumberTracking = $(tr).find("input[name='hdnLotNumberTracking']").val();
                        var hdnSerialNumberTracking = $(tr).find("input[name='hdnSerialNumberTracking']").val();
                        var hdnDateCodeTracking = $(tr).find("input[name='hdnDateCodeTracking']").val();
                        var txtPullQty = $(tr).find("input[type='text'][name='txtPullQty']").val();

                        if (txtPullQty == "")
                            txtPullQty = "0";

                        //if (hdnLotNumberTracking == "true" || hdnSerialNumberTracking == "true") {
                        //    var txtLotOrSerailNumber = $(tr).find("input[type='text'][name^='txtLotOrSerailNumber']").val();
                        //    if (!IsLotSerialExistsInCurrentLoaded(strIds, txtLotOrSerailNumber))
                        //        strIds = strIds + txtLotOrSerailNumber + "_" + txtPullQty + ",";
                        //}
                        //else if (hdnDateCodeTracking == "true") {
                        //    var hdnExpiration = $(tr).find("input[name='hdnExpiration']").val();
                        //    if (!IsLotSerialExistsInCurrentLoaded(strIds, hdnExpiration))
                        //        strIds = strIds + hdnExpiration + "_" + txtPullQty + ",";
                        //}
                        //else {
                        //    var hdnBinNumber = $(tr).find("input[name='hdnBinNumber']").val();
                        //    if (!IsLotSerialExistsInCurrentLoaded(strIds, hdnBinNumber))
                        //        strIds = strIds + hdnBinNumber + "_" + txtPullQty + ",";
                        //}

                        if ((hdnLotNumberTracking == "true" && hdnDateCodeTracking == "false")
                            || (hdnSerialNumberTracking == "true" && hdnDateCodeTracking == "false")) {
                            var txtLotOrSerailNumber = $.trim($(tr).find("input[type='text'][name^='txtLotOrSerailNumber']").val());
                            if (txtLotOrSerailNumber != undefined && !IsLotSerialExistsInCurrentLoaded(strIds, txtLotOrSerailNumber))
                                strIds = strIds + txtLotOrSerailNumber + "_" + txtPullQty + ",";
                        }
                            //else if (hdnDateCodeTracking == "true") {
                        else if ((hdnLotNumberTracking == "true" && hdnDateCodeTracking == "true")
                            || (hdnSerialNumberTracking == "true" && hdnDateCodeTracking == "true")) {
                            var hdnExpiration = $(tr).find("input[name='hdnExpirationDate']").val();
                            var txtLotOrSerailNumber = $.trim($(tr).find("input[type='text'][name^='txtLotOrSerailNumber']").val());
                            if (txtLotOrSerailNumber != undefined && hdnExpiration != undefined && !IsLotSerialExistsInCurrentLoaded(strIds, hdnExpiration))
                                strIds = strIds + txtLotOrSerailNumber + "_" + hdnExpiration + "_" + txtPullQty + ",";
                        }
                        else if (hdnLotNumberTracking == "false" && hdnSerialNumberTracking == "false" && hdnDateCodeTracking == "true") {
                            var hdnExpiration = $(tr).find("input[name='hdnExpirationDate']").val();
                            if (hdnExpiration != undefined)
                                strIds = strIds + hdnExpiration + "_" + txtPullQty + ",";
                        }
                        else {
                            var hdnBinNumber = $(tr).find("input[name='hdnBinNumber']").val();
                            if (hdnBinNumber != undefined && !IsLotSerialExistsInCurrentLoaded(strIds, hdnBinNumber))
                                strIds = strIds + hdnBinNumber + "_" + txtPullQty + ",";
                        }
                    });

                    $("#hdnCurrentLoadedIds_" + vItemGUID).val(strIds);
                    isDeleteSrLotRow = true;
                    var dtThisItem = $(dtID).dataTable();
                    dtThisItem.fnStandingRedraw();
                }
                else {
                    alert("Can not delete row because at least one row should exists.");
                }

            }
        });

        $("#divStageLotSerialelection").off("tap click", ".tbl-item-pull tbody tr");
        $("#divStageLotSerialelection").on("tap click", ".tbl-item-pull tbody tr", function (e) {
            if (e.target.type == "checkbox" || e.target.type == "radio" || e.target.type == "text") {
                e.stopPropagation();
            }
            else if (e.currentTarget.getElementsByTagName("input").btnLoad != undefined) {
                e.stopPropagation();
            }
            else {
                if ((e.metaKey || e.ctrlKey)) {
                    $(this).toggleClass('row_selected');
                } else {
                    $(this).toggleClass('row_selected');
                }
            }
            return false;
        });

        $("#divStageLotSerialelection").off("click", "input[type='button'][name='btnCancelPullPopup']");
        $("#divStageLotSerialelection").on("click", "input[type='button'][name='btnCancelPullPopup']", function () {
            $("#divStageLotSerialelection").empty();
            $('#divStageLotSerialelection').dialog('close');
        });

</script>

}
<script type="text/javascript">
    _Common.addRequiredSign();
</script>
