@{
    List<ItemLocationDetailsDTO> lstBins = (List<ItemLocationDetailsDTO>)ViewBag.Itembins;

    bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Materialstaging, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Materialstaging, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    bool isDelete = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.Materialstaging, eTurnsWeb.Helper.SessionHelper.PermissionType.Delete);
    string ConcatedId = Convert.ToString(ViewBag.ItemGUID) + "_" + Convert.ToString(ViewBag.StageBinId);
    bool IsMoveAccess = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.MoveMaterial);
    var version = eTurnsWeb.Helper.CommonUtility.GetReleaseNumber();

}
<script type="text/javascript" src="@Url.Content("~/Scripts/SiteScripts.js?v=" +version)"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/DynemicDataTable.js?v=" +version)" ></script>
@*<div class="innerGrid" style="background: none repeat scroll 0 0 #F8F8F8; padding: 10px 0 0 28px;
    border: 4px solid #2181D4;">*@
<div class="innerGrid" style="background: none repeat scroll 0 0 #F8F8F8; border: 4px solid #2181D4;">
    <table style="width: 100%;">
        @if (isUpdate == true || Convert.ToString(Session["IsInsert"]) == "True")
        {
            <tr>
                <td colspan="4">
                    <table style="width: 800px;">
                        <tr>
                            <td>
                                <strong>@eTurns.DTO.ResMaterialStagingDetail.InventoryLocation</strong>
                            </td>
                            <td>
                                <strong>@eTurns.DTO.ResMaterialStagingDetail.lblAvailableCOwnQuantity</strong>
                            </td>
                            <td>
                                <strong>@eTurns.DTO.ResMaterialStagingDetail.lblAvailableConsignQuantity</strong>
                            </td>
                            <td>
                                <strong>@eTurns.DTO.ResMaterialStagingDetail.lblAvailableQuantity</strong>
                            </td>
                            <td>
                                <strong>@eTurns.DTO.ResMaterialStagingDetail.lblPullQuantity</strong>
                            </td>
                            <td style="width: 105px;">
                                &nbsp;
                            </td>
                            @if (IsMoveAccess)
                            {
                                <td style="width: 105px;">
                                    &nbsp;
                                </td>
                            }
                        </tr>
                        <tr>
                            <td>
                                @if (lstBins != null && lstBins.Count == 1)
                                {
                                    @Html.DropDownList("BinId", new SelectList(lstBins, "BinID", "BinNumber", lstBins.First().BinID), new { @onchange = "BinChanged(this,'" + Convert.ToString(ViewBag.ItemGUID) + "','" + ConcatedId + "');", @id = "BinId_" + ConcatedId, @class = "selectBox" })
                                }
                                else
                                {
                                    @Html.DropDownList("BinId", new SelectList(lstBins, "BinID", "BinNumber"), new { @onchange = "BinChanged(this,'" + Convert.ToString(ViewBag.ItemGUID) + "','" + ConcatedId + "');", @id = "BinId_" + ConcatedId, @class = "selectBox" })
                                }
                            </td>
                            <td>
                                <span id="spncoAvailQty_@(ConcatedId)"></span>
                            </td>
                            <td>
                                <span id="spnconsAvailQty_@(ConcatedId)"></span>
                            </td>
                            <td>
                                <span id="spnAvailQty_@(ConcatedId)"></span>
                            </td>
                            <td>
                                @*                                <input type="text" id="txtpullQty_@(ConcatedId)" maxlength="6" class="text-boxinner text-boxPriceFormat"
                                    onkeydown="return chkNumeric(event,this);" value="" />*@
                                @if (ViewBag.SerialNumberTracking == true)
                                {
                                    @Html.TextBox("txtpullQty_", "", new { @id = "txtpullQty_" + ConcatedId.ToString(), @style = "width:50px;", @maxlength = "10", @class = "text-boxinner" })
                                }
                                else
                                {
                                    @Html.TextBox("txtpullQty_", "", new { @id = "txtpullQty_" + ConcatedId.ToString(), @style = "width:50px;", @maxlength = "10", @class = "text-boxinner" })
                                }
                                @if (lstBins != null && lstBins.Count > 0)
                                {
                                    <script type="text/javascript">
                                        GetAvailableQty('@lstBins.First().BinID', '@ViewBag.ItemGUID', '@ConcatedId');
                                        document.getElementById('txtpullQty_@(ConcatedId)').focus();
                                    </script>
                                }
                            </td>
                            <td>
                                <input type="button" id="btnSave" class="CreateBtn" style="float:none;" value="@ResCommon.Save" onclick="return SaveEntry(this,'@ConcatedId    ','@ViewBag.MsId    ','@ViewBag.ItemGUID    ','@ViewBag.StageBinId    ');" />
                                <input type="button" id="btnCancel" class="CreateBtn" style="float:none;" value="@ResCommon.Cancel" onclick="return CancelEntry(this,'@ConcatedId    ','@ViewBag.MsId    ','@ViewBag.ItemGUID    ','@ViewBag.StageBinId    ');" />
                                <input type="hidden" id="hdnMSDtlID_@(ConcatedId)" name="hdnMSDtlID" value="" />
                            </td>
                            @if (IsMoveAccess)
                            {
                                <td>
                                    <input type="button" id="btnMove" class="CreateBtn" style="float:none;" value="@ResMoveMaterial.GridButtonMove" onclick="return MoveMaterial(this,'@ConcatedId    ','@ViewBag.MsId    ','@ViewBag.ItemGUID    ','@ViewBag.StageBinId    ');" />
                                </td>
                            }
                        </tr>
                    </table>
                </td>
            </tr>
        }
        <tr>
            <td colspan="4" style="border: none !important;">
                <div style="height: 20px;">
                    &nbsp;
                </div>
            </td>
        </tr>
        <tr>
            <td class="BtnBlock" style="float: none; border: 1px solid #F8F8F8; height: 2px;"
                colspan="4">
                <div class="innerHeadSec">
                    <div class="MSGoToBlock" style="position: absolute; left: 400px; top: -11px; width: 350px;
                        z-index: 100;">
                        @if (isDelete)
                        {
                            <a href="javascript:void(null);" onclick="DeleteMSDetailsItems('@(ConcatedId)');"  id="btnDeleteRecords">
                                <img src="~/Content/images/delete.png" alt="delete" />
                            </a>
                        }
                        <input type="button" id="InnerGridGobtn" class="go" value="@eTurns.DTO.Resources.ResGridHeader.Go" />
                        <input type="text" id="InnerGridPageNumber" class="inputNum" />
                        <span class="label">@eTurns.DTO.Resources.ResGridHeader.GoToPage</span>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top: 14px; padding-bottom: 35px; border: 1px solid #F8F8F8;" colspan="4">
                <div class="userContentInnerGrid">
                    <table id="MaterialStagingdtl_@(ConcatedId)" class="display tbldatach">
                        <thead>
                            <tr>
                                @*  <th>
                                    @eTurns.DTO.ResMaterialStagingDetail.ID
                                </th>*@ @*<th>
                                    @eTurns.DTO.ResMaterialStaging.BinName
                                </th>*@
                                <th>
                                    @eTurns.DTO.ResMaterialStagingDetail.StagingBinName
                                </th>
                                <th>
                                    @eTurns.DTO.ResMaterialStagingDetail.Quantity
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </td>
        </tr>
    </table>
</div>
@*<div class="dialog" id="mdlConfirm@(ConcatedId)" style="display: none;">
    <div class="inner">
        <p class="text">
            @eTurns.DTO.Resources.ResMessage.DeleteConfirm</p>
        <a href="JavaScript:void(0)" id="btnModelYesInnerGrid~@(ConcatedId)" class="yes">
            <img src="~/Content/images/yes.png" alt="Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes</a><a href="javascript:void(0)" class="no"
                onclick="closeModal()">
                <img src="~/Content/images/no.png" alt="No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo</a>
    </div>
</div>*@
<script type="text/javascript">
    var ConcatedIds = '@ConcatedId';
    jQuery(function ($) {

        var ColumnObject = new Array();
        //ColumnObject.push({ mDataProp: null, sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val) { return "<input type='button' value='Edit' onclick='return EditRec(this);' id='btnEditItem~" + obj.aData.ID + "' class='CreateBtn' style='float: none;padding: 2px 6px;margin-left: 5px;' /><input type='button' value='Delete' onclick='return DeleteRec(this);' id='btnDeleteItem~" + obj.aData.ID + "' class='CreateBtn' style='float: none;padding: 2px 6px;margin-left: 5px;' />"; } });
        //ColumnObject.push({ mDataProp: "ID", sClass: "read_only" });
        //ColumnObject.push({ mDataProp: "BinName", sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val) { return "<a href='javascript:void(0);' onclick='EditRec(this,&quot;" + ConcatedIds + "&quot;);'>" + val + "</a> <input type='hidden' name='hdnStagingDetailGUID' value='" + obj.aData.GUID + "' />  "; } });
        //ColumnObject.push({ mDataProp: "StagingBinName", sClass: "read_only" });
        ColumnObject.push({
            mDataProp: "StagingBinName", sClass: "read_only", sDefaultContent: '', fnRender: function (obj, val)
            {
                var stagingBinName = obj.aData.StagingBinName;
                if (val == '[|EmptyStagingBin|]') {
                    stagingBinName = "";
                }
                return "<span>" + stagingBinName + "</span> <input type='hidden' name='hdnStagingDetailGUID' value='" + obj.aData.GUID + "' />  ";
                //return "<a href='javascript:void(0);' onclick='EditRec(this,&quot;" + ConcatedIds + "&quot;);'>" + stagingBinName + "</a> <input type='hidden' name='hdnStagingDetailGUID' value='" + obj.aData.GUID + "' />  ";
            }
        });
        //ColumnObject.push({ mDataProp: "Quantity", sClass: "read_only" });
        ColumnObject.push({ mDataProp: "Quantity", "sClass": "read_only", "fnRender": function (obj, val) { return "<span id='spnQty'>" + FormatedCostQtyValues(val, 2) + "</span> "; } });

        var paramsMS = [];
        paramsMS.push({ "name": "ItemGUID", "value": '@ViewBag.ItemGUID' });
        paramsMS.push({ "name": "MSGUID", "value": '@ViewBag.MsId' });
        paramsMS.push({ "name": "MSLIBinID", "value": '@ViewBag.StageBinId' });
        var scrollx = "";
        if ('@ViewBag.StageBinId' == "0") {
            scrollx = "9.5%";
        }
        else {
            scrollx = "100%";
        }
        PrepareMyDynatable("MaterialStagingdtl_@ConcatedId", '@Url.Content("~/Inventory/MSItemDetailsAJAX")', 'MSDetailsLocationwise', ColumnObject, paramsMS, scrollx);
        $('#MaterialStagingdtl_@(ConcatedId)' + '_wrapper .ColVis').css({ 'left': '780px' });

        $(".text-boxPriceFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdCostcentsLimit').val(), 10)
        });
        $(".text-boxQuantityFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdQuantitycentsLimit').val(), 10)
        });
        $(".text-boxQuantityFormatSR").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: 0
        });
    });




    //    function DeleteRec(curobj) {
    //        var curdtls = $(curobj).attr("id").split("~");
    //        $.ajax({
    //            type: "POST",
    //            url: '@Url.Action("DeleteMSDtlItem", "Inventory")',
    //            contentType: 'application/json',
    //            dataType: 'json',
    //            data: "{ids:'" + curdtls[1] + "' }",
    //            success: function (retdt) {
    //                $("#MaterialStagingdtl_@ConcatedId").DataTable().fnDraw();
    //            },
    //            error: function (err) {
    //                alert("There is some Error");
    //            }
    //        });

    //    }



    //        $("a[id^='btnModelYesInnerGrid']").click(function () {
    //            var ItmId = $(this).attr("id").split('~')[1];
    //            var datatbl = $("#MaterialStagingdtl_" + ItmId).DataTable();
    //            var GetSelected = datatbl.$('tr.row_selected');
    //            var oTableDynemicDeleteURL = '@Url.Action("DeleteMSDtlItem", "Inventory")';
    //            var stringIDs = "";
    //            for (var i = 0; i <= GetSelected.length - 1; i++) {
    //                stringIDs = stringIDs + GetSelected[i].id + ",";
    //            }
    //            if (GetSelected.length !== 0) {

    //                $.ajax({ 'url': oTableDynemicDeleteURL,
    //                    data: { ids: stringIDs },
    //                    success: function (response) {
    //                        if (response == "ok") {
    //                            for (var i = 0; i <= GetSelected.length - 1; i++) {
    //                                datatbl.fnDeleteRow(GetSelected[i]);
    //                            }

    //                            //                        if (datatbl.fnGetData().length < 1) {
    //                            //                            var dararowsprnt = $("#" + MSLIObjectTable).dataTable();
    //                            //                            $("#" + MSLIObjectTable).dataTable().fnDeleteRow(dararowsprnt);
    //                            //                        }
    //                            if (GetSelected.length > 0) {
    //                                $("#spanGlobalMessage").text("Record(" + GetSelected.length + ") deleted successfully.");
    //                            }

    //                            $('div#target').fadeToggle();
    //                            $("div#target").delay(2000).fadeOut(200);
    //                            $.modal.impl.close();
    //                        }
    //                    },
    //                    error: function (response) {

    //                        // through errror message
    //                    }
    //                });

    //            }
    //        });    
</script>
<style>
    #ItemModeDataTable .MSGoToBlock
    {
        z-index: 10003 !important;
    }
</style>
