@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplayDeleteButton = false, DataTableName = "HistoryTable", ColumnSetupFor = "WorkOrderChangeLog" };
    bool isCost = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.HideCostMarkUpSellPrice);
}
<script language="javascript" type="text/javascript">
    var oHistoryTable;
    var HostoryId;
    AllowDeletePopup = false; 
    var historyDTName = 'HistoryTable';

    $(document).ready(function () {
        oHistoryTable = $('#HistoryTable').dataTable({
            "bJQueryUI": true,
            "bScrollCollapse": true,
            "bAutoWidth": true,                        
            "sDom": 'R<"top"lp<"clear">>rt<"bottom"i<"clear">>T',
            "oColVis": {},
            "sScrollX": "100%",
            "aaSorting": [[1, "asc"]],
            "oColReorder": {},
            "bSort": false,
            "sPaginationType": "full_numbers",
            "sAjaxSource": '@Url.Content("~/Master/GetHistoryDataGUID")',
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                aoData.push({ "name": "PageType", "value": "WOMasterList" });
                aoData.push({ "name": "PageID", "value": SelectedHistoryRecordID });
                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    "data": aoData,
                    "headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback,
                    "complete": function () {
                            CallShowHideData();                            
                        }
                })
            },"oLanguage": {
                "sLengthMenu": MsgShowRecordsGridBtn,
                "sEmptyTable": MsgNoDataAvailableInTable,
                "sInfo": MsgShowingNoOfEntries,
                "sInfoEmpty": MsgShowingZeroEntries,
                "sZeroRecords": MsgNoDataAvailableInTable
            },
            "fnInitComplete": function () {                     
                     compareHistoryRows(this);
            },
            "aoColumns": [  
                            //{ "mDataProp": "HistoryID", "sClass": "read_only" },                          
                            //{ "mDataProp": "ID", "sClass": "read_only" },
                            { "mDataProp": "Action", "sClass": "read_only" },                          
                            {
			                    "mDataProp": "WOName",
			                    "sClass": "read_only",
			                    "sDefaultContent": '',			                    
			                    "fnRender": function (obj, val) {
                                    return "<a onclick='return openModel(" + obj.aData.HistoryID + ")' href='JavaScript:void(0);'>" + obj.aData.WOName+ "</a>";
			                    }
                            },
                            { "mDataProp": "ReleaseNumber", "sClass": "read_only" },
                            { "mDataProp": "WhatWhereAction", "sClass": "read_only" },
                            {
                                "mDataProp": "WOStatus", "sClass": "read_only",
                                "fnRender": function (obj, val) {
                                    if (obj.aData.WOStatus == "Open") {
                                        return "@ResWorkOrder.Open"
                                    } else {
                                        return "@ResWorkOrder.Closed"
                                    }
                                }
                            },
                            { "mDataProp": "Technician", "sClass": "read_only" },
                            { "mDataProp": "Customer", "sClass": "read_only" },
                            { "mDataProp": "AssetName", "sClass": "read_only" },
                            { "mDataProp": "ToolName", "sClass": "read_only" },
                            { "mDataProp": "UsedItems", "sClass": "read_only" },
                            { "mDataProp": "UsedItemsCost", "sClass": "read_only isCost" },
                            { "mDataProp": "Description", "sClass": "read_only" },
			                { "mDataProp": "RoomName", "sClass": "read_only" },		
                            { "mDataProp": "Created", "sClass": "read_only", "fnRender": function (obj, val) { return obj.aData.CreatedDate; } },
                            { "mDataProp": "Updated", "sClass": "read_only", "fnRender": function (obj, val) { return obj.aData.UpdatedDate; } },
//                            { "mDataProp": "CreatedDate", "sClass": "read_only" },
//                            { "mDataProp": "UpdatedDate", "sClass": "read_only" },	     
                            { "mDataProp": "CreatedByName", "sClass": "read_only" } ,
                            { "mDataProp": "UpdatedByName", "sClass": "read_only" },
                            { "mDataProp": "AddedFrom", "sClass": "read_only" },
                            { "mDataProp": "EditedFrom", "sClass": "read_only" },
                            { "mDataProp": "ReceivedOnWeb", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                        //return GetDateInFullFormat(val);
			                        return obj.aData.ReceivedOnWebDate;

			                    }
			                },
			                { "mDataProp": "ReceivedOn", "sClass": "read_only",
			                    "fnRender": function (obj, val) {
			                        // return GetDateInFullFormat(val);
			                        return obj.aData.ReceivedOnDate;
			                    }
			                }
                            @Html.RenderColumnsArray("WorkOrder")

		    ]
         }).makeEditable({
            });
        //HIDE PRINT CONTAINER
        $('.DTTT_container').css('z-index', '-1');

        $("#HistoryText").keyup(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
            }
            else {
                fnFilterWOMasterHistory();
            }
        });

        //Keydown event is required to handle ENTER KEY to work in IE
        $("#HistoryText").keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                fnFilterWOMasterHistory();
            }
        });

        $("#HistoryClear").click(function () {
            $("#HistoryText").val('');
            fnFilterWOMasterHistory();
            $("#HistoryText").focus();
            return false;
        });

        var timeoutscheduler;
        $(document).on('propertychange input', "#HistoryText", function () {
            clearTimeout(timeoutscheduler);
            timeoutscheduler = setTimeout(function () {
                if (SearchPattern == 2 || SearchPattern == "2") {
                    fnFilterWOMasterHistory();
                }
                else {
                    $('#HistoryText').unbind("keypress");
                    $('#HistoryText').keypress(function (event) {
                        var keycode = (event.keyCode ? event.keyCode : event.which);
                        if (keycode == 13) {
                            fnFilterWOMasterHistory();
                        }
                    });
                    if ($("#HistoryText").val().length == 0) {
                        setTimeout(function () { fnFilterWOMasterHistory(); }, 200);
                    }
                }
            }, 500);
        });

        if ('@isCost' == '@Boolean.FalseString') {
            HideColumnUsingClassName("HistoryTable");
            ColumnsToHideinPopUp.push(10);
            oHistoryTable.fnSetColumnVis(10, false);
        }

    });

    function fnFilterWOMasterHistory() {
        //set filter only if more than 2 characters are pressed
        if (typeof $("#HistoryText") != 'undefined' && ($("#HistoryText").val().length > 2 || $("#HistoryText").val().length == 0)) {
            //if (typeof $("#HistoryText") != 'undefined') {
            var searchtext = $("#HistoryText").val().replace(/'/g, "''");

            $('#' + historyDTName + ' td').removeHighlight();

            $('#' + historyDTName).dataTable().fnFilter(
                searchtext,
                null,
                null,
                null
            );

            if (searchtext.length > 0)
                $('#' + historyDTName + ' td').highlight($("#HistoryText").val());
        }
    }
</script>
<div class="searchWrapper">
    <div class="searchBlock">
        <span class="label">@eTurns.DTO.Resources.ResCommon.Search </span>
        <div class="searchinputB">
            <input type="text" class="searchinput" id="HistoryText" />
            <a href="javascript:void(0);" class="xclose">
                <img src="~/Content/images/x.png" alt="X" id="HistoryClear" /></a>
        </div>
    </div>
</div>
@Html.GridTopHeaderForHistory(settings)
<div id="divHistoryData" style="margin: 0 0.4% 1%; width: 99%;" class="userContent">
    <table id="HistoryTable" class="display">
        <thead>
            <tr>
                @*<th>@eTurns.DTO.Resources.ResCommon.HistoryID
                            </th>
                            <th>@eTurns.DTO.Resources.ResCommon.ID
                            </th>*@
                <th>@eTurns.DTO.Resources.ResCommon.HistoryAction
                </th>
                <th>@eTurns.DTO.ResWorkOrder.WOName
                </th>
                <th>
                    @eTurns.DTO.ResWorkOrder.ReleaseNumber
                </th>
                <th>
                    @eTurns.DTO.ResMaterialStaging.FromWhere
                </th>
                <th>@eTurns.DTO.ResWorkOrder.WOStatus
                </th>
                <th>@eTurns.DTO.ResTechnician.Technician
                </th>
                <th>@eTurns.DTO.ResCustomer.Customer
                </th>
                <th>@eTurns.DTO.ResAssetMaster.AssetName
                </th>
                <th>@eTurns.DTO.ResToolMaster.ToolName
                </th>
                <th>@eTurns.DTO.ResWorkOrder.UsedItems
                </th>
                <th>@eTurns.DTO.ResWorkOrder.UsedItemsCost
                </th>
                <th>
                    @eTurns.DTO.ResWorkOrder.Description
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.RoomName
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.CreatedOn
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.UpdatedOn
                </th>
                <th>@eTurns.DTO.ResRequisitionMaster.Created
                </th>
                <th>@eTurns.DTO.ResRequisitionMaster.Updated
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.AddedFrom
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.EditedFrom
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.ReceivedOnDate
                </th>
                <th>
                    @eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate
                </th>
                @Html.RenderColumnsHeader("WorkOrder", typeof(eTurns.DTO.ResWorkOrder))
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
<div id="divWOLineItemHistory">
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#divWOLineItemHistory").dialog({
            autoOpen: false,
            modal: true,
            draggable: true,
            resizable: true,
            width: '95%',
            height: 720,
            title: 'Work Order List History',
            open: function () {
                $('#DivLoading').show();
                $("#divWOLineItemHistory").empty();
                $.get('WorkOrderHistoryView', { ID: $(this).data("cid") }, function (data) {
                    $("#divWOLineItemHistory").html(data);
                });
            },
            close: function () {
                $("#divWOLineItemHistory").empty();
            }
        });


    });

    function openModel(id) {
        HostoryId = id;
        $('#divWOLineItemHistory').data("cid", id).dialog('open')
        return false;
    }
</script>
