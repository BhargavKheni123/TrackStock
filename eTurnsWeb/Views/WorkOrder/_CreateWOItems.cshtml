@model IEnumerable<eTurns.DTO.PullMasterViewDTO>
@{
    GridHeaderSettings settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplaySaveButton = false, DisplayUDFButton = false, UDFSetupFor = "", DisplaySettings = true, DisplayColumnSetupButton = false, DisplayContextMenu = false, DisplayPrintBlock = false, DisplayDeleteButton = true, DataTableName = "WOItemsTable" + ViewBag.WorkOrderGUID };
    bool isCost = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.HideCostMarkUpSellPrice);
    bool IsUpdate;
    bool isInsert;
    bool isPullInsert;
    bool IsPullUpdate;
    Guid mntsGUID = Guid.Empty;
    ToolsMaintenanceDTO objToolsMaintenanceDTO = new ToolsMaintenanceDTO();
    //if (Guid.TryParse(Convert.ToString(ViewBag.mntsGUID), out mntsGUID))
    //{
    //    objToolsMaintenanceDTO = new eTurns.DAL.ToolsMaintenanceDAL(eTurnsWeb.Helper.SessionHelper.EnterPriseDBName).GetRecord(mntsGUID, eTurnsWeb.Helper.SessionHelper.RoomID, eTurnsWeb.Helper.SessionHelper.CompanyID, false, false);
    //}
    Guid.TryParse(Convert.ToString(ViewBag.mntsGUID), out mntsGUID);
    WorkOrderDTO WOHEader = ViewBag.WorkOrderDTO;
    if (ViewBag.ViewOnly == true)
    {
        IsUpdate = false;
        isInsert = false;
        isPullInsert = false;
        IsPullUpdate = false;
    }
    else
    {
        IsUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.WorkOrders, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
        isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.WorkOrders, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);

        isPullInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.PullMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
        IsPullUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.PullMaster, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
    }
}
<div class="userListingWrapper">
    <input type="hidden" id="hdnListName" value="WorkOrderDetails" />
    <div class="userListBlock">
        <div id="tab7" class="tabContener" style="width: 99.5%; height: 800px;">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search</span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="InnerItem_filter" />
                        <a href="javascript:void(0);" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_QLItem_filter" />
                        </a>
                    </div>
                </div>
                <input type="button" id="btnDiv" value="Div" style="visibility: hidden" />
            </div>
            @Html.QuickListItemsGridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.WorkOrders)
            <div class="userContentInnerGrid" style="width: 99% !important; margin-left: 5px !important;
                float: left;">
                <table id="WOItemsTable@(ViewBag.WorkOrderGUID)" class="display">
                    <thead>
                        <tr>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.RowNo
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Action
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.PullCredit
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.PulledQuantity
                            </th>
                            
                            <th>
                                @eTurns.DTO.ResPullMaster.PullOrderNumber
                            </th>

                            <th>
                                @eTurns.DTO.ResPullMaster.PulledCost
                            </th>

                            <th>
                                @eTurns.DTO.ResLocation.Location
                            </th>
                            <th>
                                @eTurns.DTO.ResProjectMaster.ProjectSpendName
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ID
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ItemNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResToolMaster.ToolName
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.Created
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.Updated
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.RoomName
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.UpdatedBy
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.CreatedBy
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ItemType
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Description
                            </th>
                            <th>
                                @eTurns.DTO.ResCategoryMaster.Category
                            </th>
                            <th>
                                @eTurns.DTO.ResUnitMaster.Unit
                            </th>

                            <th>
                                @eTurns.DTO.ResItemMaster.Cost
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Markup
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.SellPrice
                            </th>
                            <th>
                                Item @eTurns.DTO.ResItemMaster.ExtendedCost
                            </th>

                            <th>
                                @eTurns.DTO.ResItemMaster.DefaultPullQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ManufacturerNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ManufacturerName
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.SupplierPartNo
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Supplier
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.LongDescription
                            </th>
                            <th>
                                @eTurns.DTO.ResGLAccount.GLAccount
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Taxable
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.InTransitquantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OnOrderQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OnTransferQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.AverageUsage
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Turns
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.OnHandQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.CriticalQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.MinimumQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.MaximumQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.CostUOMName
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.AddedFrom
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.EditedFrom
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ReceivedOnDate
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate
                            </th>
                            <th>
                                Is edi Sent
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.PullItemCost
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.PullItemSellPrice
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.PullMarkup
                            </th>
                            <th>
                                @eTurns.DTO.ResPullMaster.ItemCostOnPullDate
                            </th>
                            @Html.RenderColumnsHeader("ItemMaster", typeof(eTurns.DTO.ResItemMaster), "Item")
                            @Html.RenderColumnsHeader("PullMaster", typeof(eTurns.DTO.ResPullMaster))
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            string edisent = string.Empty;
                            int trid = 0;
                            foreach (var item in Model)
                            {
                                edisent = (item.IsEDISent ?? false) ? "yes" : "no";

                                <tr>
                                    <td></td>
                                    <td>
                                        <img src="~/Content/images/drildown_open.jpg" name="pullDrillDown" alt="Show/Hide Pull" />
                                        <input type="hidden" id="hdnID" value='@item.GUID' />
                                        <input type="hidden" id="hdnPullID" value='@item.ID' />
                                        <input type="hidden" id="hdnReqDetailGUID" value='@item.RequisitionDetailGUID' />
                                        <input type="hidden" id="hdnWorkOrderGUID" value='@item.WorkOrderDetailGUID' />
                                        <input type="hidden" id="hdnToolGuid" value='@item.ToolGUID' />
                                    </td>
                                    <td>
                                        @item.ActionType
                                    </td>
                                    <td class="numericalign">
                                        <label id="qtyTempPoolQuantity_@trid">@item.PoolQuantity</label>
                                    </td>
                                    <td>
                                        @item.PullOrderNumber
                                    </td>
                                    <td class="numericalign">
                                        <label id="CostTempCost_@trid">@item.PullCost.GetValueOrDefault(0)</label>
                                    </td>

                                    <td>
                                        @item.BinNumber
                                    </td>
                                    <td>
                                        @item.ProjectName
                                    </td>
                                    <td>
                                        @item.ID
                                    </td>
                                    <td>
                                        @item.ItemNumber
                                    </td>
                                    <td>
                                        @item.ToolName
                                    </td>
                                    <td>
                                        @item.CreatedDate
                                    </td>
                                    <td>
                                        @item.UpdatedDate
                                    </td>
                                    <td>
                                        @item.RoomName
                                    </td>
                                    <td>
                                        @item.UpdatedByName
                                    </td>
                                    <td>
                                        @item.CreatedByName
                                    </td>
                                    <td>
                                        @if (item.ItemType == 1)
                                        {
                                            <text>Item</text>
                                        }
                                        else if (item.ItemType == 2)
                                        {
                                            <text>Kit</text>
                                        }
                                        else if (item.ItemType == 3)
                                        {
                                            <text>Quick List</text>
                                        }
                                        else if (item.ItemType == 4)
                                        {
                                            <text>Labor</text>
                                        }
                                    </td>
                                    <td>
                                        @item.Description
                                    </td>
                                    <td>
                                        @item.CategoryName
                                    </td>
                                    <td>
                                        @item.Unit
                                    </td>

                                    <td class="numericalign">
                                        <label id="CostTempPullCost_@trid">@item.ItemCost</label>
                                    </td>
                                    <td class="numericalign">
                                        @item.Markup
                                    </td>
                                    <td class="numericalign">
                                        <label id="CostTempSellPrice_@trid">@item.SellPrice</label>
                                    </td>
                                    <td class="numericalign">
                                        <label id="CostExtended_@trid">@item.ExtendedCost</label>
                                    </td>

                                    <td class="numericalign">
                                        @item.DefaultPullQuantity
                                    </td>
                                    <td>
                                        @item.ManufacturerNumber
                                    </td>
                                    <td>
                                        @item.Manufacturer
                                    </td>
                                    <td>
                                        @item.SupplierPartNo
                                    </td>
                                    <td>
                                        @item.SupplierName
                                    </td>
                                    <td>
                                        @item.LongDescription
                                    </td>
                                    <td>
                                        @item.GLAccount
                                    </td>
                                    <td>
                                        @item.Taxable
                                    </td>
                                    <td class="numericalign">
                                        @item.InTransitquantity
                                    </td>
                                    <td class="numericalign">
                                        @item.OnOrderQuantity
                                    </td>
                                    <td class="numericalign">
                                        @item.OnTransferQuantity
                                    </td>
                                    <td class="numericalign">
                                        @item.AverageUsage
                                    </td>
                                    <td class="numericalign">
                                        @item.Turns
                                    </td>
                                    <td class="numericalign">
                                        @item.OnHandQuantity
                                    </td>
                                    <td class="numericalign">
                                        @item.CriticalQuantity
                                    </td>
                                    <td class="numericalign">
                                        @item.MinimumQuantity
                                    </td>
                                    <td class="numericalign">
                                        @item.MaximumQuantity
                                    </td>
                                    <td class="numericalign">
                                        @item.CostUOMName
                                    </td>
                                    <td>
                                        @item.AddedFrom
                                    </td>
                                    <td>
                                        @item.EditedFrom
                                    </td>
                                    <td>
                                        @item.ReceivedOnWebDate
                                    </td>
                                    <td>
                                        @item.ReceivedOnDate
                                    </td>
                                    <td>
                                        @edisent
                                    </td>
                                    <td>
                                        @item.PullItemCost
                                    </td>
                                    <td>
                                        @item.PullItemSellPrice
                                    </td>
                                    <td>
                                        @item.PullMarkup
                                    </td>
                                    <td>
                                        @item.ItemCostOnPullDate
                                    </td>
                                    @(Html.RenderColumnsArrayForDOM("ItemMaster", item, "Item"))
                                    @(Html.RenderColumnsArrayForDOM("PullMaster", item))
                                </tr>
                                trid += 1;
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="dialog" id="mdlQLYesNo" style="display: none;">
    <div class="inner">
        <p class="text">
            @eTurns.DTO.Resources.ResMessage.DeleteConfirm
        </p>
        <a href="JavaScript:void{}" id="btnQLModelYesSP" class="yes">
            <img src="~/Content/images/yes.png" alt="@eTurns.DTO.Resources.ResCommon.Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="javascript:void(0)" class="no" onclick="QLcloseModal()">
            <img src="~/Content/images/no.png" alt="@eTurns.DTO.Resources.ResCommon.No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div>
<div class="dialog" id="project-spend-limit-basic-modal-content" style="display: none;">
    <div class="inner">
        <p class="text" id="PSPlimit">
        </p>
        <a href="JavaScript:void{}" id="btnModelYesPSLimit" class="yes">
            <img src="~/Content/images/yes.png" alt="@eTurns.DTO.Resources.ResCommon.Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes
        </a><a href="#" class="no" onclick="closeModalPSLimit()">
            <img src="~/Content/images/no.png" alt="@eTurns.DTO.Resources.ResCommon.No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo
        </a>
    </div>
</div>
<script type="text/javascript">
    var oTableProjectItems;
    //var deleteURL1 = "/WorkOrder/WOItemsDelete";
    var deleteURL1 = "/Pull/DeletePullMasterRecords";
    var NotAllowedCharCodes = [9, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40];
    var DTName = 'WOItemsTable' + '@ViewBag.WorkOrderGUID';
    var bIsFilter = false;
    var anOpen = [];
    var sImageUrl1 = "/Content/images/";
    var objWODetailGridColumns = {};
    function closeModalPSLimit() {
        $.modal.impl.close();
    }

    function AddSingleItemToPullList(obj) {

        var txtQuantityPulled = $(obj).parent().parent().find('#txtQuantityPulled').val() == '' ? 0 : $(obj).parent().parent().find('#txtQuantityPulled').val();
        var txtAvalQuantity = $(obj).parent().parent().find('#hdnQuantity').val() == '' ? 0 : $(obj).parent().parent().find('#hdnQuantity').val();
        var txxt = $(obj).parent().parent().find('#txtQty').val() == '' ? 0 : $(obj).parent().parent().find('#txtQty').val();
        var vBinID; // = $(obj).parent().parent().find("#item_BinID").val();
        var vProjectGUID;
        var ProjectSpendName;
        var txtQty = parseFloat(txxt, 10);
        txtQuantityPulled = parseFloat(txtQuantityPulled, 10);
        txtAvalQuantity = parseFloat(txtAvalQuantity, 10);
        var vItemType = $(obj).parent().parent().find('#hdnItemType').val();

        if (vItemType != '4') {
            if ((txtQty + txtQuantityPulled) > txtAvalQuantity) {
                //alert('@ResPullMaster.MsgMaxAvailableQuantity'.replace("{0}",txtAvalQuantity));
                $("#spanGlobalMessage").html('@ResPullMaster.MsgMaxAvailableQuantity'.replace("{0}",txtAvalQuantity));
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                return false;
            }
            if (txtQty <= 0) {
                //alert('Invalid Pull value.');
                $("#spanGlobalMessage").html('@ResPullMaster.MsgInvalidPullValue');
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                return false;
            }
            vBinID = $(obj).parent().parent().find('#item_BinID')[0].value == '' ? 0 : $(obj).parent().parent().find('#item_BinID')[0].value;
            vProjectGUID = $(obj).parent().parent().find("#ProjectSpendGUID").val() == "" ? "" : $(obj).parent().parent().find("#ProjectSpendGUID").val();
            ProjectSpendName = $(obj).parent().parent().find("#ProjectSpendGUID").val() == "" ? "" : $(obj).parent().parent().find("#ProjectSpendGUID option:selected").text();
            if (txtQty == 'undefined' && txtQty.length == 0) {
                //alert('@ResPullMaster.MsgQtyToPullMandatory');
                $("#spanGlobalMessage").html('@ResPullMaster.MsgQtyToPullMandatory');
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                return false;
            }
            if (vBinID == 0) {
                //alert('Inventory Location are Mandatory.');
                $("#spanGlobalMessage").html('@ResPullMaster.InventoryLocationMandatory');
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                return false;
            }
        }
        else {
            if (txtQty == 'undefined' || txtQty == '') {
                //alert('Labour Item Required Hours to Pull.');
                $("#spanGlobalMessage").html('@ResPullMaster.MsgLabourItemRequiredHours');
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                return false;
            }
            if (parseFloat(txtQty) <= 0) {
                //alert('Labour Item Required Hours to Pull.');
                $("#spanGlobalMessage").html('@ResPullMaster.MsgLabourItemRequiredHours');
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                return false;
            }
            if (parseFloat(txtQty) == NaN) {
                $("#spanGlobalMessage").html('@ResPullMaster.MsgLabourItemRequiredHours');
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                return false;
            }

            vBinID = 0;
            vProjectID = '';
        }

        //if (txtQty != 'undefined' && txtQty > 0 && vBinID > 0) {
        var trimtxtVal = txtQty.toString().replace(/ /g, '');
        trimtxtVal = parseFloat(trimtxtVal, 10);
        if (trimtxtVal > 0) {

            //var vItemID = $(obj).parent().parent().find('#hdnItemID').val();
            var vItemGUID = $(obj).parent().parent().find('#hdnItemGUID').val();
            //var vProjectGUID = $(obj).parent().parent().find("#ProjectSpendGUID").val() == "" ? "" : $(obj).parent().parent().find("#ProjectSpendGUID").val();
            var hdnID = $(obj).parent().parent().find('#hdnID').val();
            var hdnWorkOrderID = $(obj).parent().parent().find('#hdnWorkOrderID').val();
            var vspnOn_HandQuantity = 0;
            var vPullCreditText = 'pull';

            $('#DivLoading').show();

            $.ajax({
                "url": '@Url.Content("~/Pull/UpdatePullData")',
                data: { ID: 0, ItemGUID: vItemGUID, ProjectGUID: vProjectGUID, PullCreditQuantity: txtQty, BinID: vBinID, PullCredit: vPullCreditText, TempPullQTY: txtQty, UDF1: '', UDF2: '', UDF3: '', UDF4: '', UDF5: '', RequisitionDetailGUID: "", WorkOrderDetailGUID: hdnID, ProjectSpendName: ProjectSpendName },
                "async": false,
                cache: false,
                "dataType": "json",
                success: function (response) {
                    $('#DivLoading').hide();
                    if (response.Status == "ok") {
                        if (response.LocationMSG != "") {
                            if (response.PSLimitExceed) {
                                // write code to redirect to requisition with confirm box
                                $("#PSPlimit").text(response.LocationMSG + " " + "do you want to create new requisition for the same ?");
                                $('#project-spend-limit-basic-modal-content').modal();
                            }
                            else {
                                //alert(response.LocationMSG);
                                $("#spanGlobalMessage").html(response.LocationMSG);
                                $('div#target').fadeToggle();
                                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            }
                        }
                        else {
                            $('div#target').fadeToggle();
                            $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                            $("#spanGlobalMessage").html(response.Message);
                            $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
                            ShowEditTabGUID("WOEdit?WorkOrderGUID=" + hdnWorkOrderID, "frmWOMaster");
                        }
                    }
                    else {
                        $("#spanGlobalMessage").html(response.Message);
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
                    }
                    //txxt.val('');
                },
                error: function (response) {
                    $('#DivLoading').hide();
                    $("#spanGlobalMessage").html(response.message);
                    $('div#target').fadeToggle();
                    $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                }
            });
        }
        //}
        //        else {
        //            //alert('Qty to Pull and Inventory Location are Mandatory.');
        //            $("#spanGlobalMessage").html('Qty to Pull and Inventory Location are Mandatory.');
        //            $('div#target').fadeToggle();
        //            $("div#target").delay(2000).fadeOut(200);
        //        }

    }
    function CallThisFunctionFromModel(msg) {
        if (msg == 'success') {
            $('#DivLoading').show();
            $('#WOLineItems').empty();
            $('#WOLineItems').load('@Url.Action("LoadWOItems", new { WorkOrderGUID = ViewBag.WorkOrderGUID })', function () {
                $('#DivLoading').hide();
            });
        }
    }

    function ReDirectData() {
        if ('@mntsGUID' == '@Guid.Empty') {
            ShowEditTabGUID("WOEdit?WorkOrderGUID=" + '@ViewBag.WorkOrderGUID', "frmWOMaster");
        }
        else {
            EditMaintenance('@mntsGUID', '@WOHEader.GUID');
        }

    }
    $(document).ready(function () {
        var tableName = $('table[id^=WOItemsTable]').attr("id");
        //objColumns = GetGridHeaderColumnsObject(tableName);
        var rowno = 0;
        $('form').areYouSure({ 'message': 'You have unsaved changes.  Do you want to leave this page and lose your changes?' });
        $('#' + tableName + ' tr').each(function () {

            var qtyTempPoolQuantity = $('#qtyTempPoolQuantity_' + rowno).text();
            if (qtyTempPoolQuantity != "")
                $('#qtyTempPoolQuantity_' + rowno).text(FormatedCostQtyValues(parseFloat(qtyTempPoolQuantity), 2));

            var tempCostValue = $('#CostTempCost_' + rowno).text();
            if (tempCostValue != "")
                $('#CostTempCost_' + rowno).text(FormatedCostQtyValues(parseFloat(tempCostValue), 1));

            var tempPullCostVal = $('#CostTempPullCost_' + rowno).text();

            if (tempPullCostVal != "")
                $('#CostTempPullCost_' + rowno).text(FormatedCostQtyValues(parseFloat(tempPullCostVal), 1));
            var tempPullSellPrice = $('#CostTempSellPrice_' + rowno).text();

            if (tempPullSellPrice != "")
                $('#CostTempSellPrice_' + rowno).text(FormatedCostQtyValues(parseFloat(tempPullSellPrice), 1));
            rowno += 1;
        });
        var DTName = 'WOItemsTable' + '@ViewBag.WorkOrderGUID';
        $(".text-boxPriceFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdCostcentsLimit').val(), 10)
        });
        $(".text-boxQuantityFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdQuantitycentsLimit').val(), 10)
        });
        $(".myDatePicker").datepicker({ dateFormat: 'm/d/yy' });
        $("#saveRows").click(function () {
            SaveAllClick();
        });
        var gaiSelected = [];
        objWODetailGridColumns = GetGridChildGridColumnsObject(DTName);
        oTableProjectItems = $('#' + DTName).dataTable({
            "bJQueryUI": true,
            "bRetrieve": true,
            "bDestroy": true,
            "bScrollCollapse": true,
            "sScrollX": "900px",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>',
            //"aaSorting": [],
            "aaSorting": [[1, "desc"]],
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                $("td.RowNo:first", nRow).html(this.fnSettings()._iDisplayStart + iDisplayIndex + 1);
                return nRow;
            },
            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";
                // if (!bIsFilter) {
                $.ajax({
                    "url": '@Url.Content("~/Master/SaveGridState")',
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: 'WorkOrderDetails' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        o = json;
                    }
                });
                //  }
                bIsFilter = false;
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'WorkOrderDetails' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            },
            "fnInitComplete": function () {
                $('.ColVis').detach().appendTo(".setting-arrow");

            },
            "aoColumns": [
                        {
                            "mDataProp": null,
                            "bSortable": false, sClass: "read_only center NotHide RowNo", sDefaultContent: ''
                        },
                        {
                            "mDataProp": null,
                            "bSortable": false, "sClass": "read_only"
                        },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only isCost"
                       },
                        {
                            "mDataProp": null,
                            "bSortable": true, "sClass": "read_only"
                        },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only isCost"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only isCost"
                       },
                        {
                            "mDataProp": null,
                            "bSortable": true, "sClass": "read_only isCost"
                        },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only isCost"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       },
                       {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       }, {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       }, {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only"
                       }
                       , {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only isCost"
                       }
                       , {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only isCost"
                       }
                       , {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only isCost"
                       }
                       , {
                           "mDataProp": null,
                           "bSortable": true, "sClass": "read_only isCost"
                       }
                        @Html.RenderColumnsArray("ItemMaster", true, "Item")
                        @Html.RenderColumnsArray("PullMaster", true, "Pull")
            ]
        });
        $('.DTTT_container').css('z-index', '-1');


        if ('@isCost' == '@Boolean.FalseString') {
            HideColumnUsingClassName(DTName);

            ColumnsToHideinPopUp.push(5);
            ColumnsToHideinPopUp.push(20);
            ColumnsToHideinPopUp.push(21);
            ColumnsToHideinPopUp.push(22);
            ColumnsToHideinPopUp.push(23);
            ColumnsToHideinPopUp.push(47);
            ColumnsToHideinPopUp.push(48);
            ColumnsToHideinPopUp.push(49);
            ColumnsToHideinPopUp.push(50);

            oTableProjectItems.fnSetColumnVis(5, false);
            oTableProjectItems.fnSetColumnVis(20, false);
            oTableProjectItems.fnSetColumnVis(21, false);
            oTableProjectItems.fnSetColumnVis(22, false);
            oTableProjectItems.fnSetColumnVis(23, false);
            oTableProjectItems.fnSetColumnVis(47, false);
            oTableProjectItems.fnSetColumnVis(48, false);
            oTableProjectItems.fnSetColumnVis(49, false);
            oTableProjectItems.fnSetColumnVis(50, false);
        }

        $("#project-spend-limit-basic-modal-content").on("click", "#btnModelYesPSLimit", function () {

            if ('@mntsGUID' == '@Guid.Empty') {
                var url = '@Url.Action("RequisitionList", "Consume")';
                url = url + '?fromPull=' + 'yes'
                window.location.href = url;
            }
            else if ('@mntsGUID' != '@Guid.Empty') {
                $.ajax({
                    "url": '@Url.Content("~/Assets/CreateRequisitionForMaintenance")', //'@Url.Action("CreateRequisitionForMaintenance", "Assets")',
                    @*"data": { mntsGUID: '@mntsGUID' },*@
                    "data": "{ mntsGUID :'@mntsGUID' }",
                    "type": "POST",
                    "dataType": "json",
                    "contentType": 'application/json; charset=utf-8',
                    "success": function (response) {
                        if (response.Status == "ok") {
                            $.modal.impl.close();
                            $("#ItemModelTemp").dialog('close');
                            mntsGUID = response.mntsDTO.GUID;
                            woGUID = response.mntsDTO.WorkorderGUID;
                            ReqGUID = response.mntsDTO.RequisitionGUID;
                            $("#tab31").show();
                            $("#tab31").attr("IsEnable", true);
                            $("#tab31").click();
                        }
                        else {

                        }
                        $('#DivLoading').hide();
                    },
                    error: function (response) {

                        $('#DivLoading').hide();
                        $("#spanGlobalMessage").html(response.message);
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                    }
                });
            }
            else {
                var url = '@Url.Action("RequisitionList", "Consume")';
                url = url + '?fromPull=' + 'yes'
                window.location.href = url;
            }
        });
    });

    if ('@ViewBag.ViewOnly' == 'True') {

        $('select', DTName)
            .attr('disabled', 'disabled');

        $(':input[type=text], textarea', DTName)
            .attr('readonly', 'readonly');

        $('#saveRows').attr('style', 'display:none');
        $('#deleteRows1').attr('style', 'display:none');
    }

    $('#' + DTName + ' tbody tr').die('tap click');
    $('#deleteRows1').unbind("click");
    $('#Gobtn1').unbind("click");
    $('#clear_QLItem_filter').unbind("click");
    $('#saveRows').die('click');
    $('#PageNumber1').unbind("keydown");
    $('#btnModelYesInnerGrid').die('click');
    $('[name = "pullDrillDown"]').die("click");


    // To adjust the print block next to colvis button
    $('#btnblock').css({ 'margin-right': '45px' });

    $('#' + DTName + ' tbody tr').live('tap click', function () {
        $(this).toggleClass('row_selected');
        return false;
    });


    $('#' + DTName).on("click", "td", function (event) {
        event.preventDefault();
    });


    //  var countK = 0;

    /* Add a click handler for the delete rows multiple rows */
    /*Functions used for nasted data binding START*/
    //$(document).on("click", 'img[name = "pullDrillDown"]', function (event) {
    $('[name = "pullDrillDown"]').on("click", function (event) {
        //  countK++;
        // alert(DTName + " - " + countK.toString());
        //  if (countK <= 1) {
        var nTr = this.parentNode.parentNode;
        var i = $.inArray(nTr, anOpen);
        if (i === -1) {
            $(this).attr('src', sImageUrl1 + "drildown_close.jpg");
            $('#' + DTName).dataTable().fnOpen(nTr, fnFormatDetails($('#' + DTName).dataTable(), nTr), '');
            anOpen.push(nTr);
            $('#' + DTName).dataTable().fnDraw();
        }
        else {
            $(this).attr('src', sImageUrl1 + "drildown_open.jpg");
            $('#' + DTName).dataTable().fnClose(nTr);
            anOpen.splice(i, 1);
        }
        // }
    });

    function fnFormatDetails(oTableProjectItems, nTr) {

        var sOut = '';
        var hdnID = $(nTr).find('#hdnID').val();
        var hdnReqDetailGUID = $(nTr).find('#hdnReqDetailGUID').val();
        var hdnToolGUID = $(nTr).find('#hdnToolGuid').val();
        var hdnWorkOrderGUID = $(nTr).find('#hdnWorkOrderGUID').val();
        ItemUniqueID = hdnID;
        $('#DivLoading').show();
        if (hdnToolGUID != undefined && hdnToolGUID.length > 0 && hdnToolGUID != '00000000-0000-0000-0000-000000000000') {
            $.ajax({
                "url": '@Url.Content("~/WorkOrder/WOToolCheckouts")',
                data: { "WOGUID": hdnWorkOrderGUID, 'ToolGUID': hdnToolGUID, 'ToolCheckoutGUID': hdnID },
                "async": false,
                cache: false,
                "dataType": "text",
                "contentType": 'application/json',
                "success": function (json) {
                    sOut = json;
                    $('#DivLoading').hide();
                },
                error: function (response) {
                    //;
                }
            });
            return sOut;
        }

        else {//if (hdnID != undefined && hdnID.length > 0 && hdnID != '00000000-0000-0000-0000-000000000000') {
            $.ajax({
                "url": '@Url.Content("~/Pull/PullDetails")',
                data: { ItemID: hdnID },
                "async": false,
                cache: false,
                "dataType": "text",
                "success": function (json) {
                    sOut = json;
                    $('#DivLoading').hide();
                },
                error: function (response) {
                    //;
                }
            });
            return sOut;
        }

    }

    $('#deleteRows1').click(function () {
        /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */
        if ($("body").hasClass('DTTT_Print')) {
            return false;
        }
        /* IF PRINT PREVIEW DONT SHOW CONTEXT MENU */


        var anSelected = fnGetSelected(oTableProjectItems);
        var stringIDs = "";
        for (var i = 0; i <= anSelected.length - 1; i++) {
            //anSelected[0].cells[0].innerHTML
            stringIDs = stringIDs + $(anSelected[i]).find("#hdnPullID").val() + ",";
        }
        if (anSelected.length !== 0) {
            $('#Inner-Grid-basic-modal-content').modal();
            IsDeletePopupOpen = false;
        }
    });
    var TempIdsForDelete = "";
    $("#btnModelYesInnerGrid").live("click", function () {

        var anSelected = fnGetSelected(oTableProjectItems);
        var stringIDs = "";
        for (var i = 0; i <= anSelected.length - 1; i++) {

            var txtQuantityPulled = $(anSelected[i]).find('#txtQuantityPulled').val() == '' ? 0 : $(anSelected[i]).find('#txtQuantityPulled').val();
            var txtAvalQuantity = $(anSelected[i]).find('#hdnQuantity').val() == '' ? 0 : $(anSelected[i]).find('#hdnQuantity').val();
            var txxt = $(anSelected[i]).find('#txtQty').val() == '' ? 0 : $(anSelected[i]).find('#txtQty').val();
            var vBinID = $(anSelected[i]).find("#item_BinID").val();
            var txtQty = parseFloat(txxt, 10);

            txtQuantityPulled = parseFloat(txtQuantityPulled, 10);
            txtAvalQuantity = parseFloat(txtAvalQuantity, 10);

            //            if (txtQuantityPulled == txtAvalQuantity || txtQuantityPulled == 0) {
            //                stringIDs = stringIDs + $(anSelected[i]).find("#hdnID").val() + ",";
            //            }
            //            else {
            //                TempIdsForDelete = TempIdsForDelete + $(anSelected[i]).find("#hdnID").val() + ",";
            //            }
            stringIDs = stringIDs + $(anSelected[i]).find("#hdnPullID").val() + ",";
        }

        if (stringIDs.length !== 0) {
            $.ajax({
                'url': deleteURL1,
                data: { ids: stringIDs, fromwhere: "wo", WOGUID: '@ViewBag.WorkOrderGUID' },
                success: function (response) {

                    if (response.Status == "ok") {
                        for (var i = 0; i <= anSelected.length - 1; i++) {
                            oTableProjectItems.fnDeleteRow(anSelected[i]);
                        }
                        if (anSelected.length > 0) {
                            if (TempIdsForDelete.length > 0) {
                                $("#spanGlobalMessage").html("@ResPullMaster.MsgRecordPartialPullNotDelete".replace("{0}", "(" + anSelected.length + ")").replace("{1}",TempIdsForDelete));
                            }
                            else {
                                $("#spanGlobalMessage").html("@ResCommon.RecordDeletedSuccessfully".replace("{0}","(" + anSelected.length + ")"));
                            }

                            // here needs to write code for delete the data from PULL Master
                            // based on WO Detail ID , needs to remove the record from Pull Master Table ...
                        }
                        $('div#target').fadeToggle();
                        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                        ReDirectData();
                    }
                },
                error: function (response) {

                    // through errror message
                }
            });
            $.modal.impl.close();
        }
        else {
            if (TempIdsForDelete.length > 0) {
                $("#spanGlobalMessage").html("@ResPullMaster.MsgRecordNotDeletedPartialPull".replace("{0}",TempIdsForDelete));
                $('div#target').fadeToggle();
                $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
                $.modal.impl.close();
                TempIdsForDelete = "";
            }
        }
    });

    $('#PageNumber1').keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            $("#Gobtn1").click();
            return false;
        }
    });

    $("#Gobtn1").click(function () {
        var pval = $('#PageNumber1').val();
        if (pval == "" || pval.match(/[^0-9]/)) {
            return;
        }
        if (pval == 0)
            return;
        $('#' + DTName).dataTable().fnPageChange(Number(pval - 1));
        $('#PageNumber1').val('');
    });

    /* global search function */
    function fnFilterGlobalPS() {
        //set filter only if more than 2 characters are pressed
        //if (typeof $("#InnerItem_filter") != 'undefined' && ($("#InnerItem_filter").val().length > 2 || $("#InnerItem_filter").val().length == 0)) {
        if (typeof $("#InnerItem_filter") != 'undefined') {

            bIsFilter = true;
            var searchtext = $("#InnerItem_filter").val().replace(/'/g, "''");
            $('#' + DTName).dataTable().fnFilter(searchtext, null, null, false);
            $('#' + DTName + ' tr.odd td').removeHighlight();
            $('#' + DTName + ' tr.even td').removeHighlight();

            if (searchtext.length > 0) {
                $('#' + DTName + ' tr.odd td').highlight($("#InnerItem_filter").val());
                $('#' + DTName + ' tr.even td').highlight($("#InnerItem_filter").val());
            }
        }
    }


    //Apply filter
    $("#InnerItem_filter").keyup(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        var index = $.inArray(code, NotAllowedCharCodes);
        if (code == 13) {
        }
        else {
            fnFilterGlobalPS();
        }
    });

    //Keydown event is required to handle ENTER KEY to work in IE
    $("#InnerItem_filter").keydown(function (e) {
        var code = (e.keyCode ? e.keyCode : e.which);
        if (code == 13) {
            fnFilterGlobalPS();
        }
    });

    //Clear Filter
    $("#clear_QLItem_filter").click(function () {
        $("#InnerItem_filter").val('');
        fnFilterGlobalPS();
        $("#InnerItem_filter").focus();
        return false;
    });

    function callPrint1(DataTableName) {
        var oConfig = {
            "sInfo": "<h6>Print view</h6><p>Please use your browser's print function to " + "print this table. Press escape when finished.",
            "sMessage": null,
            "bShowAll": false,
            "sToolTip": "View print view",
            "sButtonClass": "DTTT_button_print",
            "sButtonText": "Print"
        };
        if (typeof (TableTools) != undefined && typeof (TableTools) != 'undefined')
            TableTools.fnGetInstance(DataTableName).fnPrint(true, oConfig);
    }

    /* DATA TABLE GRID COMMON FUNCTIONS END */
    $("#ColumnOrderSetup1").off('click')
    $("#ColumnOrderSetup1").on('click', function () {
        //alert("line item reorder popup");
        $("#divDetailGridReorderPopup").data({ 'DataTableName': DTName, 'ListName': 'WorkOrderDetails', 'ColumnObjectName': 'objWODetailGridColumns' }).dialog("open");
        return false;
    });

    function FillDetailGridDiv() {
        $('#WOLineItems').empty();
        $('#WOLineItems').load('@Url.Action("LoadWOItems", new { WorkOrderGUID = @ViewBag.WorkOrderGUID })', function () {
            $('#DivLoading').hide();
            $("#divDetailGridReorderPopup").dialog("close");
        });
    }
</script>
