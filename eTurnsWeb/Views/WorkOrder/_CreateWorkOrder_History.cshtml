@model eTurns.DTO.WorkOrderDTO
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
}
<div class="userHead">
    @{             
        bool isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.WorkOrders, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
        bool isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.WorkOrders, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
    }
    @using (Ajax.BeginForm("SaveWO", "WorkOrder", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmWOMaster" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)        
        if (Model.ID != 0)
        {        
        <div class="infoBlock">
            <ul>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.RoomName)
                    </label>
                    : <span>@(Model.RoomName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Created)
                    </label>
                    : <span>@(Model.ReceivedOnWebDate)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.CreatedByName)
                    </label>
                    : <span>@(Model.CreatedByName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Updated)
                    </label>
                    : <span>@(Model.ReceivedOnDate)</span></li>
                <li style="border: none">
                    <label for="RoomName">
                        @Html.LabelFor(model => model.UpdatedByName)
                    </label>
                    : <span>@(Model.UpdatedByName)</span></li>
            </ul>
        </div>
        }
        <div style="clear: both; padding-top: 15px">
            <a id="ancHideShowContentInHistory" style="float: left; margin-top: 8px; margin-left: 10px">
                <img src="/Content/images/drildown_open.jpg" alt="" />
            </a>
            <div class="infoBlock" style="width: 95%; margin-left: 10px; background: none">
                <div id="CollapsedContent" class="edtForm">
                    <ul>
                        <li style="border-right: none; padding: 0px">
                            <label for="label" style="width: 100px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.WOName)<em style="color: Red">*</em>
                            </label>
                            @Html.EditorFor(model => model.WOName)
                            <br />
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.WOName)</span>
                            @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                            @Html.HiddenFor(model => model.GUID)
                            @Html.HiddenFor(model => model.Created)
                            @Html.HiddenFor(model => model.Updated)
                            @Html.HiddenFor(model => model.CreatedBy)
                            @Html.HiddenFor(model => model.LastUpdatedBy)
                            @Html.HiddenFor(model => model.Room)
                            @Html.HiddenFor(model => model.RoomName)
                            @Html.HiddenFor(model => model.CompanyID)
                            @Html.HiddenFor(model => model.CreatedByName)
                            @Html.HiddenFor(model => model.UpdatedByName)
                            @Html.HiddenFor(model => model.IsDeleted)
                            @Html.HiddenFor(model => model.IsArchived)
                            @Html.HiddenFor(model => model.Technician)
                            @Html.HiddenFor(model => model.Customer)
                            @Html.HiddenFor(model => model.Asset)
                            @Html.HiddenFor(model => model.Tool)
                            @Html.HiddenFor(model => model.UsedItems)
                            @Html.HiddenFor(model => model.UsedItemsCost)
                            @Html.HiddenFor(model => model.UsedItemsSellPrice)
                        </li>
                        <li>
                                @Html.LabelFor(model => model.ReleaseNumber, new { @style = "width: 100px; float: left; padding: 1.3% 0;" })
                                @Html.TextBoxFor(model => model.ReleaseNumber, new { id = "txtReleaseNumber", @class = "text-box", @style = "background:white", maxlength = 255, @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.ReleaseNumber)
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 100px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.WOStatus)
                            </label>
                            @if (Model.ID > 0)
                            {
                                if (@Model.WOStatus.ToString() == "Open") {
                                    @ResCommon.Open
                                } else {
                                   @ResWorkOrder.Closed
                                }
                                @Html.HiddenFor(model => model.WOStatus)
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.WOStatus, new SelectList(ViewBag.WOStatusBag, "Text", "Text", Model.WOStatus), new { @class = "selectBox" })
                            }
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 100px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.CustomerGUID)
                            </label>
                            @Html.DropDownListFor(model => model.CustomerGUID, new SelectList((IEnumerable<eTurns.DTO.CustomerMasterDTO>)ViewBag.CustomerBAG, "GUID", "Customer", Model.CustomerGUID), string.Empty, new { @class = "selectBox" })
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        
        <div id="ExpandedContentInHistory" style="display: none">
            <ul>
                <li style="border: none">
                    <div class="editorForm">
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AssetGUID)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.AssetGUID, new SelectList((IEnumerable<eTurns.DTO.AssetMasterDTO>)ViewBag.AssetBAG, "GUID", "AssetName", Model.AssetGUID), string.Empty, new { @class = "selectBox" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ToolGUID)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.ToolGUID, new SelectList((IEnumerable<eTurns.DTO.ToolMasterDTO>)ViewBag.ToolBAG, "GUID", "ToolName", Model.ToolGUID), string.Empty, new { @class = "selectBox" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Odometer_OperationHours)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Odometer_OperationHours, "{0:0.00}", new { @class = "text-box odometer", @name = "costdata" })
                                    <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Odometer_OperationHours)</span>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="editorForm padRightNone">
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.TechnicianID)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.TechnicianID, new SelectList((IEnumerable<eTurns.DTO.TechnicianMasterDTO>)ViewBag.TechnicianBAG, "ID", "Technician", Model.TechnicianID), string.Empty, new { @class = "selectBox" })
                                </div>
                            </li>
                            @Html.Partial("UDFLayout", new eTurns.DTO.ResWorkOrder())
                        </ul>
                    </div>
                </li>
            </ul>
        </div>
        <div class="editorForm" style="width: 98%">
            <ul>
                <li>
                    <div class="editor-label" style="width: 2%">
                        &nbsp;
                    </div>
                    <div class="BtnBlockform">
                        <input type="button" value="@ResCommon.Close" id="btnCancelInHistory" class="CreateBtn" />
                    </div>
                </li>
            </ul>
        </div>        

      @*  if (Model.UsedItems.GetValueOrDefault(0) > 0)
                            {
        <div class="infoBlock" style="margin-bottom: 10px; margin-top: 10px;">
            <ul>
                <li style="width: auto;">
                    <label for="RoomName">
                        <label>@eTurns.DTO.ResWorkOrder.UsedItems</label>
                    </label>
                    : <span>@(Model.UsedItems)</span> </li>
                <li style="border: none; width: auto;">
                    <label for="RoomName">
                        <label>@eTurns.DTO.ResWorkOrder.UsedItemsCost</label>
                    </label>
                    : <span id="spnTotalCost">$ @(Model.UsedItemsCost)</span> </li>
            </ul>
        </div>
                            }*@

    }
</div>
<div id="WOLineItemsHistory">
</div>
<div id="ItemModelTemp">
</div>
<script type="text/javascript">
    var HistoryID = '@Model.HistoryID';
    var HistoryGUID = '@Model.GUID';
    $('#ancHideShowContentInHistory').click(function () {
        if ($('#ExpandedContentInHistory').css('display') == 'none') {
            $('#ExpandedContentInHistory').css('display', '');
            $('#ancHideShowContentInHistory img').attr('src', '/Content/images/drildown_close.jpg');
        }
        else {
            $('#ExpandedContentInHistory').css('display', 'none');
            $('#ancHideShowContentInHistory img').attr('src', '/Content/images/drildown_open.jpg');
        }
    });

    $(document).ready(function () {
        disableControls('frmWOMaster'); 
        $('#ExpandedContentInHistory').css('display', 'none');
        $('#ancHideShowContentInHistory').css('display', '');
        CallThisFunctionFromModel('success');

        $(".odometer").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: 2
        });
    });

    function CallThisFunctionFromModel(msg) {
        if (msg == 'success') {
            $('#DivLoading').show();
            $('#WOLineItemsHistory').empty();
            var url = '@Url.Action("LoadWorkOrderLineItemsHistory")'; // + '?orderID=' + OrderID;
            $.get(url, { 'historyID': HistoryID, 'WOHistoryGUID': HistoryGUID }, function (data) {
                $('#WOLineItemsHistory').html(data);
                $('#DivLoading').hide();
            });
        }
        else if (json.Status == 'fail') {
            alert(json.Message);
            return false;
        }
    }

    disableControls('frmWOMaster'); 
    $('#btnCancelInHistory').removeAttr('disabled');
    $('#btnCancelInHistory').unbind('click');
    $('#btnCancelInHistory').click(function (e) {
        //$(".ui-dialog-titlebar-close").click();
        $('#divWOLineItemHistory').dialog('close');
        $('#HistoryText').val('');
        $('#HistoryTable').dataTable().fnFilter('', null, null, null);
    });
    
</script>
<script type="text/javascript">
     
</script>
