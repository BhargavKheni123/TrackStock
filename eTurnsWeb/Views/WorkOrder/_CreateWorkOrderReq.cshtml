@model eTurns.DTO.WorkOrderDTO
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    string CurrencySymbol = "";
    if (eTurnsWeb.Helper.SessionHelper.CurrencySymbol != null
        && !string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.CurrencySymbol))
    {
        CurrencySymbol = eTurnsWeb.Helper.SessionHelper.CurrencySymbol;
    }
}
<div class="userHead">
    @{   
        bool isUpdate;
        bool isInsert;        
        if (ViewBag.ViewOnly == true)
        {
            isUpdate = false;
            isInsert = false;
        }
        else
        {  
            isUpdate = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.WorkOrders, eTurnsWeb.Helper.SessionHelper.PermissionType.Update);
            isInsert = eTurnsWeb.Helper.SessionHelper.GetModulePermission(eTurnsWeb.Helper.SessionHelper.ModuleList.WorkOrders, eTurnsWeb.Helper.SessionHelper.PermissionType.Insert);
        }
    }
    @using (Ajax.BeginForm("SaveWO", "WorkOrder", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmWOMaster" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)        
        if (Model.ID != 0)
        {        
        <div class="infoBlock">
            <ul>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.RoomName)
                    </label>
                    : <span>@(Model.RoomName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Created)
                    </label>
                    : <span>@(Model.ReceivedOnWebDate)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.CreatedByName)
                    </label>
                    : <span>@(Model.CreatedByName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Updated)
                    </label>
                    : <span>@(Model.ReceivedOnDate)</span></li>
                <li style="border: none">
                    <label for="RoomName">
                        @Html.LabelFor(model => model.UpdatedByName)
                    </label>
                    : <span>@(Model.UpdatedByName)</span></li>
            </ul>
        </div>
        }
        <div style="clear: both; padding-top: 15px">
            <a id="ancHideShowContentReqWO" style="float: left; margin-top: 8px; margin-left: 10px">
                <img src="/Content/images/drildown_open.jpg" alt="" />
            </a>
            <div class="infoBlock" style="width: 95%; margin-left: 10px; background: none">
                <div id="CollapsedContentReqWO" class="edtForm">
                    <ul>
                        <li style="border-right: none; padding: 0px">
                            <label for="label" style="width: 100px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.WOName)<em style="color: Red">*</em>
                            </label>
                            @Html.EditorFor(model => model.WOName)
                            <br />
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.WOName)</span>
                            @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                            @Html.HiddenFor(model => model.GUID)
                            @Html.HiddenFor(model => model.Created)
                            @Html.HiddenFor(model => model.Updated)
                            @Html.HiddenFor(model => model.CreatedBy)
                            @Html.HiddenFor(model => model.LastUpdatedBy)
                            @Html.HiddenFor(model => model.Room)
                            @Html.HiddenFor(model => model.RoomName)
                            @Html.HiddenFor(model => model.CompanyID)
                            @Html.HiddenFor(model => model.CreatedByName)
                            @Html.HiddenFor(model => model.UpdatedByName)
                            @Html.HiddenFor(model => model.IsDeleted)
                            @Html.HiddenFor(model => model.IsArchived)
                            @Html.HiddenFor(model => model.Technician)
                            @Html.HiddenFor(model => model.Customer)
                            @Html.HiddenFor(model => model.Asset)
                            @Html.HiddenFor(model => model.Tool)
                            @Html.HiddenFor(model => model.WOType)
                            @Html.HiddenFor(model => model.UsedItems)
                            @Html.HiddenFor(model => model.UsedItemsCost)
                            @Html.HiddenFor(model => model.UsedItemsSellPrice)
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 100px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.WOStatus)
                            </label>
                            @if (Model.ID > 0)
                            {
                                @*@Model.WOStatus
                                @Html.HiddenFor(model => model.WOStatus)*@
                                @Html.DropDownListFor(model => model.WOStatus, new SelectList(ViewBag.WOStatusBag, "Text", "Text", Model.WOStatus), new { @class = "selectBox" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.WOStatus, new SelectList(ViewBag.WOStatusBag, "Text", "Text", Model.WOStatus), new { @class = "selectBox" })
                            }
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 100px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.CustomerGUID)
                            </label>
                            @Html.DropDownListFor(model => model.CustomerGUID, new SelectList((IEnumerable<eTurns.DTO.CustomerMasterDTO>)ViewBag.CustomerBAG, "GUID", "Customer", Model.CustomerGUID), string.Empty, new { @class = "selectBox" })
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        
        <div id="ExpandedContentReqWO" style="display: none">
            <ul>
                <li style="border: none">
                    <div class="editorForm">
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.AssetGUID)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.AssetGUID, new SelectList((IEnumerable<eTurns.DTO.AssetMasterDTO>)ViewBag.AssetBAG, "GUID", "AssetName", Model.AssetGUID), string.Empty, new { @class = "selectBox" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ToolGUID)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.ToolGUID, new SelectList((IEnumerable<eTurns.DTO.ToolMasterDTO>)ViewBag.ToolBAG, "GUID", "ToolName", Model.ToolGUID), string.Empty, new { @class = "selectBox" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Odometer_OperationHours)
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Odometer_OperationHours, "{0:0.00}", new { @class = "numericinput", @name = "costdata" })
                                    <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.Odometer_OperationHours)</span>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="editorForm padRightNone">
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.TechnicianID)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.TechnicianID, new SelectList((IEnumerable<eTurns.DTO.TechnicianMasterDTO>)ViewBag.TechnicianBAG, "ID", "Technician", Model.TechnicianID), string.Empty, new { @class = "selectBox" })
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ProjectSpendName)
                                </div>
                                <div class="editor-field">
                                    <span style="color: Black;">@Html.DisplayFor(model => model.ProjectSpendName)</span>
                                </div>
                            </li>
                            @Html.Partial("UDFLayout", new eTurns.DTO.ResWorkOrder())
                        </ul>
                    </div>
                </li>
            </ul>
        </div>
        <div class="editorForm" style="width: 98%">
            <ul>
                <li>
                    <div class="editor-label">
                        &nbsp;</div>
                    <div class="BtnBlockform">
                        <input type="button" value="@ResCommon.Close" id="btnCancelReq" class="CreateBtn" />                            
                        <script type="text/javascript">
                            disableControls('frmWOMaster');                            
                            $('#btnCancelReq').removeAttr('disabled');
                            </script>
                    </div>
                </li>                
            </ul>
        </div>        

                        if (Model.UsedItems.GetValueOrDefault(0) > 0)
                        {
        <div class="infoBlock" style="margin-bottom: 10px; margin-top: 10px;">
            <ul>
                <li style="width: auto;">
                    <label for="RoomName">
                        <label>@eTurns.DTO.ResWorkOrder.UsedItems</label>
                    </label>
                    : <span>@(Model.UsedItems)</span> </li>
                <li style="border: none; width: auto;">
                    <label for="RoomName">
                        <label>@eTurns.DTO.ResWorkOrder.UsedItemsCost</label>
                    </label>
                    : <span id="spnTotalCost">@CurrencySymbol @(Model.UsedItemsCost)</span> </li>
            </ul>
        </div>
                        }

    }
</div>
<div id="WOLineItems">
</div>
<div id="ItemModelTemp">
</div>
<div class="dialog" id="basic-modal-content-Requisition" style="display: none;">
    <div class="inner">
        <p class="text">
            @eTurns.DTO.Resources.ResMessage.RequisitionApproveWithZero</p>
        <a href="JavaScript:void{}" id="btnModelYesRequisition" class="yes">
            <img src="~/Content/images/yes.png" alt="@eTurns.DTO.Resources.ResCommon.Yes" />
            @eTurns.DTO.Resources.ResMessage.ConfirmYes</a><a href="#" class="no" onclick="closeModalRequisition()">
                <img src="~/Content/images/no.png" alt="@eTurns.DTO.Resources.ResCommon.No" />@eTurns.DTO.Resources.ResMessage.ConfirmNo</a>
    </div>
</div>
@Html.Partial("_RequiredMessages")
<script type="text/javascript">
    var EditWOID = 0;
    $("form").submit(function (e) {
        $(':input', '#frmWOMaster')
            .removeAttr('disabled');
        $.validator.unobtrusive.parse("#frmWOMaster");
        if ($(this).valid()) {
        }
        e.preventDefault();
    });

    $("#ItemModelTemp").dialog({
        autoOpen: false,
        modal: true,
        draggable: true,
        resizable: true,
        width: '82%',
        height: 710,
        title: '@(eTurns.DTO.ResWorkOrder.ModelHeader)',
        open: function () {
            //$('#DivLoading').show();
        },
        close: function () {
            //CallThisFunctionFromModel('success');
            ReDirectData();
        }
    });

    $(document).ready(function () {


        var IsFirstTime = true;

        $(".text-boxPriceFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdCostcentsLimit').val(), 10)
        });
        $(".text-boxQuantityFormat").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: parseInt($('#hdQuantitycentsLimit').val(), 10)
        });

        $(".odometer").priceFormat({
            prefix: '',
            thousandsSeparator: '',
            centsLimit: 2
        });


        if (parseInt('@Model.ID', 10) <= 0) {
            $('#ExpandedContentReqWO').css('display', '');
            $('#ancHideShowContentReqWO').css('display', 'none');
        }
        else {
            $('#ExpandedContentReqWO').css('display', 'none');
            $('#ancHideShowContentReqWO').css('display', '');
        }


        $('#btnCancelReq').click(function (e) {
            $('#divWOLineItemHistory').dialog('close');
        });        

        if ('@Model.ID' > 0) {
            if ('@Model.IsHistory' != 'True') {
                $('#WOLineItems').load('@Url.Action("LoadWOItemsReq", new { WorkOrderGUID = @Model.GUID })', function () {
                    $('#DivLoading').show();
                });
            }
            else {
                var action = '@Url.Action("LoadWOItemsReq", new { WorkOrderGUID = @Model.GUID })';
                var IsHistory = true;
                action += '&IsHistory=' + IsHistory;
                $('#WOLineItems').load(action, function () {
                });
            }
        }        
    });
    

    $(".text-boxPriceFormat").priceFormat({
        prefix: '',
        thousandsSeparator: '',
        centsLimit: parseInt($('#hdCostcentsLimit').val(), 10)
    });
    $(".text-boxQuantityFormat").priceFormat({
        prefix: '',
        thousandsSeparator: '',
        centsLimit: parseInt($('#hdQuantitycentsLimit').val(), 10)
    });

    $('.selectBox').change(function () {
        var ID = this.id;
        if (ID == "CustomerGUID")
            $("#Customer").val($("#" + ID + " option:selected").text());
        else if (ID == "TechnicianID")
            $("#Technician").val($("#" + ID + " option:selected").text());
        else if (ID == "AssetGUID")
            $("#Asset").val($("#" + ID + " option:selected").text());
        else if (ID == "ToolGUID")
            $("#Tool").val($("#" + ID + " option:selected").text());
    });

    $('#ancHideShowContentReqWO').click(function () {
        if ($('#ExpandedContentReqWO').css('display') == 'none') {
            $('#ExpandedContentReqWO').css('display', '');
            $('#ancHideShowContentReqWO img').attr('src', '/Content/images/drildown_close.jpg');
        }
        else {
            $('#ExpandedContentReqWO').css('display', 'none');
            $('#ancHideShowContentReqWO img').attr('src', '/Content/images/drildown_open.jpg');
        }
    });

    function onSuccess(response) {
        IsRefreshGrid = true;
        $('div#target').fadeToggle();
        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
        $("#spanGlobalMessage").html(response.Message);
        $("#spanGlobalMessage").removeClass('errorIcon WarningIcon').addClass('succesIcon');
        var idValue = $("#hiddenID").val();

        if (response.Status == "fail") {

            $("#spanGlobalMessage").removeClass('succesIcon WarningIcon').addClass('errorIcon');
            $("#RequisitionNumber").val("");
            $("#RequisitionNumber").focus();
        }
        else if (idValue == 0) {
            $("#RequisitionNumber").val("");
            $("#RequisitionNumber").focus();
            if (response.Status == "duplicate")
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
            else {
                //clearControls('frmWOMaster');
                setDefaultUDFValues($("#hdnPageName").val(), '@Model.ID');
                ShowEditTabGUID("WOEdit?WorkOrderGUID=" + response.GUID, "frmWOMaster");
            }
        }
        else if (idValue > 0) {
            if (response.Status == "duplicate") {
                $("#spanGlobalMessage").removeClass('errorIcon succesIcon').addClass('WarningIcon');
                $("#RequisitionNumber").val("");
                $("#RequisitionNumber").focus();
            }
            else {
                //IsRejectTheRequisition();
                clearControls('frmWOMaster');
                SwitchTextTab(0, 'WOCreate', 'frmWOMaster');
            }
        }
    }
    function onFailure(message) {

        $("#spanGlobalMessage").html(message.statusText);
        $('div#target').fadeToggle();
        $("div#target").delay(DelayTime).fadeOut(FadeOutTime);
        $("#WOName").focus();
    }

    function closeModalRequisitionApprove() {
        $.modal.impl.close();
        return false;
    }


    function closeModalRequisition() {
        $.modal.impl.close();        
        SwitchTextTab(0, 'WOCreate', 'frmWOMaster');
    }
</script>


<script type="text/javascript">
    // Assuming that the div or any other HTML element has the ID = loading and it contains the necessary loading image.
    $('#DivLoading').hide();  //initially hide the loading icon

    $('#DivLoading').ajaxStart(function () {
        $(this).show();
    });
    $("#DivLoading").ajaxStop(function () {
        $(this).hide();
    }); 
</script>