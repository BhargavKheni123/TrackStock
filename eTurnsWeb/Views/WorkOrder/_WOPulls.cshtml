@model IEnumerable<eTurns.DTO.PullMasterViewDTO>
@{
    var settings = new GridHeaderSettings() { DisplaySaveButton = false, DisplaySettings = true, DisplayColumnSetupButton = true, ColumnSetupFor = "WOPullDetailsList" };
}
<div class="innerGrid borderblue" style="background: none repeat scroll 0 0 #F8F8F8;width:80%;
    padding: 10px 0 0 28px">
    <table style="width: 99%;">
        <tr>
            <td class="BtnBlock" style="float: none; border: 1px solid #F8F8F8; height: 2px;">
                <div class="innerHeadSec">
                    <div style="position: absolute; left: 470px; top: -11px; width: 350px; z-index: 10;">                        
                        @Html.GridChildGridTopHeader(settings)
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top: 14px; padding-bottom: 35px; border: 1px solid #F8F8F8;">
                <div class="userContentInnerGrid innerGrid" style="background: none repeat scroll 0 0 #F8F8F8;padding: 10px 0 0 28px;padding-bottom: 10px;">
                    <table id="PullWOTable@(ViewBag.WODetailGUIDUnique)" class="display" style="width: 1100px; margin-left : 0px;">
                        <thead>
                            <tr>
                                <th>
                                    @eTurns.DTO.Resources.ResCommon.RowNo
                                </th>
                                <th>
                                    @eTurns.DTO.ResPullMaster.PullCredit
                                </th>
                                <th>
                                    @eTurns.DTO.ResPullMaster.PulledQuantity
                                </th>
                                <th>
                                    @eTurns.DTO.Resources.ResCommon.ID
                                </th>
                                <th>
                                    @eTurns.DTO.ResPullMaster.HistoryID
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.ItemNumber
                                </th>
                                <th>
                                    @eTurns.DTO.ResToolMaster.ToolName
                                </th>
                                <th>
                                    @eTurns.DTO.ResPullMaster.Created
                                </th>
                                <th>
                                    @eTurns.DTO.ResPullMaster.Updated
                                </th>
                                <th>
                                    @eTurns.DTO.Resources.ResCommon.AddedFrom
                                </th>
                                <th>
                                    @eTurns.DTO.Resources.ResCommon.EditedFrom
                                </th>
                                <th>
                                    @eTurns.DTO.Resources.ResCommon.ReceivedOnDate
                                </th>
                                <th>
                                    @eTurns.DTO.Resources.ResCommon.ReceivedOnWebDate
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.Description
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
            </td>
        </tr>
    </table>
</div>
<script language="javascript" type="text/javascript">
    var oTablePullWOTable;
    var objColumns;
    var WOPullDetailsChildGridTableColumns;
    var TempTableName = "PullWOTable" + '@ViewBag.WODetailGUIDUnique';
    $(document).ready(function () {
        objColumns = GetGridChildGridColumnsObject(TempTableName);
        WOPullDetailsChildGridTableColumns = objColumns;
        var sAjaxSourceURL = "";
        if ('@ViewBag.IsDetail' == 'True')
            sAjaxSourceURL = '@Url.Content("~/WorkOrder/PullMasterListByWOAjax")';
        else
            sAjaxSourceURL = '@Url.Content("~/WorkOrder/PullMasterListByWOAjaxByPullID")';

        oTablePullWOTable = $('#' + TempTableName).dataTable({
            "bJQueryUI": true,
            "sDom": 'R<"top"lp<"clear">>rt<"bottom"i<"clear">>',
            "bInfo": false,
            "bRetrieve": true,
            "bDestroy": true,
            "bPaginate": false,
            "bProcessing": true,
            "bStateSave": true,            
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                if (aData.IsDeleted == true && aData.IsArchived == true)
                    nRow.className = "GridDeleatedArchivedRow";
                else if (aData.IsDeleted == true)
                    nRow.className = "GridDeletedRow";
                else if (aData.IsArchived == true)
                    nRow.className = "GridArchivedRow";
                $("td.RowNo:first", nRow).html(this.fnSettings()._iDisplayStart + iDisplayIndex + 1);
                return nRow;
            },
            "bServerSide": true,
            "sAjaxSource": sAjaxSourceURL,
            "fnStateSaveParams": function (oSettings, oData) {
                $.ajax({
                    "url": "/Master/SaveGridState",
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: "WOPullDetailsList" },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {

                        o = json;
                    }
                });
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": "/Master/LoadGridState",
                    data: { ListName: "WOPullDetailsList" },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {
                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            },
            "fnServerData": function (sSource, aoData, fnCallback, oSettings) {
                //PostCount = PostCount + 1;
                var arrCols = new Array();
                var objCols = this.fnSettings().aoColumns;
                for (var i1 = 0; i1 <= objCols.length - 1; i1++) {
                    arrCols.push(objCols[i1].mDataProp);
                }
                for (var j = 0; j <= aoData.length - 1; j++) {
                    if (aoData[j].name == "sColumns") {
                        aoData[j].value = arrCols.join("|");
                        break;
                    }
                }
                if (oSettings.aaSorting.length != 0)
                    aoData.push({ "name": "SortingField", "value": oSettings.aaSorting[0][3] });
                else
                    aoData.push({ "name": "SortingField", "value": "0" });

                aoData.push({ "name": "IsArchived", "value": $('#IsArchivedRecords').is(':checked') });
                aoData.push({ "name": "IsDeleted", "value": $('#IsDeletedRecords').is(':checked') });
                aoData.push({ "name": "WODetailGUID", "value": '@ViewBag.WODetailGUID' });

                oSettings.jqXHR = $.ajax({
                    "dataType": 'json',
                    "type": "POST",
                    "url": sSource,
                    "cache": false,
                    "data": aoData,
					"headers": { "__RequestVerificationToken": $("input[name='__RequestVerificationToken'][type='hidden']").val() },
                    "success": fnCallback,
                    "beforeSend": function () {
                        $('.dataTables_scroll').css({ "opacity": 0.2 });
                    },
                    "complete": function () {
                        $('.dataTables_scroll').css({ "opacity": 1 });
                    }
                })
            },
            "aoColumns": [
                            { mDataProp: null, sClass: "read_only center NotHide RowNo", "bSortable": false, sDefaultContent: '' },
                            { "mDataProp": "ActionType", "sClass": "read_only", sWidth: "9%" },
                            { "mDataProp": "PoolQuantity", "sClass": "read_only",sWidth:"9%" },
			                { "mDataProp": "ID", "sClass": "read_only", sWidth: "9%" },
                            { "mDataProp": "HistoryID", "sClass": "read_only", sWidth: "9%" },
                            { "mDataProp": "ItemNumber", "sClass": "read_only", sWidth: "9%" },
                            { "mDataProp": "ToolName", "sClass": "read_only", sWidth: "9%" },
            //                            { "mDataProp": "CreatedDate", "sClass": "read_only" },
            //                            { "mDataProp": "UpdatedDate", "sClass": "read_only" },
                            { "mDataProp": "Created", "sClass": "read_only", sWidth: "9%", "fnRender": function (obj, val) { return obj.aData.CreatedDate; } },
                            { "mDataProp": "Updated", "sClass": "read_only", sWidth: "9%", "fnRender": function (obj, val) { return obj.aData.UpdatedDate; } },
                            { "mDataProp": "AddedFrom", "sClass": "read_only", sWidth: "9%" },
                            { "mDataProp": "EditedFrom", "sClass": "read_only", sWidth: "9%" },
			                {
			                    "mDataProp": "ReceivedOnWeb", "sClass": "read_only", sWidth: "9%",
			                    "fnRender": function (obj, val) {
			                        //return GetDateInFullFormat(val);
			                        return obj.aData.ReceivedOnWebDate;

			                    }
			                },
			                {
			                    "mDataProp": "ReceivedOn", "sClass": "read_only", sWidth: "9%",
			                    "fnRender": function (obj, val) {
			                        //return GetDateInFullFormat(val);
			                        return obj.aData.ReceivedOnDate;
			                    }
			                },
                            { "mDataProp": "Description", "sClass": "read_only", sWidth: "9%" },
		    ]
        });

        $(document).on("tap click", "#" + TempTableName + " tbody tr", function (e) {
            $(this).removeClass('row_selected');
        })
    });
    function FillDetailGridDiv() {        
        if ($("#myDataTable").find("tbody tr").find("#WorkOrderGUID").val() == "") {
            $("#" + "WOItemsTable" + WorkOrderItemGUID).find("tbody tr").each(function (index, tr) {
                if ($(tr).find("#hdnID").val() == '@(ViewBag.WODetailGUID)') {
                    $(tr).find('td.read_only img').click();
                    $(tr).find('td.read_only img').click();
                    return;
                }
            });
        }
        else {
            $("#myDataTable").find("tbody tr").each(function (index, tr) {
                if ($(tr).find("#WorkOrderGUID").val() == '@(ViewBag.WODetailGUID)') {
                    $(tr).find('td.control').click();
                    $(tr).find('td.control').click();
                    return;
                }
            });
        }
        $("#divDetailGridReorderPopup").dialog("close");
    }
    $("a#ColumnOrderSetupChildGrid").on("click", function () {
        $("#divDetailGridReorderPopup").data({ 'DataTableName': TempTableName, 'ListName': 'WOPullDetailsList', 'ColumnObjectName': 'WOPullDetailsChildGridTableColumns' }).dialog("open");
        return false;
    });
</script>
