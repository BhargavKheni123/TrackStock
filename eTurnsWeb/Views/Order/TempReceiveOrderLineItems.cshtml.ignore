@model eTurns.DTO.OrderMasterDTO
@{
    var settings = new GridHeaderSettings() { dataViewType = DataViewType.None, DisplayDeleteButton = false, DisplaySaveButton = false, DisplayPrintBlock = false, DisplayUDFButton = false, UDFSetupFor = "", DisplaySettings = false, DisplayColumnSetupButton = false, ColumnSetupFor = "OrderLineItem", DisplayContextMenu = false };
    
}
<div class="userListingWrapper">
    <div class="userListBlock">
        <div id="mytab7" class="tabContener" style="width: 99.5%">
            <div class="searchWrapper">
                <div class="searchBlock">
                    <span class="label">@eTurns.DTO.Resources.ResCommon.Search</span>
                    <div class="searchinputB">
                        <input type="text" class="searchinput" id="QLItem_filter" />
                        <a href="" class="xclose">
                            <img src="~/Content/images/x.png" alt="X" id="clear_QLItem_filter" /></a>
                    </div>
                </div>
                <input type="button" id="btnDiv" value="Div" style="visibility: hidden" />
            </div>
            @Html.QuickListItemsGridTopHeader(settings, eTurnsWeb.Helper.SessionHelper.ModuleList.Orders)
            <div class="userContent11" style="width: 99% !important; margin-left: 5px !important;
                float: left;">
                <table id="ReceiveOrderLineItem@(Model.ID)" class="display">
                    <thead>
                        <tr>
                            <th>
                            </th>
                            <th>
                            </th>
                            <th>
                                @eTurns.DTO.Resources.ResCommon.ID
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ItemNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResOrder.Bin
                            </th>
                            <th>
                                @eTurns.DTO.ResOrder.RequestedQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResOrder.RequiredDate
                            </th>
                            <th>
                                @eTurns.DTO.ResOrder.ReceivedQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResOrder.PackageQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.MinimumQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.MaximumQuantity
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Cost
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.SellPrice
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.Description
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.ManufacturerNumber
                            </th>
                            <th>
                                @eTurns.DTO.ResItemMaster.SupplierPartNo
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="LocationDetails">
</div>
<script type="text/javascript">

    var ItemUniqueID = '@Model.ID';
    var sImageUrl = "/Content/images/";
    var anOpen = [];


    $(function (event) {
        var ddl2 = '@eTurnsWeb.Helper.CommonUtility.RenderDropDownList("ddlOrdDetailBin", "BinListFull")';
        var ColumnObject = new Array();

        ColumnObject.push({ sClass: "read_only control center", bSortable: false, sDefaultContent: '<a href="javascript:void(0);" id="aPlusMinus" onclick="return ShowHideInnerGrid(this);" > <img src="' + sImageUrl + 'drildown_open.jpg' + '"></a>' });
        ColumnObject.push({ sClass: "read_only", bSortable: false, sDefaultContent: "",
            fnRender: function (obj, val) {
                return "<input id='btnInlineReceive" + obj.aData.ItemID + "' onclick='return SaveNewReceive(this);' type='button'    value='Receive' class='GridBtnStyle inLineBtn'/>"
            }
        });


        ColumnObject.push({ mDataProp: "ID", sClass: "read_only" });
        ColumnObject.push({ mDataProp: "ItemNumber", sClass: "read_only", fnRender: function (obj, val) {
            return "<span id='spnItemNummber'>" + obj.aData.ItemNumber + "</span>" + "<span id='spnID'  style='display:none'>" + obj.aData.ID + "</span>" + "<span id='spnOrderItemID'  style='display:none'>" + obj.aData.ItemID + "</span>" + "<span id='spnOrderItemType'  style='display:none'>" + obj.aData.ItemType + "</span>";
        }
        });
        ColumnObject.push({ mDataProp: "Bin", bSortable: false, sClass: "read_only",
            fnRender: function (obj, val) {
                return '<span id="spnBinLocationName">' + $(ddl2).find('option[value="' + val + '"]').text() + '</span>' + '<span id="spnBinLocationID" style="display:none">' + val + '</span>';
            }
        });
        ColumnObject.push({ mDataProp: "RequestedQuantity", sClass: "read_only" });
        ColumnObject.push({ mDataProp: "RequiredDate", sClass: "read_only", "fnRender": function (obj, val) { return GetDateInFullFormat(val); } });
        ColumnObject.push({ mDataProp: "ReceivedQuantity", sClass: "read_only", fnRender: function (obj, val) { return '<span id="spnOrdDetailReceivedQty' + obj.aData.ID + '">' + val + '</span>'; } });
        ColumnObject.push({ mDataProp: "PackageQuantity", sClass: "read_only" });
        ColumnObject.push({ mDataProp: "MinimumQuantity", sClass: "read_only" });
        ColumnObject.push({ mDataProp: "MaximumQuantity", sClass: "read_only" });
        ColumnObject.push({ mDataProp: "Cost", sClass: "read_only" });
        ColumnObject.push({ mDataProp: "SellPrice", sClass: "read_only" });
        ColumnObject.push({ mDataProp: "Description", sClass: "read_only" });
        ColumnObject.push({ mDataProp: "ManufacturerNumber", sClass: "read_only" });
        ColumnObject.push({ mDataProp: "SupplierPartNo", sClass: "read_only" });
        PrepareDataTable("ReceiveOrderLineItem", ItemUniqueID, '@Url.Content("~/Order/GetReceiveOrderLineItems")', 'ReceiveOrderLineItem', ColumnObject, '@Url.Content("~/Order/DeleteOrderLineItem")');

        $('#ReceiveOrderLineItem' + ItemUniqueID + ' tbody tr').live('touchstart click', function () {
            $(this).toggleClass('row_selected');
            return false;
        });


        $("#LocationDetails").dialog({
            autoOpen: false,
            show: "blind",
            hide: "explode",
            height: 500,
            title: "Item Locations",
            width: 700,
            modal: true,
            close: function () {
                $('#ReceiveOrderLineItem' + ItemUniqueID).DataTable().fnDraw();
            }
        });

        $('#DivLoading').hide();

    });
     
  
</script>
<script type="text/javascript">


    function SaveNewReceive(ctrl) {
        $('#DivLoading').show();
        var tr = $(ctrl).parent().parent();
        var itemId = tr.find('#spnOrderItemID').text();
        var itemType = tr.find('#spnOrderItemType').text();
        var binID = tr.find('#spnBinLocationID').text();
        var ordDetailId = tr.find('#spnID').text();
        var idtype = itemId + '%23' + itemType + '%23' + ordDetailId + '%23' + binID;

        $('#LocationDetails').load('../Inventory/LocationDetails?ItemID_ItemType=' + idtype, function () {
            $('#LocationDetails').dialog('open');
            $('#DivLoading').hide();
        });
        return false;
    }
    function ShowHideInnerGrid(ctrl) {
        $('#DivLoading').show();

        var tr = $(ctrl).parent().parent();
       
         
        var nTr = ctrl.parentNode.parentNode; //tr[0]; 
        var i = $.inArray(nTr, anOpen);
        var dtTable = $('#ReceiveOrderLineItem' + ItemUniqueID).dataTable();
        if (i === -1) {
            $('img', ctrl).attr('src', sImageUrl + "drildown_close.jpg");
            dtTable.fnOpen(nTr, fnFormatDetails(dtTable, nTr), '');
            anOpen.push(nTr);
        }
        else {
            $('img', ctrl).attr('src', sImageUrl + "drildown_open.jpg");
            dtTable.fnClose(nTr);
            anOpen.splice(i, 1);
            //  dtTable.fnDraw();
            $('#DivLoading').hide();
        }
    }

    function fnFormatDetails(oTable, nTr) {
        var oData = oTable.fnGetData(nTr);
        ItemName = oData.ItemNumber;
        var sOut = '';
        $('#DivLoading').show();
        $.ajax({
            "url": '@Url.Content("~/Order/PreviouseRetrived")',
            data: { ItemID: oData.ItemID, 'ordDetailID': oData.ID },
            "async": false,
            cache: false,
            "dataType": "text",
            "success": function (json) {
                sOut = json;
                $('#DivLoading').hide();
            },
            error: function (response) {

                
            }
        });

        return sOut;
    }
   
</script>
