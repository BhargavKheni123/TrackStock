@model eTurns.DTO.OrderMasterDTO
@{
    Layout = "~/Views/Shared/_PopupMaster.cshtml";
    string priceformate1 = "N" + eTurnsWeb.Helper.SessionHelper.CompanyConfig.CostDecimalPoints.GetValueOrDefault(0).ToString();
}
<div class="userHead">
    @using (Ajax.BeginForm("SaveReceiveOrder", "Order", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", InsertionMode = InsertionMode.Replace, OnFailure = "onFailure" }, new { @id = "frmReceiveOrder" }))
    {                                
        @Html.ValidationSummary(true)     
        if (Model.ID != 0)
        {
        <div class="infoBlock">
            <ul>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.RoomName)
                    </label>
                    : <span>@(Model.RoomName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.Created)
                    </label>
                    : <span>@(Model.CreatedDate)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.CreatedByName)
                    </label>
                    : <span>@(Model.CreatedByName)</span></li>
                <li>
                    <label for="RoomName">
                        @Html.LabelFor(model => model.LastUpdated)
                    </label>
                    : <span>@(Model.UpdatedDate)</span></li>
                <li style="border: none">
                    <label for="RoomName">
                        @Html.LabelFor(model => model.UpdatedByName)
                    </label>
                    : <span>@(Model.UpdatedByName)</span></li>
                <li style="border: none; text-align: right;">@*<a onclick="window.open('/Reports/Transaction/PurchaseOrder?Ids=@Model.ID','_blank')" href="javascript:void(null);">
                        <img src="../../Content/images/print.png" title="Print Purchase Order" /></a>*@
                    <a onclick="callPrintTransaction('','OrderMasterList',false,@Model.ID,'','');" href="javascript:void(null);">
                        <img src="../../Content/images/print.png" title="Print Purchase Order" /></a>
                </li>
            </ul>
        </div>
        }
        <div style="clear: both; padding-top: 15px">
            <a id="ancHideShowContentInRecieve" style="float: left; margin-top: 8px; margin-left: 10px">
                <img src="/Content/images/drildown_open.jpg" alt="" />
            </a>
            <div class="infoBlock" style="width: 95%; margin-left: 10px; background: none">
                <div id="CollapsedContentInReceive">
                    <ul>
                        <li style="border-right: none; padding: 0px">
                            <label for="label" style="width: 100px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.OrderNumber)
                            </label>
                            @Html.TextBoxFor(model => model.OrderNumber, new { id = "txtOrderNumber", @class = "text-box", @style = "background:white", maxlength = 255 })
                            <span class="ErrorMessage">@Html.ValidationMessageFor(model => model.OrderNumber)</span>
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 75px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.Supplier)
                            </label>
                            @Html.DropDownListFor(model => model.Supplier, new SelectList(ViewBag.SupplierList, "ID", "SupplierName", Model.Supplier), new { @class = "selectBox", @style = "width:120px" })
                            @Html.ValidationMessageFor(model => model.Supplier)
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 100px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.RequiredDate)
                            </label>
                            @Html.TextBoxFor(model => model.RequiredDate, new { @class = "text-box", id = "txtRequiredDate", @readonly = "readonly", @style = "background:white", maxlength = 128, @Value = Model.RequiredDate.ToString("MM/dd/yyyy") })
                            @Html.ValidationMessageFor(model => model.RequiredDate)
                        </li>
                        <li style="border-right: none;">
                            <label for="label" style="width: 85px; float: left; padding: 1.3% 0;">
                                @Html.LabelFor(model => model.OrderStatus)
                            </label>
                            @Html.DropDownListFor(model => model.OrderStatus, new SelectList(ViewBag.OrderStatusList, "value", "Text", Model.OrderStatus), new { id = "ddlOrderStatus", @class = "selectBox", @style = "width:215px" })
                            @Html.ValidationMessageFor(model => model.OrderStatus)
                        </li>
                        <li style="border-right: none; padding: 0px">
                            @Html.HiddenFor(model => model.ID, new { id = "hiddenID" })
                            @Html.HiddenFor(model => model.GUID)
                            @Html.HiddenFor(model => model.Created)
                            @Html.HiddenFor(model => model.LastUpdated)
                            @Html.HiddenFor(model => model.CreatedBy)
                            @Html.HiddenFor(model => model.LastUpdatedBy)
                            @Html.HiddenFor(model => model.CompanyID)
                            @Html.HiddenFor(model => model.Room)
                            @Html.HiddenFor(model => model.RoomName)
                            @Html.HiddenFor(model => model.CreatedByName)
                            @Html.HiddenFor(model => model.UpdatedByName)
                            @Html.HiddenFor(model => model.IsDeleted)
                            @Html.HiddenFor(model => model.IsArchived)
                            @Html.HiddenFor(model => model.IsRecordNotEditable)
                            @Html.HiddenFor(model => model.IsOnlyStatusUpdate)
                        </li>
                    </ul>
                </div>
            </div>
        </div> 
        
        <div id="ExpandedContentInReceive" style="display: none">
            <ul>
                <li style="border: none">
                    <div class="editorForm">
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.Comment)
                                </div>
                                <div class="editor-field">
                                    @Html.TextAreaFor(model => model.Comment, new { @class = "text-box", maxlength = 1024 })
                                    @Html.ValidationMessageFor(model => model.Comment)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ReleaseNumber)
                                </div>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.ReleaseNumber)
                                    @Html.ValidationMessageFor(model => model.ReleaseNumber)
                                </div>
                            </li>
                            <li style="display: none;">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ShippingVendor)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.ShippingVendor, new SelectList(ViewBag.VendorList, "ID", "Vender", Model.ShippingVendor), new { id = "ddlShippingVendor", @class = "selectBox" })
                                    @Html.ValidationMessageFor(model => model.ShippingVendor)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ShipVia)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.ShipVia, new SelectList(ViewBag.ShipViaList, "ID", "ShipVia", Model.ShipVia), new { id = "ddlShipVia", @class = "selectBox" })
                                    @Html.ValidationMessageFor(model => model.ShipVia)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.StagingID)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.StagingID, new SelectList(ViewBag.StagingList, "ID", "StagingName", Model.StagingID), new { id = "ddlStaging", @class = "selectBox" })
                                    @Html.ValidationMessageFor(model => model.StagingID)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.CustomerName)
                                </div>
                                <div class="editor-field">
                                    @Html.DropDownListFor(model => model.CustomerID, new SelectList(ViewBag.CustomerList, "ID", "Customer", Model.CustomerID), new { id = "ddlCustomerList", @class = "selectBox" })
                                    @Html.ValidationMessageFor(model => model.CustomerID)
                                </div>
                            </li>
                            <li style="display: none">
                                <div class="editor-label">
                                    @Html.CheckBox("chkIsCustomerAddress", false)
                                    @* @Html.LabelFor(model => model.CustomerAddress)*@
                                </div>
                                <div class="editor-field">
                                    @Html.TextAreaFor(model => model.CustomerAddress, new { @class = "text-box", maxlength = 1024, @style = "display:none" })
                                    @Html.ValidationMessageFor(model => model.CustomerID)
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="editorForm padRightNone">
                        <ul>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.PackSlipNumber)
                                </div>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.PackSlipNumber)
                                    @Html.ValidationMessageFor(model => model.PackSlipNumber)
                                </div>
                            </li>
                            <li>
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.ShippingTrackNumber)
                                </div>
                                <div class="editor-field">
                                    @Html.EditorFor(model => model.ShippingTrackNumber)
                                    @Html.ValidationMessageFor(model => model.ShippingTrackNumber)
                                </div>
                            </li>
                            @Html.Partial("UDFLayout")
                            <li id="liReject" style="display: none;">
                                <div class="editor-label">
                                    @Html.LabelFor(model => model.RejectionReason)
                                </div>
                                <div class="editor-field">
                                    @Html.TextAreaFor(model => model.RejectionReason, new { @style = "-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px;behavior: url(pie1.htc);background: #fff;border: 1px solid #dddddd;width: 34%;padding: 5px;" })
                                    @Html.ValidationMessageFor(model => model.RejectionReason)
                                </div>
                            </li>
                        </ul>
                    </div>
                </li>
            </ul>
        </div>  
        <div class="editorForm" style="width: 98%">
            <ul>
                <li>
                    <div class="editor-label" style="width: 2%">
                        &nbsp;
                    </div>
                    <div class="BtnBlockform">
                        <input type="button" value="@eTurns.DTO.Resources.ResCommon.Cancel" id="btnCancelInReceive" class="CreateBtn" />
                    </div>
                </li>
            </ul>
        </div>
        <div class="infoBlock" style="margin-bottom: 10px; margin-top: 10px;">
            <ul>
                <li style="width: auto;">
                    <label for="RoomName">
                        <label>
                            No of ordered items</label>
                    </label>
                    : <span id="spnNoOfItems">@Model.NoOfLineItems.GetValueOrDefault(0)</span> </li>
                <li style="border: none; width: auto;">
                    <label for="RoomName">
                        <label>
                            Total Cost</label>
                    </label>
                    : <span id="spnTotalCost">$ @Model.OrderCost.GetValueOrDefault(0).ToString(priceformate1)</span>
                </li>
            </ul>
        </div>
    }
</div>
<div id="divReceiveOrderLineItems">
</div>
<script type="text/javascript">
    var OrderID = '@Model.ID';
    var OrderStatus = '@Model.OrderStatus';

    $(document).ready(function () {
        $(':input', '#frmReceiveOrder')
        .not('#btnCancelInReceive')
        .attr('disabled', 'disabled');

        if ('@Model.CustomerAddress'.length > 0) {
            $('#chkIsCustomerAddress').prop('checked', true);
            $('#CustomerAddress').css('display', '');
        }

        if (parseInt(OrderID, 10) > 0) {
            $('#ExpandedContentInReceive').css('display', 'none');
            $('#ancHideShowContentInRecieve').css('display', '');
            CallThisFunctionFromModel('success');
        }

    });

    $('#ancHideShowContentInRecieve').unbind('click');
    $('#ancHideShowContentInRecieve').click(function () {
        if ($('#ExpandedContentInReceive').css('display') == 'none') {
            $('#ExpandedContentInReceive').css('display', '');
            $('#ancHideShowContentInRecieve img').attr('src', '/Content/images/drildown_close.jpg');
        }
        else {
            $('#ExpandedContentInReceive').css('display', 'none');
            $('#ancHideShowContentInRecieve img').attr('src', '/Content/images/drildown_open.jpg');
        }
    });



    $('#btnCancelInReceive').unbind('click');
    $('#btnCancelInReceive').click(function (e) {
        $('#divReceiveOrderLineItems').empty();
        //$('#tab7').click();

        var url = document.location;
        if (url.toString().indexOf("?FromItem") > 0)
            document.location = '@Url.Content("~/Order/OrderList")';
        else
            SwitchOrderTab(0, 'OrderCreate', 'frmOrder');

    });

    function CallThisFunctionFromModel(msg) {
        if (msg == 'success') {

            $('#divOrderLineItems').empty();
            var url = '';
            if ('@Model.StagingID.GetValueOrDefault(0)' <= 0)
                url = '@Url.Action("LoadOrderLineItemsForReceive")';
            else
                url = '@Url.Action("LoadStagingOrderLineItemsForReceive")';

            $.get(url, { 'orderID': OrderID }, function (data) {
                $('#divReceiveOrderLineItems').html(data);
                $('#DivLoading').hide();
            });
        }
        else if (json.Status == 'fail') {
            alert(json.Message);
            return false;
        }
    }
</script>
