@model eTurns.DTO.OrderMasterDTO
@{
    bool isCost = eTurnsWeb.Helper.SessionHelper.GetAdminPermission(eTurnsWeb.Helper.SessionHelper.ModuleList.HideCostMarkUpSellPrice);
    string qtyFormat = "N";
    string costFormat = "N";
    string dateFormat = "MM/dd/yyyy";

    if (!string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits))
    {
        qtyFormat = "N" + eTurnsWeb.Helper.SessionHelper.NumberDecimalDigits;
    }
    if (!string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.CurrencyDecimalDigits))
    {
        costFormat = "N" + eTurnsWeb.Helper.SessionHelper.CurrencyDecimalDigits;
    }
    if (!string.IsNullOrWhiteSpace(eTurnsWeb.Helper.SessionHelper.RoomDateFormat))
    {
        dateFormat = "N" + eTurnsWeb.Helper.SessionHelper.RoomDateFormat;
    }
}
<div id="divChangeOrderDetailHistory" class="innerGrid borderblue" style="background: none repeat scroll 0 0 #F8F8F8;
    padding: 10px 0 0 28px; overflow-x: auto; float: left; width: 1500px;">
    <table style="width: 100%;">
        <tr>
            <td class="BtnBlock" style="float: none; border: 1px solid #F8F8F8; height: 2px;">
                <div class="innerHeadSec">
                    <div style="position: absolute; left: 470px; top: -11px; width: 350px; z-index: 10;">
                        <input type="button" id="DetailInnerGridGobtn" class="go" value="@eTurns.DTO.Resources.ResGridHeader.Go" />
                        <input type="text" id="DetailInnerGridPageNumber" class="inputNum" />
                        <span class="label">@eTurns.DTO.Resources.ResGridHeader.GoToPage</span>
                    </div>
                </div>
            </td>
        </tr>
        <tr>
            <td style="padding-top: 14px; padding-bottom: 35px; border: 1px solid #F8F8F8;">
                <div class="userContentInnerGrid">
                    <table id="tblChangeOrderDetail_@Model.ChangeOrderGUID" class="display">
                        <thead>
                            <tr>
                                <th>
                                    @eTurns.DTO.Resources.ResCommon.ID
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.ItemNumber
                                </th>
                                <th>
                                    @eTurns.DTO.ResOrder.Bin
                                </th>
                                @if (Model.OrderType == (int)OrderType.Order)
                                {
                                    <th>
                                        @eTurns.DTO.ResOrder.RequestedQuantity
                                    </th>
                                }
                                else
                                {
                                    <th>
                                        @eTurns.DTO.ResOrder.RequestedReturnQuantity
                                    </th>
                                }
                                <th>
                                    @eTurns.DTO.ResOrder.ApprovedQuantity
                                </th>
                                @if (Model.OrderType == (int)OrderType.Order)
                                {
                                    <th>
                                        @eTurns.DTO.ResOrder.RequiredDate
                                    </th>
                                }
                                else
                                {
                                    <th>
                                        @eTurns.DTO.ResOrder.RequiredReturnDate
                                    </th>
                                }
                                @if (Model.OrderType == (int)OrderType.Order)
                                {
                                    <th>
                                        @eTurns.DTO.ResOrder.ReceivedQuantity
                                    </th>
                                }
                                else
                                {
                                    <th>
                                        @eTurns.DTO.ResOrder.ReturnedQuantity
                                    </th>
                                }
                                <th>
                                    @eTurns.DTO.ResItemMaster.OnHandQuantity
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.StagedQuantity
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.Description
                                </th>
                                <th>
                                    @eTurns.DTO.ResUnitMaster.Unit
                                </th>
                                <th>
                                    @eTurns.DTO.ResGLAccount.GLAccount
                                </th>
                                @if (isCost)
                                {
                                    <th>
                                        @eTurns.DTO.ResItemMaster.Cost
                                    </th>
                                    <th>
                                        @eTurns.DTO.ResItemMaster.Markup
                                    </th>
                                    <th>
                                        @eTurns.DTO.ResItemMaster.SellPrice
                                    </th>
                                }
                                <th>
                                    @eTurns.DTO.ResSupplierMaster.Supplier
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.OnOrderQuantity
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.OnReturnQuantity
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.InTransitquantity
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.MinimumQuantity
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.MaximumQuantity
                                </th>
                                <th>
                                    @eTurns.DTO.ResCategoryMaster.Category
                                </th>
                                @*<th>
                                    @eTurns.DTO.ResItemMaster.PackingQuantity
                                </th>*@
                                <th>
                                    @eTurns.DTO.ResItemMaster.DefaultReorderQuantity
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.ManufacturerName
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.ManufacturerNumber
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.SupplierPartNo
                                </th>
                                <th>
                                    @eTurns.DTO.ResItemMaster.SuggestedOrderQuantity
                                </th>
                                <th>
                                    @eTurns.DTO.ResOrder.ItemBlanketPO
                                </th>
                                <th>
                                    @eTurns.DTO.ResOrder.SendToEDI
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.OrderListItem != null && Model.OrderListItem.Count > 0)
                            {
                                foreach (var item in Model.OrderListItem)
                                { 
                                <tr>
                                    <td>
                                        @if (item.ID > 0)
                                        {
                                            @item.ID.ToString()
                                        }
                                    </td>
                                    <td>@item.ItemNumber
                                    </td>
                                    <td>
                                        @item.BinName
                                    </td>
                                    <td class="numericalign">
                                        @item.RequestedQuantity.GetValueOrDefault(0).ToString(qtyFormat)
                                    </td>
                                    <td class="numericalign">
                                        @item.ApprovedQuantity.GetValueOrDefault(0).ToString(qtyFormat)
                                    </td>
                                    <td>
                                        @item.RequiredDate.GetValueOrDefault(Model.RequiredDate).ToString(dateFormat)
                                    </td>
                                    <td class="numericalign">
                                        @item.ReceivedQuantity.GetValueOrDefault(0).ToString(qtyFormat)
                                    </td>
                                    <td class="numericalign">
                                        @item.OnHandQuantity.GetValueOrDefault(0).ToString(qtyFormat)
                                    </td>
                                    <td class="numericalign">
                                        @item.StagedQuantity.GetValueOrDefault(0).ToString(qtyFormat)
                                    </td>
                                    <td>
                                        @item.ItemDescription
                                    </td>
                                    <td>
                                        @item.Unit
                                    </td>
                                    <td>
                                        @item.GLAccount
                                    </td>
                                    @if (isCost)
                                    {
                                        <td class="numericalign">
                                            @item.Cost.GetValueOrDefault(0).ToString(costFormat, eTurnsWeb.Helper.SessionHelper.RoomCulture)
                                        </td>
                                        <td class="numericalign">
                                            @item.Markup
                                        </td>
                                        <td class="numericalign">
                                            @item.SellPrice.GetValueOrDefault(0).ToString(costFormat, eTurnsWeb.Helper.SessionHelper.RoomCulture)
                                        </td>
                                    }
                                    <td>
                                        @item.SupplierName
                                    </td>
                                    <td class="numericalign">
                                        @item.OnOrderQuantity.GetValueOrDefault(0).ToString(qtyFormat)
                                    </td>
                                    <td class="numericalign">
                                        @item.OnReturnQuantity.GetValueOrDefault(0).ToString(qtyFormat)
                                    </td>
                                    <td class="numericalign">
                                        @item.InTransitQuantity.GetValueOrDefault(0).ToString(qtyFormat)
                                    </td>
                                    @if (item.IsItemLevelMinMaxQtyRequired.GetValueOrDefault(false))
                                    {
                                        <td class="numericalign">
                                            @item.MinimumQuantity.ToString(qtyFormat)
                                        </td>
                                        <td class="numericalign">
                                            @item.MaximumQuantity.ToString(qtyFormat)
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            @eTurns.DTO.ResOrder.NotApplicable
                                        </td>
                                        <td>
                                            @eTurns.DTO.ResOrder.NotApplicable
                                        </td>
                                    }
                                    <td>
                                        @item.Category
                                    </td>
                                    @*<td>
                                        @item.PackingQuantity.GetValueOrDefault(0).ToString(qtyFormat)
                                    </td>*@
                                    <td class="numericalign">
                                        @item.DefaultReorderQuantity.ToString(qtyFormat)
                                    </td>
                                    <td>
                                        @item.Manufacturer
                                    </td>
                                    <td>
                                        @item.ManufacturerNumber
                                    </td>
                                    <td>
                                        @item.SupplierPartNo
                                    </td>
                                    <td class="numericalign">
                                        @item.SuggestedOrderQuantity.GetValueOrDefault(0).ToString(qtyFormat)
                                    </td>
                                    <td>
                                        @item.ItemBlanketPO
                                    </td>
                                    <td>
                                        @if (item.IsEDISent.GetValueOrDefault(false) == true)
                                        {
                                            @Html.Label("True");
                                        }
                                        else
                                        {
                                            @Html.Label("False");
                                        }
                                    </td>
                                </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </td>
        </tr>
    </table>
</div>
<script type="text/javascript">
    var ChangeOrdGuid = '@Model.ChangeOrderGUID';
    var oTableChangeOrderdetails;
    $(document).ready(function () {
        var gaiSelected = [];
        oTableChangeOrderdetails = $('#tblChangeOrderDetail_' + ChangeOrdGuid).dataTable({
            "bJQueryUI": true,
            "bRetrieve": true,
            "bDestroy": true,
            "bScrollCollapse": true,
            "sScrollX": "130%",
            "sDom": 'RC<"top"lp<"clear">>rt<"bottom"i<"clear">>',
            "oColVis": {},
            "aaSorting": [],
            "oColReorder": {},
            "sPaginationType": "full_numbers",
            "bProcessing": true,
            "bStateSave": true,
            "oLanguage": {
                "sLengthMenu": '@eTurns.DTO.Resources.ResGridHeader.Show' + ' _MENU_ ' + '@eTurns.DTO.Resources.ResGridHeader.Records',
                "sEmptyTable": '@eTurns.DTO.Resources.ResMessage.NoDataAvailableInTable',
                "sInfo": '@eTurns.DTO.Resources.ResMessage.ShowingNoOfEntries',
                "sInfoEmpty": '@eTurns.DTO.Resources.ResMessage.ShowingZeroEntries'
            },

            "fnStateSaveParams": function (oSettings, oData) {
                oData.oSearch.sSearch = "";

                $.ajax({
                    "url": '@Url.Content("~/Master/SaveGridState")',
                    "type": "POST",
                    data: { Data: JSON.stringify(oData), ListName: 'ChangeOrderDetailList' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {

                        if (json.jsonData != '')
                            o = json;
                    }
                });
            },
            "fnStateLoad": function (oSettings) {
                var o;
                $.ajax({
                    "url": '@Url.Content("~/Master/LoadGridState")',
                    "type": "POST",
                    data: { ListName: 'ChangeOrderDetailList' },
                    "async": false,
                    cache: false,
                    "dataType": "json",
                    "success": function (json) {

                        if (json.jsonData != '')
                            o = JSON.parse(json.jsonData);
                    }
                });
                return o;
            },
            "fnInitComplete": function () {

            }
        });

        $('.DTTT_container').css('z-index', '-1');
        $('#btnblock').css({ 'margin-right': '45px' });

        $('#DetailInnerGridPageNumber').keydown(function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                $(".go").click();
                return false;
            }
        });

        $("#DetailInnerGridGobtn").click(function () {
            var pval = $('#DetailInnerGridPageNumber').val();
            if (pval == "" || pval.match(/[^0-9]/)) {
                return;
            }
            if (pval == 0)
                return;
            $('#tblChangeOrderDetail_' + ChangeOrdGuid).dataTable().fnPageChange(Number(pval - 1));
            $('#DetailInnerGridPageNumber').val('');
        });


    });

    $('#tblChangeOrderDetail_' + ChangeOrdGuid).on('tap click', 'tbody tr', function () {
        $(this).removeClass('row_selected');
    });
    

    
</script>
