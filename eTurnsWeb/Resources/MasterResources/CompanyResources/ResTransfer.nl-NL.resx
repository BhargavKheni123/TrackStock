<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TransferNumber" xml:space="preserve">
    <value>Transfer Number</value>
  </data>
  <data name="ReplinishRoom" xml:space="preserve">
    <value>Replenishing Room</value>
  </data>
  <data name="StagingID" xml:space="preserve">
    <value>Staging ID</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="InOut" xml:space="preserve">
    <value>In Out</value>
  </data>
  <data name="RequireDate" xml:space="preserve">
    <value>Required Date</value>
  </data>
  <data name="UDF1" xml:space="preserve">
    <value>UDF 1</value>
  </data>
  <data name="UDF2" xml:space="preserve">
    <value>UDF 2</value>
  </data>
  <data name="UDF3" xml:space="preserve">
    <value>UDF 3</value>
  </data>
  <data name="UDF4" xml:space="preserve">
    <value>UDF 4</value>
  </data>
  <data name="UDF5" xml:space="preserve">
    <value>UDF 5</value>
  </data>
  <data name="LastUpdated" xml:space="preserve">
    <value>Last Updated Date</value>
  </data>
  <data name="PageHeader" xml:space="preserve">
    <value>Transfer</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>eTurns: Transfer</value>
  </data>
  <data name="FulFillQuantity" xml:space="preserve">
    <value>Fulfilled quantity</value>
  </data>
  <data name="ItemGUID" xml:space="preserve">
    <value>Item GUID</value>
  </data>
  <data name="ItemID" xml:space="preserve">
    <value>Item ID</value>
  </data>
  <data name="ReceivedQuantity" xml:space="preserve">
    <value>Received quantity</value>
  </data>
  <data name="RequestedQuantity" xml:space="preserve">
    <value>Requested quantity</value>
  </data>
  <data name="TransferGUID" xml:space="preserve">
    <value>Transfer GUID</value>
  </data>
  <data name="TransferID" xml:space="preserve">
    <value>Transfer ID</value>
  </data>
  <data name="AddNewItem" xml:space="preserve">
    <value>Add New Item</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="ChangeLogTab" xml:space="preserve">
    <value>Change Log</value>
  </data>
  <data name="ChangeTransferTab" xml:space="preserve">
    <value>Change Transfer</value>
  </data>
  <data name="Closed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="FullFillQuantity" xml:space="preserve">
    <value>Fullfilled quantity</value>
  </data>
  <data name="FullfillQuantityTab" xml:space="preserve">
    <value>Fullfilled quantity</value>
  </data>
  <data name="In" xml:space="preserve">
    <value>In</value>
  </data>
  <data name="InTransitQuantity" xml:space="preserve">
    <value>Intransit quantity</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Out" xml:space="preserve">
    <value>Out</value>
  </data>
  <data name="ReceivabledTab" xml:space="preserve">
    <value>Receivable</value>
  </data>
  <data name="ReceiveTab" xml:space="preserve">
    <value>Receive</value>
  </data>
  <data name="RefTransferID" xml:space="preserve">
    <value>Ref Transfer ID</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>Rejected</value>
  </data>
  <data name="RejectedReason" xml:space="preserve">
    <value>Rejected Reason</value>
  </data>
  <data name="RequestedRoom" xml:space="preserve">
    <value>Requesting Room</value>
  </data>
  <data name="RequestType" xml:space="preserve">
    <value>Request Type</value>
  </data>
  <data name="ShippedQuantity" xml:space="preserve">
    <value>Shipped quantity</value>
  </data>
  <data name="StagingName" xml:space="preserve">
    <value>Staging Name</value>
  </data>
  <data name="Submitted" xml:space="preserve">
    <value>Submitted</value>
  </data>
  <data name="TotalQuantity" xml:space="preserve">
    <value>Total quantity</value>
  </data>
  <data name="TransferableTab" xml:space="preserve">
    <value>Transferable</value>
  </data>
  <data name="TransferBtn" xml:space="preserve">
    <value>Transfer</value>
  </data>
  <data name="Transfered" xml:space="preserve">
    <value>Transfered</value>
  </data>
  <data name="TransferStatus" xml:space="preserve">
    <value>Transfer Status</value>
  </data>
  <data name="Transmitted" xml:space="preserve">
    <value>Transmitted</value>
  </data>
  <data name="Transmitted1" xml:space="preserve">
    <value>Transmitted</value>
  </data>
  <data name="TransmittedIncomplete" xml:space="preserve">
    <value>Incomplete</value>
  </data>
  <data name="TransmittedInCompletePastDue" xml:space="preserve">
    <value>Incomplete Past Due</value>
  </data>
  <data name="TransmittedPastDue" xml:space="preserve">
    <value>Past Due</value>
  </data>
  <data name="UnSubmitted" xml:space="preserve">
    <value>Unsubmitted</value>
  </data>
  <data name="Received" xml:space="preserve">
    <value>Received Date</value>
  </data>
  <data name="RequestingRoom" xml:space="preserve">
    <value>Requesting Room</value>
  </data>
  <data name="NoOfLineItems" xml:space="preserve">
    <value>No Of Line Items</value>
  </data>
  <data name="ReplinishRoomRequired" xml:space="preserve">
    <value>Replenish Room is Required</value>
  </data>
  <data name="TransferNumberRequired" xml:space="preserve">
    <value>Transfer name is required</value>
  </data>
  <data name="NoOfItems" xml:space="preserve">
    <value>No Of Items</value>
  </data>
  <data name="TotalCost" xml:space="preserve">
    <value>Total Cost</value>
  </data>
  <data name="RequestedQuantityOHQMSG" xml:space="preserve">
    <value>Gevraagde hoeveelheid bericht QOH</value>
  </data>
  <data name="MsgDuplicateSerialNumber" xml:space="preserve">
    <value>U kunt geen serienummer ontvangen: {0}.</value>
  </data>
  <data name="MsgMatchingItemNotFoundToAdd" xml:space="preserve">
    <value>Validatiematchitem niet gevonden in replenish-ruimte.</value>
  </data>
  <data name="MsgLotPlusExpirationDateNotMatched" xml:space="preserve">
    <value>Lot # {0} is al beschikbaar met een andere vervaldatum.</value>
  </data>
  <data name="SerialNumber" xml:space="preserve">
    <value>Serienummer</value>
  </data>
  <data name="LotNumber" xml:space="preserve">
    <value>Lotnummer</value>
  </data>
  <data name="Expiration" xml:space="preserve">
    <value>vervaltijd</value>
  </data>
  <data name="DestinationLocation" xml:space="preserve">
    <value>Bestemmingslocatie</value>
  </data>
  <data name="ReplenishingRoomID" xml:space="preserve">
    <value>Replenishing Room ID</value>
  </data>
  <data name="RequiredDateString" xml:space="preserve">
    <value>Required Date</value>
  </data>
  <data name="ApprovedQuantity" xml:space="preserve">
    <value>Approved Quantity</value>
  </data>
  <data name="TransferQuantity" xml:space="preserve">
    <value>Transfer Quantity</value>
  </data>
  <data name="QuantityToReceive" xml:space="preserve">
    <value>Quantity To Receive</value>
  </data>
  <data name="ReceiveQuantity" xml:space="preserve">
    <value>Receive Quantity</value>
  </data>
  <data name="LotNumberTracking" xml:space="preserve">
    <value>Lot Number Tracking</value>
  </data>
  <data name="SerialNumberTracking" xml:space="preserve">
    <value>Serial Number Tracking</value>
  </data>
  <data name="DateCodeTracking" xml:space="preserve">
    <value>Date Code Tracking</value>
  </data>
  <data name="Notracking" xml:space="preserve">
    <value>No tracking</value>
  </data>
  <data name="QuantityToTransfer" xml:space="preserve">
    <value>Quantity To Transfer</value>
  </data>
  <data name="GridTotalRecordsInfoTransfer" xml:space="preserve">
    <value>Transfer Entries</value>
  </data>
  <data name="GridTotalRecordsInfoTransferReceivedLineItems" xml:space="preserve">
    <value>Received Line Items Entries</value>
  </data>
  <data name="GridTotalRecordsInfoTransferdLineItems" xml:space="preserve">
    <value>Transfered Line Items Entries</value>
  </data>
  <data name="GridTotalRecordsInfoTransferRecord" xml:space="preserve">
    <value>Entries</value>
  </data>
  <data name="GridTotalRecordsInfoTransferdLineItemsHistory" xml:space="preserve">
    <value>Transfer Line Items History Entries</value>
  </data>
  <data name="GridTotalRecordsInfoTransferHistory" xml:space="preserve">
    <value>Transfer History Entries</value>
  </data>
  <data name="NotEnoughQuantity" xml:space="preserve">
    <value>Niet genoeg hoeveelheid</value>
  </data>
  <data name="QuantityTransferred" xml:space="preserve">
    <value>Hoeveelheid overgedragen.</value>
  </data>
  <data name="NotEnoughQuantityToReceive" xml:space="preserve">
    <value>Niet genoeg hoeveelheid om te ontvangen.</value>
  </data>
  <data name="CompanyNameIsnotProper" xml:space="preserve">
    <value>Bedrijfsnaam klopt niet.</value>
  </data>
  <data name="ReceivingRoomNameIsNotProper" xml:space="preserve">
    <value>De naam van de ontvangende kamer is niet correct.</value>
  </data>
  <data name="ReplenishingRoomNameIsNotProper" xml:space="preserve">
    <value>Het aanvullen van de naam van de kamer is niet correct.</value>
  </data>
  <data name="ReceivingAndReplenishingRoomNameMustNotSame" xml:space="preserve">
    <value>Het ontvangen en aanvullen van de kamernaam mag niet hetzelfde zijn.</value>
  </data>
  <data name="RequestTypeIsNotProper" xml:space="preserve">
    <value>RequestType is niet juist, het zou moeten zijn (In of Out).</value>
  </data>
  <data name="TransferStatusIsNotProper" xml:space="preserve">
    <value>TransferStatus is niet correct zoals het zou moeten zijn (Niet-verzonden, Ingediend, Goedgekeurd of Gesloten).</value>
  </data>
  <data name="UserNameIsNotProper" xml:space="preserve">
    <value>Gebruikersnaam is niet correct.</value>
  </data>
</root>