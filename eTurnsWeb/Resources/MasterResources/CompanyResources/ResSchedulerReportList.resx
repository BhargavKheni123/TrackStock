<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ScheduleID" xml:space="preserve">
    <value>Schedule ID</value>
  </data>
  <data name="NotificationMode" xml:space="preserve">
    <value>Notification Mode</value>
  </data>
  <data name="FTPName" xml:space="preserve">
    <value>FTP Name</value>
  </data>
  <data name="IsActive" xml:space="preserve">
    <value>Is Active</value>
  </data>
  <data name="AttachmentTypes" xml:space="preserve">
    <value>Attachment Types</value>
  </data>
  <data name="ScheduleName" xml:space="preserve">
    <value>Schedule Name</value>
  </data>
  <data name="ScheduleMode" xml:space="preserve">
    <value>Schedule Mode</value>
  </data>
  <data name="ReportName" xml:space="preserve">
    <value>Report Name</value>
  </data>
  <data name="NextRunDate" xml:space="preserve">
    <value>Next Run Date</value>
  </data>
  <data name="CreatedByName" xml:space="preserve">
    <value>Created by Name</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="TotalRecords" xml:space="preserve">
    <value>Total Records</value>
  </data>
  <data name="PageHeader" xml:space="preserve">
    <value>Alert and Report Scheduler</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Alert and Report Scheduler</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Immediate" xml:space="preserve">
    <value>Immediate</value>
  </data>
  <data name="Hourly" xml:space="preserve">
    <value>Hourly</value>
  </data>
  <data name="Daily" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="Weekly" xml:space="preserve">
    <value>Weekly</value>
  </data>
  <data name="Monthly" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="Every" xml:space="preserve">
    <value>Every</value>
  </data>
  <data name="EveryWeekDays" xml:space="preserve">
    <value>Every Week Days</value>
  </data>
  <data name="HoursAtEvery" xml:space="preserve">
    <value>Hours at Every</value>
  </data>
  <data name="Recurevery" xml:space="preserve">
    <value>Recurring every</value>
  </data>
  <data name="WeeksOn" xml:space="preserve">
    <value>Weeks On</value>
  </data>
  <data name="Monday" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="Tuesday" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="Wednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="Thursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="Friday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="Sunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="Months" xml:space="preserve">
    <value>Months</value>
  </data>
  <data name="OfEvery" xml:space="preserve">
    <value>of Every</value>
  </data>
  <data name="AutoGenerate" xml:space="preserve">
    <value>Auto Generate</value>
  </data>
  <data name="AutoGenerateSubmit" xml:space="preserve">
    <value>Auto Generate &amp; Submit</value>
  </data>
  <data name="DataselectFromLastReport" xml:space="preserve">
    <value>Data Since Last Report</value>
  </data>
  <data name="DataselectSince" xml:space="preserve">
    <value>Data Since</value>
  </data>
  <data name="First" xml:space="preserve">
    <value>First</value>
  </data>
  <data name="Second" xml:space="preserve">
    <value>Second</value>
  </data>
  <data name="Third" xml:space="preserve">
    <value>Third</value>
  </data>
  <data name="Fourth" xml:space="preserve">
    <value>Fourth</value>
  </data>
  <data name="Fifth" xml:space="preserve">
    <value>Fifth</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>Minutes</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>Days</value>
  </data>
  <data name="The" xml:space="preserve">
    <value>The</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="EmailSubject" xml:space="preserve">
    <value>Email Subject</value>
  </data>
  <data name="CultureCode" xml:space="preserve">
    <value>Culture Code</value>
  </data>
  <data name="TemplateName" xml:space="preserve">
    <value>Template Name</value>
  </data>
  <data name="EmailTemplates" xml:space="preserve">
    <value>Email Templates</value>
  </data>
  <data name="Reports" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="PDF" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="Excel" xml:space="preserve">
    <value>Excel</value>
  </data>
  <data name="Suppliers" xml:space="preserve">
    <value>Suppliers</value>
  </data>
  <data name="SuppliersMessage" xml:space="preserve">
    <value>Suppliers Message</value>
  </data>
  <data name="Transfer" xml:space="preserve">
    <value>Transfer</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="TrackingMeasurement" xml:space="preserve">
    <value>Tracking Measurement</value>
  </data>
  <data name="AssetTool" xml:space="preserve">
    <value>Asset / Tool</value>
  </data>
  <data name="ReportsSchedule" xml:space="preserve">
    <value>Reports Schedule</value>
  </data>
  <data name="AlertsSchedule" xml:space="preserve">
    <value>Alerts Schedule</value>
  </data>
  <data name="ConsignedBatchPull" xml:space="preserve">
    <value>Consigned Batch Pull</value>
  </data>
  <data name="ScheduleDetails" xml:space="preserve">
    <value>Schedule Details</value>
  </data>
  <data name="CopyNotification" xml:space="preserve">
    <value>Copy Notification</value>
  </data>
  <data name="PickReport" xml:space="preserve">
    <value>Pick Report</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="NotificationName" xml:space="preserve">
    <value>Notification Name</value>
  </data>
  <data name="DatasinceDays" xml:space="preserve">
    <value>(# of days ago)</value>
  </data>
  <data name="SendEmptyEmail" xml:space="preserve">
    <value>Send Empty Email</value>
  </data>
  <data name="DataSelectionType" xml:space="preserve">
    <value>Data Selection Type</value>
  </data>
  <data name="HideHeader" xml:space="preserve">
    <value>Hide Header</value>
  </data>
  <data name="ShowSignature" xml:space="preserve">
    <value>Show Signature</value>
  </data>
  <data name="EmailTemplateToken" xml:space="preserve">
    <value>Email Template Token(s)</value>
  </data>
  <data name="SuppliersMessageAllNone" xml:space="preserve">
    <value>To INCLUDE ALL suppliers, do not select any.</value>
  </data>
  <data name="DataselectFromFirstOfMonth" xml:space="preserve">
    <value>Data Since 1st of Month</value>
  </data>
  <data name="SelectAllRangeData" xml:space="preserve">
    <value>Include All</value>
  </data>
  <data name="IsScheduleActive" xml:space="preserve">
    <value>Is Active</value>
  </data>
  <data name="Pull_IsScheduleActive" xml:space="preserve">
    <value>Is Active</value>
  </data>
  <data name="IsIncludeStockouttool" xml:space="preserve">
    <value>Include Stock out tool</value>
  </data>
  <data name="ActionMessageAllNone" xml:space="preserve">
    <value>ActionMessageAllNone</value>
  </data>
  <data name="GridTotalRecordsInfoNotification" xml:space="preserve">
    <value>Notification Entries</value>
  </data>
  <data name="GridTotalRecordsInfoNotificationChangeLog" xml:space="preserve">
    <value>Notification Change Log Entries</value>
  </data>
  <data name="ApproverRequesterEmaillNote" xml:space="preserve">
    <value>Please add [Requester],[Approver] with comma separated for send Approve/Reject email to requester and approver.</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
   <data name="MoveType" xml:space="preserve">
    <value>Move Type</value>
  </data>
</root>