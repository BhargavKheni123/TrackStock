<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="CompanyID" xml:space="preserve">
    <value>Company ID</value>
  </data>
  <data name="ScheduleDaysBefore" xml:space="preserve">
    <value>Schedule Days Before</value>
  </data>
  <data name="OperationalHoursBefore" xml:space="preserve">
    <value>Operational Hours Before</value>
  </data>
  <data name="MileageBefore" xml:space="preserve">
    <value>Mileage Before</value>
  </data>
  <data name="ProjectAmountExceed" xml:space="preserve">
    <value>Project Amount Exceeded</value>
  </data>
  <data name="ProjectItemQuantitExceed" xml:space="preserve">
    <value>Project Item Quantity Exceeded</value>
  </data>
  <data name="ProjectItemAmountExceed" xml:space="preserve">
    <value>Project Item Amount Exceeded</value>
  </data>
  <data name="CostDecimalPoints" xml:space="preserve">
    <value>Cost Decimal Points</value>
  </data>
  <data name="QuantityDecimalPoints" xml:space="preserve">
    <value>Quantity Decimal Points</value>
  </data>
  <data name="DateFormat" xml:space="preserve">
    <value>Date Format</value>
  </data>
  <data name="NOBackDays" xml:space="preserve">
    <value># Back Days</value>
  </data>
  <data name="NODaysAve" xml:space="preserve">
    <value># Days Average</value>
  </data>
  <data name="NOTimes" xml:space="preserve">
    <value># Times</value>
  </data>
  <data name="MinPer" xml:space="preserve">
    <value>Minimum Per</value>
  </data>
  <data name="MaxPer" xml:space="preserve">
    <value>Maximum Per</value>
  </data>
  <data name="CurrencySymbol" xml:space="preserve">
    <value>Currency Symbol</value>
  </data>
  <data name="AEMTPndOrders" xml:space="preserve">
    <value>Auto Email Time For Pending Orders</value>
  </data>
  <data name="AEMTPndRequisition" xml:space="preserve">
    <value>Auto Email Time For Pending Requisition</value>
  </data>
  <data name="AEMTPndTransfer" xml:space="preserve">
    <value>Auto Email Time For Pending Transfer</value>
  </data>
  <data name="AEMTSggstOrdMin" xml:space="preserve">
    <value>Auto Email Time For Suggested Orders Minimum</value>
  </data>
  <data name="AEMTSggstOrdCrt" xml:space="preserve">
    <value>Auto Email Time For Suggested Orders Critical</value>
  </data>
  <data name="AEMTAssetMntDue" xml:space="preserve">
    <value>Auto Email Time For Asset Maintenance Due</value>
  </data>
  <data name="AEMTToolsMntDue" xml:space="preserve">
    <value>Auto Email Time For Tools maintenance Due</value>
  </data>
  <data name="AEMTItemStockOut" xml:space="preserve">
    <value>Auto Email Time For Items Stock Out</value>
  </data>
  <data name="AEMTCycleCount" xml:space="preserve">
    <value>Auto Email Time For Cycle Count</value>
  </data>
  <data name="AEMTCycleCntItmMiss" xml:space="preserve">
    <value>Auto email time for missed item Cycle Count</value>
  </data>
  <data name="AEMTItemUsageRpt" xml:space="preserve">
    <value>Auto Email Time For Item Usege Report</value>
  </data>
  <data name="AEMTItemReceiveRpt" xml:space="preserve">
    <value>Auto Email Time For Item Receipt Report</value>
  </data>
  <data name="GridRefreshTimeInSecond" xml:space="preserve">
    <value>Grid Refresh Time In Seconds</value>
  </data>
  <data name="DateFormatCSharp" xml:space="preserve">
    <value>Date Format</value>
  </data>
  <data name="WeightDecimalPoints" xml:space="preserve">
    <value>Weight Decimal Points</value>
  </data>
  <data name="TurnsAvgDecimalPoints" xml:space="preserve">
    <value>Turns Avg Usage Decimal Points</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>eTurns: Company Configuration</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="HistoryID" xml:space="preserve">
    <value>History ID</value>
  </data>
  <data name="IncludeArchived" xml:space="preserve">
    <value>Include Archived</value>
  </data>
  <data name="IncludeDeleted" xml:space="preserve">
    <value>Include Deleted</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="CompanyConfigHeader" xml:space="preserve">
    <value>Company Configuration Header</value>
  </data>
  <data name="CompanyConfig" xml:space="preserve">
    <value>Company Configuration</value>
  </data>
  <data name="ViewHistory" xml:space="preserve">
    <value>View History</value>
  </data>
  <data name="IsPackSlipRequired" xml:space="preserve">
    <value>Is Pack slip required to receive order?</value>
  </data>
  <data name="NumberOfBackDaysToSyncOverPDA" xml:space="preserve">
    <value># of Back Days to Sync to PDA</value>
  </data>
  <data name="Numberofentriestoloadatatime" xml:space="preserve">
    <value>Number of entries to load at a time</value>
  </data>
  <data name="Numberofinitialentryatatime" xml:space="preserve">
    <value>Number of initial entry at a time</value>
  </data>
</root>