<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdjustmentCreditedQuantity" xml:space="preserve">
    <value>Adjustment Credited Quantity</value>
  </data>
  <data name="AdjustmentPulledQuantity" xml:space="preserve">
    <value>Adjustment Pulled Quantity</value>
  </data>
  <data name="AverageCost" xml:space="preserve">
    <value>Average Cost</value>
  </data>
  <data name="AverageUsage" xml:space="preserve">
    <value>Average Usage</value>
  </data>
  <data name="BeginingOnHandQuantity" xml:space="preserve">
    <value>Begining Onhand Quantity</value>
  </data>
  <data name="BondedInventory" xml:space="preserve">
    <value>Bonded Inventory</value>
  </data>
  <data name="CategoryName" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Consignment" xml:space="preserve">
    <value>Consignment</value>
  </data>
  <data name="CostUOM" xml:space="preserve">
    <value>Cost UOM</value>
  </data>
  <data name="CostUOMValue" xml:space="preserve">
    <value>Cost UOM Value</value>
  </data>
  <data name="CreditedQuanity" xml:space="preserve">
    <value>Credited Quantity</value>
  </data>
  <data name="CriticalQuantity" xml:space="preserve">
    <value>Critical Quantity</value>
  </data>
  <data name="CurrentOnhandQuantity" xml:space="preserve">
    <value>Current Onhand Quantity</value>
  </data>
  <data name="DateCodeTracking" xml:space="preserve">
    <value>DateCode Tracking</value>
  </data>
  <data name="DefaultLocationName" xml:space="preserve">
    <value>Default Bin</value>
  </data>
  <data name="DefaultPullQuantity" xml:space="preserve">
    <value>Default Pull Quantity</value>
  </data>
  <data name="DefaultReorderQuantity" xml:space="preserve">
    <value>Default Reorder Quantity</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="EndingOnHandQuantity" xml:space="preserve">
    <value>Ending Onhand Quantity</value>
  </data>
  <data name="ExtendedCost" xml:space="preserve">
    <value>Extended Cost</value>
  </data>
  <data name="GLAccount" xml:space="preserve">
    <value>G/L Account</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="InTransitquantity" xml:space="preserve">
    <value>In Transit Quantity</value>
  </data>
  <data name="InventoryClassificationName" xml:space="preserve">
    <value>Inventory Classification</value>
  </data>
  <data name="IsAutoInventoryClassification" xml:space="preserve">
    <value>Is AutoInventory Classification</value>
  </data>
  <data name="IsBuildBreak" xml:space="preserve">
    <value>Is Build Break</value>
  </data>
  <data name="IsEnforceDefaultReorderQuantity" xml:space="preserve">
    <value>Is Enforce Default Reorder Quantity</value>
  </data>
  <data name="IsItemLevelMinMaxQtyRequired" xml:space="preserve">
    <value>Is Item Level Min Max Quantity Required</value>
  </data>
  <data name="IsLotSerialExpiryCost" xml:space="preserve">
    <value>Is Lot Serial Expiry Cost</value>
  </data>
  <data name="IsPackslipMandatoryAtReceive" xml:space="preserve">
    <value>Is Packslip Mandatory At Receive</value>
  </data>
  <data name="IsPurchase" xml:space="preserve">
    <value>Is Purchase</value>
  </data>
  <data name="IsTransfer" xml:space="preserve">
    <value>Is Transfer</value>
  </data>
  <data name="ItemNumber" xml:space="preserve">
    <value>Item #</value>
  </data>
  <data name="ItemType" xml:space="preserve">
    <value>Item Type</value>
  </data>
  <data name="KitMoveInQuantity" xml:space="preserve">
    <value>Kit Move-In Quantity</value>
  </data>
  <data name="KitMoveOutQuantity" xml:space="preserve">
    <value>Kit Move-Out Quantity</value>
  </data>
  <data name="LastCost" xml:space="preserve">
    <value>Last Cost</value>
  </data>
  <data name="LongDescription" xml:space="preserve">
    <value>Long Description</value>
  </data>
  <data name="LotNumberTracking" xml:space="preserve">
    <value>Lot Tracking</value>
  </data>
  <data name="ManufacturerName" xml:space="preserve">
    <value>Manufacturer Name</value>
  </data>
  <data name="ManufacturerNumber" xml:space="preserve">
    <value>Manufacturer #</value>
  </data>
  <data name="MaximumQuantity" xml:space="preserve">
    <value>Maximum Quantity</value>
  </data>
  <data name="MinimumQuantity" xml:space="preserve">
    <value>Minimum Quantity</value>
  </data>
  <data name="OnOrderQuantity" xml:space="preserve">
    <value>On Order Quantity</value>
  </data>
  <data name="OnReturnQuantity" xml:space="preserve">
    <value>On Return Quantity</value>
  </data>
  <data name="OnTransferQuantity" xml:space="preserve">
    <value>On Transfer Quantity</value>
  </data>
  <data name="PulledQuanity" xml:space="preserve">
    <value>Pulled Quantity</value>
  </data>
  <data name="PullQtyScanOverride" xml:space="preserve">
    <value>Pull Quantity Scan Override</value>
  </data>
  <data name="QtyToMeetDemand" xml:space="preserve">
    <value>Quantity To Meet Demand</value>
  </data>
  <data name="ReceivedQuantity" xml:space="preserve">
    <value>Received Quantity</value>
  </data>
  <data name="RequisitionedQuantity" xml:space="preserve">
    <value>Requisitioned Quantity</value>
  </data>
  <data name="ReturnedQuantity" xml:space="preserve">
    <value>Returned Quantity</value>
  </data>
  <data name="RoomName" xml:space="preserve">
    <value>Room</value>
  </data>
  <data name="SellPrice" xml:space="preserve">
    <value>Sell Price</value>
  </data>
  <data name="SerialNumberTracking" xml:space="preserve">
    <value>Serial Tracking</value>
  </data>
  <data name="StagedQuantity" xml:space="preserve">
    <value>Staged Quantity</value>
  </data>
  <data name="SuggestedOrderQuantity" xml:space="preserve">
    <value>Suggested Order Quantity</value>
  </data>
  <data name="SuggestedTransferQuantity" xml:space="preserve">
    <value>Suggested Transfer Quantity</value>
  </data>
  <data name="SupplierName" xml:space="preserve">
    <value>Supplier Name</value>
  </data>
  <data name="SupplierPartNo" xml:space="preserve">
    <value>Supplier #</value>
  </data>
  <data name="Taxable" xml:space="preserve">
    <value>Taxable</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TransferInQuantity" xml:space="preserve">
    <value>TransferIn Quantity</value>
  </data>
  <data name="TransferOutQuantity" xml:space="preserve">
    <value>Transfer Out Quantity</value>
  </data>
  <data name="Trend" xml:space="preserve">
    <value>Trend</value>
  </data>
  <data name="TrendingSetting" xml:space="preserve">
    <value>Trending Setting</value>
  </data>
  <data name="Turns" xml:space="preserve">
    <value>Turns</value>
  </data>
  <data name="UDF1" xml:space="preserve">
    <value>UDF1</value>
  </data>
  <data name="UDF2" xml:space="preserve">
    <value>UDF2</value>
  </data>
  <data name="UDF3" xml:space="preserve">
    <value>UDF3</value>
  </data>
  <data name="UDF4" xml:space="preserve">
    <value>UDF4</value>
  </data>
  <data name="UDF5" xml:space="preserve">
    <value>UDF5</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="UNSPSC" xml:space="preserve">
    <value>UNSPSC</value>
  </data>
  <data name="UPC" xml:space="preserve">
    <value>UPC</value>
  </data>
</root>