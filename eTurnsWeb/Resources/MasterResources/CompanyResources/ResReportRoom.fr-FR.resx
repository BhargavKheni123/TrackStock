<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BlanketPO" xml:space="preserve">
    <value>Blanket PO</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="CompanyInfo" xml:space="preserve">
    <value>Company Info</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="ContactName" xml:space="preserve">
    <value>Contact Name</value>
  </data>
  <data name="CostCenter" xml:space="preserve">
    <value>Invoice Branch #</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="CustomerNumber" xml:space="preserve">
    <value>Customer Number</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EnterPriseName" xml:space="preserve">
    <value>Enterprise Name</value>
  </data>
  <data name="eVMIWaitCommand" xml:space="preserve">
    <value>eVMI Wait Command</value>
  </data>
  <data name="eVMIWaitPort" xml:space="preserve">
    <value>eVMI Wait Port</value>
  </data>
  <data name="GlobMarkupLabor" xml:space="preserve">
    <value>Global Mark up Labor</value>
  </data>
  <data name="GlobMarkupParts" xml:space="preserve">
    <value>Global Mark up Parts</value>
  </data>
  <data name="GUID" xml:space="preserve">
    <value>GUID</value>
  </data>
  <data name="GXPRConsJob" xml:space="preserve">
    <value>Consigned Job</value>
  </data>
  <data name="HighCount" xml:space="preserve">
    <value>Maximum lines per Count</value>
  </data>
  <data name="HighJob" xml:space="preserve">
    <value>Maximum lines per Work Order</value>
  </data>
  <data name="HighPO" xml:space="preserve">
    <value>Maximum lines per Order</value>
  </data>
  <data name="HighTransfer" xml:space="preserve">
    <value>Maximum lines per Transfer</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="IsConsignment" xml:space="preserve">
    <value>Is Consignment</value>
  </data>
  <data name="IsDeleted" xml:space="preserve">
    <value>Is Deleted</value>
  </data>
  <data name="IseVMI" xml:space="preserve">
    <value>Is eVMI</value>
  </data>
  <data name="IsRoomActive" xml:space="preserve">
    <value>Is Room Active</value>
  </data>
  <data name="IsTax1Labor" xml:space="preserve">
    <value>Is Tax 1 Labor</value>
  </data>
  <data name="IsTax1Parts" xml:space="preserve">
    <value>Is Tax 1 Parts</value>
  </data>
  <data name="IsTax2Labor" xml:space="preserve">
    <value>Is Tax 2 Labor</value>
  </data>
  <data name="IsTax2onTax1" xml:space="preserve">
    <value>Is Tax 2 on Tax 1</value>
  </data>
  <data name="IsTax2Parts" xml:space="preserve">
    <value>Is Tax 2 Parts</value>
  </data>
  <data name="IsTrending" xml:space="preserve">
    <value>Is Trending</value>
  </data>
  <data name="LastOrderDate" xml:space="preserve">
    <value>Last Order Date</value>
  </data>
  <data name="LastPullDate" xml:space="preserve">
    <value>Last Pull Date</value>
  </data>
  <data name="LastUpdatedBy" xml:space="preserve">
    <value>Last Updated By</value>
  </data>
  <data name="MaxOrderSize" xml:space="preserve">
    <value>Maximum Order Size</value>
  </data>
  <data name="PhoneNo" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="ReplineshmentRoom" xml:space="preserve">
    <value>Replenishment Room</value>
  </data>
  <data name="RoomInfo" xml:space="preserve">
    <value>Room Info</value>
  </data>
  <data name="RoomName" xml:space="preserve">
    <value>Room Name</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="StreetAddress" xml:space="preserve">
    <value>Street Address</value>
  </data>
  <data name="SuggestedOrder" xml:space="preserve">
    <value>Suggested Order</value>
  </data>
  <data name="SuggestedTransfer" xml:space="preserve">
    <value>Suggested Transfer</value>
  </data>
  <data name="Tax1Name" xml:space="preserve">
    <value>Tax 1 Name</value>
  </data>
  <data name="Tax1Rate" xml:space="preserve">
    <value>Tax 1 Rate</value>
  </data>
  <data name="Tax2Name" xml:space="preserve">
    <value>Tax 2 Name</value>
  </data>
  <data name="Tax2Rate" xml:space="preserve">
    <value>Tax 2 Rate</value>
  </data>
  <data name="TrendingFormulaAvgDays" xml:space="preserve">
    <value>Trending Formula Avg Days</value>
  </data>
  <data name="TrendingFormulaDays" xml:space="preserve">
    <value>Trending Formula Days</value>
  </data>
  <data name="TrendingFormulaOverDays" xml:space="preserve">
    <value>Trending Formula Over Days</value>
  </data>
  <data name="UniqueID" xml:space="preserve">
    <value>Invoice Branch Name</value>
  </data>
  <data name="Updated" xml:space="preserve">
    <value>Updated on Date</value>
  </data>
  <data name="ItemCount" xml:space="preserve">
    <value>Number of Items</value>
  </data>
  <data name="ItemRecentPriceSavedDate" xml:space="preserve">
    <value>Item Price Saved Date</value>
  </data>
  <data name="BillingType" xml:space="preserve">
    <value>Room Billing Type</value>
  </data>
  <data name="DefaultCountType" xml:space="preserve">
    <value>Type de compte par défaut</value>
  </data>
  <data name="SuggestedReturn" xml:space="preserve">
    <value>Retour suggéré</value>
  </data>
  <data name="NoOfItemsCount" xml:space="preserve">
    <value>Nombre total d'articles</value>
  </data>
  <data name="NoOfItemsCreated" xml:space="preserve">
    <value>Nombre total d'articles ajoutés</value>
  </data>
  <data name="NoOfItemsDeleted" xml:space="preserve">
    <value>Nombre total d'éléments supprimés</value>
  </data>
  <data name="NoOfItemsOrdered" xml:space="preserve">
    <value>Nombre total d'articles commandés</value>
  </data>
  <data name="CountAutoSequenceName" xml:space="preserve">
    <value>Compter la séquence automatique</value>
  </data>
</root>