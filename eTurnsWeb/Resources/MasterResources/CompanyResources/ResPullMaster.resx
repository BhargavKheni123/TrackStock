<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ItemID" xml:space="preserve">
    <value>Item ID</value>
  </data>
  <data name="ProjectID" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="UOI" xml:space="preserve">
    <value>UOI</value>
  </data>
  <data name="SerialNumber" xml:space="preserve">
    <value>Serial #</value>
  </data>
  <data name="LotNumber" xml:space="preserve">
    <value>Lot #</value>
  </data>
  <data name="DateCode" xml:space="preserve">
    <value>Date Code</value>
  </data>
  <data name="BinID" xml:space="preserve">
    <value>Item Locations</value>
  </data>
  <data name="Turns" xml:space="preserve">
    <value>Turns</value>
  </data>
  <data name="UDF1" xml:space="preserve">
    <value>UDF 1 Pull</value>
  </data>
  <data name="UDF2" xml:space="preserve">
    <value>UDF 2 Pull</value>
  </data>
  <data name="UDF3" xml:space="preserve">
    <value>UDF 3 Pull</value>
  </data>
  <data name="UDF4" xml:space="preserve">
    <value>UDF 4 Pull</value>
  </data>
  <data name="UDF5" xml:space="preserve">
    <value>UDF 5 Pull</value>
  </data>
  <data name="ItemGUID" xml:space="preserve">
    <value>Item GUID</value>
  </data>
  <data name="PageHeader" xml:space="preserve">
    <value>Pull</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>eTurns: Pulls</value>
  </data>
  <data name="PullMasterHeader" xml:space="preserve">
    <value>Pulls</value>
  </data>
  <data name="PulledQuantity" xml:space="preserve">
    <value>Pull / Credit Quantity</value>
  </data>
  <data name="ConsignedQuantity" xml:space="preserve">
    <value>Consigned quantity</value>
  </data>
  <data name="CreditConsignedQuantity" xml:space="preserve">
    <value>Credit Consigned Quantity</value>
  </data>
  <data name="CreditCustomerOwnedQuantity" xml:space="preserve">
    <value>Credit Customer Owned Quantity</value>
  </data>
  <data name="CustomerOwnedQuantity" xml:space="preserve">
    <value>Customer Owned Quantity</value>
  </data>
  <data name="PoolQuantity" xml:space="preserve">
    <value>Pull / Credit Quantity</value>
  </data>
  <data name="ConsignmentItemBillColorDescription" xml:space="preserve">
    <value>Consigned Item Pulled. Billing flag is true. and is EDI Sent is true</value>
  </data>
  <data name="ConsignmentItemPulledColorDescription" xml:space="preserve">
    <value>Consigned Item Pulled and Billing flag is false</value>
  </data>
  <data name="PulledCost" xml:space="preserve">
    <value>Extended cost</value>
  </data>
  <data name="PullCredit" xml:space="preserve">
    <value>Pull Credit</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="HistoryID" xml:space="preserve">
    <value>History ID</value>
  </data>
  <data name="IncludeArchived" xml:space="preserve">
    <value>Include Archived</value>
  </data>
  <data name="IncludeDeleted" xml:space="preserve">
    <value>Include Deleted</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="PullMaster" xml:space="preserve">
    <value>Pull Master</value>
  </data>
  <data name="ViewHistory" xml:space="preserve">
    <value>View History</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="GUID" xml:space="preserve">
    <value>GUID</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="Updated" xml:space="preserve">
    <value>Updated Date</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="LastUpdatedBy" xml:space="preserve">
    <value>Last Updated By</value>
  </data>
  <data name="IsDeleted" xml:space="preserve">
    <value>Is Deleted</value>
  </data>
  <data name="IsArchived" xml:space="preserve">
    <value>Is Archived</value>
  </data>
  <data name="CompanyID" xml:space="preserve">
    <value>Company ID</value>
  </data>
  <data name="Room" xml:space="preserve">
    <value>Room</value>
  </data>
  <data name="ConsignmentItemEDISentColorDescription" xml:space="preserve">
    <value>Consigned Item Pulled. Billing flag is true. but is EDI Sent is false</value>
  </data>
  <data name="ResultingItemOnHandQty" xml:space="preserve">
    <value>Resulting Item On Hand quantity</value>
  </data>
  <data name="ResultingItemLocOnHandQty" xml:space="preserve">
    <value>Resulting Item Location On Hand quantity</value>
  </data>
  <data name="ResultingItemLocStageQty" xml:space="preserve">
    <value>Resulting Item Location Stage quantity</value>
  </data>
  <data name="ResultingItemStageQty" xml:space="preserve">
    <value>Resulting Item Stage quantity</value>
  </data>
  <data name="CustomerOwnedQuantityAvail" xml:space="preserve">
    <value>Customer Owned quantity Available</value>
  </data>
  <data name="QuantityAvailable" xml:space="preserve">
    <value>Quantity Available</value>
  </data>
  <data name="QuantityToBePulled" xml:space="preserve">
    <value>QuantityTo Be Pulled</value>
  </data>
  <data name="ConsignedQuantityAvail" xml:space="preserve">
    <value>Consigned quantity Available</value>
  </data>
  <data name="LotSrnumber" xml:space="preserve">
    <value>Lot Serial number</value>
  </data>
  <data name="msgQuantityNotAvailable" xml:space="preserve">
    <value>Quantity Not Available</value>
  </data>
  <data name="msgProjectSpendLimit" xml:space="preserve">
    <value>Project Spend Limit</value>
  </data>
  <data name="msgProjectSpendItemQtyLimit" xml:space="preserve">
    <value>Project Spend Item quantity Limit</value>
  </data>
  <data name="msgProjectSpendItemamountLimit" xml:space="preserve">
    <value>Project Spend Item amount Limit</value>
  </data>
  <data name="msgReqPullGreaterApproved" xml:space="preserve">
    <value>Req Pull Greater Approved</value>
  </data>
  <data name="msgInvalidLot" xml:space="preserve">
    <value>Invalid Lot</value>
  </data>
  <data name="msgInvalidQuantityLot" xml:space="preserve">
    <value>Invalid Quantity Lot</value>
  </data>
  <data name="PullOrderNumber" xml:space="preserve">
    <value>Pull Order Number</value>
  </data>
  <data name="Billing" xml:space="preserve">
    <value>Billing</value>
  </data>
  <data name="PullAllButton" xml:space="preserve">
    <value>Pull All Button</value>
  </data>
  <data name="PulledPrice" xml:space="preserve">
    <value>Pulled Price</value>
  </data>
  <data name="CustomerOwnedQuantityPull" xml:space="preserve">
    <value>Pull Customer Owned Quantity</value>
  </data>
  <data name="ConsignedQuantityPull" xml:space="preserve">
    <value>Pull Consigned Quantity</value>
  </data>
  <data name="CustomerOwnedQuantityCredit" xml:space="preserve">
    <value>Credit Customer Owned Quantity</value>
  </data>
  <data name="ConsignedQuantityCredit" xml:space="preserve">
    <value>Credit Consigned Quantity</value>
  </data>
  <data name="ItemBlanketPO" xml:space="preserve">
    <value>Item Blanket PO</value>
  </data>
  <data name="QtyToPull" xml:space="preserve">
    <value>Qty to Pull</value>
  </data>
  <data name="PullItemSellPrice" xml:space="preserve">
    <value>Pull Item SellPrice</value>
  </data>
  <data name="PullMarkup" xml:space="preserve">
    <value>Pull Markup</value>
  </data>
  <data name="PullItemCost" xml:space="preserve">
    <value>Pull Item Cost</value>
  </data>
  <data name="ItemCostOnPullDate" xml:space="preserve">
    <value>Item Cost On PullDate</value>
  </data>
  <data name="SupplierAccountNumber" xml:space="preserve">
    <value>Supplier Account Number</value>
  </data>
  <data name="PulledItemCost" xml:space="preserve">
    <value>Pull Item Cost</value>
  </data>
  <data name="NoProjectspendOntheFlyRight" xml:space="preserve">
    <value>No on the fly right or project spend right to allow new projectSpend</value>
  </data>
  <data name="PullMasterItemCost" xml:space="preserve">
    <value>Item Cost</value>
  </data>
  <data name="PullMasterItemSellPrice" xml:space="preserve">
    <value>Item SellPrice</value>
  </data>
  <data name="PullMasterItemAverageCost" xml:space="preserve">
    <value>Item Average Cost</value>
  </data>
  <data name="PullMasterItemMarkup" xml:space="preserve">
    <value>Item Markup</value>
  </data>
  <data name="PullMasterItemCostUOMValue" xml:space="preserve">
    <value>Item Cost UOM Value</value>
  </data>
  <data name="PullUDF1" xml:space="preserve">
    <value>Pull UDF1</value>
  </data>
  <data name="PullUDF2" xml:space="preserve">
    <value>Pull UDF2</value>
  </data>
  <data name="PullUDF3" xml:space="preserve">
    <value>Pull UDF3</value>
  </data>
  <data name="PullUDF4" xml:space="preserve">
    <value>Pull UDF4</value>
  </data>
  <data name="PullUDF5" xml:space="preserve">
    <value>Pull UDF5</value>
  </data>
  <data name="UDF6" xml:space="preserve">
    <value>UDF6</value>
  </data>
  <data name="UDF7" xml:space="preserve">
    <value>UDF7</value>
  </data>
  <data name="UDF8" xml:space="preserve">
    <value>UDF8</value>
  </data>
  <data name="UDF9" xml:space="preserve">
    <value>UDF9</value>
  </data>
  <data name="UDF10" xml:space="preserve">
    <value>UDF10</value>
  </data>
  <data name="PullLocation" xml:space="preserve">
    <value>Pull Location</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="GridTotalRecordsInfoItem" xml:space="preserve">
    <value>Item Entries</value>
  </data>
  <data name="IsCustomerEDISent" xml:space="preserve">
    <value>Is Customer EDI Sent</value>
  </data>
</root>