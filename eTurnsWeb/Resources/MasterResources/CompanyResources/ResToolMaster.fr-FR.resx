<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CheckedInBy" xml:space="preserve">
    <value>Checked In by</value>
  </data>
  <data name="CheckedOutBy" xml:space="preserve">
    <value>Checked Out by</value>
  </data>
  <data name="Cost" xml:space="preserve">
    <value>Cost</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ForMaintanence" xml:space="preserve">
    <value>CheckOut For Maintenance?</value>
  </data>
  <data name="IsCheckedOut" xml:space="preserve">
    <value>Checked Out</value>
  </data>
  <data name="IsGroupOfItems" xml:space="preserve">
    <value>Group Of Items</value>
  </data>
  <data name="IsGrpOfItemReq" xml:space="preserve">
    <value>Group of items is blank.</value>
  </data>
  <data name="IvalidCost" xml:space="preserve">
    <value>Enter proper value.</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Tool Location</value>
  </data>
  <data name="PageHeader" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>eTurns: Tools</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Total Quantity</value>
  </data>
  <data name="QuantityTexBox" xml:space="preserve">
    <value>Check Out Quantity</value>
  </data>
  <data name="Serial" xml:space="preserve">
    <value>Serial</value>
  </data>
  <data name="Technician" xml:space="preserve">
    <value>Technician</value>
  </data>
  <data name="TechnicianGuID" xml:space="preserve">
    <value>Technician GUID</value>
  </data>
  <data name="ToolCategory" xml:space="preserve">
    <value>Tool Category</value>
  </data>
  <data name="ToolCategoryID" xml:space="preserve">
    <value>Tool CategoryID</value>
  </data>
  <data name="ToolName" xml:space="preserve">
    <value>Tool</value>
  </data>
  <data name="UpdatedBy" xml:space="preserve">
    <value>Updated by</value>
  </data>
  <data name="UpdatedDate" xml:space="preserve">
    <value>Updated Date</value>
  </data>
  <data name="UDF1" xml:space="preserve">
    <value>UDF 1</value>
  </data>
  <data name="UDF10" xml:space="preserve">
    <value>UDF10</value>
  </data>
  <data name="UDF2" xml:space="preserve">
    <value>UDF2</value>
  </data>
  <data name="UDF3" xml:space="preserve">
    <value>UDF3</value>
  </data>
  <data name="UDF4" xml:space="preserve">
    <value>UDF4</value>
  </data>
  <data name="UDF5" xml:space="preserve">
    <value>UDF5</value>
  </data>
  <data name="UDF6" xml:space="preserve">
    <value>UDF6</value>
  </data>
  <data name="UDF7" xml:space="preserve">
    <value>UDF7</value>
  </data>
  <data name="UDF8" xml:space="preserve">
    <value>UDF8</value>
  </data>
  <data name="UDF9" xml:space="preserve">
    <value>UDF9</value>
  </data>
  <data name="ToolImage" xml:space="preserve">
    <value>Tool Image</value>
  </data>
  <data name="ToolCheckoutAllButton" xml:space="preserve">
    <value>Tool Checkout All</value>
  </data>
  <data name="Checkedout" xml:space="preserve">
    <value>Checked out</value>
  </data>
  <data name="CheckedouttoMaintenance" xml:space="preserve">
    <value>Checked out for maintenance </value>
  </data>
  <data name="Groupfullycheckedout" xml:space="preserve">
    <value>Fully Checked out</value>
  </data>
  <data name="Nonecheckedout" xml:space="preserve">
    <value>None checked out</value>
  </data>
  <data name="ToolCheckInAllButton" xml:space="preserve">
    <value>Check in all</value>
  </data>
  <data name="ImagePath" xml:space="preserve">
    <value>Image Path</value>
  </data>
  <data name="ToolImageExternalURL" xml:space="preserve">
    <value>Tool Image External URL</value>
  </data>
  <data name="NoOfPastMntsToConsider" xml:space="preserve">
    <value>Number of past maintenance(s) to generate projected maintenance due date</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="ToolCertificationImages" xml:space="preserve">
    <value>Tool Certification Images</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="CheckOut" xml:space="preserve">
    <value>Check-out</value>
  </data>
  <data name="ToolWrittenOffSuccessfully" xml:space="preserve">
    <value>Outil désactivé avec succès</value>
  </data>
  <data name="FailToWrittenOffTool" xml:space="preserve">
    <value>Fail To Written Off Tool</value>
  </data>
  <data name="WrittenOffTool" xml:space="preserve">
    <value>Outil Écrit</value>
  </data>
  <data name="WrittenOffCategory" xml:space="preserve">
    <value>Catégorie Écrit</value>
  </data>
  <data name="WrittenOffDescription" xml:space="preserve">
    <value>Description de l'extinction</value>
  </data>
  <data name="SerialSelectionCountMisMatch" xml:space="preserve">
    <value>Le nombre de séries sélectionné doit correspondre à la quantité, c'est-à-dire</value>
  </data>
  <data name="InvalidQuantity" xml:space="preserve">
    <value>Quantité invalide!</value>
  </data>
  <data name="QuantityGreaterThanAvailableQty" xml:space="preserve">
    <value>La quantité ne doit pas être supérieure à la quantité disponible, c'est-à-dire</value>
  </data>
  <data name="SerialsNotAbleToWrittenOff" xml:space="preserve">
    <value>Certaines des publications en série ne peuvent pas être radiées, à savoir:</value>
  </data>
  <data name="WrittenOffQuantity" xml:space="preserve">
    <value>Quantité radiée</value>
  </data>
  <data name="ToolWrittenOffAllButton" xml:space="preserve">
    <value>Tool Written Off All</value>
  </data>
  <data name="NotEnoughQtyToWrittenOff" xml:space="preserve">
    <value>Not enough quantity to written off</value>
  </data>
  <data name="QtyNotAvailableToWrittenOff" xml:space="preserve">
    <value>There is no Quantity available for Written Off</value>
  </data>
  <data name="WrittenOffOnlyAvailableQty" xml:space="preserve">
    <value>You can written off only Available Quantity i.e.</value>
  </data>
  <data name="AvailableQtyCantBeLessThanOne" xml:space="preserve">
    <value>Available quantity can not be less than 1</value>
  </data>
  <data name="Includestockedouttools" xml:space="preserve">
    <value>Inclure des outils épuisés</value>
  </data>
  <data name="ReassignTechnician" xml:space="preserve">
    <value>Reassign Technician</value>
  </data>
  <data name="UnwrittenOffTool" xml:space="preserve">
    <value>Outil non écrit</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="QuantityPerKit" xml:space="preserve">
    <value>Quantity Per Kit</value>
  </data>
  <data name="DefaultLocation" xml:space="preserve">
    <value>Default Location</value>
  </data>
  <data name="LocationID" xml:space="preserve">
    <value>Location ID</value>
  </data>
  <data name="MaintenanceDueNoticeDays" xml:space="preserve">
    <value>Maintenance Due Notice Days</value>
  </data>
  <data name="ToolTypeTracking" xml:space="preserve">
    <value>Tool Type Tracking</value>
  </data>
  <data name="LocationSerialsExpand" xml:space="preserve">
    <value>Location Serials Expand</value>
  </data>
  <data name="ToolType" xml:space="preserve">
    <value>Tool Type</value>
  </data>
  <data name="SerialNumberTracking" xml:space="preserve">
    <value>Serial Number Tracking</value>
  </data>
  <data name="LotNumberTracking" xml:space="preserve">
    <value>Lot Number Tracking</value>
  </data>
  <data name="DateCodeTracking" xml:space="preserve">
    <value>Date Code Tracking</value>
  </data>
  <data name="Move" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="TrackingDetails" xml:space="preserve">
    <value>Tracking Details</value>
  </data>
  <data name="GridTotalRecordsInfoTool" xml:space="preserve">
    <value>Tool Entries</value>
  </data>
  <data name="GridTotalRecordsInfoToolLocation" xml:space="preserve">
    <value>Tool Location Entries</value>
  </data>
  <data name="GridTotalRecordsInfoToolChangeLog" xml:space="preserve">
    <value>Tool Change Log Entries</value>
  </data>
  <data name="GridTotalRecordsInfoToolWrittenoff" xml:space="preserve">
    <value>Written off Entries</value>
  </data>
  <data name="GridTotalRecordsInfoItem" xml:space="preserve">
    <value>Item Entries</value>
  </data>
  <data name="GridTotalRecordsInfoToolHistory" xml:space="preserve">
    <value>Tool History Entries</value>
  </data>
</root>